stdout: else_statement -> BlockStatement
using GPU
p
path com.google.javascript.jscomp.ScopedAliases
findAliases
Position(line=352, column=13)
FOUND IT!
path com.google.javascript.jscomp.ScopedAliases
findAliases
Position(line=352, column=13)
FOUND IT!
path com.google.javascript.jscomp.ScopedAliases
findAliases
Position(line=352, column=13)
FOUND IT!
path com.google.javascript.jscomp.ScopedAliases
findAliases
Position(line=352, column=13)
FOUND IT!
path com.google.javascript.rhino.Node
getChildBefore
Position(line=549, column=10)
FOUND IT!
[{'bugid': 'Closure-110', 'treeroot': <Searchnode.Node object at 0x7fbdc5ed51d0>, 'troot': <Searchnode.Node object at 0x7fbdccda0b90>, 'oldcode': '        Node n = v.getNode();', 'filepath': 'buggy/Closure-110/src/com/google/javascript/jscomp/ScopedAliases.java', 'subroot': <Searchnode.Node object at 0x7fbdc5ed5e90>, 'vardic': {'findAliases_ter': 'meth0', 'n_ter': 'loc0', 'parent_ter': 'loc1', 'isVar_ter': 'loc2', 'grandparent_ter': 'loc3', 'value_ter': 'loc4', 'varNode_ter': 'loc5', 'name_ter': 'loc6', 'nameCount_ter': 'loc7', 'globalName_ter': 'loc8', 'newDecl_ter': 'loc9'}, 'typedic': {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}, 'idss': 'Closure-110', 'classname': 'com.google.javascript.jscomp.ScopedAliases', 'precode': '/*\n * Copyright 2010 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.javascript.jscomp;\n\nimport com.google.common.base.Preconditions;\nimport com.google.common.collect.HashMultiset;\nimport com.google.common.collect.Lists;\nimport com.google.common.collect.Maps;\nimport com.google.common.collect.Multiset;\nimport com.google.common.collect.Sets;\nimport com.google.javascript.jscomp.CompilerOptions.AliasTransformation;\nimport com.google.javascript.jscomp.CompilerOptions.AliasTransformationHandler;\nimport com.google.javascript.jscomp.Scope.Var;\nimport com.google.javascript.rhino.IR;\nimport com.google.javascript.rhino.JSDocInfo;\nimport com.google.javascript.rhino.Node;\nimport com.google.javascript.rhino.SourcePosition;\nimport com.google.javascript.rhino.Token;\n\nimport java.util.Collection;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\n\nimport javax.annotation.Nullable;\n\n/**\n * Process aliases in goog.scope blocks.\n *\n * goog.scope(function() {\n *   var dom = goog.dom;\n *   var DIV = dom.TagName.DIV;\n *\n *   dom.createElement(DIV);\n * });\n *\n * should become\n *\n * goog.dom.createElement(goog.dom.TagName.DIV);\n *\n * The advantage of using goog.scope is that the compiler will *guarantee*\n * the anonymous function will be inlined, even if it can\'t prove\n * that it\'s semantically correct to do so. For example, consider this case:\n *\n * goog.scope(function() {\n *   goog.getBar = function () { return alias; };\n *   ...\n *   var alias = foo.bar;\n * })\n *\n * In theory, the compiler can\'t inline \'alias\' unless it can prove that\n * goog.getBar is called only after \'alias\' is defined.\n *\n * In practice, the compiler will inline \'alias\' anyway, at the risk of\n * \'fixing\' bad code.\n *\n * @author robbyw@google.com (Robby Walker)\n */\nclass ScopedAliases implements HotSwapCompilerPass {\n  /** Name used to denote an scoped function block used for aliasing. */\n  static final String SCOPING_METHOD_NAME = "goog.scope";\n\n  private final AbstractCompiler compiler;\n  private final PreprocessorSymbolTable preprocessorSymbolTable;\n  private final AliasTransformationHandler transformationHandler;\n\n  // Errors\n  static final DiagnosticType GOOG_SCOPE_USED_IMPROPERLY = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_USED_IMPROPERLY",\n      "The call to goog.scope must be alone in a single statement.");\n\n  static final DiagnosticType GOOG_SCOPE_HAS_BAD_PARAMETERS =\n      DiagnosticType.error(\n          "JSC_GOOG_SCOPE_HAS_BAD_PARAMETERS",\n          "The call to goog.scope must take only a single parameter.  It must" +\n              " be an anonymous function that itself takes no parameters.");\n\n  static final DiagnosticType GOOG_SCOPE_REFERENCES_THIS = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_REFERENCES_THIS",\n      "The body of a goog.scope function cannot reference \'this\'.");\n\n  static final DiagnosticType GOOG_SCOPE_USES_RETURN = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_USES_RETURN",\n      "The body of a goog.scope function cannot use \'return\'.");\n\n  static final DiagnosticType GOOG_SCOPE_USES_THROW = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_USES_THROW",\n      "The body of a goog.scope function cannot use \'throw\'.");\n\n  static final DiagnosticType GOOG_SCOPE_ALIAS_REDEFINED = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_ALIAS_REDEFINED",\n      "The alias {0} is assigned a value more than once.");\n\n  static final DiagnosticType GOOG_SCOPE_ALIAS_CYCLE = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_ALIAS_CYCLE",\n      "The aliases {0} has a cycle.");\n\n  static final DiagnosticType GOOG_SCOPE_NON_ALIAS_LOCAL = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_NON_ALIAS_LOCAL",\n      "The local variable {0} is in a goog.scope and is not an alias.");\n\n  private Multiset<String> scopedAliasNames = HashMultiset.create();\n\n  ScopedAliases(AbstractCompiler compiler,\n      @Nullable PreprocessorSymbolTable preprocessorSymbolTable,\n      AliasTransformationHandler transformationHandler) {\n    this.compiler = compiler;\n    this.preprocessorSymbolTable = preprocessorSymbolTable;\n    this.transformationHandler = transformationHandler;\n  }\n\n  @Override\n  public void process(Node externs, Node root) {\n    hotSwapScript(root, null);\n  }\n\n  @Override\n  public void hotSwapScript(Node root, Node originalRoot) {\n    Traversal traversal = new Traversal();\n    NodeTraversal.traverse(compiler, root, traversal);\n\n    if (!traversal.hasErrors()) {\n\n      // Apply the aliases.\n      List<AliasUsage> aliasWorkQueue =\n          Lists.newArrayList(traversal.getAliasUsages());\n      while (!aliasWorkQueue.isEmpty()) {\n        List<AliasUsage> newQueue = Lists.newArrayList();\n        for (AliasUsage aliasUsage : aliasWorkQueue) {\n          if (aliasUsage.referencesOtherAlias()) {\n            newQueue.add(aliasUsage);\n          } else {\n            aliasUsage.applyAlias();\n          }\n        }\n\n        // Prevent an infinite loop.\n        if (newQueue.size() == aliasWorkQueue.size()) {\n          Var cycleVar = newQueue.get(0).aliasVar;\n          compiler.report(JSError.make(\n              cycleVar.getNode(), GOOG_SCOPE_ALIAS_CYCLE, cycleVar.getName()));\n          break;\n        } else {\n          aliasWorkQueue = newQueue;\n        }\n      }\n\n      // Remove the alias definitions.\n      for (Node aliasDefinition : traversal.getAliasDefinitionsInOrder()) {\n        if (aliasDefinition.getParent().isVar() &&\n            aliasDefinition.getParent().hasOneChild()) {\n          aliasDefinition.getParent().detachFromParent();\n        } else {\n          aliasDefinition.detachFromParent();\n        }\n      }\n\n      // Collapse the scopes.\n      for (Node scopeCall : traversal.getScopeCalls()) {\n        Node expressionWithScopeCall = scopeCall.getParent();\n        Node scopeClosureBlock = scopeCall.getLastChild().getLastChild();\n        scopeClosureBlock.detachFromParent();\n        expressionWithScopeCall.getParent().replaceChild(\n            expressionWithScopeCall,\n            scopeClosureBlock);\n        NodeUtil.tryMergeBlock(scopeClosureBlock);\n      }\n\n      if (traversal.getAliasUsages().size() > 0 ||\n          traversal.getAliasDefinitionsInOrder().size() > 0 ||\n          traversal.getScopeCalls().size() > 0) {\n        compiler.reportCodeChange();\n      }\n    }\n  }\n\n  private abstract class AliasUsage {\n    final Var aliasVar;\n    final Node aliasReference;\n\n    AliasUsage(Var aliasVar, Node aliasReference) {\n      this.aliasVar = aliasVar;\n      this.aliasReference = aliasReference;\n    }\n\n    /** Checks to see if this references another alias. */\n    public boolean referencesOtherAlias() {\n      Node aliasDefinition = aliasVar.getInitialValue();\n      Node root = NodeUtil.getRootOfQualifiedName(aliasDefinition);\n      Var otherAliasVar = aliasVar.getScope().getOwnSlot(root.getString());\n      return otherAliasVar != null;\n    }\n\n    public abstract void applyAlias();\n  }\n\n  private class AliasedNode extends AliasUsage {\n    AliasedNode(Var aliasVar, Node aliasReference) {\n      super(aliasVar, aliasReference);\n    }\n\n    @Override\n    public void applyAlias() {\n      Node aliasDefinition = aliasVar.getInitialValue();\n      aliasReference.getParent().replaceChild(\n          aliasReference, aliasDefinition.cloneTree());\n    }\n  }\n\n  private class AliasedTypeNode extends AliasUsage {\n    AliasedTypeNode(Var aliasVar, Node aliasReference) {\n      super(aliasVar, aliasReference);\n    }\n\n    @Override\n    public void applyAlias() {\n      Node aliasDefinition = aliasVar.getInitialValue();\n      String aliasName = aliasVar.getName();\n      String typeName = aliasReference.getString();\n      String aliasExpanded =\n          Preconditions.checkNotNull(aliasDefinition.getQualifiedName());\n      Preconditions.checkState(typeName.startsWith(aliasName));\n      aliasReference.setString(typeName.replaceFirst(aliasName, aliasExpanded));\n    }\n  }\n\n\n  private class Traversal implements NodeTraversal.ScopedCallback {\n    // The job of this class is to collect these three data sets.\n\n    // The order of this list determines the order that aliases are applied.\n    private final List<Node> aliasDefinitionsInOrder = Lists.newArrayList();\n\n    private final List<Node> scopeCalls = Lists.newArrayList();\n\n    private final List<AliasUsage> aliasUsages = Lists.newArrayList();\n\n    // This map is temporary and cleared for each scope.\n    private final Map<String, Var> aliases = Maps.newHashMap();\n\n    // Suppose you create an alias.\n    // var x = goog.x;\n    // As a side-effect, this means you can shadow the namespace \'goog\'\n    // in inner scopes. When we inline the namespaces, we have to rename\n    // these shadows.\n    //\n    // Fortunately, we already have a name uniquifier that runs during tree\n    // normalization (before optimizations). We run it here on a limited\n    // set of variables, but only as a last resort (because this will screw\n    // up warning messages downstream).\n    private final Set<String> forbiddenLocals = Sets.newHashSet("$jscomp");\n    private boolean hasNamespaceShadows = false;\n\n    private boolean hasErrors = false;\n\n    private AliasTransformation transformation = null;\n\n    Collection<Node> getAliasDefinitionsInOrder() {\n      return aliasDefinitionsInOrder;\n    }\n\n    private List<AliasUsage> getAliasUsages() {\n      return aliasUsages;\n    }\n\n    List<Node> getScopeCalls() {\n      return scopeCalls;\n    }\n\n    boolean hasErrors() {\n      return hasErrors;\n    }\n\n    private boolean isCallToScopeMethod(Node n) {\n      return n.isCall() &&\n          SCOPING_METHOD_NAME.equals(n.getFirstChild().getQualifiedName());\n    }\n\n    @Override\n    public void enterScope(NodeTraversal t) {\n      Node n = t.getCurrentNode().getParent();\n      if (n != null && isCallToScopeMethod(n)) {\n        transformation = transformationHandler.logAliasTransformation(\n            n.getSourceFileName(), getSourceRegion(n));\n        findAliases(t);\n      }\n    }\n\n    @Override\n    public void exitScope(NodeTraversal t) {\n      if (t.getScopeDepth() > 2) {\n        findNamespaceShadows(t);\n      }\n\n      if (t.getScopeDepth() == 2) {\n        renameNamespaceShadows(t);\n        aliases.clear();\n        forbiddenLocals.clear();\n        transformation = null;\n        hasNamespaceShadows = false;\n      }\n    }\n\n    @Override\n    public final boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {\n      if (n.isFunction() && t.inGlobalScope()) {\n        // Do not traverse in to functions except for goog.scope functions.\n        if (parent == null || !isCallToScopeMethod(parent)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    private SourcePosition<AliasTransformation> getSourceRegion(Node n) {\n      Node testNode = n;\n      Node next = null;\n      for (; next != null || testNode.isScript();) {\n        next = testNode.getNext();\n        testNode = testNode.getParent();\n      }\n\n      int endLine = next == null ? Integer.MAX_VALUE : next.getLineno();\n      int endChar = next == null ? Integer.MAX_VALUE : next.getCharno();\n      SourcePosition<AliasTransformation> pos =\n          new SourcePosition<AliasTransformation>() {};\n      pos.setPositionInformation(\n          n.getLineno(), n.getCharno(), endLine, endChar);\n      return pos;\n    }\n\n    private void report(NodeTraversal t, Node n, DiagnosticType error,\n        String... arguments) {\n      compiler.report(t.makeError(n, error, arguments));\n      hasErrors = true;\n    }\n\n    private void findAliases(NodeTraversal t) {\n      Scope scope = t.getScope();\n      for (Var v : scope.getVarIterable()) {', 'aftercode': '        Node parent = n.getParent();\n        boolean isVar = parent.isVar();\n        if (isVar && n.getFirstChild() != null && n.getFirstChild().isQualifiedName()) {\n          recordAlias(v);\n        } else if (v.isBleedingFunction()) {\n          // Bleeding functions already get a BAD_PARAMETERS error, so just\n          // do nothing.\n        } else if (parent.getType() == Token.LP) {\n          // Parameters of the scope function also get a BAD_PARAMETERS\n          // error.\n        } else if (isVar) {\n          Node grandparent = parent.getParent();\n          Node value = n.hasChildren() ?\n              v.getInitialValue().detachFromParent() :\n              null;\n          Node varNode = parent;\n\n          String name = n.getString();\n          int nameCount = scopedAliasNames.count(name);\n          scopedAliasNames.add(name);\n          String globalName =\n              "$jscomp.scope." + name + (nameCount == 0 ? "" : ("$" + nameCount));\n\n          compiler.ensureLibraryInjected("base");\n\n          // First, we need to free up the function expression (EXPR)\n          // to be used in another expression.\n            // Replace "function NAME() { ... }" with "var NAME;".\n\n            // We can\'t keep the local name on the function expression,\n            // because IE is buggy and will leak the name into the global\n            // scope. This is covered in more detail here:\n            // http://wiki.ecmascript.org/lib/exe/fetch.php?id=resources:resources&cache=cache&media=resources:jscriptdeviationsfromes3.pdf\n            //\n            // This will only cause problems if this is a hoisted, recursive\n            // function, and the programmer is using the hoisting.\n\n              // If this is a VAR, we can just detach the expression and\n              // the tree will still be valid.\n\n          // Add $jscomp.scope.name = EXPR;\n          // Make sure we copy over all the jsdoc and debug info.\n          if (value != null || v.getJSDocInfo() != null) {\n            Node newDecl = NodeUtil.newQualifiedNameNodeDeclaration(\n                compiler.getCodingConvention(),\n                globalName,\n                value,\n                v.getJSDocInfo())\n                .useSourceInfoIfMissingFromForTree(n);\n            NodeUtil.setDebugInformation(\n                newDecl.getFirstChild().getFirstChild(), n, name);\n\n              grandparent.addChildBefore(newDecl, varNode);\n          }\n\n          // Rewrite "var name = EXPR;" to "var name = $jscomp.scope.name;"\n          v.getNameNode().addChildToFront(\n              NodeUtil.newQualifiedNameNode(\n                  compiler.getCodingConvention(), globalName, n, name));\n\n          recordAlias(v);\n        } else {\n          // Do not other kinds of local symbols, like catch params.\n          report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());\n        }\n      }\n    }\n\n    private void recordAlias(Var aliasVar) {\n      String name = aliasVar.getName();\n      aliases.put(name, aliasVar);\n\n      String qualifiedName =\n        aliasVar.getInitialValue().getQualifiedName();\n      transformation.addAlias(name, qualifiedName);\n\n      int rootIndex = qualifiedName.indexOf(".");\n      if (rootIndex != -1) {\n        String qNameRoot = qualifiedName.substring(0, rootIndex);\n        if (!aliases.containsKey(qNameRoot)) {\n          forbiddenLocals.add(qNameRoot);\n        }\n      }\n    }\n\n    /** Find out if there are any local shadows of namespaces. */\n    private void findNamespaceShadows(NodeTraversal t) {\n      if (hasNamespaceShadows) {\n        return;\n      }\n\n      Scope scope = t.getScope();\n      for (Var v : scope.getVarIterable()) {\n        if (forbiddenLocals.contains(v.getName())) {\n          hasNamespaceShadows = true;\n          return;\n        }\n      }\n    }\n\n    /**\n     * Rename any local shadows of namespaces.\n     * This should be a very rare occurrence, so only do this traversal\n     * if we know that we need it.\n     */\n    private void renameNamespaceShadows(NodeTraversal t) {\n      if (hasNamespaceShadows) {\n        MakeDeclaredNamesUnique.Renamer renamer =\n            new MakeDeclaredNamesUnique.WhitelistedRenamer(\n                new MakeDeclaredNamesUnique.ContextualRenamer(),\n                forbiddenLocals);\n        for (String s : forbiddenLocals) {\n          renamer.addDeclaredName(s);\n        }\n        MakeDeclaredNamesUnique uniquifier =\n            new MakeDeclaredNamesUnique(renamer);\n        NodeTraversal.traverse(compiler, t.getScopeRoot(), uniquifier);\n      }\n    }\n\n    private void validateScopeCall(NodeTraversal t, Node n, Node parent) {\n      if (preprocessorSymbolTable != null) {\n        preprocessorSymbolTable.addReference(n.getFirstChild());\n      }\n      if (!parent.isExprResult()) {\n        report(t, n, GOOG_SCOPE_USED_IMPROPERLY);\n      }\n      if (n.getChildCount() != 2) {\n        // The goog.scope call should have exactly 1 parameter.  The first\n        // child is the "goog.scope" and the second should be the parameter.\n        report(t, n, GOOG_SCOPE_HAS_BAD_PARAMETERS);\n      } else {\n        Node anonymousFnNode = n.getChildAtIndex(1);\n        if (!anonymousFnNode.isFunction() ||\n            NodeUtil.getFunctionName(anonymousFnNode) != null ||\n            NodeUtil.getFunctionParameters(anonymousFnNode).hasChildren()) {\n          report(t, anonymousFnNode, GOOG_SCOPE_HAS_BAD_PARAMETERS);\n        } else {\n          scopeCalls.add(n);\n        }\n      }\n    }\n\n    @Override\n    public void visit(NodeTraversal t, Node n, Node parent) {\n      if (isCallToScopeMethod(n)) {\n        validateScopeCall(t, n, n.getParent());\n      }\n\n      if (t.getScopeDepth() < 2) {\n        return;\n      }\n\n      int type = n.getType();\n      Var aliasVar = null;\n      if (type == Token.NAME) {\n        String name = n.getString();\n        Var lexicalVar = t.getScope().getVar(n.getString());\n        if (lexicalVar != null && lexicalVar == aliases.get(name)) {\n          aliasVar = lexicalVar;\n        }\n      }\n\n      // Validate the top-level of the goog.scope block.\n      if (t.getScopeDepth() == 2) {\n        if (aliasVar != null && NodeUtil.isLValue(n)) {\n          if (aliasVar.getNode() == n) {\n            aliasDefinitionsInOrder.add(n);\n\n            // Return early, to ensure that we don\'t record a definition\n            // twice.\n            return;\n          } else {\n            report(t, n, GOOG_SCOPE_ALIAS_REDEFINED, n.getString());\n          }\n        }\n\n        if (type == Token.RETURN) {\n          report(t, n, GOOG_SCOPE_USES_RETURN);\n        } else if (type == Token.THIS) {\n          report(t, n, GOOG_SCOPE_REFERENCES_THIS);\n        } else if (type == Token.THROW) {\n          report(t, n, GOOG_SCOPE_USES_THROW);\n        }\n      }\n\n      // Validate all descendent scopes of the goog.scope block.\n      if (t.getScopeDepth() >= 2) {\n        // Check if this name points to an alias.\n        if (aliasVar != null) {\n          // Note, to support the transitive case, it\'s important we don\'t\n          // clone aliasedNode here.  For example,\n          // var g = goog; var d = g.dom; d.createElement(\'DIV\');\n          // The node in aliasedNode (which is "g") will be replaced in the\n          // changes pass above with "goog".  If we cloned here, we\'d end up\n          // with <code>g.dom.createElement(\'DIV\')</code>.\n          aliasUsages.add(new AliasedNode(aliasVar, n));\n        }\n\n        JSDocInfo info = n.getJSDocInfo();\n        if (info != null) {\n          for (Node node : info.getTypeNodes()) {\n            fixTypeNode(node);\n          }\n        }\n\n        // TODO(robbyw): Error for goog.scope not at root.\n      }\n    }\n\n    private void fixTypeNode(Node typeNode) {\n      if (typeNode.isString()) {\n        String name = typeNode.getString();\n        int endIndex = name.indexOf(\'.\');\n        if (endIndex == -1) {\n          endIndex = name.length();\n        }\n        String baseName = name.substring(0, endIndex);\n        Var aliasVar = aliases.get(baseName);\n        if (aliasVar != null) {\n          aliasUsages.add(new AliasedTypeNode(aliasVar, typeNode));\n        }\n      }\n\n      for (Node child = typeNode.getFirstChild(); child != null;\n           child = child.getNext()) {\n        fixTypeNode(child);\n      }\n    }\n  }\n}', 'tree': 'ForStatement body BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member loc2 ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member isQualifiedName_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ', 'prob': [0, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'mode': 0, 'line': 355, 'isa': False, 'fl_score': 1}, {'bugid': 'Closure-110', 'treeroot': <Searchnode.Node object at 0x7fbdb3a0a1d0>, 'troot': <Searchnode.Node object at 0x7fbdc858a810>, 'oldcode': '        } else if (isVar) {', 'filepath': 'buggy/Closure-110/src/com/google/javascript/jscomp/ScopedAliases.java', 'subroot': <Searchnode.Node object at 0x7fbdb3a008d0>, 'vardic': {'findAliases_ter': 'meth0', 'n_ter': 'loc0', 'parent_ter': 'loc1', 'isVar_ter': 'loc2', 'grandparent_ter': 'loc3', 'value_ter': 'loc4', 'varNode_ter': 'loc5', 'name_ter': 'loc6', 'nameCount_ter': 'loc7', 'globalName_ter': 'loc8', 'newDecl_ter': 'loc9'}, 'typedic': {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}, 'idss': 'Closure-110', 'classname': 'com.google.javascript.jscomp.ScopedAliases', 'precode': '/*\n * Copyright 2010 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.javascript.jscomp;\n\nimport com.google.common.base.Preconditions;\nimport com.google.common.collect.HashMultiset;\nimport com.google.common.collect.Lists;\nimport com.google.common.collect.Maps;\nimport com.google.common.collect.Multiset;\nimport com.google.common.collect.Sets;\nimport com.google.javascript.jscomp.CompilerOptions.AliasTransformation;\nimport com.google.javascript.jscomp.CompilerOptions.AliasTransformationHandler;\nimport com.google.javascript.jscomp.Scope.Var;\nimport com.google.javascript.rhino.IR;\nimport com.google.javascript.rhino.JSDocInfo;\nimport com.google.javascript.rhino.Node;\nimport com.google.javascript.rhino.SourcePosition;\nimport com.google.javascript.rhino.Token;\n\nimport java.util.Collection;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\n\nimport javax.annotation.Nullable;\n\n/**\n * Process aliases in goog.scope blocks.\n *\n * goog.scope(function() {\n *   var dom = goog.dom;\n *   var DIV = dom.TagName.DIV;\n *\n *   dom.createElement(DIV);\n * });\n *\n * should become\n *\n * goog.dom.createElement(goog.dom.TagName.DIV);\n *\n * The advantage of using goog.scope is that the compiler will *guarantee*\n * the anonymous function will be inlined, even if it can\'t prove\n * that it\'s semantically correct to do so. For example, consider this case:\n *\n * goog.scope(function() {\n *   goog.getBar = function () { return alias; };\n *   ...\n *   var alias = foo.bar;\n * })\n *\n * In theory, the compiler can\'t inline \'alias\' unless it can prove that\n * goog.getBar is called only after \'alias\' is defined.\n *\n * In practice, the compiler will inline \'alias\' anyway, at the risk of\n * \'fixing\' bad code.\n *\n * @author robbyw@google.com (Robby Walker)\n */\nclass ScopedAliases implements HotSwapCompilerPass {\n  /** Name used to denote an scoped function block used for aliasing. */\n  static final String SCOPING_METHOD_NAME = "goog.scope";\n\n  private final AbstractCompiler compiler;\n  private final PreprocessorSymbolTable preprocessorSymbolTable;\n  private final AliasTransformationHandler transformationHandler;\n\n  // Errors\n  static final DiagnosticType GOOG_SCOPE_USED_IMPROPERLY = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_USED_IMPROPERLY",\n      "The call to goog.scope must be alone in a single statement.");\n\n  static final DiagnosticType GOOG_SCOPE_HAS_BAD_PARAMETERS =\n      DiagnosticType.error(\n          "JSC_GOOG_SCOPE_HAS_BAD_PARAMETERS",\n          "The call to goog.scope must take only a single parameter.  It must" +\n              " be an anonymous function that itself takes no parameters.");\n\n  static final DiagnosticType GOOG_SCOPE_REFERENCES_THIS = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_REFERENCES_THIS",\n      "The body of a goog.scope function cannot reference \'this\'.");\n\n  static final DiagnosticType GOOG_SCOPE_USES_RETURN = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_USES_RETURN",\n      "The body of a goog.scope function cannot use \'return\'.");\n\n  static final DiagnosticType GOOG_SCOPE_USES_THROW = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_USES_THROW",\n      "The body of a goog.scope function cannot use \'throw\'.");\n\n  static final DiagnosticType GOOG_SCOPE_ALIAS_REDEFINED = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_ALIAS_REDEFINED",\n      "The alias {0} is assigned a value more than once.");\n\n  static final DiagnosticType GOOG_SCOPE_ALIAS_CYCLE = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_ALIAS_CYCLE",\n      "The aliases {0} has a cycle.");\n\n  static final DiagnosticType GOOG_SCOPE_NON_ALIAS_LOCAL = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_NON_ALIAS_LOCAL",\n      "The local variable {0} is in a goog.scope and is not an alias.");\n\n  private Multiset<String> scopedAliasNames = HashMultiset.create();\n\n  ScopedAliases(AbstractCompiler compiler,\n      @Nullable PreprocessorSymbolTable preprocessorSymbolTable,\n      AliasTransformationHandler transformationHandler) {\n    this.compiler = compiler;\n    this.preprocessorSymbolTable = preprocessorSymbolTable;\n    this.transformationHandler = transformationHandler;\n  }\n\n  @Override\n  public void process(Node externs, Node root) {\n    hotSwapScript(root, null);\n  }\n\n  @Override\n  public void hotSwapScript(Node root, Node originalRoot) {\n    Traversal traversal = new Traversal();\n    NodeTraversal.traverse(compiler, root, traversal);\n\n    if (!traversal.hasErrors()) {\n\n      // Apply the aliases.\n      List<AliasUsage> aliasWorkQueue =\n          Lists.newArrayList(traversal.getAliasUsages());\n      while (!aliasWorkQueue.isEmpty()) {\n        List<AliasUsage> newQueue = Lists.newArrayList();\n        for (AliasUsage aliasUsage : aliasWorkQueue) {\n          if (aliasUsage.referencesOtherAlias()) {\n            newQueue.add(aliasUsage);\n          } else {\n            aliasUsage.applyAlias();\n          }\n        }\n\n        // Prevent an infinite loop.\n        if (newQueue.size() == aliasWorkQueue.size()) {\n          Var cycleVar = newQueue.get(0).aliasVar;\n          compiler.report(JSError.make(\n              cycleVar.getNode(), GOOG_SCOPE_ALIAS_CYCLE, cycleVar.getName()));\n          break;\n        } else {\n          aliasWorkQueue = newQueue;\n        }\n      }\n\n      // Remove the alias definitions.\n      for (Node aliasDefinition : traversal.getAliasDefinitionsInOrder()) {\n        if (aliasDefinition.getParent().isVar() &&\n            aliasDefinition.getParent().hasOneChild()) {\n          aliasDefinition.getParent().detachFromParent();\n        } else {\n          aliasDefinition.detachFromParent();\n        }\n      }\n\n      // Collapse the scopes.\n      for (Node scopeCall : traversal.getScopeCalls()) {\n        Node expressionWithScopeCall = scopeCall.getParent();\n        Node scopeClosureBlock = scopeCall.getLastChild().getLastChild();\n        scopeClosureBlock.detachFromParent();\n        expressionWithScopeCall.getParent().replaceChild(\n            expressionWithScopeCall,\n            scopeClosureBlock);\n        NodeUtil.tryMergeBlock(scopeClosureBlock);\n      }\n\n      if (traversal.getAliasUsages().size() > 0 ||\n          traversal.getAliasDefinitionsInOrder().size() > 0 ||\n          traversal.getScopeCalls().size() > 0) {\n        compiler.reportCodeChange();\n      }\n    }\n  }\n\n  private abstract class AliasUsage {\n    final Var aliasVar;\n    final Node aliasReference;\n\n    AliasUsage(Var aliasVar, Node aliasReference) {\n      this.aliasVar = aliasVar;\n      this.aliasReference = aliasReference;\n    }\n\n    /** Checks to see if this references another alias. */\n    public boolean referencesOtherAlias() {\n      Node aliasDefinition = aliasVar.getInitialValue();\n      Node root = NodeUtil.getRootOfQualifiedName(aliasDefinition);\n      Var otherAliasVar = aliasVar.getScope().getOwnSlot(root.getString());\n      return otherAliasVar != null;\n    }\n\n    public abstract void applyAlias();\n  }\n\n  private class AliasedNode extends AliasUsage {\n    AliasedNode(Var aliasVar, Node aliasReference) {\n      super(aliasVar, aliasReference);\n    }\n\n    @Override\n    public void applyAlias() {\n      Node aliasDefinition = aliasVar.getInitialValue();\n      aliasReference.getParent().replaceChild(\n          aliasReference, aliasDefinition.cloneTree());\n    }\n  }\n\n  private class AliasedTypeNode extends AliasUsage {\n    AliasedTypeNode(Var aliasVar, Node aliasReference) {\n      super(aliasVar, aliasReference);\n    }\n\n    @Override\n    public void applyAlias() {\n      Node aliasDefinition = aliasVar.getInitialValue();\n      String aliasName = aliasVar.getName();\n      String typeName = aliasReference.getString();\n      String aliasExpanded =\n          Preconditions.checkNotNull(aliasDefinition.getQualifiedName());\n      Preconditions.checkState(typeName.startsWith(aliasName));\n      aliasReference.setString(typeName.replaceFirst(aliasName, aliasExpanded));\n    }\n  }\n\n\n  private class Traversal implements NodeTraversal.ScopedCallback {\n    // The job of this class is to collect these three data sets.\n\n    // The order of this list determines the order that aliases are applied.\n    private final List<Node> aliasDefinitionsInOrder = Lists.newArrayList();\n\n    private final List<Node> scopeCalls = Lists.newArrayList();\n\n    private final List<AliasUsage> aliasUsages = Lists.newArrayList();\n\n    // This map is temporary and cleared for each scope.\n    private final Map<String, Var> aliases = Maps.newHashMap();\n\n    // Suppose you create an alias.\n    // var x = goog.x;\n    // As a side-effect, this means you can shadow the namespace \'goog\'\n    // in inner scopes. When we inline the namespaces, we have to rename\n    // these shadows.\n    //\n    // Fortunately, we already have a name uniquifier that runs during tree\n    // normalization (before optimizations). We run it here on a limited\n    // set of variables, but only as a last resort (because this will screw\n    // up warning messages downstream).\n    private final Set<String> forbiddenLocals = Sets.newHashSet("$jscomp");\n    private boolean hasNamespaceShadows = false;\n\n    private boolean hasErrors = false;\n\n    private AliasTransformation transformation = null;\n\n    Collection<Node> getAliasDefinitionsInOrder() {\n      return aliasDefinitionsInOrder;\n    }\n\n    private List<AliasUsage> getAliasUsages() {\n      return aliasUsages;\n    }\n\n    List<Node> getScopeCalls() {\n      return scopeCalls;\n    }\n\n    boolean hasErrors() {\n      return hasErrors;\n    }\n\n    private boolean isCallToScopeMethod(Node n) {\n      return n.isCall() &&\n          SCOPING_METHOD_NAME.equals(n.getFirstChild().getQualifiedName());\n    }\n\n    @Override\n    public void enterScope(NodeTraversal t) {\n      Node n = t.getCurrentNode().getParent();\n      if (n != null && isCallToScopeMethod(n)) {\n        transformation = transformationHandler.logAliasTransformation(\n            n.getSourceFileName(), getSourceRegion(n));\n        findAliases(t);\n      }\n    }\n\n    @Override\n    public void exitScope(NodeTraversal t) {\n      if (t.getScopeDepth() > 2) {\n        findNamespaceShadows(t);\n      }\n\n      if (t.getScopeDepth() == 2) {\n        renameNamespaceShadows(t);\n        aliases.clear();\n        forbiddenLocals.clear();\n        transformation = null;\n        hasNamespaceShadows = false;\n      }\n    }\n\n    @Override\n    public final boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {\n      if (n.isFunction() && t.inGlobalScope()) {\n        // Do not traverse in to functions except for goog.scope functions.\n        if (parent == null || !isCallToScopeMethod(parent)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    private SourcePosition<AliasTransformation> getSourceRegion(Node n) {\n      Node testNode = n;\n      Node next = null;\n      for (; next != null || testNode.isScript();) {\n        next = testNode.getNext();\n        testNode = testNode.getParent();\n      }\n\n      int endLine = next == null ? Integer.MAX_VALUE : next.getLineno();\n      int endChar = next == null ? Integer.MAX_VALUE : next.getCharno();\n      SourcePosition<AliasTransformation> pos =\n          new SourcePosition<AliasTransformation>() {};\n      pos.setPositionInformation(\n          n.getLineno(), n.getCharno(), endLine, endChar);\n      return pos;\n    }\n\n    private void report(NodeTraversal t, Node n, DiagnosticType error,\n        String... arguments) {\n      compiler.report(t.makeError(n, error, arguments));\n      hasErrors = true;\n    }\n\n    private void findAliases(NodeTraversal t) {\n      Scope scope = t.getScope();\n      for (Var v : scope.getVarIterable()) {\n        Node n = v.getNode();\n        Node parent = n.getParent();\n        boolean isVar = parent.isVar();\n        if (isVar && n.getFirstChild() != null && n.getFirstChild().isQualifiedName()) {\n          recordAlias(v);\n        } else if (v.isBleedingFunction()) {\n          // Bleeding functions already get a BAD_PARAMETERS error, so just\n          // do nothing.\n        } else if (parent.getType() == Token.LP) {\n          // Parameters of the scope function also get a BAD_PARAMETERS\n          // error.', 'aftercode': '          Node grandparent = parent.getParent();\n          Node value = n.hasChildren() ?\n              v.getInitialValue().detachFromParent() :\n              null;\n          Node varNode = parent;\n\n          String name = n.getString();\n          int nameCount = scopedAliasNames.count(name);\n          scopedAliasNames.add(name);\n          String globalName =\n              "$jscomp.scope." + name + (nameCount == 0 ? "" : ("$" + nameCount));\n\n          compiler.ensureLibraryInjected("base");\n\n          // First, we need to free up the function expression (EXPR)\n          // to be used in another expression.\n            // Replace "function NAME() { ... }" with "var NAME;".\n\n            // We can\'t keep the local name on the function expression,\n            // because IE is buggy and will leak the name into the global\n            // scope. This is covered in more detail here:\n            // http://wiki.ecmascript.org/lib/exe/fetch.php?id=resources:resources&cache=cache&media=resources:jscriptdeviationsfromes3.pdf\n            //\n            // This will only cause problems if this is a hoisted, recursive\n            // function, and the programmer is using the hoisting.\n\n              // If this is a VAR, we can just detach the expression and\n              // the tree will still be valid.\n\n          // Add $jscomp.scope.name = EXPR;\n          // Make sure we copy over all the jsdoc and debug info.\n          if (value != null || v.getJSDocInfo() != null) {\n            Node newDecl = NodeUtil.newQualifiedNameNodeDeclaration(\n                compiler.getCodingConvention(),\n                globalName,\n                value,\n                v.getJSDocInfo())\n                .useSourceInfoIfMissingFromForTree(n);\n            NodeUtil.setDebugInformation(\n                newDecl.getFirstChild().getFirstChild(), n, name);\n\n              grandparent.addChildBefore(newDecl, varNode);\n          }\n\n          // Rewrite "var name = EXPR;" to "var name = $jscomp.scope.name;"\n          v.getNameNode().addChildToFront(\n              NodeUtil.newQualifiedNameNode(\n                  compiler.getCodingConvention(), globalName, n, name));\n\n          recordAlias(v);\n        } else {\n          // Do not other kinds of local symbols, like catch params.\n          report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());\n        }\n      }\n    }\n\n    private void recordAlias(Var aliasVar) {\n      String name = aliasVar.getName();\n      aliases.put(name, aliasVar);\n\n      String qualifiedName =\n        aliasVar.getInitialValue().getQualifiedName();\n      transformation.addAlias(name, qualifiedName);\n\n      int rootIndex = qualifiedName.indexOf(".");\n      if (rootIndex != -1) {\n        String qNameRoot = qualifiedName.substring(0, rootIndex);\n        if (!aliases.containsKey(qNameRoot)) {\n          forbiddenLocals.add(qNameRoot);\n        }\n      }\n    }\n\n    /** Find out if there are any local shadows of namespaces. */\n    private void findNamespaceShadows(NodeTraversal t) {\n      if (hasNamespaceShadows) {\n        return;\n      }\n\n      Scope scope = t.getScope();\n      for (Var v : scope.getVarIterable()) {\n        if (forbiddenLocals.contains(v.getName())) {\n          hasNamespaceShadows = true;\n          return;\n        }\n      }\n    }\n\n    /**\n     * Rename any local shadows of namespaces.\n     * This should be a very rare occurrence, so only do this traversal\n     * if we know that we need it.\n     */\n    private void renameNamespaceShadows(NodeTraversal t) {\n      if (hasNamespaceShadows) {\n        MakeDeclaredNamesUnique.Renamer renamer =\n            new MakeDeclaredNamesUnique.WhitelistedRenamer(\n                new MakeDeclaredNamesUnique.ContextualRenamer(),\n                forbiddenLocals);\n        for (String s : forbiddenLocals) {\n          renamer.addDeclaredName(s);\n        }\n        MakeDeclaredNamesUnique uniquifier =\n            new MakeDeclaredNamesUnique(renamer);\n        NodeTraversal.traverse(compiler, t.getScopeRoot(), uniquifier);\n      }\n    }\n\n    private void validateScopeCall(NodeTraversal t, Node n, Node parent) {\n      if (preprocessorSymbolTable != null) {\n        preprocessorSymbolTable.addReference(n.getFirstChild());\n      }\n      if (!parent.isExprResult()) {\n        report(t, n, GOOG_SCOPE_USED_IMPROPERLY);\n      }\n      if (n.getChildCount() != 2) {\n        // The goog.scope call should have exactly 1 parameter.  The first\n        // child is the "goog.scope" and the second should be the parameter.\n        report(t, n, GOOG_SCOPE_HAS_BAD_PARAMETERS);\n      } else {\n        Node anonymousFnNode = n.getChildAtIndex(1);\n        if (!anonymousFnNode.isFunction() ||\n            NodeUtil.getFunctionName(anonymousFnNode) != null ||\n            NodeUtil.getFunctionParameters(anonymousFnNode).hasChildren()) {\n          report(t, anonymousFnNode, GOOG_SCOPE_HAS_BAD_PARAMETERS);\n        } else {\n          scopeCalls.add(n);\n        }\n      }\n    }\n\n    @Override\n    public void visit(NodeTraversal t, Node n, Node parent) {\n      if (isCallToScopeMethod(n)) {\n        validateScopeCall(t, n, n.getParent());\n      }\n\n      if (t.getScopeDepth() < 2) {\n        return;\n      }\n\n      int type = n.getType();\n      Var aliasVar = null;\n      if (type == Token.NAME) {\n        String name = n.getString();\n        Var lexicalVar = t.getScope().getVar(n.getString());\n        if (lexicalVar != null && lexicalVar == aliases.get(name)) {\n          aliasVar = lexicalVar;\n        }\n      }\n\n      // Validate the top-level of the goog.scope block.\n      if (t.getScopeDepth() == 2) {\n        if (aliasVar != null && NodeUtil.isLValue(n)) {\n          if (aliasVar.getNode() == n) {\n            aliasDefinitionsInOrder.add(n);\n\n            // Return early, to ensure that we don\'t record a definition\n            // twice.\n            return;\n          } else {\n            report(t, n, GOOG_SCOPE_ALIAS_REDEFINED, n.getString());\n          }\n        }\n\n        if (type == Token.RETURN) {\n          report(t, n, GOOG_SCOPE_USES_RETURN);\n        } else if (type == Token.THIS) {\n          report(t, n, GOOG_SCOPE_REFERENCES_THIS);\n        } else if (type == Token.THROW) {\n          report(t, n, GOOG_SCOPE_USES_THROW);\n        }\n      }\n\n      // Validate all descendent scopes of the goog.scope block.\n      if (t.getScopeDepth() >= 2) {\n        // Check if this name points to an alias.\n        if (aliasVar != null) {\n          // Note, to support the transitive case, it\'s important we don\'t\n          // clone aliasedNode here.  For example,\n          // var g = goog; var d = g.dom; d.createElement(\'DIV\');\n          // The node in aliasedNode (which is "g") will be replaced in the\n          // changes pass above with "goog".  If we cloned here, we\'d end up\n          // with <code>g.dom.createElement(\'DIV\')</code>.\n          aliasUsages.add(new AliasedNode(aliasVar, n));\n        }\n\n        JSDocInfo info = n.getJSDocInfo();\n        if (info != null) {\n          for (Node node : info.getTypeNodes()) {\n            fixTypeNode(node);\n          }\n        }\n\n        // TODO(robbyw): Error for goog.scope not at root.\n      }\n    }\n\n    private void fixTypeNode(Node typeNode) {\n      if (typeNode.isString()) {\n        String name = typeNode.getString();\n        int endIndex = name.indexOf(\'.\');\n        if (endIndex == -1) {\n          endIndex = name.length();\n        }\n        String baseName = name.substring(0, endIndex);\n        Var aliasVar = aliases.get(baseName);\n        if (aliasVar != null) {\n          aliasUsages.add(new AliasedTypeNode(aliasVar, typeNode));\n        }\n      }\n\n      for (Node child = typeNode.getFirstChild(); child != null;\n           child = child.getNext()) {\n        fixTypeNode(child);\n      }\n    }\n  }\n}', 'tree': 'ForStatement body BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member loc2 ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member isQualifiedName_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ', 'prob': [0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'mode': 0, 'line': 366, 'isa': False, 'fl_score': 1}, {'bugid': 'Closure-110', 'treeroot': <Searchnode.Node object at 0x7fbdc0dd9a90>, 'troot': <Searchnode.Node object at 0x7fbdccda04d0>, 'oldcode': '          if (value != null || v.getJSDocInfo() != null) {', 'filepath': 'buggy/Closure-110/src/com/google/javascript/jscomp/ScopedAliases.java', 'subroot': <Searchnode.Node object at 0x7fbdc0df2c50>, 'vardic': {'findAliases_ter': 'meth0', 'n_ter': 'loc0', 'parent_ter': 'loc1', 'isVar_ter': 'loc2', 'grandparent_ter': 'loc3', 'value_ter': 'loc4', 'varNode_ter': 'loc5', 'name_ter': 'loc6', 'nameCount_ter': 'loc7', 'globalName_ter': 'loc8', 'newDecl_ter': 'loc9'}, 'typedic': {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}, 'idss': 'Closure-110', 'classname': 'com.google.javascript.jscomp.ScopedAliases', 'precode': '/*\n * Copyright 2010 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.javascript.jscomp;\n\nimport com.google.common.base.Preconditions;\nimport com.google.common.collect.HashMultiset;\nimport com.google.common.collect.Lists;\nimport com.google.common.collect.Maps;\nimport com.google.common.collect.Multiset;\nimport com.google.common.collect.Sets;\nimport com.google.javascript.jscomp.CompilerOptions.AliasTransformation;\nimport com.google.javascript.jscomp.CompilerOptions.AliasTransformationHandler;\nimport com.google.javascript.jscomp.Scope.Var;\nimport com.google.javascript.rhino.IR;\nimport com.google.javascript.rhino.JSDocInfo;\nimport com.google.javascript.rhino.Node;\nimport com.google.javascript.rhino.SourcePosition;\nimport com.google.javascript.rhino.Token;\n\nimport java.util.Collection;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\n\nimport javax.annotation.Nullable;\n\n/**\n * Process aliases in goog.scope blocks.\n *\n * goog.scope(function() {\n *   var dom = goog.dom;\n *   var DIV = dom.TagName.DIV;\n *\n *   dom.createElement(DIV);\n * });\n *\n * should become\n *\n * goog.dom.createElement(goog.dom.TagName.DIV);\n *\n * The advantage of using goog.scope is that the compiler will *guarantee*\n * the anonymous function will be inlined, even if it can\'t prove\n * that it\'s semantically correct to do so. For example, consider this case:\n *\n * goog.scope(function() {\n *   goog.getBar = function () { return alias; };\n *   ...\n *   var alias = foo.bar;\n * })\n *\n * In theory, the compiler can\'t inline \'alias\' unless it can prove that\n * goog.getBar is called only after \'alias\' is defined.\n *\n * In practice, the compiler will inline \'alias\' anyway, at the risk of\n * \'fixing\' bad code.\n *\n * @author robbyw@google.com (Robby Walker)\n */\nclass ScopedAliases implements HotSwapCompilerPass {\n  /** Name used to denote an scoped function block used for aliasing. */\n  static final String SCOPING_METHOD_NAME = "goog.scope";\n\n  private final AbstractCompiler compiler;\n  private final PreprocessorSymbolTable preprocessorSymbolTable;\n  private final AliasTransformationHandler transformationHandler;\n\n  // Errors\n  static final DiagnosticType GOOG_SCOPE_USED_IMPROPERLY = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_USED_IMPROPERLY",\n      "The call to goog.scope must be alone in a single statement.");\n\n  static final DiagnosticType GOOG_SCOPE_HAS_BAD_PARAMETERS =\n      DiagnosticType.error(\n          "JSC_GOOG_SCOPE_HAS_BAD_PARAMETERS",\n          "The call to goog.scope must take only a single parameter.  It must" +\n              " be an anonymous function that itself takes no parameters.");\n\n  static final DiagnosticType GOOG_SCOPE_REFERENCES_THIS = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_REFERENCES_THIS",\n      "The body of a goog.scope function cannot reference \'this\'.");\n\n  static final DiagnosticType GOOG_SCOPE_USES_RETURN = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_USES_RETURN",\n      "The body of a goog.scope function cannot use \'return\'.");\n\n  static final DiagnosticType GOOG_SCOPE_USES_THROW = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_USES_THROW",\n      "The body of a goog.scope function cannot use \'throw\'.");\n\n  static final DiagnosticType GOOG_SCOPE_ALIAS_REDEFINED = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_ALIAS_REDEFINED",\n      "The alias {0} is assigned a value more than once.");\n\n  static final DiagnosticType GOOG_SCOPE_ALIAS_CYCLE = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_ALIAS_CYCLE",\n      "The aliases {0} has a cycle.");\n\n  static final DiagnosticType GOOG_SCOPE_NON_ALIAS_LOCAL = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_NON_ALIAS_LOCAL",\n      "The local variable {0} is in a goog.scope and is not an alias.");\n\n  private Multiset<String> scopedAliasNames = HashMultiset.create();\n\n  ScopedAliases(AbstractCompiler compiler,\n      @Nullable PreprocessorSymbolTable preprocessorSymbolTable,\n      AliasTransformationHandler transformationHandler) {\n    this.compiler = compiler;\n    this.preprocessorSymbolTable = preprocessorSymbolTable;\n    this.transformationHandler = transformationHandler;\n  }\n\n  @Override\n  public void process(Node externs, Node root) {\n    hotSwapScript(root, null);\n  }\n\n  @Override\n  public void hotSwapScript(Node root, Node originalRoot) {\n    Traversal traversal = new Traversal();\n    NodeTraversal.traverse(compiler, root, traversal);\n\n    if (!traversal.hasErrors()) {\n\n      // Apply the aliases.\n      List<AliasUsage> aliasWorkQueue =\n          Lists.newArrayList(traversal.getAliasUsages());\n      while (!aliasWorkQueue.isEmpty()) {\n        List<AliasUsage> newQueue = Lists.newArrayList();\n        for (AliasUsage aliasUsage : aliasWorkQueue) {\n          if (aliasUsage.referencesOtherAlias()) {\n            newQueue.add(aliasUsage);\n          } else {\n            aliasUsage.applyAlias();\n          }\n        }\n\n        // Prevent an infinite loop.\n        if (newQueue.size() == aliasWorkQueue.size()) {\n          Var cycleVar = newQueue.get(0).aliasVar;\n          compiler.report(JSError.make(\n              cycleVar.getNode(), GOOG_SCOPE_ALIAS_CYCLE, cycleVar.getName()));\n          break;\n        } else {\n          aliasWorkQueue = newQueue;\n        }\n      }\n\n      // Remove the alias definitions.\n      for (Node aliasDefinition : traversal.getAliasDefinitionsInOrder()) {\n        if (aliasDefinition.getParent().isVar() &&\n            aliasDefinition.getParent().hasOneChild()) {\n          aliasDefinition.getParent().detachFromParent();\n        } else {\n          aliasDefinition.detachFromParent();\n        }\n      }\n\n      // Collapse the scopes.\n      for (Node scopeCall : traversal.getScopeCalls()) {\n        Node expressionWithScopeCall = scopeCall.getParent();\n        Node scopeClosureBlock = scopeCall.getLastChild().getLastChild();\n        scopeClosureBlock.detachFromParent();\n        expressionWithScopeCall.getParent().replaceChild(\n            expressionWithScopeCall,\n            scopeClosureBlock);\n        NodeUtil.tryMergeBlock(scopeClosureBlock);\n      }\n\n      if (traversal.getAliasUsages().size() > 0 ||\n          traversal.getAliasDefinitionsInOrder().size() > 0 ||\n          traversal.getScopeCalls().size() > 0) {\n        compiler.reportCodeChange();\n      }\n    }\n  }\n\n  private abstract class AliasUsage {\n    final Var aliasVar;\n    final Node aliasReference;\n\n    AliasUsage(Var aliasVar, Node aliasReference) {\n      this.aliasVar = aliasVar;\n      this.aliasReference = aliasReference;\n    }\n\n    /** Checks to see if this references another alias. */\n    public boolean referencesOtherAlias() {\n      Node aliasDefinition = aliasVar.getInitialValue();\n      Node root = NodeUtil.getRootOfQualifiedName(aliasDefinition);\n      Var otherAliasVar = aliasVar.getScope().getOwnSlot(root.getString());\n      return otherAliasVar != null;\n    }\n\n    public abstract void applyAlias();\n  }\n\n  private class AliasedNode extends AliasUsage {\n    AliasedNode(Var aliasVar, Node aliasReference) {\n      super(aliasVar, aliasReference);\n    }\n\n    @Override\n    public void applyAlias() {\n      Node aliasDefinition = aliasVar.getInitialValue();\n      aliasReference.getParent().replaceChild(\n          aliasReference, aliasDefinition.cloneTree());\n    }\n  }\n\n  private class AliasedTypeNode extends AliasUsage {\n    AliasedTypeNode(Var aliasVar, Node aliasReference) {\n      super(aliasVar, aliasReference);\n    }\n\n    @Override\n    public void applyAlias() {\n      Node aliasDefinition = aliasVar.getInitialValue();\n      String aliasName = aliasVar.getName();\n      String typeName = aliasReference.getString();\n      String aliasExpanded =\n          Preconditions.checkNotNull(aliasDefinition.getQualifiedName());\n      Preconditions.checkState(typeName.startsWith(aliasName));\n      aliasReference.setString(typeName.replaceFirst(aliasName, aliasExpanded));\n    }\n  }\n\n\n  private class Traversal implements NodeTraversal.ScopedCallback {\n    // The job of this class is to collect these three data sets.\n\n    // The order of this list determines the order that aliases are applied.\n    private final List<Node> aliasDefinitionsInOrder = Lists.newArrayList();\n\n    private final List<Node> scopeCalls = Lists.newArrayList();\n\n    private final List<AliasUsage> aliasUsages = Lists.newArrayList();\n\n    // This map is temporary and cleared for each scope.\n    private final Map<String, Var> aliases = Maps.newHashMap();\n\n    // Suppose you create an alias.\n    // var x = goog.x;\n    // As a side-effect, this means you can shadow the namespace \'goog\'\n    // in inner scopes. When we inline the namespaces, we have to rename\n    // these shadows.\n    //\n    // Fortunately, we already have a name uniquifier that runs during tree\n    // normalization (before optimizations). We run it here on a limited\n    // set of variables, but only as a last resort (because this will screw\n    // up warning messages downstream).\n    private final Set<String> forbiddenLocals = Sets.newHashSet("$jscomp");\n    private boolean hasNamespaceShadows = false;\n\n    private boolean hasErrors = false;\n\n    private AliasTransformation transformation = null;\n\n    Collection<Node> getAliasDefinitionsInOrder() {\n      return aliasDefinitionsInOrder;\n    }\n\n    private List<AliasUsage> getAliasUsages() {\n      return aliasUsages;\n    }\n\n    List<Node> getScopeCalls() {\n      return scopeCalls;\n    }\n\n    boolean hasErrors() {\n      return hasErrors;\n    }\n\n    private boolean isCallToScopeMethod(Node n) {\n      return n.isCall() &&\n          SCOPING_METHOD_NAME.equals(n.getFirstChild().getQualifiedName());\n    }\n\n    @Override\n    public void enterScope(NodeTraversal t) {\n      Node n = t.getCurrentNode().getParent();\n      if (n != null && isCallToScopeMethod(n)) {\n        transformation = transformationHandler.logAliasTransformation(\n            n.getSourceFileName(), getSourceRegion(n));\n        findAliases(t);\n      }\n    }\n\n    @Override\n    public void exitScope(NodeTraversal t) {\n      if (t.getScopeDepth() > 2) {\n        findNamespaceShadows(t);\n      }\n\n      if (t.getScopeDepth() == 2) {\n        renameNamespaceShadows(t);\n        aliases.clear();\n        forbiddenLocals.clear();\n        transformation = null;\n        hasNamespaceShadows = false;\n      }\n    }\n\n    @Override\n    public final boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {\n      if (n.isFunction() && t.inGlobalScope()) {\n        // Do not traverse in to functions except for goog.scope functions.\n        if (parent == null || !isCallToScopeMethod(parent)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    private SourcePosition<AliasTransformation> getSourceRegion(Node n) {\n      Node testNode = n;\n      Node next = null;\n      for (; next != null || testNode.isScript();) {\n        next = testNode.getNext();\n        testNode = testNode.getParent();\n      }\n\n      int endLine = next == null ? Integer.MAX_VALUE : next.getLineno();\n      int endChar = next == null ? Integer.MAX_VALUE : next.getCharno();\n      SourcePosition<AliasTransformation> pos =\n          new SourcePosition<AliasTransformation>() {};\n      pos.setPositionInformation(\n          n.getLineno(), n.getCharno(), endLine, endChar);\n      return pos;\n    }\n\n    private void report(NodeTraversal t, Node n, DiagnosticType error,\n        String... arguments) {\n      compiler.report(t.makeError(n, error, arguments));\n      hasErrors = true;\n    }\n\n    private void findAliases(NodeTraversal t) {\n      Scope scope = t.getScope();\n      for (Var v : scope.getVarIterable()) {\n        Node n = v.getNode();\n        Node parent = n.getParent();\n        boolean isVar = parent.isVar();\n        if (isVar && n.getFirstChild() != null && n.getFirstChild().isQualifiedName()) {\n          recordAlias(v);\n        } else if (v.isBleedingFunction()) {\n          // Bleeding functions already get a BAD_PARAMETERS error, so just\n          // do nothing.\n        } else if (parent.getType() == Token.LP) {\n          // Parameters of the scope function also get a BAD_PARAMETERS\n          // error.\n        } else if (isVar) {\n          Node grandparent = parent.getParent();\n          Node value = n.hasChildren() ?\n              v.getInitialValue().detachFromParent() :\n              null;\n          Node varNode = parent;\n\n          String name = n.getString();\n          int nameCount = scopedAliasNames.count(name);\n          scopedAliasNames.add(name);\n          String globalName =\n              "$jscomp.scope." + name + (nameCount == 0 ? "" : ("$" + nameCount));\n\n          compiler.ensureLibraryInjected("base");\n\n          // First, we need to free up the function expression (EXPR)\n          // to be used in another expression.\n            // Replace "function NAME() { ... }" with "var NAME;".\n\n            // We can\'t keep the local name on the function expression,\n            // because IE is buggy and will leak the name into the global\n            // scope. This is covered in more detail here:\n            // http://wiki.ecmascript.org/lib/exe/fetch.php?id=resources:resources&cache=cache&media=resources:jscriptdeviationsfromes3.pdf\n            //\n            // This will only cause problems if this is a hoisted, recursive\n            // function, and the programmer is using the hoisting.\n\n              // If this is a VAR, we can just detach the expression and\n              // the tree will still be valid.\n\n          // Add $jscomp.scope.name = EXPR;\n          // Make sure we copy over all the jsdoc and debug info.', 'aftercode': '            Node newDecl = NodeUtil.newQualifiedNameNodeDeclaration(\n                compiler.getCodingConvention(),\n                globalName,\n                value,\n                v.getJSDocInfo())\n                .useSourceInfoIfMissingFromForTree(n);\n            NodeUtil.setDebugInformation(\n                newDecl.getFirstChild().getFirstChild(), n, name);\n\n              grandparent.addChildBefore(newDecl, varNode);\n          }\n\n          // Rewrite "var name = EXPR;" to "var name = $jscomp.scope.name;"\n          v.getNameNode().addChildToFront(\n              NodeUtil.newQualifiedNameNode(\n                  compiler.getCodingConvention(), globalName, n, name));\n\n          recordAlias(v);\n        } else {\n          // Do not other kinds of local symbols, like catch params.\n          report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());\n        }\n      }\n    }\n\n    private void recordAlias(Var aliasVar) {\n      String name = aliasVar.getName();\n      aliases.put(name, aliasVar);\n\n      String qualifiedName =\n        aliasVar.getInitialValue().getQualifiedName();\n      transformation.addAlias(name, qualifiedName);\n\n      int rootIndex = qualifiedName.indexOf(".");\n      if (rootIndex != -1) {\n        String qNameRoot = qualifiedName.substring(0, rootIndex);\n        if (!aliases.containsKey(qNameRoot)) {\n          forbiddenLocals.add(qNameRoot);\n        }\n      }\n    }\n\n    /** Find out if there are any local shadows of namespaces. */\n    private void findNamespaceShadows(NodeTraversal t) {\n      if (hasNamespaceShadows) {\n        return;\n      }\n\n      Scope scope = t.getScope();\n      for (Var v : scope.getVarIterable()) {\n        if (forbiddenLocals.contains(v.getName())) {\n          hasNamespaceShadows = true;\n          return;\n        }\n      }\n    }\n\n    /**\n     * Rename any local shadows of namespaces.\n     * This should be a very rare occurrence, so only do this traversal\n     * if we know that we need it.\n     */\n    private void renameNamespaceShadows(NodeTraversal t) {\n      if (hasNamespaceShadows) {\n        MakeDeclaredNamesUnique.Renamer renamer =\n            new MakeDeclaredNamesUnique.WhitelistedRenamer(\n                new MakeDeclaredNamesUnique.ContextualRenamer(),\n                forbiddenLocals);\n        for (String s : forbiddenLocals) {\n          renamer.addDeclaredName(s);\n        }\n        MakeDeclaredNamesUnique uniquifier =\n            new MakeDeclaredNamesUnique(renamer);\n        NodeTraversal.traverse(compiler, t.getScopeRoot(), uniquifier);\n      }\n    }\n\n    private void validateScopeCall(NodeTraversal t, Node n, Node parent) {\n      if (preprocessorSymbolTable != null) {\n        preprocessorSymbolTable.addReference(n.getFirstChild());\n      }\n      if (!parent.isExprResult()) {\n        report(t, n, GOOG_SCOPE_USED_IMPROPERLY);\n      }\n      if (n.getChildCount() != 2) {\n        // The goog.scope call should have exactly 1 parameter.  The first\n        // child is the "goog.scope" and the second should be the parameter.\n        report(t, n, GOOG_SCOPE_HAS_BAD_PARAMETERS);\n      } else {\n        Node anonymousFnNode = n.getChildAtIndex(1);\n        if (!anonymousFnNode.isFunction() ||\n            NodeUtil.getFunctionName(anonymousFnNode) != null ||\n            NodeUtil.getFunctionParameters(anonymousFnNode).hasChildren()) {\n          report(t, anonymousFnNode, GOOG_SCOPE_HAS_BAD_PARAMETERS);\n        } else {\n          scopeCalls.add(n);\n        }\n      }\n    }\n\n    @Override\n    public void visit(NodeTraversal t, Node n, Node parent) {\n      if (isCallToScopeMethod(n)) {\n        validateScopeCall(t, n, n.getParent());\n      }\n\n      if (t.getScopeDepth() < 2) {\n        return;\n      }\n\n      int type = n.getType();\n      Var aliasVar = null;\n      if (type == Token.NAME) {\n        String name = n.getString();\n        Var lexicalVar = t.getScope().getVar(n.getString());\n        if (lexicalVar != null && lexicalVar == aliases.get(name)) {\n          aliasVar = lexicalVar;\n        }\n      }\n\n      // Validate the top-level of the goog.scope block.\n      if (t.getScopeDepth() == 2) {\n        if (aliasVar != null && NodeUtil.isLValue(n)) {\n          if (aliasVar.getNode() == n) {\n            aliasDefinitionsInOrder.add(n);\n\n            // Return early, to ensure that we don\'t record a definition\n            // twice.\n            return;\n          } else {\n            report(t, n, GOOG_SCOPE_ALIAS_REDEFINED, n.getString());\n          }\n        }\n\n        if (type == Token.RETURN) {\n          report(t, n, GOOG_SCOPE_USES_RETURN);\n        } else if (type == Token.THIS) {\n          report(t, n, GOOG_SCOPE_REFERENCES_THIS);\n        } else if (type == Token.THROW) {\n          report(t, n, GOOG_SCOPE_USES_THROW);\n        }\n      }\n\n      // Validate all descendent scopes of the goog.scope block.\n      if (t.getScopeDepth() >= 2) {\n        // Check if this name points to an alias.\n        if (aliasVar != null) {\n          // Note, to support the transitive case, it\'s important we don\'t\n          // clone aliasedNode here.  For example,\n          // var g = goog; var d = g.dom; d.createElement(\'DIV\');\n          // The node in aliasedNode (which is "g") will be replaced in the\n          // changes pass above with "goog".  If we cloned here, we\'d end up\n          // with <code>g.dom.createElement(\'DIV\')</code>.\n          aliasUsages.add(new AliasedNode(aliasVar, n));\n        }\n\n        JSDocInfo info = n.getJSDocInfo();\n        if (info != null) {\n          for (Node node : info.getTypeNodes()) {\n            fixTypeNode(node);\n          }\n        }\n\n        // TODO(robbyw): Error for goog.scope not at root.\n      }\n    }\n\n    private void fixTypeNode(Node typeNode) {\n      if (typeNode.isString()) {\n        String name = typeNode.getString();\n        int endIndex = name.indexOf(\'.\');\n        if (endIndex == -1) {\n          endIndex = name.length();\n        }\n        String baseName = name.substring(0, endIndex);\n        Var aliasVar = aliases.get(baseName);\n        if (aliasVar != null) {\n          aliasUsages.add(new AliasedTypeNode(aliasVar, typeNode));\n        }\n      }\n\n      for (Node child = typeNode.getFirstChild(); child != null;\n           child = child.getNext()) {\n        fixTypeNode(child);\n      }\n    }\n  }\n}', 'tree': 'ForStatement body BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member loc2 ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member isQualifiedName_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ', 'prob': [0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'mode': 0, 'line': 398, 'isa': False, 'fl_score': 1}, {'bugid': 'Closure-110', 'treeroot': <Searchnode.Node object at 0x7fbdc0e803d0>, 'troot': <Searchnode.Node object at 0x7fbdc5eef410>, 'oldcode': '              grandparent.addChildBefore(newDecl, varNode);', 'filepath': 'buggy/Closure-110/src/com/google/javascript/jscomp/ScopedAliases.java', 'subroot': <Searchnode.Node object at 0x7fbdbb64ba10>, 'vardic': {'findAliases_ter': 'meth0', 'n_ter': 'loc0', 'parent_ter': 'loc1', 'isVar_ter': 'loc2', 'grandparent_ter': 'loc3', 'value_ter': 'loc4', 'varNode_ter': 'loc5', 'name_ter': 'loc6', 'nameCount_ter': 'loc7', 'globalName_ter': 'loc8', 'newDecl_ter': 'loc9'}, 'typedic': {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}, 'idss': 'Closure-110', 'classname': 'com.google.javascript.jscomp.ScopedAliases', 'precode': '/*\n * Copyright 2010 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.javascript.jscomp;\n\nimport com.google.common.base.Preconditions;\nimport com.google.common.collect.HashMultiset;\nimport com.google.common.collect.Lists;\nimport com.google.common.collect.Maps;\nimport com.google.common.collect.Multiset;\nimport com.google.common.collect.Sets;\nimport com.google.javascript.jscomp.CompilerOptions.AliasTransformation;\nimport com.google.javascript.jscomp.CompilerOptions.AliasTransformationHandler;\nimport com.google.javascript.jscomp.Scope.Var;\nimport com.google.javascript.rhino.IR;\nimport com.google.javascript.rhino.JSDocInfo;\nimport com.google.javascript.rhino.Node;\nimport com.google.javascript.rhino.SourcePosition;\nimport com.google.javascript.rhino.Token;\n\nimport java.util.Collection;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\n\nimport javax.annotation.Nullable;\n\n/**\n * Process aliases in goog.scope blocks.\n *\n * goog.scope(function() {\n *   var dom = goog.dom;\n *   var DIV = dom.TagName.DIV;\n *\n *   dom.createElement(DIV);\n * });\n *\n * should become\n *\n * goog.dom.createElement(goog.dom.TagName.DIV);\n *\n * The advantage of using goog.scope is that the compiler will *guarantee*\n * the anonymous function will be inlined, even if it can\'t prove\n * that it\'s semantically correct to do so. For example, consider this case:\n *\n * goog.scope(function() {\n *   goog.getBar = function () { return alias; };\n *   ...\n *   var alias = foo.bar;\n * })\n *\n * In theory, the compiler can\'t inline \'alias\' unless it can prove that\n * goog.getBar is called only after \'alias\' is defined.\n *\n * In practice, the compiler will inline \'alias\' anyway, at the risk of\n * \'fixing\' bad code.\n *\n * @author robbyw@google.com (Robby Walker)\n */\nclass ScopedAliases implements HotSwapCompilerPass {\n  /** Name used to denote an scoped function block used for aliasing. */\n  static final String SCOPING_METHOD_NAME = "goog.scope";\n\n  private final AbstractCompiler compiler;\n  private final PreprocessorSymbolTable preprocessorSymbolTable;\n  private final AliasTransformationHandler transformationHandler;\n\n  // Errors\n  static final DiagnosticType GOOG_SCOPE_USED_IMPROPERLY = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_USED_IMPROPERLY",\n      "The call to goog.scope must be alone in a single statement.");\n\n  static final DiagnosticType GOOG_SCOPE_HAS_BAD_PARAMETERS =\n      DiagnosticType.error(\n          "JSC_GOOG_SCOPE_HAS_BAD_PARAMETERS",\n          "The call to goog.scope must take only a single parameter.  It must" +\n              " be an anonymous function that itself takes no parameters.");\n\n  static final DiagnosticType GOOG_SCOPE_REFERENCES_THIS = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_REFERENCES_THIS",\n      "The body of a goog.scope function cannot reference \'this\'.");\n\n  static final DiagnosticType GOOG_SCOPE_USES_RETURN = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_USES_RETURN",\n      "The body of a goog.scope function cannot use \'return\'.");\n\n  static final DiagnosticType GOOG_SCOPE_USES_THROW = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_USES_THROW",\n      "The body of a goog.scope function cannot use \'throw\'.");\n\n  static final DiagnosticType GOOG_SCOPE_ALIAS_REDEFINED = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_ALIAS_REDEFINED",\n      "The alias {0} is assigned a value more than once.");\n\n  static final DiagnosticType GOOG_SCOPE_ALIAS_CYCLE = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_ALIAS_CYCLE",\n      "The aliases {0} has a cycle.");\n\n  static final DiagnosticType GOOG_SCOPE_NON_ALIAS_LOCAL = DiagnosticType.error(\n      "JSC_GOOG_SCOPE_NON_ALIAS_LOCAL",\n      "The local variable {0} is in a goog.scope and is not an alias.");\n\n  private Multiset<String> scopedAliasNames = HashMultiset.create();\n\n  ScopedAliases(AbstractCompiler compiler,\n      @Nullable PreprocessorSymbolTable preprocessorSymbolTable,\n      AliasTransformationHandler transformationHandler) {\n    this.compiler = compiler;\n    this.preprocessorSymbolTable = preprocessorSymbolTable;\n    this.transformationHandler = transformationHandler;\n  }\n\n  @Override\n  public void process(Node externs, Node root) {\n    hotSwapScript(root, null);\n  }\n\n  @Override\n  public void hotSwapScript(Node root, Node originalRoot) {\n    Traversal traversal = new Traversal();\n    NodeTraversal.traverse(compiler, root, traversal);\n\n    if (!traversal.hasErrors()) {\n\n      // Apply the aliases.\n      List<AliasUsage> aliasWorkQueue =\n          Lists.newArrayList(traversal.getAliasUsages());\n      while (!aliasWorkQueue.isEmpty()) {\n        List<AliasUsage> newQueue = Lists.newArrayList();\n        for (AliasUsage aliasUsage : aliasWorkQueue) {\n          if (aliasUsage.referencesOtherAlias()) {\n            newQueue.add(aliasUsage);\n          } else {\n            aliasUsage.applyAlias();\n          }\n        }\n\n        // Prevent an infinite loop.\n        if (newQueue.size() == aliasWorkQueue.size()) {\n          Var cycleVar = newQueue.get(0).aliasVar;\n          compiler.report(JSError.make(\n              cycleVar.getNode(), GOOG_SCOPE_ALIAS_CYCLE, cycleVar.getName()));\n          break;\n        } else {\n          aliasWorkQueue = newQueue;\n        }\n      }\n\n      // Remove the alias definitions.\n      for (Node aliasDefinition : traversal.getAliasDefinitionsInOrder()) {\n        if (aliasDefinition.getParent().isVar() &&\n            aliasDefinition.getParent().hasOneChild()) {\n          aliasDefinition.getParent().detachFromParent();\n        } else {\n          aliasDefinition.detachFromParent();\n        }\n      }\n\n      // Collapse the scopes.\n      for (Node scopeCall : traversal.getScopeCalls()) {\n        Node expressionWithScopeCall = scopeCall.getParent();\n        Node scopeClosureBlock = scopeCall.getLastChild().getLastChild();\n        scopeClosureBlock.detachFromParent();\n        expressionWithScopeCall.getParent().replaceChild(\n            expressionWithScopeCall,\n            scopeClosureBlock);\n        NodeUtil.tryMergeBlock(scopeClosureBlock);\n      }\n\n      if (traversal.getAliasUsages().size() > 0 ||\n          traversal.getAliasDefinitionsInOrder().size() > 0 ||\n          traversal.getScopeCalls().size() > 0) {\n        compiler.reportCodeChange();\n      }\n    }\n  }\n\n  private abstract class AliasUsage {\n    final Var aliasVar;\n    final Node aliasReference;\n\n    AliasUsage(Var aliasVar, Node aliasReference) {\n      this.aliasVar = aliasVar;\n      this.aliasReference = aliasReference;\n    }\n\n    /** Checks to see if this references another alias. */\n    public boolean referencesOtherAlias() {\n      Node aliasDefinition = aliasVar.getInitialValue();\n      Node root = NodeUtil.getRootOfQualifiedName(aliasDefinition);\n      Var otherAliasVar = aliasVar.getScope().getOwnSlot(root.getString());\n      return otherAliasVar != null;\n    }\n\n    public abstract void applyAlias();\n  }\n\n  private class AliasedNode extends AliasUsage {\n    AliasedNode(Var aliasVar, Node aliasReference) {\n      super(aliasVar, aliasReference);\n    }\n\n    @Override\n    public void applyAlias() {\n      Node aliasDefinition = aliasVar.getInitialValue();\n      aliasReference.getParent().replaceChild(\n          aliasReference, aliasDefinition.cloneTree());\n    }\n  }\n\n  private class AliasedTypeNode extends AliasUsage {\n    AliasedTypeNode(Var aliasVar, Node aliasReference) {\n      super(aliasVar, aliasReference);\n    }\n\n    @Override\n    public void applyAlias() {\n      Node aliasDefinition = aliasVar.getInitialValue();\n      String aliasName = aliasVar.getName();\n      String typeName = aliasReference.getString();\n      String aliasExpanded =\n          Preconditions.checkNotNull(aliasDefinition.getQualifiedName());\n      Preconditions.checkState(typeName.startsWith(aliasName));\n      aliasReference.setString(typeName.replaceFirst(aliasName, aliasExpanded));\n    }\n  }\n\n\n  private class Traversal implements NodeTraversal.ScopedCallback {\n    // The job of this class is to collect these three data sets.\n\n    // The order of this list determines the order that aliases are applied.\n    private final List<Node> aliasDefinitionsInOrder = Lists.newArrayList();\n\n    private final List<Node> scopeCalls = Lists.newArrayList();\n\n    private final List<AliasUsage> aliasUsages = Lists.newArrayList();\n\n    // This map is temporary and cleared for each scope.\n    private final Map<String, Var> aliases = Maps.newHashMap();\n\n    // Suppose you create an alias.\n    // var x = goog.x;\n    // As a side-effect, this means you can shadow the namespace \'goog\'\n    // in inner scopes. When we inline the namespaces, we have to rename\n    // these shadows.\n    //\n    // Fortunately, we already have a name uniquifier that runs during tree\n    // normalization (before optimizations). We run it here on a limited\n    // set of variables, but only as a last resort (because this will screw\n    // up warning messages downstream).\n    private final Set<String> forbiddenLocals = Sets.newHashSet("$jscomp");\n    private boolean hasNamespaceShadows = false;\n\n    private boolean hasErrors = false;\n\n    private AliasTransformation transformation = null;\n\n    Collection<Node> getAliasDefinitionsInOrder() {\n      return aliasDefinitionsInOrder;\n    }\n\n    private List<AliasUsage> getAliasUsages() {\n      return aliasUsages;\n    }\n\n    List<Node> getScopeCalls() {\n      return scopeCalls;\n    }\n\n    boolean hasErrors() {\n      return hasErrors;\n    }\n\n    private boolean isCallToScopeMethod(Node n) {\n      return n.isCall() &&\n          SCOPING_METHOD_NAME.equals(n.getFirstChild().getQualifiedName());\n    }\n\n    @Override\n    public void enterScope(NodeTraversal t) {\n      Node n = t.getCurrentNode().getParent();\n      if (n != null && isCallToScopeMethod(n)) {\n        transformation = transformationHandler.logAliasTransformation(\n            n.getSourceFileName(), getSourceRegion(n));\n        findAliases(t);\n      }\n    }\n\n    @Override\n    public void exitScope(NodeTraversal t) {\n      if (t.getScopeDepth() > 2) {\n        findNamespaceShadows(t);\n      }\n\n      if (t.getScopeDepth() == 2) {\n        renameNamespaceShadows(t);\n        aliases.clear();\n        forbiddenLocals.clear();\n        transformation = null;\n        hasNamespaceShadows = false;\n      }\n    }\n\n    @Override\n    public final boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {\n      if (n.isFunction() && t.inGlobalScope()) {\n        // Do not traverse in to functions except for goog.scope functions.\n        if (parent == null || !isCallToScopeMethod(parent)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    private SourcePosition<AliasTransformation> getSourceRegion(Node n) {\n      Node testNode = n;\n      Node next = null;\n      for (; next != null || testNode.isScript();) {\n        next = testNode.getNext();\n        testNode = testNode.getParent();\n      }\n\n      int endLine = next == null ? Integer.MAX_VALUE : next.getLineno();\n      int endChar = next == null ? Integer.MAX_VALUE : next.getCharno();\n      SourcePosition<AliasTransformation> pos =\n          new SourcePosition<AliasTransformation>() {};\n      pos.setPositionInformation(\n          n.getLineno(), n.getCharno(), endLine, endChar);\n      return pos;\n    }\n\n    private void report(NodeTraversal t, Node n, DiagnosticType error,\n        String... arguments) {\n      compiler.report(t.makeError(n, error, arguments));\n      hasErrors = true;\n    }\n\n    private void findAliases(NodeTraversal t) {\n      Scope scope = t.getScope();\n      for (Var v : scope.getVarIterable()) {\n        Node n = v.getNode();\n        Node parent = n.getParent();\n        boolean isVar = parent.isVar();\n        if (isVar && n.getFirstChild() != null && n.getFirstChild().isQualifiedName()) {\n          recordAlias(v);\n        } else if (v.isBleedingFunction()) {\n          // Bleeding functions already get a BAD_PARAMETERS error, so just\n          // do nothing.\n        } else if (parent.getType() == Token.LP) {\n          // Parameters of the scope function also get a BAD_PARAMETERS\n          // error.\n        } else if (isVar) {\n          Node grandparent = parent.getParent();\n          Node value = n.hasChildren() ?\n              v.getInitialValue().detachFromParent() :\n              null;\n          Node varNode = parent;\n\n          String name = n.getString();\n          int nameCount = scopedAliasNames.count(name);\n          scopedAliasNames.add(name);\n          String globalName =\n              "$jscomp.scope." + name + (nameCount == 0 ? "" : ("$" + nameCount));\n\n          compiler.ensureLibraryInjected("base");\n\n          // First, we need to free up the function expression (EXPR)\n          // to be used in another expression.\n            // Replace "function NAME() { ... }" with "var NAME;".\n\n            // We can\'t keep the local name on the function expression,\n            // because IE is buggy and will leak the name into the global\n            // scope. This is covered in more detail here:\n            // http://wiki.ecmascript.org/lib/exe/fetch.php?id=resources:resources&cache=cache&media=resources:jscriptdeviationsfromes3.pdf\n            //\n            // This will only cause problems if this is a hoisted, recursive\n            // function, and the programmer is using the hoisting.\n\n              // If this is a VAR, we can just detach the expression and\n              // the tree will still be valid.\n\n          // Add $jscomp.scope.name = EXPR;\n          // Make sure we copy over all the jsdoc and debug info.\n          if (value != null || v.getJSDocInfo() != null) {\n            Node newDecl = NodeUtil.newQualifiedNameNodeDeclaration(\n                compiler.getCodingConvention(),\n                globalName,\n                value,\n                v.getJSDocInfo())\n                .useSourceInfoIfMissingFromForTree(n);\n            NodeUtil.setDebugInformation(\n                newDecl.getFirstChild().getFirstChild(), n, name);\n', 'aftercode': '          }\n\n          // Rewrite "var name = EXPR;" to "var name = $jscomp.scope.name;"\n          v.getNameNode().addChildToFront(\n              NodeUtil.newQualifiedNameNode(\n                  compiler.getCodingConvention(), globalName, n, name));\n\n          recordAlias(v);\n        } else {\n          // Do not other kinds of local symbols, like catch params.\n          report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());\n        }\n      }\n    }\n\n    private void recordAlias(Var aliasVar) {\n      String name = aliasVar.getName();\n      aliases.put(name, aliasVar);\n\n      String qualifiedName =\n        aliasVar.getInitialValue().getQualifiedName();\n      transformation.addAlias(name, qualifiedName);\n\n      int rootIndex = qualifiedName.indexOf(".");\n      if (rootIndex != -1) {\n        String qNameRoot = qualifiedName.substring(0, rootIndex);\n        if (!aliases.containsKey(qNameRoot)) {\n          forbiddenLocals.add(qNameRoot);\n        }\n      }\n    }\n\n    /** Find out if there are any local shadows of namespaces. */\n    private void findNamespaceShadows(NodeTraversal t) {\n      if (hasNamespaceShadows) {\n        return;\n      }\n\n      Scope scope = t.getScope();\n      for (Var v : scope.getVarIterable()) {\n        if (forbiddenLocals.contains(v.getName())) {\n          hasNamespaceShadows = true;\n          return;\n        }\n      }\n    }\n\n    /**\n     * Rename any local shadows of namespaces.\n     * This should be a very rare occurrence, so only do this traversal\n     * if we know that we need it.\n     */\n    private void renameNamespaceShadows(NodeTraversal t) {\n      if (hasNamespaceShadows) {\n        MakeDeclaredNamesUnique.Renamer renamer =\n            new MakeDeclaredNamesUnique.WhitelistedRenamer(\n                new MakeDeclaredNamesUnique.ContextualRenamer(),\n                forbiddenLocals);\n        for (String s : forbiddenLocals) {\n          renamer.addDeclaredName(s);\n        }\n        MakeDeclaredNamesUnique uniquifier =\n            new MakeDeclaredNamesUnique(renamer);\n        NodeTraversal.traverse(compiler, t.getScopeRoot(), uniquifier);\n      }\n    }\n\n    private void validateScopeCall(NodeTraversal t, Node n, Node parent) {\n      if (preprocessorSymbolTable != null) {\n        preprocessorSymbolTable.addReference(n.getFirstChild());\n      }\n      if (!parent.isExprResult()) {\n        report(t, n, GOOG_SCOPE_USED_IMPROPERLY);\n      }\n      if (n.getChildCount() != 2) {\n        // The goog.scope call should have exactly 1 parameter.  The first\n        // child is the "goog.scope" and the second should be the parameter.\n        report(t, n, GOOG_SCOPE_HAS_BAD_PARAMETERS);\n      } else {\n        Node anonymousFnNode = n.getChildAtIndex(1);\n        if (!anonymousFnNode.isFunction() ||\n            NodeUtil.getFunctionName(anonymousFnNode) != null ||\n            NodeUtil.getFunctionParameters(anonymousFnNode).hasChildren()) {\n          report(t, anonymousFnNode, GOOG_SCOPE_HAS_BAD_PARAMETERS);\n        } else {\n          scopeCalls.add(n);\n        }\n      }\n    }\n\n    @Override\n    public void visit(NodeTraversal t, Node n, Node parent) {\n      if (isCallToScopeMethod(n)) {\n        validateScopeCall(t, n, n.getParent());\n      }\n\n      if (t.getScopeDepth() < 2) {\n        return;\n      }\n\n      int type = n.getType();\n      Var aliasVar = null;\n      if (type == Token.NAME) {\n        String name = n.getString();\n        Var lexicalVar = t.getScope().getVar(n.getString());\n        if (lexicalVar != null && lexicalVar == aliases.get(name)) {\n          aliasVar = lexicalVar;\n        }\n      }\n\n      // Validate the top-level of the goog.scope block.\n      if (t.getScopeDepth() == 2) {\n        if (aliasVar != null && NodeUtil.isLValue(n)) {\n          if (aliasVar.getNode() == n) {\n            aliasDefinitionsInOrder.add(n);\n\n            // Return early, to ensure that we don\'t record a definition\n            // twice.\n            return;\n          } else {\n            report(t, n, GOOG_SCOPE_ALIAS_REDEFINED, n.getString());\n          }\n        }\n\n        if (type == Token.RETURN) {\n          report(t, n, GOOG_SCOPE_USES_RETURN);\n        } else if (type == Token.THIS) {\n          report(t, n, GOOG_SCOPE_REFERENCES_THIS);\n        } else if (type == Token.THROW) {\n          report(t, n, GOOG_SCOPE_USES_THROW);\n        }\n      }\n\n      // Validate all descendent scopes of the goog.scope block.\n      if (t.getScopeDepth() >= 2) {\n        // Check if this name points to an alias.\n        if (aliasVar != null) {\n          // Note, to support the transitive case, it\'s important we don\'t\n          // clone aliasedNode here.  For example,\n          // var g = goog; var d = g.dom; d.createElement(\'DIV\');\n          // The node in aliasedNode (which is "g") will be replaced in the\n          // changes pass above with "goog".  If we cloned here, we\'d end up\n          // with <code>g.dom.createElement(\'DIV\')</code>.\n          aliasUsages.add(new AliasedNode(aliasVar, n));\n        }\n\n        JSDocInfo info = n.getJSDocInfo();\n        if (info != null) {\n          for (Node node : info.getTypeNodes()) {\n            fixTypeNode(node);\n          }\n        }\n\n        // TODO(robbyw): Error for goog.scope not at root.\n      }\n    }\n\n    private void fixTypeNode(Node typeNode) {\n      if (typeNode.isString()) {\n        String name = typeNode.getString();\n        int endIndex = name.indexOf(\'.\');\n        if (endIndex == -1) {\n          endIndex = name.length();\n        }\n        String baseName = name.substring(0, endIndex);\n        Var aliasVar = aliases.get(baseName);\n        if (aliasVar != null) {\n          aliasUsages.add(new AliasedTypeNode(aliasVar, typeNode));\n        }\n      }\n\n      for (Node child = typeNode.getFirstChild(); child != null;\n           child = child.getNext()) {\n        fixTypeNode(child);\n      }\n    }\n  }\n}', 'tree': 'ForStatement body BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member loc2 ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member isQualifiedName_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ', 'prob': [0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'mode': 0, 'line': 408, 'isa': False, 'fl_score': 1}]
before@0 batch0 x: 0: root ^  ; []
after@0 batch0 x: 0: root ^  ; []
before@0 batch1 x: 0: root ^  ; []
after@0 batch1 x: 0: root ^  ; []
before@0 batch2 x: 0: root ^  ; []
after@0 batch2 x: 0: root ^  ; []
before@0 batch3 x: 0: root ^  ; []
after@0 batch3 x: 0: root ^  ; []
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root member-member getNode_ter ^ ^  ^ ^ ; ['copy-member']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root qualifier-qualifier v_ter ^ ^  ^ ^ ; ['copy-qualifier']
copynode 0:  root parameters ^ ^ ; ['root -> parameters']
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root MemberReference-MemberReference member loc2 ^ ^ ^  ^ ^ ; ['copy-MemberReference']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root parameters ^ ^ ; ['root -> parameters']
copynode 0:  root LocalVariableDeclaration ^ ^ ; ['root -> LocalVariableDeclaration']
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root member-member getJSDocInfo_ter ^ ^  ^ ^ ; ['copy-member']
copynode 0:  root operator-operator !=_ter ^ ^  ^ ^ ; ['copy-operator']
copynode 0:  root operator-operator !=_ter ^ ^  ^ ^ ; ['copy-operator']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root operator-operator ||_ter ^ ^  ^ ^ ; ['copy-operator']
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root parameters ^ ^ ; ['root -> parameters']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root LocalVariableDeclaration ^ ^ ; ['root -> LocalVariableDeclaration']
copynode 0:  root member-member addChildBefore_ter ^ ^  ^ ^ ; ['copy-member']
before@1 batch0 x: -12.391046524047852: root parameters ^ ^  ; ['root -> parameters']
after@1 batch0 x: -12.391046524047852: root parameters ^ ^  ; ['root -> parameters']
before@1 batch1 x: -14.534092903137207: root LocalVariableDeclaration ^ ^  ; ['root -> LocalVariableDeclaration']
after@1 batch1 x: -14.534092903137207: root LocalVariableDeclaration ^ ^  ; ['root -> LocalVariableDeclaration']
before@1 batch2 x: -12.056928634643555: root operator-operator ||_ter ^ ^  ^ ^  ; ['copy-operator']
after@1 batch2 x: -12.056928634643555: root operator-operator ||_ter ^ ^  ^ ^  ; ['copy-operator']
before@1 batch3 x: -12.404648780822754: root member-member addChildBefore_ter ^ ^  ^ ^  ; ['copy-member']
after@1 batch3 x: -12.404648780822754: root member-member addChildBefore_ter ^ ^  ^ ^  ; ['copy-member']
copynode -0.17353583872318268:  root modified ^ member-member getNode_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -1.838586449623108:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -0.17353583872318268:  root modified ^ qualifier-qualifier v_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-qualifier']
copynode -0.17353583872318268:  root modified ^ LocalVariableDeclaration ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration']
copynode -1.838586449623108:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -1.838586449623108:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -0.17353583872318268:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -0.17353583872318268:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -1.838586449623108:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -1.838586449623108:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -1.838586449623108:  root add ^ WhileStatement ^ ^ ; ['root -> add', 'root -> WhileStatement']
copynode -1.838586449623108:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -1.838586449623108:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -0.17353583872318268:  root modified ^ control ^ ^ ; ['root -> modified', 'root -> control']
copynode -0.17353583872318268:  root modified ^ parameters ^ ^ ; ['root -> modified', 'root -> parameters']
copynode -1.838586449623108:  root add ^ parameters ^ ^ ; ['root -> add', 'root -> parameters']
copynode -1.838586449623108:  root add ^ member-member getNode_ter ^ ^  ^ ^ ; ['root -> add', 'copy-member']
copynode -0.17353583872318268:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -0.17353583872318268:  root modified ^ ReturnStatement ^ ^ ; ['root -> modified', 'root -> ReturnStatement']
copynode -10.30596923828125:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -10.328043937683105:  root member-member getNode_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown']
copynode -0.17353583872318268:  root modified ^ unknown ^ ^ ; ['root -> modified', 'start -> unknown']
copynode -11.241827011108398:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -11.150108337402344:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -11.815633773803711:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -11.993606567382812:  root qualifier-qualifier v_ter ^ ^  unknown ^ ^ ^ ; ['copy-qualifier', 'start -> unknown']
copynode -10.30596923828125:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -12.391046524047852:  root parameters FormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter']
copynode -10.328043937683105:  root member-member getNode_ter ^ ^  meth0 ^ ^ ^ ; ['copy-member', 'member -> meth0']
copynode -10.328043937683105:  root member-member getNode_ter ^ ^  isBleedingFunction_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -10.328043937683105:  root member-member getNode_ter ^ ^  hasChildren_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -10.328043937683105:  root member-member getNode_ter ^ ^  getParent_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -10.328043937683105:  root member-member getNode_ter ^ ^  detachFromParent_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -10.328043937683105:  root member-member getNode_ter ^ ^  isQualifiedName_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.993606567382812:  root qualifier-qualifier v_ter ^ ^  loc0 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> loc0']
copynode -12.391046524047852:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End']
copynode -10.328043937683105:  root member-member getNode_ter ^ ^  getParent_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -10.328043937683105:  root member-member getNode_ter ^ ^  getString_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.993606567382812:  root qualifier-qualifier v_ter ^ ^  v_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -10.328043937683105:  root member-member getNode_ter ^ ^  getType_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.815633773803711:  root StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.993606567382812:  root qualifier-qualifier v_ter ^ ^  v_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -11.815633773803711:  root StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.815633773803711:  root StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.993606567382812:  root qualifier-qualifier v_ter ^ ^  v_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -11.993606567382812:  root qualifier-qualifier v_ter ^ ^  v_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -11.815633773803711:  root StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.815633773803711:  root StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.815633773803711:  root StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.993606567382812:  root qualifier-qualifier v_ter ^ ^  scopedAliasNames_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -11.993606567382812:  root qualifier-qualifier v_ter ^ ^  NodeUtil_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -11.993606567382812:  root qualifier-qualifier v_ter ^ ^  v_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -11.815633773803711:  root StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.815633773803711:  root StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.993606567382812:  root qualifier-qualifier v_ter ^ ^  v_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -12.391046524047852:  root parameters MemberReference ^ ^ ^ ; ['root -> parameters', 'parameters -> MemberReference']
copynode -12.391046524047852:  root parameters InferredFormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> InferredFormalParameter']
copynode -11.241827011108398:  root IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member isQualifiedName_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.241827011108398:  root IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.241827011108398:  root IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.241827011108398:  root IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.391046524047852:  root parameters loc2 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -12.391046524047852:  root parameters Cast ^ ^ ^ ; ['root -> parameters', 'parameters -> Cast']
copynode -12.391046524047852:  root parameters loc1 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -12.391046524047852:  root parameters loc4 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -12.391046524047852:  root parameters loc7 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -12.391046524047852:  root parameters loc8 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -10.30596923828125:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -11.241827011108398:  root IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -10.30596923828125:  root return_type loc2 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.815633773803711:  root StatementExpression unknown ^ ^ ^ ; ['root -> StatementExpression', 'start -> unknown']
copynode -10.30596923828125:  root return_type loc1 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.150108337402344:  root ReturnStatement loc1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.241827011108398:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -11.150108337402344:  root ReturnStatement loc7 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.150108337402344:  root ReturnStatement loc9 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -10.30596923828125:  root return_type loc7 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.30596923828125:  root return_type loc4 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.150108337402344:  root ReturnStatement loc2 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.150108337402344:  root ReturnStatement loc8 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.150108337402344:  root ReturnStatement loc3 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.150108337402344:  root ReturnStatement loc4 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.150108337402344:  root ReturnStatement loc5 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.150108337402344:  root ReturnStatement loc6 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.241827011108398:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -10.30596923828125:  root return_type loc5 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.30596923828125:  root return_type loc8 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.30596923828125:  root return_type loc3 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.241827011108398:  root IfStatement condition ^ then_statement ^ else_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement else_statement']
copynode -11.241827011108398:  root IfStatement loc2 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -0.43710967898368835:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -0.43710967898368835:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -1.0394295454025269:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -1.0394295454025269:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -1.0394295454025269:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -0.43710967898368835:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -1.0394295454025269:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -0.43710967898368835:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -1.0394295454025269:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter']
copynode -1.0394295454025269:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -1.0394295454025269:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -0.43710967898368835:  root modified ^ BreakStatement_ter ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter']
copynode -1.0394295454025269:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter']
copynode -1.0394295454025269:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -1.0394295454025269:  root add ^ WhileStatement ^ ^ ; ['root -> add', 'root -> WhileStatement']
copynode -0.43710967898368835:  root modified ^ WhileStatement ^ ^ ; ['root -> modified', 'root -> WhileStatement']
copynode -8.83324909210205:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -9.165894508361816:  root MemberReference-MemberReference member loc2 ^ ^ ^  member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member']
copynode -0.43710967898368835:  root modified ^ control ^ ^ ; ['root -> modified', 'root -> control']
copynode -0.43710967898368835:  root modified ^ ReturnStatement_ter ^ ^ ; ['root -> modified', 'root -> ReturnStatement_ter']
copynode -0.43710967898368835:  root modified ^ ContinueStatement_ter ^ ^ ; ['root -> modified', 'root -> ContinueStatement_ter']
copynode -9.791459083557129:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -0.43710967898368835:  root modified ^ LocalVariableDeclaration ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration']
copynode -11.17590618133545:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -11.1079740524292:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -9.165894508361816:  root MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -11.603987693786621:  root parameters FormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter']
copynode -9.791459083557129:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -9.165894508361816:  root MemberReference-MemberReference member loc2 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier member']
copynode -11.1079740524292:  root StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.603987693786621:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End']
copynode -11.1079740524292:  root StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.1079740524292:  root StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.1079740524292:  root StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.1079740524292:  root StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.1079740524292:  root StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.1079740524292:  root StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -9.165894508361816:  root MemberReference-MemberReference member loc2 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -11.1079740524292:  root StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -14.534092903137207:  root LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -9.165894508361816:  root MemberReference-MemberReference member loc2 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> selectors member']
copynode -11.603987693786621:  root parameters MemberReference ^ ^ ^ ; ['root -> parameters', 'parameters -> MemberReference']
copynode -9.165894508361816:  root MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -14.534092903137207:  root LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -14.534092903137207:  root LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -14.534092903137207:  root LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -14.534092903137207:  root LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -14.534092903137207:  root LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -14.534092903137207:  root LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -11.603987693786621:  root parameters InferredFormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> InferredFormalParameter']
copynode -14.534092903137207:  root LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -14.534092903137207:  root LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -14.534092903137207:  root LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.165894508361816:  root MemberReference-MemberReference member loc2 ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -9.165894508361816:  root MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -11.17590618133545:  root IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.17590618133545:  root IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.17590618133545:  root IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.603987693786621:  root parameters loc1 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -9.165894508361816:  root MemberReference-MemberReference member loc2 ^ ^ ^  postfix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators selectors member']
copynode -11.17590618133545:  root IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member isQualifiedName_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.603987693786621:  root parameters loc2 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -9.165894508361816:  root MemberReference-MemberReference member loc2 ^ ^ ^  postfix_operators ^ qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators qualifier member']
copynode -11.603987693786621:  root parameters loc0 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -11.603987693786621:  root parameters loc7 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -11.603987693786621:  root parameters loc8 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -11.603987693786621:  root parameters loc4 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -11.17590618133545:  root IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -8.83324909210205:  root ReturnStatement loc3 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -8.83324909210205:  root ReturnStatement loc2 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -8.83324909210205:  root ReturnStatement loc7 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -8.83324909210205:  root ReturnStatement loc1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -8.83324909210205:  root ReturnStatement loc4 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -8.83324909210205:  root ReturnStatement loc9 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -8.83324909210205:  root ReturnStatement loc5 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -8.83324909210205:  root ReturnStatement loc6 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -8.83324909210205:  root ReturnStatement loc8 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.1079740524292:  root StatementExpression unknown ^ ^ ^ ; ['root -> StatementExpression', 'start -> unknown']
copynode -9.791459083557129:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -11.17590618133545:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -9.791459083557129:  root return_type loc7 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.791459083557129:  root return_type loc8 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.791459083557129:  root return_type loc2 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.17590618133545:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -9.791459083557129:  root return_type loc5 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.791459083557129:  root return_type loc1 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.791459083557129:  root return_type loc4 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.791459083557129:  root return_type loc6 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.17590618133545:  root IfStatement condition ^ then_statement ^ else_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement else_statement']
copynode -11.17590618133545:  root IfStatement loc3 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -0.25930702686309814:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -1.4779101610183716:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -0.25930702686309814:  root modified ^ member-member getJSDocInfo_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -1.4779101610183716:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -0.25930702686309814:  root modified ^ operator-operator ||_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-operator']
copynode -0.25930702686309814:  root modified ^ operator-operator !=_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-operator']
copynode -0.25930702686309814:  root modified ^ operator-operator !=_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-operator']
copynode -0.25930702686309814:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.25930702686309814:  root modified ^ qualifier-qualifier v_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-qualifier']
copynode -1.4779101610183716:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -0.25930702686309814:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -1.4779101610183716:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter']
copynode -0.25930702686309814:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -1.4779101610183716:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -1.4779101610183716:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -0.25930702686309814:  root modified ^ Literal-Literal value null_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-Literal']
copynode -1.4779101610183716:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -1.4779101610183716:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter']
copynode -1.4779101610183716:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -1.4779101610183716:  root add ^ Statement_ter ^ ^ ; ['root -> add', 'root -> Statement_ter']
copynode -10.635668754577637:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -11.178433418273926:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -12.044726371765137:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -11.216179847717285:  root member-member getJSDocInfo_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown']
copynode -11.545653343200684:  root operator-operator !=_ter ^ ^  ==_ter ^ ^ ^ ; ['copy-operator', 'operator -> ==_ter']
copynode -12.056928634643555:  root operator-operator ||_ter ^ ^  &&_ter ^ ^ ^ ; ['copy-operator', 'operator -> &&_ter']
copynode -11.935284614562988:  root operator-operator !=_ter ^ ^  ==_ter ^ ^ ^ ; ['copy-operator', 'operator -> ==_ter']
copynode -12.056928634643555:  root operator-operator ||_ter ^ ^  ||_ter ^ ^ ^ ; ['copy-operator', 'operator -> ||_ter']
copynode -11.545653343200684:  root operator-operator !=_ter ^ ^  !=_ter ^ ^ ^ ; ['copy-operator', 'operator -> !=_ter']
copynode -11.178433418273926:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -11.216179847717285:  root member-member getJSDocInfo_ter ^ ^  getJSDocInfo_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.216179847717285:  root member-member getJSDocInfo_ter ^ ^  getCodingConvention_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.935284614562988:  root operator-operator !=_ter ^ ^  !=_ter ^ ^ ^ ; ['copy-operator', 'operator -> !=_ter']
copynode -11.216179847717285:  root member-member getJSDocInfo_ter ^ ^  getString_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.216179847717285:  root member-member getJSDocInfo_ter ^ ^  getCodingConvention_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.216179847717285:  root member-member getJSDocInfo_ter ^ ^  getFirstChild_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.216179847717285:  root member-member getJSDocInfo_ter ^ ^  getName_ter ^ ^ ^ ; ['copy-member', 'member -> getName_ter']
copynode -11.545653343200684:  root operator-operator !=_ter ^ ^  >_ter ^ ^ ^ ; ['copy-operator', 'operator -> >_ter']
copynode -11.545653343200684:  root operator-operator !=_ter ^ ^  &&_ter ^ ^ ^ ; ['copy-operator', 'operator -> &&_ter']
copynode -11.545653343200684:  root operator-operator !=_ter ^ ^  +_ter ^ ^ ^ ; ['copy-operator', 'operator -> +_ter']
copynode -11.545653343200684:  root operator-operator !=_ter ^ ^  >=_ter ^ ^ ^ ; ['copy-operator', 'operator -> >=_ter']
copynode -11.935284614562988:  root operator-operator !=_ter ^ ^  >_ter ^ ^ ^ ; ['copy-operator', 'operator -> >_ter']
copynode -11.545653343200684:  root operator-operator !=_ter ^ ^  ||_ter ^ ^ ^ ; ['copy-operator', 'operator -> ||_ter']
copynode -11.935284614562988:  root operator-operator !=_ter ^ ^  +_ter ^ ^ ^ ; ['copy-operator', 'operator -> +_ter']
copynode -11.216179847717285:  root member-member getJSDocInfo_ter ^ ^  meth0 ^ ^ ^ ; ['copy-member', 'member -> meth0']
copynode -11.545653343200684:  root operator-operator !=_ter ^ ^  <_ter ^ ^ ^ ; ['copy-operator', 'operator -> <_ter']
copynode -11.216179847717285:  root member-member getJSDocInfo_ter ^ ^  getFirstChild_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.935284614562988:  root operator-operator !=_ter ^ ^  >=_ter ^ ^ ^ ; ['copy-operator', 'operator -> >=_ter']
copynode -11.545653343200684:  root operator-operator !=_ter ^ ^  <=_ter ^ ^ ^ ; ['copy-operator', 'operator -> <=_ter']
copynode -11.935284614562988:  root operator-operator !=_ter ^ ^  &&_ter ^ ^ ^ ; ['copy-operator', 'operator -> &&_ter']
copynode -11.216179847717285:  root member-member getJSDocInfo_ter ^ ^  getJSDocInfo_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.935284614562988:  root operator-operator !=_ter ^ ^  <_ter ^ ^ ^ ; ['copy-operator', 'operator -> <_ter']
copynode -11.545653343200684:  root operator-operator !=_ter ^ ^  -_ter ^ ^ ^ ; ['copy-operator', 'operator -> -_ter']
copynode -11.935284614562988:  root operator-operator !=_ter ^ ^  <=_ter ^ ^ ^ ; ['copy-operator', 'operator -> <=_ter']
copynode -11.935284614562988:  root operator-operator !=_ter ^ ^  ||_ter ^ ^ ^ ; ['copy-operator', 'operator -> ||_ter']
copynode -11.935284614562988:  root operator-operator !=_ter ^ ^  -_ter ^ ^ ^ ; ['copy-operator', 'operator -> -_ter']
copynode -12.056928634643555:  root operator-operator ||_ter ^ ^  !=_ter ^ ^ ^ ; ['copy-operator', 'operator -> !=_ter']
copynode -12.056928634643555:  root operator-operator ||_ter ^ ^  ==_ter ^ ^ ^ ; ['copy-operator', 'operator -> ==_ter']
copynode -12.056928634643555:  root operator-operator ||_ter ^ ^  <_ter ^ ^ ^ ; ['copy-operator', 'operator -> <_ter']
copynode -12.056928634643555:  root operator-operator ||_ter ^ ^  +_ter ^ ^ ^ ; ['copy-operator', 'operator -> +_ter']
copynode -12.056928634643555:  root operator-operator ||_ter ^ ^  >_ter ^ ^ ^ ; ['copy-operator', 'operator -> >_ter']
copynode -12.056928634643555:  root operator-operator ||_ter ^ ^  |_ter ^ ^ ^ ; ['copy-operator', 'operator -> |_ter']
copynode -12.056928634643555:  root operator-operator ||_ter ^ ^  &_ter ^ ^ ^ ; ['copy-operator', 'operator -> &_ter']
copynode -12.056928634643555:  root operator-operator ||_ter ^ ^  instanceof_ter ^ ^ ^ ; ['copy-operator', 'operator -> instanceof_ter']
copynode -12.044726371765137:  root IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.044726371765137:  root IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.044726371765137:  root IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.044726371765137:  root IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member isQualifiedName_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.044726371765137:  root IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -10.635668754577637:  root ReturnStatement loc9 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -10.635668754577637:  root ReturnStatement loc7 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -10.635668754577637:  root ReturnStatement loc1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -10.635668754577637:  root ReturnStatement loc2 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -10.635668754577637:  root ReturnStatement loc4 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.178433418273926:  root return_type loc7 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.635668754577637:  root ReturnStatement loc6 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.178433418273926:  root return_type loc8 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.635668754577637:  root ReturnStatement loc8 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -10.635668754577637:  root ReturnStatement loc3 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -10.635668754577637:  root ReturnStatement loc5 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.178433418273926:  root return_type loc9 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.178433418273926:  root return_type loc6 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.178433418273926:  root return_type loc5 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.178433418273926:  root return_type loc1 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.178433418273926:  root return_type loc2 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.178433418273926:  root return_type loc4 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -12.044726371765137:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -12.044726371765137:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -12.044726371765137:  root IfStatement condition ^ then_statement ^ else_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement else_statement']
copynode -12.044726371765137:  root IfStatement loc7 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -0.8806544542312622:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -0.5370838642120361:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -0.5370838642120361:  root modified ^ member-member addChildBefore_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -0.8806544542312622:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -0.5370838642120361:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.5370838642120361:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.8806544542312622:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -0.5370838642120361:  root modified ^ qualifier-qualifier loc3 ^ ^  ^ ^ ; ['root -> modified', 'copy-qualifier']
copynode -0.5370838642120361:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -0.8806544542312622:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter']
copynode -0.5370838642120361:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -0.8806544542312622:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -0.8806544542312622:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -0.8806544542312622:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter']
copynode -0.8806544542312622:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -0.8806544542312622:  root add ^ WhileStatement ^ ^ ; ['root -> add', 'root -> WhileStatement']
copynode -0.8806544542312622:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -0.5370838642120361:  root modified ^ ReturnStatement ^ ^ ; ['root -> modified', 'root -> ReturnStatement']
copynode -7.872218608856201:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -0.5370838642120361:  root modified ^ ReturnStatement_ter ^ ^ ; ['root -> modified', 'root -> ReturnStatement_ter']
copynode -0.5370838642120361:  root modified ^ LocalVariableDeclaration ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration']
copynode -9.733345985412598:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -9.885149955749512:  root parameters FormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter']
copynode -10.216195106506348:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -10.309687614440918:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -11.992884635925293:  root LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -9.885149955749512:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End']
copynode -12.404648780822754:  root member-member addChildBefore_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown']
copynode -10.309687614440918:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -10.216195106506348:  root StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -10.216195106506348:  root StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -10.216195106506348:  root StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -10.216195106506348:  root StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -10.216195106506348:  root StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -10.216195106506348:  root StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -10.216195106506348:  root StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.992884635925293:  root LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.885149955749512:  root parameters MemberReference ^ ^ ^ ; ['root -> parameters', 'parameters -> MemberReference']
copynode -11.992884635925293:  root LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -11.992884635925293:  root LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -11.992884635925293:  root LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -11.992884635925293:  root LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -11.992884635925293:  root LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -11.992884635925293:  root LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.885149955749512:  root parameters InferredFormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> InferredFormalParameter']
copynode -11.992884635925293:  root LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -12.404648780822754:  root member-member addChildBefore_ter ^ ^  meth0 ^ ^ ^ ; ['copy-member', 'member -> meth0']
copynode -11.992884635925293:  root LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -12.404648780822754:  root member-member addChildBefore_ter ^ ^  addChildToFront_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.404648780822754:  root member-member addChildBefore_ter ^ ^  setDebugInformation_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.404648780822754:  root member-member addChildBefore_ter ^ ^  newQualifiedNameNode_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -10.216195106506348:  root StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -12.404648780822754:  root member-member addChildBefore_ter ^ ^  recordAlias_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.404648780822754:  root member-member addChildBefore_ter ^ ^  ensureLibraryInjected_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.404648780822754:  root member-member addChildBefore_ter ^ ^  useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.404648780822754:  root member-member addChildBefore_ter ^ ^  debug_ter ^ ^ ^ ; ['copy-member', 'member -> debug_ter']
copynode -12.404648780822754:  root member-member addChildBefore_ter ^ ^  report_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -9.885149955749512:  root parameters Cast ^ ^ ^ ; ['root -> parameters', 'parameters -> Cast']
copynode -9.733345985412598:  root IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -9.885149955749512:  root parameters loc1 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -9.885149955749512:  root parameters loc8 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -9.885149955749512:  root parameters loc7 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -9.733345985412598:  root IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -9.733345985412598:  root IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -9.885149955749512:  root parameters loc2 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -9.885149955749512:  root parameters loc9 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -9.733345985412598:  root IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -9.733345985412598:  root IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member isQualifiedName_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -10.216195106506348:  root StatementExpression unknown ^ ^ ^ ; ['root -> StatementExpression', 'start -> unknown']
copynode -7.872218608856201:  root ReturnStatement loc7 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -7.872218608856201:  root ReturnStatement loc9 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -7.872218608856201:  root ReturnStatement loc8 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -7.872218608856201:  root ReturnStatement loc4 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -7.872218608856201:  root ReturnStatement loc6 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -9.733345985412598:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -7.872218608856201:  root ReturnStatement loc5 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -7.872218608856201:  root ReturnStatement loc3 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -7.872218608856201:  root ReturnStatement loc1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -7.872218608856201:  root ReturnStatement loc2 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -9.733345985412598:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -10.309687614440918:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -10.309687614440918:  root return_type loc7 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.309687614440918:  root return_type loc8 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.733345985412598:  root IfStatement condition ^ then_statement ^ else_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement else_statement']
copynode -10.309687614440918:  root return_type loc6 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.309687614440918:  root return_type loc5 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.309687614440918:  root return_type loc2 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.309687614440918:  root return_type loc9 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.309687614440918:  root return_type loc1 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.733345985412598:  root IfStatement loc7 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
before@2 batch0 x: -33.26168632507324: root IfStatement loc2 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
after@2 batch0 x: -33.26168632507324: root IfStatement loc2 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
before@2 batch1 x: -33.58570957183838: root IfStatement loc3 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
after@2 batch1 x: -33.58570957183838: root IfStatement loc3 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
before@2 batch2 x: -34.16002941131592: root IfStatement loc7 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
after@2 batch2 x: -34.16002941131592: root IfStatement loc7 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
before@2 batch3 x: -31.812954902648926: root IfStatement loc7 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
after@2 batch3 x: -31.812954902648926: root IfStatement loc7 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -0.4129136949777603:  root modified ^ member-member getNode_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -2.3349130153656006:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -2.5034396797418594:  root modified ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -2.4104714542627335:  root modified ^ qualifier-qualifier v_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown']
copynode -2.9090343713760376:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -0.4129136949777603:  root modified ^ member-member getNode_ter ^ ^  detachFromParent_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -0.4129136949777603:  root modified ^ member-member getNode_ter ^ ^  isQualifiedName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -0.4129136949777603:  root modified ^ member-member getNode_ter ^ ^  isBleedingFunction_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -0.4129136949777603:  root modified ^ member-member getNode_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -0.4129136949777603:  root modified ^ member-member getNode_ter ^ ^  getInitialValue_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -0.4129136949777603:  root modified ^ member-member getNode_ter ^ ^  getJSDocInfo_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -0.4129136949777603:  root modified ^ member-member getNode_ter ^ ^  getFirstChild_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -0.4129136949777603:  root modified ^ member-member getNode_ter ^ ^  getType_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -0.4129136949777603:  root modified ^ member-member getNode_ter ^ ^  getJSDocInfo_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.4104714542627335:  root modified ^ qualifier-qualifier v_ter ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0']
copynode -5.590165972709656:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -2.4104714542627335:  root modified ^ qualifier-qualifier v_ter ^ ^  v_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -5.848812595009804:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -2.4104714542627335:  root modified ^ qualifier-qualifier v_ter ^ ^  v_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -2.4104714542627335:  root modified ^ qualifier-qualifier v_ter ^ ^  v_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -2.4104714542627335:  root modified ^ qualifier-qualifier v_ter ^ ^  v_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -2.4104714542627335:  root modified ^ qualifier-qualifier v_ter ^ ^  compiler_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -2.4104714542627335:  root modified ^ qualifier-qualifier v_ter ^ ^  compiler_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -2.9090343713760376:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.4104714542627335:  root modified ^ qualifier-qualifier v_ter ^ ^  v_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -2.4104714542627335:  root modified ^ qualifier-qualifier v_ter ^ ^  scopedAliasNames_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -2.5034396797418594:  root modified ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -2.9090343713760376:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.9090343713760376:  root add ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.9090343713760376:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.9090343713760376:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.9090343713760376:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.9090343713760376:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.9090343713760376:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -7.484758019447327:  root add ^ WhileStatement condition ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -7.4015785455703735:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -7.032167077064514:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -2.5034396797418594:  root modified ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -8.549707904458046:  root modified ^ control EnhancedForControl ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl']
copynode -8.557716861367226:  root modified ^ parameters FormalParameter ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter']
copynode -7.032167077064514:  root add ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -8.122857689857483:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -8.89828646183014:  root add ^ parameters FormalParameter ^ ^ ^ ; ['root -> add', 'root -> parameters', 'parameters -> FormalParameter']
copynode -9.025970578193665:  root add ^ member-member getNode_ter ^ ^  unknown ^ ^ ^ ; ['root -> add', 'copy-member', 'start -> unknown']
copynode -8.104993462562561:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -2.5034396797418594:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -2.5034396797418594:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -2.5034396797418594:  root modified ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -2.5034396797418594:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -2.5034396797418594:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.60199023783207:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -2.5034396797418594:  root modified ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -2.5034396797418594:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -7.032167077064514:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -5.848812595009804:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -10.313948169350624:  root modified ^ ReturnStatement expression ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -5.848812595009804:  root modified ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -7.032167077064514:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -5.848812595009804:  root modified ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -5.590165972709656:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -5.848812595009804:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -7.032167077064514:  root add ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -7.032167077064514:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -7.032167077064514:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -7.032167077064514:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -5.848812595009804:  root modified ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -7.032167077064514:  root add ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -5.848812595009804:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -5.848812595009804:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -8.89828646183014:  root add ^ parameters ^ ^ ; ['root -> add', 'root -> parameters', 'parameters -> End']
copynode -11.062099948525429:  root modified ^ unknown ^ ^ ; ['root -> modified', 'start -> unknown', 'root -> End']
copynode -5.848812595009804:  root modified ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -7.032167077064514:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -10.596692889928818:  root member-member getNode_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown', 'root -> End']
copynode -5.590165972709656:  root add ^ ReturnStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement']
copynode -9.025970578193665:  root add ^ member-member getNode_ter ^ ^  meth0 ^ ^ ^ ; ['root -> add', 'copy-member', 'member -> meth0']
copynode -8.557716861367226:  root modified ^ parameters ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> End']
copynode -10.596692889928818:  root member-member getNode_ter ^ ^  unknown ^ ^ StatementExpression ^ ^ ; ['copy-member', 'start -> unknown', 'root -> StatementExpression']
copynode -2.3349130153656006:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member isQualifiedName_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -5.590165972709656:  root add ^ ReturnStatement_ter ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement_ter']
copynode -11.242559522390366:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -11.242559522390366:  root IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -11.993618741631508:  root StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -2.3349130153656006:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -2.3349130153656006:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -11.515957921743393:  root ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -10.534588277339935:  root return_type ReferenceType name String_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -10.534588277339935:  root return_type ReferenceType name Node_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -10.534588277339935:  root return_type ReferenceType name String_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -11.515957921743393:  root ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -2.3349130153656006:  root add ^ IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -10.534588277339935:  root return_type ReferenceType name Node_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -8.104993462562561:  root add ^ control ForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl']
copynode -10.534588277339935:  root return_type ReferenceType name Node_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -10.534588277339935:  root return_type ReferenceType name Node_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -10.534588277339935:  root return_type ReferenceType name Node_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -5.590165972709656:  root add ^ ReturnStatement_ter ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ContinueStatement_ter']
copynode -10.596692889928818:  root member-member getNode_ter ^ ^  unknown ^ ^ ReturnStatement_ter ^ ^ ; ['copy-member', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -1.0296492874622345:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -1.324148267507553:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -1.8786072731018066:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -1.8196738362312317:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -1.324148267507553:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -3.585312247276306:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -1.8196738362312317:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.324148267507553:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -1.324148267507553:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -1.8196738362312317:  root add ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.8196738362312317:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.8196738362312317:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.8196738362312317:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.8196738362312317:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.8196738362312317:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.8196738362312317:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.239193320274353:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> End']
copynode -6.156125754117966:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -1.324148267507553:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -5.798279166221619:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -7.000705450773239:  root modified ^ BreakStatement_ter ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter', 'root -> End']
copynode -1.324148267507553:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -6.489128470420837:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -6.629019141197205:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.41097104549408:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> End']
copynode -7.511444449424744:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -3.585312247276306:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -5.798279166221619:  root add ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -5.798279166221619:  root add ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -8.446213126182556:  root add ^ WhileStatement condition ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -5.798279166221619:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -5.798279166221619:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -5.798279166221619:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -5.798279166221619:  root add ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -5.798279166221619:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -6.156125754117966:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -5.798279166221619:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -5.798279166221619:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.058900564908981:  root modified ^ WhileStatement condition ^ ^ ^ ; ['root -> modified', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -1.324148267507553:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -3.585312247276306:  root add ^ ReturnStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement']
copynode -9.370902746915817:  root modified ^ control EnhancedForControl ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl']
copynode -9.66909572482109:  root modified ^ ReturnStatement_ter ^ ^ ; ['root -> modified', 'root -> ReturnStatement_ter', 'root -> End']
copynode -3.585312247276306:  root add ^ ReturnStatement_ter ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement_ter']
copynode -6.156125754117966:  root modified ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -9.777122229337692:  root modified ^ ContinueStatement_ter ^ ^ ; ['root -> modified', 'root -> ContinueStatement_ter', 'root -> End']
copynode -6.156125754117966:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.324148267507553:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -6.156125754117966:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.489128470420837:  root add ^ control ForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl']
copynode -9.196177035570145:  root ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -9.305581778287888:  root MemberReference-MemberReference member loc2 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -6.156125754117966:  root modified ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.156125754117966:  root modified ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -9.998918265104294:  root modified ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -6.156125754117966:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.585312247276306:  root add ^ ReturnStatement_ter ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ContinueStatement_ter']
copynode -6.489128470420837:  root add ^ control ForControl_ter ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl_ter']
copynode -3.585312247276306:  root add ^ ReturnStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> BreakStatement_ter']
copynode -1.324148267507553:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  postfix_operators ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators qualifier member']
copynode -6.156125754117966:  root modified ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.239193320274353:  root add ^ BreakStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> StatementExpression']
copynode -9.196177035570145:  root ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -9.196177035570145:  root ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -9.196177035570145:  root ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -1.324148267507553:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  postfix_operators ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators selectors member']
copynode -1.0296492874622345:  root modified ^ IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'copy-IfStatement']
copynode -9.305581778287888:  root MemberReference-MemberReference member loc2 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -1.0296492874622345:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'copy-IfStatement']
copynode -1.8786072731018066:  root add ^ IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -9.955397382378578:  root return_type ReferenceType name Node_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -1.0296492874622345:  root modified ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'copy-IfStatement']
copynode -1.8786072731018066:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -9.955397382378578:  root return_type ReferenceType name String_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -1.8786072731018066:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -11.482221633195877:  root StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -3.585312247276306:  root add ^ ReturnStatement_ter ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement']
copynode -6.239193320274353:  root add ^ BreakStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> IfStatement']
copynode -11.17649936384987:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -9.305581778287888:  root MemberReference-MemberReference member loc2 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -9.955397382378578:  root return_type ReferenceType name Node_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -9.305581778287888:  root MemberReference-MemberReference member loc2 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -3.585312247276306:  root add ^ ReturnStatement_ter ^ control ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> control']
copynode -9.955397382378578:  root return_type ReferenceType name String_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -1.0296492874622345:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member isQualifiedName_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'copy-IfStatement']
copynode -11.485496282577515:  root MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators !_ter ^ ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -6.239193320274353:  root add ^ BreakStatement_ter ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> ReturnStatement_ter']
copynode -9.955397382378578:  root return_type ReferenceType name Node_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -1.8786072731018066:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member isQualifiedName_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -9.305581778287888:  root MemberReference-MemberReference member loc2 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -3.585312247276306:  root add ^ ReturnStatement_ter ^ AssertStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> AssertStatement']
copynode -7.41097104549408:  root add ^ ContinueStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> StatementExpression']
copynode -9.305581778287888:  root MemberReference-MemberReference member loc2 ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -6.239193320274353:  root add ^ BreakStatement_ter ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> ContinueStatement_ter']
copynode -11.17649936384987:  root IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -11.749140322208405:  root parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -9.955397382378578:  root return_type ReferenceType name Node_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -9.955397382378578:  root return_type ReferenceType name ^ arguments ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name arguments']
copynode -0.6991073489189148:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -1.8719242811203003:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -3.109333872795105:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -2.3008474111557007:  root modified ^ member-member getJSDocInfo_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -3.6007264852523804:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -3.330272078514099:  root modified ^ operator-operator ||_ter ^ ^  &&_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> &&_ter']
copynode -3.8412331342697144:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -3.3328851461410522:  root modified ^ operator-operator !=_ter ^ ^  ==_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ==_ter']
copynode -3.555484414100647:  root modified ^ operator-operator !=_ter ^ ^  ==_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ==_ter']
copynode -2.3008474111557007:  root modified ^ member-member getJSDocInfo_ter ^ ^  getCodingConvention_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.3008474111557007:  root modified ^ member-member getJSDocInfo_ter ^ ^  getJSDocInfo_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.330272078514099:  root modified ^ operator-operator ||_ter ^ ^  ||_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ||_ter']
copynode -3.3328851461410522:  root modified ^ operator-operator !=_ter ^ ^  !=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> !=_ter']
copynode -3.555484414100647:  root modified ^ operator-operator !=_ter ^ ^  !=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> !=_ter']
copynode -1.8719242811203003:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.8719242811203003:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.8719242811203003:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.3008474111557007:  root modified ^ member-member getJSDocInfo_ter ^ ^  getString_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.8719242811203003:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.3008474111557007:  root modified ^ member-member getJSDocInfo_ter ^ ^  getCodingConvention_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.8719242811203003:  root add ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.8719242811203003:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.6707128286361694:  root modified ^ qualifier-qualifier v_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown']
copynode -1.8719242811203003:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.3008474111557007:  root modified ^ member-member getJSDocInfo_ter ^ ^  getFirstChild_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.8719242811203003:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.3008474111557007:  root modified ^ member-member getJSDocInfo_ter ^ ^  getName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> getName_ter']
copynode -3.6707128286361694:  root modified ^ qualifier-qualifier v_ter ^ ^  v_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -2.3008474111557007:  root modified ^ member-member getJSDocInfo_ter ^ ^  getFirstChild_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.6707128286361694:  root modified ^ qualifier-qualifier v_ter ^ ^  compiler_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -2.3008474111557007:  root modified ^ member-member getJSDocInfo_ter ^ ^  getJSDocInfo_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.6707128286361694:  root modified ^ qualifier-qualifier v_ter ^ ^  compiler_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -2.3008474111557007:  root modified ^ member-member getJSDocInfo_ter ^ ^  getInitialValue_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -6.30494225025177:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> End']
copynode -3.6707128286361694:  root modified ^ qualifier-qualifier v_ter ^ ^  NodeUtil_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -3.6707128286361694:  root modified ^ qualifier-qualifier v_ter ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0']
copynode -3.3328851461410522:  root modified ^ operator-operator !=_ter ^ ^  >=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >=_ter']
copynode -3.6707128286361694:  root modified ^ qualifier-qualifier v_ter ^ ^  v_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -6.306275486946106:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -6.722395539283752:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value']
copynode -3.3328851461410522:  root modified ^ operator-operator !=_ter ^ ^  >_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >_ter']
copynode -3.555484414100647:  root modified ^ operator-operator !=_ter ^ ^  >=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >=_ter']
copynode -3.555484414100647:  root modified ^ operator-operator !=_ter ^ ^  >_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >_ter']
copynode -3.6707128286361694:  root modified ^ qualifier-qualifier v_ter ^ ^  loc6 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc6']
copynode -3.3328851461410522:  root modified ^ operator-operator !=_ter ^ ^  <=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <=_ter']
copynode -3.6007264852523804:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -3.6707128286361694:  root modified ^ qualifier-qualifier v_ter ^ ^  loc8 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc8']
copynode -7.387343525886536:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> End']
copynode -3.555484414100647:  root modified ^ operator-operator !=_ter ^ ^  <=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <=_ter']
copynode -3.3328851461410522:  root modified ^ operator-operator !=_ter ^ ^  <_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <_ter']
copynode -3.6707128286361694:  root modified ^ qualifier-qualifier v_ter ^ ^  NodeUtil_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -6.564428925514221:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -3.555484414100647:  root modified ^ operator-operator !=_ter ^ ^  <_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <_ter']
copynode -3.3328851461410522:  root modified ^ operator-operator !=_ter ^ ^  &&_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> &&_ter']
copynode -3.555484414100647:  root modified ^ operator-operator !=_ter ^ ^  &&_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> &&_ter']
copynode -6.497345566749573:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -3.8412331342697144:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -7.87446653842926:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -3.6007264852523804:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -3.3328851461410522:  root modified ^ operator-operator !=_ter ^ ^  ||_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ||_ter']
copynode -8.447253346443176:  root add ^ Statement_ter ^ ^ ; ['root -> add', 'root -> Statement_ter', 'root -> End']
copynode -3.555484414100647:  root modified ^ operator-operator !=_ter ^ ^  ||_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ||_ter']
copynode -6.306275486946106:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -7.2006155252456665:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -6.497345566749573:  root add ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -3.3328851461410522:  root modified ^ operator-operator !=_ter ^ ^  +_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> +_ter']
copynode -6.497345566749573:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -3.555484414100647:  root modified ^ operator-operator !=_ter ^ ^  +_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> +_ter']
copynode -6.497345566749573:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -6.497345566749573:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -6.497345566749573:  root add ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -6.497345566749573:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -6.306275486946106:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.497345566749573:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -6.306275486946106:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.306275486946106:  root modified ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.3328851461410522:  root modified ^ operator-operator !=_ter ^ ^  &_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> &_ter']
copynode -3.555484414100647:  root modified ^ operator-operator !=_ter ^ ^  &_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> &_ter']
copynode -6.306275486946106:  root modified ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.497345566749573:  root add ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -6.722395539283752:  root modified ^ Literal-Literal value null_ter ^ ^ ^  prefix_operators ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value']
copynode -6.306275486946106:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.330272078514099:  root modified ^ operator-operator ||_ter ^ ^  !=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> !=_ter']
copynode -6.497345566749573:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -3.8412331342697144:  root add ^ ReturnStatement_ter ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement_ter']
copynode -6.306275486946106:  root modified ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.8412331342697144:  root add ^ ReturnStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement']
copynode -6.306275486946106:  root modified ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.6007264852523804:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -3.6007264852523804:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -6.30494225025177:  root add ^ BreakStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> StatementExpression']
copynode -3.330272078514099:  root modified ^ operator-operator ||_ter ^ ^  ==_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ==_ter']
copynode -3.8412331342697144:  root add ^ ReturnStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> BreakStatement_ter']
copynode -3.8412331342697144:  root add ^ ReturnStatement_ter ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ContinueStatement_ter']
copynode -6.722395539283752:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -6.722395539283752:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -0.6991073489189148:  root modified ^ IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'copy-IfStatement']
copynode -0.6991073489189148:  root modified ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'copy-IfStatement']
copynode -1.4403880834579468:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -1.8047113418579102:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -1.833272099494934:  root modified ^ member-member addChildBefore_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -2.0503122806549072:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -2.1819621324539185:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -2.2838709354400635:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -3.414730429649353:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -1.4403880834579468:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.4403880834579468:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.1819621324539185:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -1.4403880834579468:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.2838709354400635:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -1.4403880834579468:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.4403880834579468:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.4403880834579468:  root add ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.4403880834579468:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -5.442970871925354:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> End']
copynode -3.6690211296081543:  root modified ^ qualifier-qualifier loc3 ^ ^  loc6 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc6']
copynode -5.629490613937378:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -3.6690211296081543:  root modified ^ qualifier-qualifier loc3 ^ ^  loc3 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc3']
copynode -3.6690211296081543:  root modified ^ qualifier-qualifier loc3 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown']
copynode -1.833272099494934:  root modified ^ member-member addChildBefore_ter ^ ^  setDebugInformation_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.833272099494934:  root modified ^ member-member addChildBefore_ter ^ ^  recordAlias_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.6690211296081543:  root modified ^ qualifier-qualifier loc3 ^ ^  NodeUtil_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -3.6690211296081543:  root modified ^ qualifier-qualifier loc3 ^ ^  v_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -1.8047113418579102:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.41952908039093:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> End']
copynode -1.833272099494934:  root modified ^ member-member addChildBefore_ter ^ ^  ensureLibraryInjected_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.6690211296081543:  root modified ^ qualifier-qualifier loc3 ^ ^  loc5 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc5']
copynode -3.6690211296081543:  root modified ^ qualifier-qualifier loc3 ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0']
copynode -3.6690211296081543:  root modified ^ qualifier-qualifier loc3 ^ ^  NodeUtil_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -6.027431607246399:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -1.8047113418579102:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.6690211296081543:  root modified ^ qualifier-qualifier loc3 ^ ^  compiler_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -6.149542450904846:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -1.833272099494934:  root modified ^ member-member addChildBefore_ter ^ ^  report_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.6690211296081543:  root modified ^ qualifier-qualifier loc3 ^ ^  loc4 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc4']
copynode -6.579639554023743:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -1.833272099494934:  root modified ^ member-member addChildBefore_ter ^ ^  debug_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> debug_ter']
copynode -1.8047113418579102:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.833272099494934:  root modified ^ member-member addChildBefore_ter ^ ^  addChildToFront_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -7.129831433296204:  root add ^ WhileStatement condition ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -3.414730429649353:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -1.8047113418579102:  root modified ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.8047113418579102:  root modified ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.833272099494934:  root modified ^ member-member addChildBefore_ter ^ ^  recordAlias_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.833272099494934:  root modified ^ member-member addChildBefore_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -1.8047113418579102:  root modified ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.833272099494934:  root modified ^ member-member addChildBefore_ter ^ ^  e_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> e_ter']
copynode -7.288708329200745:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -7.858670949935913:  root modified ^ ReturnStatement expression ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -8.184932470321655:  root modified ^ ReturnStatement_ter ^ ^ ; ['root -> modified', 'root -> ReturnStatement_ter', 'root -> End']
copynode -1.8047113418579102:  root modified ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.149542450904846:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -2.1819621324539185:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -2.2838709354400635:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -6.149542450904846:  root add ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -6.149542450904846:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -8.018127039074898:  root ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -2.1819621324539185:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -6.149542450904846:  root add ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -6.149542450904846:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -6.149542450904846:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -5.442970871925354:  root add ^ BreakStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> StatementExpression']
copynode -2.2838709354400635:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -6.149542450904846:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -1.4403880834579468:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.2838709354400635:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -2.1819621324539185:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -8.018127039074898:  root ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -3.414730429649353:  root add ^ ReturnStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement']
copynode -8.018127039074898:  root ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -9.581751108169556:  root modified ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -3.414730429649353:  root add ^ ReturnStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> BreakStatement_ter']
copynode -3.414730429649353:  root add ^ ReturnStatement_ter ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement_ter']
copynode -6.027431607246399:  root add ^ control ForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl']
copynode -6.027431607246399:  root add ^ control ForControl_ter ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl_ter']
copynode -3.414730429649353:  root add ^ ReturnStatement_ter ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ContinueStatement_ter']
copynode -10.398266792297363:  root StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -9.73427642940078:  root IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -6.149542450904846:  root add ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -1.8047113418579102:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.41952908039093:  root add ^ ContinueStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> StatementExpression']
copynode -8.018127039074898:  root ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -9.73427642940078:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -10.013387307524681:  root parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -6.149542450904846:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -10.013387307524681:  root parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -5.442970871925354:  root add ^ BreakStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> IfStatement']
copynode -5.442970871925354:  root add ^ BreakStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> BreakStatement_ter']
copynode -9.73427642940078:  root IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -10.880855321884155:  root return_type ReferenceType name Node_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -5.442970871925354:  root add ^ BreakStatement_ter ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> ReturnStatement_ter']
copynode -3.414730429649353:  root add ^ ReturnStatement_ter ^ control ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> control']
copynode -5.442970871925354:  root add ^ BreakStatement_ter ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> ContinueStatement_ter']
copynode -2.0503122806549072:  root add ^ IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -3.414730429649353:  root add ^ ReturnStatement_ter ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement']
copynode -6.41952908039093:  root add ^ ContinueStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> IfStatement']
before@3 batch0 x: -12.980195611715317: root member-member getNode_ter ^ ^  unknown ^ ^ ReturnStatement_ter ^ ^  ; ['copy-member', 'start -> unknown', 'root -> ReturnStatement_ter']
after@3 batch0 x: -12.980195611715317: root member-member getNode_ter ^ ^  unknown ^ ^ ReturnStatement_ter ^ ^  ; ['copy-member', 'start -> unknown', 'root -> ReturnStatement_ter']
before@3 batch1 x: -12.668944135308266: root return_type ReferenceType name ^ arguments ^ ^ ^ ^  ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name arguments']
after@3 batch1 x: -12.668944135308266: root return_type ReferenceType name ^ arguments ^ ^ ^ ^  ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name arguments']
before@3 batch2 x: -11.414324939250946: root modified ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'copy-IfStatement']
after@3 batch2 x: -11.414324939250946: root modified ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement_ter ^ ^ else_statement IfStatement condition MemberReference member loc2 ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member useSourceInfoIfMissingFromForTree_ter ^ ^ ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member newQualifiedNameNodeDeclaration_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'copy-IfStatement']
before@3 batch3 x: -12.242435097694397: root add ^ ContinueStatement_ter ^ IfStatement ^ ^  ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> IfStatement']
after@3 batch3 x: -12.242435097694397: root add ^ ContinueStatement_ter ^ IfStatement ^ ^  ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> IfStatement']
copynode -0.656774029135704:  root modified ^ member-member getNode_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -2.532206229865551:  root modified ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -2.7764973491430283:  root modified ^ qualifier-qualifier v_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -2.3355499745812267:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -3.0712745785713196:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -2.3355499745812267:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -4.415490999817848:  root modified ^ member-member getNode_ter ^ ^  detachFromParent_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -2.3355499745812267:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -4.441461458802223:  root modified ^ member-member getNode_ter ^ ^  isQualifiedName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -4.670835390686989:  root modified ^ member-member getNode_ter ^ ^  isBleedingFunction_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -4.76163424551487:  root modified ^ member-member getNode_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
copynode -4.880804434418678:  root modified ^ member-member getNode_ter ^ ^  getInitialValue_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -4.9625967890024185:  root modified ^ member-member getNode_ter ^ ^  getJSDocInfo_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -5.0408133417367935:  root modified ^ member-member getNode_ter ^ ^  getFirstChild_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -5.0507525354623795:  root modified ^ member-member getNode_ter ^ ^  getType_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -5.054338350892067:  root modified ^ member-member getNode_ter ^ ^  getJSDocInfo_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -3.0712745785713196:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -5.3969922214746475:  root modified ^ qualifier-qualifier v_ter ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0', 'root -> End']
copynode -5.836753860116005:  root modified ^ qualifier-qualifier v_ter ^ ^  v_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -5.973476424813271:  root modified ^ qualifier-qualifier v_ter ^ ^  v_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -5.9782886654138565:  root modified ^ qualifier-qualifier v_ter ^ ^  v_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -6.080311074852943:  root modified ^ qualifier-qualifier v_ter ^ ^  v_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -6.213600173592567:  root modified ^ qualifier-qualifier v_ter ^ ^  compiler_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -6.330373778939247:  root modified ^ qualifier-qualifier v_ter ^ ^  compiler_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -6.416183486580849:  root modified ^ qualifier-qualifier v_ter ^ ^  v_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -5.925352163612843:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -6.395376086235046:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.511667266488075:  root modified ^ qualifier-qualifier v_ter ^ ^  scopedAliasNames_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -3.0712745785713196:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -6.614461675286293:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter']
copynode -6.6495970487594604:  root add ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.647210955619812:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -2.3355499745812267:  root add ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -5.925352163612843:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -3.0712745785713196:  root add ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -6.982620358467102:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.09135639667511:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -2.3355499745812267:  root add ^ IfStatement condition MemberReference member loc2 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.148357510566711:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.341301083564758:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -3.0712745785713196:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -7.349554181098938:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -2.3355499745812267:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member isQualifiedName_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.678019225597382:  root add ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -2.3355499745812267:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -2.3355499745812267:  root add ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -2.3355499745812267:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -8.242029920220375:  root modified ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -2.3355499745812267:  root add ^ IfStatement condition Cast ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast']
copynode -7.533442467451096:  root add ^ AssertStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation']
copynode -7.525310609489679:  root add ^ WhileStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation']
copynode -8.5784624312073:  root modified ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -3.0712745785713196:  root add ^ StatementExpression expression Cast ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast']
copynode -7.525310609489679:  root add ^ WhileStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MethodInvocation']
copynode -7.533442467451096:  root add ^ AssertStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MemberReference']
copynode -7.525310609489679:  root add ^ WhileStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MemberReference']
copynode -8.816875278949738:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -7.533442467451096:  root add ^ AssertStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MethodInvocation']
copynode -9.293530240654945:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -9.306912198662758:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -8.606181006878614:  root modified ^ parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -9.34668804705143:  root modified ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -9.284534811973572:  root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -9.269669249653816:  root add ^ member-member getNode_ter ^ ^  unknown ^ ^ ^ ; ['root -> add', 'copy-member', 'start -> unknown', 'root -> End']
copynode -8.606181006878614:  root modified ^ parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -9.481879010796547:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -9.507324948906898:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -8.716916799545288:  root add ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -6.647210955619812:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -9.624035611748695:  root modified ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc8 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -9.693386808037758:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -6.6495970487594604:  root add ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -3.0712745785713196:  root add ^ StatementExpression expression ClassCreator ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> ClassCreator']
copynode -9.068351432681084:  root add ^ parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> add', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -6.395376086235046:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -6.395376086235046:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -6.982620358467102:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -9.951415553689003:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.647210955619812:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> ReturnStatement_ter']
copynode -6.6495970487594604:  root add ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> ReturnStatement_ter']
copynode -9.068351432681084:  root add ^ parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> add', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -7.09135639667511:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -8.716916799545288:  root add ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member loc2 ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> StatementExpression']
copynode -6.647210955619812:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -5.925352163612843:  root modified ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -7.148357510566711:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -6.982620358467102:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> ReturnStatement_ter']
copynode -6.6495970487594604:  root add ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -9.602246034075506:  root modified ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -7.349554181098938:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -10.383990779519081:  root modified ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.395376086235046:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> ReturnStatement_ter']
copynode -2.532206229865551:  root modified ^ LocalVariableDeclaration type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType']
copynode -10.464177623391151:  root modified ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.349554181098938:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> ReturnStatement_ter']
copynode -10.498895183205605:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.982620358467102:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -1.030006502289325:  root modified ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -2.183343321084976:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -1.030006502289325:  root modified ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -1.8791191695490852:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -1.636565238237381:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -1.636565238237381:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -2.9664641320705414:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators !_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -1.8791191695490852:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -1.8791191695490852:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -1.636565238237381:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -1.030006502289325:  root modified ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -2.183343321084976:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -1.636565238237381:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -4.546539127826691:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -1.636565238237381:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -1.636565238237381:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -1.636565238237381:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc5 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc5']
copynode -5.0001180768013:  root add ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -5.054830610752106:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -2.9664641320705414:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators -_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter']
copynode -5.080028593540192:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -5.153171360492706:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -4.889102071523666:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  postfix_operators ++_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -1.636565238237381:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member v_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -2.183343321084976:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -5.276786625385284:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -5.3612900376319885:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -5.58509236574173:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -4.760502904653549:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  qualifier loc1 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc1']
copynode -1.636565238237381:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc6 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -1.8791191695490852:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -1.636565238237381:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member v_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.760502904653549:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -6.401581436395645:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -6.683977901935577:  root add ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -4.889102071523666:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  postfix_operators --_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> --_ter']
copynode -1.8791191695490852:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -4.760502904653549:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  qualifier Token_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -2.9664641320705414:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators ++_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ++_ter']
copynode -6.6169653832912445:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  selectors MethodInvocation ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> MethodInvocation']
copynode -1.8791191695490852:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member isQualifiedName_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.260816335678101:  root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -7.2210913598537445:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -2.183343321084976:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -2.9664641320705414:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators ~_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ~_ter']
copynode -4.760502904653549:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  qualifier loc0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -1.8791191695490852:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -1.8791191695490852:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -4.760502904653549:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  qualifier v_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -1.8791191695490852:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -1.8791191695490852:  root add ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -4.760502904653549:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  qualifier loc2 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc2']
copynode -7.276140332221985:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -2.183343321084976:  root add ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -4.546539127826691:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -5.054830610752106:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -5.0001180768013:  root add ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -4.760502904653549:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  qualifier loc3 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -5.080028593540192:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -7.570753749459982:  root add ^ AssertStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation']
copynode -5.276786625385284:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -5.153171360492706:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -4.760502904653549:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  qualifier v_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -1.030006502289325:  root modified ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -4.760502904653549:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  qualifier v_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -1.030006502289325:  root modified ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -5.58509236574173:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -1.030006502289325:  root modified ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -8.082037806510925:  root add ^ ReturnStatement_ter ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -4.760502904653549:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  qualifier v_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -2.9664641320705414:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators --_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> --_ter']
copynode -5.3612900376319885:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -1.030006502289325:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member isQualifiedName_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -1.030006502289325:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -8.800097197294235:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -4.546539127826691:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> ReturnStatement_ter']
copynode -4.546539127826691:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -1.030006502289325:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -1.030006502289325:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -6.6169653832912445:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  selectors ArraySelector ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector']
copynode -7.276140332221985:  root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -7.570753749459982:  root add ^ AssertStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MemberReference']
copynode -8.275844693183899:  root add ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -6.6169653832912445:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  selectors MemberReference ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> MemberReference']
copynode -9.182787775993347:  root add ^ ReturnStatement_ter ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement', 'IfStatement -> condition']
copynode -8.461256920360029:  root add ^ WhileStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation']
copynode -2.183343321084976:  root add ^ StatementExpression expression Cast ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast']
copynode -2.183343321084976:  root add ^ StatementExpression expression ClassCreator ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> ClassCreator']
copynode -6.401581436395645:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -8.43491780757904:  root add ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> StatementExpression']
copynode -2.9664641320705414:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> End']
copynode -5.0001180768013:  root add ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> ReturnStatement_ter']
copynode -8.492784857749939:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member count_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> StatementExpression']
copynode -8.526397824287415:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ if_true MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ if_false Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> StatementExpression']
copynode -5.054830610752106:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> ReturnStatement_ter']
copynode -0.699433320260141:  root modified ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -2.447571575641632:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -3.6306570768356323:  root modified ^ member-member getJSDocInfo_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -0.699433320260141:  root modified ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -3.7799824476242065:  root modified ^ operator-operator ||_ter ^ ^  &&_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> &&_ter', 'root -> End']
copynode -3.1099806730635464:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -4.006611466407776:  root modified ^ operator-operator !=_ter ^ ^  ==_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ==_ter', 'root -> End']
copynode -3.1099806730635464:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -4.256220698356628:  root modified ^ operator-operator !=_ter ^ ^  ==_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ==_ter', 'root -> End']
copynode -4.3107064962387085:  root modified ^ member-member getJSDocInfo_ter ^ ^  getCodingConvention_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -4.349398970603943:  root modified ^ member-member getJSDocInfo_ter ^ ^  getJSDocInfo_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -4.354302406311035:  root modified ^ operator-operator ||_ter ^ ^  ||_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ||_ter', 'root -> End']
copynode -4.3581321239471436:  root modified ^ operator-operator !=_ter ^ ^  !=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> !=_ter', 'root -> End']
copynode -4.562701106071472:  root modified ^ operator-operator !=_ter ^ ^  !=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> !=_ter', 'root -> End']
copynode -2.447571575641632:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -4.6072152853012085:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -4.599913954734802:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -4.725886940956116:  root modified ^ member-member getJSDocInfo_ter ^ ^  getString_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -4.761386513710022:  root modified ^ member-member getJSDocInfo_ter ^ ^  getCodingConvention_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -4.7181583642959595:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -3.640137307345867:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -4.736342787742615:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -4.785237669944763:  root add ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -4.825126051902771:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -4.9552611112594604:  root modified ^ qualifier-qualifier v_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -5.033847451210022:  root modified ^ member-member getJSDocInfo_ter ^ ^  getFirstChild_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -4.982909560203552:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -3.640137307345867:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  member loc5 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc5']
copynode -5.095651030540466:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -5.230586886405945:  root modified ^ member-member getJSDocInfo_ter ^ ^  getName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> getName_ter', 'root -> End']
copynode -3.1099806730635464:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -3.640137307345867:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -5.670359134674072:  root modified ^ qualifier-qualifier v_ter ^ ^  v_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -0.699433320260141:  root modified ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -3.640137307345867:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  member loc6 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -5.97818911075592:  root modified ^ member-member getJSDocInfo_ter ^ ^  getFirstChild_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.010000824928284:  root modified ^ qualifier-qualifier v_ter ^ ^  compiler_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -6.011691451072693:  root modified ^ member-member getJSDocInfo_ter ^ ^  getJSDocInfo_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -2.447571575641632:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -6.084433197975159:  root modified ^ qualifier-qualifier v_ter ^ ^  compiler_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -6.208528161048889:  root modified ^ member-member getJSDocInfo_ter ^ ^  getInitialValue_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.436817765235901:  root modified ^ qualifier-qualifier v_ter ^ ^  NodeUtil_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -6.529392123222351:  root modified ^ qualifier-qualifier v_ter ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0', 'root -> End']
copynode -0.699433320260141:  root modified ^ IfStatement condition MemberReference member loc2 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -3.1099806730635464:  root add ^ IfStatement condition MemberReference member loc2 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -6.737635254859924:  root modified ^ operator-operator !=_ter ^ ^  >=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >=_ter', 'root -> End']
copynode -6.771021485328674:  root modified ^ qualifier-qualifier v_ter ^ ^  v_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -6.821529269218445:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -6.872530579566956:  root modified ^ operator-operator !=_ter ^ ^  >_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >_ter', 'root -> End']
copynode -3.640137307345867:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.9279545545578:  root modified ^ operator-operator !=_ter ^ ^  >=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >=_ter', 'root -> End']
copynode -0.699433320260141:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.05016028881073:  root modified ^ operator-operator !=_ter ^ ^  >_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >_ter', 'root -> End']
copynode -7.119850039482117:  root modified ^ qualifier-qualifier v_ter ^ ^  loc6 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc6', 'root -> End']
copynode -3.640137307345867:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.234266877174377:  root modified ^ operator-operator !=_ter ^ ^  <=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <=_ter', 'root -> End']
copynode -0.699433320260141:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -3.640137307345867:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -3.640137307345867:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  member v_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.599913954734802:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -7.368442416191101:  root modified ^ qualifier-qualifier v_ter ^ ^  loc8 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc8', 'root -> End']
copynode -7.405754923820496:  root modified ^ operator-operator !=_ter ^ ^  <=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <=_ter', 'root -> End']
copynode -3.1099806730635464:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.4298542737960815:  root modified ^ operator-operator !=_ter ^ ^  <_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <_ter', 'root -> End']
copynode -3.640137307345867:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  member t_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.453222632408142:  root modified ^ qualifier-qualifier v_ter ^ ^  NodeUtil_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -0.699433320260141:  root modified ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -4.736342787742615:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -4.825126051902771:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -3.1099806730635464:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -4.785237669944763:  root add ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -0.699433320260141:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member isQualifiedName_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.563246369361877:  root modified ^ operator-operator !=_ter ^ ^  <_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <_ter', 'root -> End']
copynode -7.595612406730652:  root modified ^ operator-operator !=_ter ^ ^  &&_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> &&_ter', 'root -> End']
copynode -4.6072152853012085:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -3.1099806730635464:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member isQualifiedName_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -5.095651030540466:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -0.699433320260141:  root modified ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -3.640137307345867:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.864368557929993:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 1_ter']
copynode -2.447571575641632:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -7.841896653175354:  root modified ^ operator-operator !=_ter ^ ^  &&_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> &&_ter', 'root -> End']
copynode -4.982909560203552:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -4.7181583642959595:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -2.447571575641632:  root add ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -3.1099806730635464:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.922882795333862:  root add ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -6.864368557929993:  root modified ^ Literal-Literal value null_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -8.243857264518738:  root modified ^ operator-operator !=_ter ^ ^  ||_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ||_ter', 'root -> End']
copynode -7.505817890167236:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -3.1099806730635464:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member hasChildren_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -8.474135041236877:  root modified ^ operator-operator !=_ter ^ ^  ||_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ||_ter', 'root -> End']
copynode -8.59327232837677:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -4.006611466407776:  root modified ^ operator-operator !=_ter ^ ^  ==_ter ^ ^ StatementExpression ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ==_ter', 'root -> StatementExpression']
copynode -8.618142247200012:  root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -1.6620512306690216:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -1.8421101570129395:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -1.9159367457032204:  root modified ^ member-member addChildBefore_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -2.051002442545723:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -2.051002442545723:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -2.260235920548439:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  member loc6 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -2.3588510155677795:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  member loc6 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -2.051002442545723:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -1.6620512306690216:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -2.260235920548439:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -2.3588510155677795:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -4.520830512046814:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -2.260235920548439:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  member loc7 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc7']
copynode -4.6437495946884155:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -2.3588510155677795:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  member loc7 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc7']
copynode -2.260235920548439:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  member loc5 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc5']
copynode -4.96649968624115:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -2.3588510155677795:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  member loc5 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc5']
copynode -2.260235920548439:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.223755240440369:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -2.3588510155677795:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.370306372642517:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -5.375656723976135:  root add ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -5.448130011558533:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member newQualifiedNameNode_ter ^ ^ ^ ^ member addChildToFront_ter ^ ^ ^ ^ member getNameNode_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -5.52053689956665:  root modified ^ qualifier-qualifier loc3 ^ ^  loc6 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc6', 'root -> End']
copynode -5.632023334503174:  root modified ^ qualifier-qualifier loc3 ^ ^  loc3 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc3', 'root -> End']
copynode -2.260235920548439:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -2.3588510155677795:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -5.860819339752197:  root modified ^ qualifier-qualifier loc3 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.0374990701675415:  root modified ^ member-member addChildBefore_ter ^ ^  setDebugInformation_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.041493058204651:  root modified ^ member-member addChildBefore_ter ^ ^  recordAlias_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -2.260235920548439:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.630426427349448:  root modified ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -4.8263407945632935:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  qualifier loc6 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc6']
copynode -6.171330213546753:  root modified ^ qualifier-qualifier loc3 ^ ^  NodeUtil_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -2.3588510155677795:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.973982572555542:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  qualifier loc6 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc6']
copynode -1.8421101570129395:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -1.6620512306690216:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -6.408840894699097:  root modified ^ qualifier-qualifier loc3 ^ ^  v_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -6.408939838409424:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.4466787576675415:  root modified ^ member-member addChildBefore_ter ^ ^  ensureLibraryInjected_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.473547458648682:  root modified ^ qualifier-qualifier loc3 ^ ^  loc5 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc5', 'root -> End']
copynode -2.260235920548439:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  member v_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.564056873321533:  root modified ^ qualifier-qualifier loc3 ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0', 'root -> End']
copynode -2.260235920548439:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  member loc8 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc8']
copynode -2.260235920548439:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  member t_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -2.3588510155677795:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  member v_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.694458961486816:  root modified ^ qualifier-qualifier loc3 ^ ^  NodeUtil_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -4.8263407945632935:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -2.3588510155677795:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  member loc8 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc8']
copynode -2.3588510155677795:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  member t_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.821491718292236:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -5.630426427349448:  root modified ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -6.821135699748993:  root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -6.868208885192871:  root modified ^ qualifier-qualifier loc3 ^ ^  compiler_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -6.897692322731018:  root modified ^ member-member addChildBefore_ter ^ ^  report_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.943790912628174:  root modified ^ qualifier-qualifier loc3 ^ ^  loc4 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc4', 'root -> End']
copynode -4.973982572555542:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -7.060578465461731:  root modified ^ member-member addChildBefore_ter ^ ^  debug_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> debug_ter', 'root -> End']
copynode -6.892512559890747:  root add ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -1.6620512306690216:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -7.103043079376221:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.121515870094299:  root modified ^ member-member addChildBefore_ter ^ ^  addChildToFront_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -7.17691707611084:  root modified ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.179940223693848:  root modified ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.205116868019104:  root modified ^ member-member addChildBefore_ter ^ ^  recordAlias_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -7.211417317390442:  root modified ^ member-member addChildBefore_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
copynode -4.8263407945632935:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  qualifier compiler_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -2.051002442545723:  root add ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -4.8263407945632935:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  qualifier v_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -7.357417106628418:  root modified ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.3741103410720825:  root modified ^ member-member addChildBefore_ter ^ ^  e_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> e_ter', 'root -> End']
copynode -2.051002442545723:  root add ^ IfStatement condition MemberReference member loc2 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -4.973982572555542:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  qualifier compiler_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -4.973982572555542:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  qualifier v_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -7.1649991273880005:  root add ^ ReturnStatement_ter ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -2.051002442545723:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -4.8263407945632935:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  qualifier v_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -4.8263407945632935:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  qualifier loc3 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -1.6620512306690216:  root add ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -4.6437495946884155:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member GOOG_SCOPE_NON_ALIAS_LOCAL_ter ^ ^ ^ MethodInvocation qualifier loc0 ^ ^ member getString_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -4.520830512046814:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member setDebugInformation_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -4.973982572555542:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  qualifier loc3 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -4.973982572555542:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  qualifier v_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -2.051002442545723:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -5.630426427349448:  root modified ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -4.8263407945632935:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  qualifier compiler_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -6.9918787479400635:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -7.912512492388487:  root modified ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -2.051002442545723:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -2.051002442545723:  root add ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -5.223755240440369:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -2.051002442545723:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member isQualifiedName_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.158908432349563:  root add ^ WhileStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation']
copynode -6.9918787479400635:  root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
before@4 batch0 x: -10.527475714683533: root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ IfStatement ^ ^  ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
after@4 batch0 x: -10.527475714683533: root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ IfStatement ^ ^  ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
before@4 batch1 x: -9.40639454126358: root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^  ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> ReturnStatement_ter']
after@4 batch1 x: -9.40639454126358: root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ensureLibraryInjected_ter ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^  ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> ReturnStatement_ter']
before@4 batch2 x: -8.682253994047642: root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^  ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
after@4 batch2 x: -8.682253994047642: root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^  ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
before@4 batch3 x: -8.162012457847595: root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^  ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
after@4 batch3 x: -8.162012457847595: root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^  ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -2.532663084595697:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -3.136890018125996:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.302789354464039:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.294815108180046:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.294815108180046:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.294815108180046:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -4.4191433431115:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -3.294815108180046:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.1218984723091125:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -3.302789354464039:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -4.4191433431115:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -2.532663084595697:  root modified ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -3.302789354464039:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member']
copynode -3.302789354464039:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -2.532663084595697:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -2.532663084595697:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -2.532663084595697:  root modified ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -3.302789354464039:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.532663084595697:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -2.532663084595697:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -3.302789354464039:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -2.532663084595697:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -3.302789354464039:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -6.438723511993885:  root modified ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -3.294815108180046:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -6.569707930088043:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -3.302789354464039:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member']
copynode -6.718891888856888:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> ReferenceType']
copynode -6.905865736305714:  root modified ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -3.136890018125996:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -2.532663084595697:  root modified ^ LocalVariableDeclaration type ReferenceType name ^ arguments ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments']
copynode -3.136890018125996:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.966093122959137:  root add ^ StatementExpression expression SuperMethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> member']
copynode -6.874704027315602:  root add ^ IfStatement condition This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors']
copynode -3.136890018125996:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.448943912982941:  root add ^ StatementExpression expression This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors']
copynode -4.4191433431115:  root add ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -3.136890018125996:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -2.532663084595697:  root modified ^ LocalVariableDeclaration type ReferenceType name ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name']
copynode -7.233554506441578:  root add ^ IfStatement condition MemberReference member loc2 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -3.302789354464039:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.294815108180046:  root add ^ StatementExpression expression MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -3.302789354464039:  root add ^ IfStatement condition MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -3.136890018125996:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.631688738008961:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member isQualifiedName_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.702819490572438:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -3.136890018125996:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.966093122959137:  root add ^ StatementExpression expression SuperMethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> arguments member']
copynode -7.89770140661858:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -6.874704027315602:  root add ^ IfStatement condition This prefix_operators ^ selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> prefix_operators selectors']
copynode -7.829646730562672:  root add ^ IfStatement condition Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal', 'Literal -> value']
copynode -8.314716964960098:  root add ^ AssertStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -8.429390046745539:  root add ^ WhileStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.294815108180046:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -4.4191433431115:  root add ^ IfStatement condition MemberReference prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -8.26478543295525:  root add ^ IfStatement condition Cast type ^ expression ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast', 'Cast -> type expression']
copynode -7.233554506441578:  root add ^ IfStatement condition MemberReference member loc2 ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> ReturnStatement_ter']
copynode -8.59693557024002:  root add ^ StatementExpression expression Cast type ^ expression ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast', 'Cast -> type expression']
copynode -6.874704027315602:  root add ^ IfStatement condition This qualifier ^ selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> qualifier selectors']
copynode -7.702819490572438:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> ReturnStatement_ter']
copynode -7.631688738008961:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member isQualifiedName_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> ReturnStatement_ter']
copynode -7.829646730562672:  root add ^ IfStatement condition Literal selectors ^ value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal', 'Literal -> selectors value']
copynode -8.98819038271904:  root add ^ AssertStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -9.179649502038956:  root add ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -7.89770140661858:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> ReturnStatement_ter']
copynode -9.320949118584394:  root modified ^ parameters FormalParameter modifiers final_ter ^ ^ type ^ name ^ ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name', 'modifiers -> final_ter']
copynode -1.3896477264352143:  root modified ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.619520753622055:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3', 'root -> End']
copynode -2.5819020388880745:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.0338540375232697:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2', 'root -> End']
copynode -3.1307318955659866:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators !_ter ^ ^ member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc2']
copynode -2.4814693671651185:  root modified ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -2.3708228766918182:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -2.3708228766918182:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.7598710358142853:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -2.4814693671651185:  root modified ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.3708228766918182:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.5430817721644416:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -3.789544437546283:  root modified ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -3.1856923220911995:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.3345774710178375:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -4.3857331573963165:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4', 'root -> End']
copynode -2.3708228766918182:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -3.5430817721644416:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -4.741432696580887:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -4.862413913011551:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -3.1856923220911995:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -2.4814693671651185:  root modified ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.003855258226395:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc5 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc5', 'root -> End']
copynode -2.4814693671651185:  root modified ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -3.789544437546283:  root modified ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -1.3896477264352143:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.322240382432938:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member v_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -5.144884437322617:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators -_ter ^ ^ member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> loc2']
copynode -1.3896477264352143:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.329280763864517:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -1.3896477264352143:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.1856923220911995:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.3214404582977295:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  postfix_operators ++_ter ^ ^ member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter', 'member -> loc2']
copynode -2.4814693671651185:  root modified ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -1.3896477264352143:  root modified ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -2.3708228766918182:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -1.3896477264352143:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -2.4814693671651185:  root modified ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -2.4814693671651185:  root modified ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.1856923220911995:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -2.5819020388880745:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.1411862671375275:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc6 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc6', 'root -> End']
copynode -3.1307318955659866:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators !_ter ^ ^ member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc1']
copynode -3.1307318955659866:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators !_ter ^ ^ member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc3']
copynode -2.5819020388880745:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.5430817721644416:  root add ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -3.1856923220911995:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -6.1728279708186164:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -2.5819020388880745:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -2.5819020388880745:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.430696040391922:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member v_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -2.5819020388880745:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.1856923220911995:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -1.3896477264352143:  root modified ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.789544437546283:  root modified ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -3.1856923220911995:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member']
copynode -3.1856923220911995:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member']
copynode -2.4814693671651185:  root modified ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.05353245139122:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc1', 'start -> unknown']
copynode -6.744061201810837:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  postfix_operators --_ter ^ ^ member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> --_ter', 'member -> loc2']
copynode -2.3708228766918182:  root add ^ StatementExpression expression MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -3.1307318955659866:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators !_ter ^ ^ member v_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'copy-member']
copynode -6.475149616599083:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.5819020388880745:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -2.4814693671651185:  root modified ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.881478875875473:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  qualifier Token_ter ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -3.1856923220911995:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.993782132863998:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators ++_ter ^ ^ member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ++_ter', 'member -> loc2']
copynode -3.1856923220911995:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -3.1307318955659866:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -7.41204634308815:  root add ^ StatementExpression expression This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors']
copynode -6.836724531487562:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member isBleedingFunction_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -6.439184874296188:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  qualifier unknown ^ ^ member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown', 'member -> loc2']
copynode -7.082533210515976:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.427457898855209:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators ~_ter ^ ^ member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ~_ter', 'member -> loc2']
copynode -2.4814693671651185:  root modified ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member']
copynode -7.089211714104749:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member isQualifiedName_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -2.3708228766918182:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -3.5430817721644416:  root add ^ IfStatement condition MemberReference prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -7.777354121208191:  root add ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -6.05353245139122:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  qualifier loc1 ^ ^ member LP_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc1', 'copy-member']
copynode -7.5858953116694465:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -5.144884437322617:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators -_ter ^ ^ member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> loc3']
copynode -7.481578123406507:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -5.3214404582977295:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  postfix_operators ++_ter ^ ^ member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter', 'member -> loc1']
copynode -6.475149616599083:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.1307318955659866:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators !_ter ^ ^ member loc5 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc5']
copynode -0.7657501781941392:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -0.7657501781941392:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -0.7657501781941392:  root modified ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.610725775361061:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.8680261080153286:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.610725775361061:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.642256081104279:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -2.610725775361061:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.793912164866924:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4', 'root -> End']
copynode -5.127652399241924:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  member loc5 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc5', 'root -> End']
copynode -3.7382082874537446:  root modified ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -0.7657501781941392:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.232846588362008:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.58638309687376:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3', 'root -> End']
copynode -3.7382082874537446:  root modified ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.240426391828805:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -4.232846588362008:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.610725775361061:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.923129193484783:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  member loc6 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc6', 'root -> End']
copynode -5.702280514931772:  root modified ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -0.7657501781941392:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.076952517032623:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -4.232846588362008:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -5.240426391828805:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -3.7382082874537446:  root modified ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.7382082874537446:  root modified ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -0.7657501781941392:  root modified ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -0.7657501781941392:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.572472089028452:  root modified ^ IfStatement condition MemberReference member loc2 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -3.8680261080153286:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.7382082874537446:  root modified ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -3.7382082874537446:  root modified ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -3.8680261080153286:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.7382082874537446:  root modified ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -2.610725775361061:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -4.232846588362008:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -6.938369147479534:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2', 'root -> End']
copynode -3.7382082874537446:  root modified ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.03279160807142:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -6.667620271909982:  root add ^ IfStatement condition MemberReference member loc2 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.121373526751995:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -4.232846588362008:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -3.7382082874537446:  root modified ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -0.7657501781941392:  root modified ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.702280514931772:  root modified ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -4.232846588362008:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -3.7382082874537446:  root modified ^ IfStatement condition MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -7.306713574624155:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.3294480964541435:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -7.359200112521648:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  member v_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -3.8680261080153286:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.8680261080153286:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.8680261080153286:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.868248514831066:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.444635979831219:  root modified ^ MemberReference-MemberReference member loc4 ^ ^ ^  member t_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -1.8573029339313507:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -1.7616841793060303:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.9736689922283404:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.250443235039711:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  member loc6 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc6', 'root -> End']
copynode -3.332861602306366:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  member loc6 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc6', 'root -> End']
copynode -1.7616841793060303:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -2.9467047450016253:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.231427937746048:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -4.434061899781227:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3', 'root -> End']
copynode -1.7616841793060303:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.862478196329903:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -4.51719743013382:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3', 'root -> End']
copynode -4.571127787232399:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  member loc7 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc7', 'root -> End']
copynode -2.9467047450016253:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -4.6989598870277405:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  member loc7 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc7', 'root -> End']
copynode -3.862478196329903:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -2.9467047450016253:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.96104134619236:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  member loc5 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc5', 'root -> End']
copynode -5.043890535831451:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  member loc5 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc5', 'root -> End']
copynode -5.1337839514017105:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -1.8573029339313507:  root modified ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.317267000675201:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -2.9467047450016253:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -2.9467047450016253:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -1.7616841793060303:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -1.7616841793060303:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.6902932077646255:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4', 'root -> End']
copynode -5.7816415429115295:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4', 'root -> End']
copynode -2.9467047450016253:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member']
copynode -6.110504999756813:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -6.206547319889069:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -6.266142845153809:  root modified ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -2.9467047450016253:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -1.8573029339313507:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.862478196329903:  root add ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.502695694565773:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  member v_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -6.310073882341385:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -6.1456990242004395:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  qualifier loc6 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc6', 'start -> unknown']
copynode -6.608477249741554:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  member loc8 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc8', 'root -> End']
copynode -6.618334427475929:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  member t_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -6.629406988620758:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  member v_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -2.9736689922283404:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.233248353004456:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  qualifier loc6 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc6', 'start -> unknown']
copynode -6.135437747463584:  root modified ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -2.9736689922283404:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.747404634952545:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  member loc8 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc8', 'root -> End']
copynode -6.751023352146149:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  member t_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -2.9467047450016253:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member']
copynode -2.9467047450016253:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -2.9736689922283404:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -2.9736689922283404:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.83153416775167:  root modified ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -1.8573029339313507:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -2.9736689922283404:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.09672549366951:  root add ^ StatementExpression expression This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors']
copynode -1.7616841793060303:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -2.9467047450016253:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -2.9736689922283404:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.278071999549866:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -7.244578957557678:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  qualifier compiler_ter ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -7.4121403095196:  root add ^ IfStatement condition MemberReference member loc2 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.567129522562027:  root add ^ ReturnStatement_ter ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -6.135437747463584:  root modified ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
before@5 batch0 x: -9.400739055126905: root modified ^ parameters FormalParameter modifiers final_ter ^ ^ type ^ name ^ ^ ^ ^  ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name', 'modifiers -> final_ter']
after@5 batch0 x: -9.400739055126905: root modified ^ parameters FormalParameter modifiers final_ter ^ ^ type ^ name ^ ^ ^ ^  ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name', 'modifiers -> final_ter']
before@5 batch1 x: -8.176704242825508: root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators !_ter ^ ^ member loc5 ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc5']
after@5 batch1 x: -8.176704242825508: root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators !_ter ^ ^ member loc5 ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc5']
before@5 batch2 x: -7.455464489990845: root modified ^ qualifier-qualifier v_ter ^ ^  NodeUtil_ter ^ ^ ^  ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
after@5 batch2 x: -7.455464489990845: root modified ^ qualifier-qualifier v_ter ^ ^  NodeUtil_ter ^ ^ ^  ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
before@5 batch3 x: -7.717104932293296: root modified ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
after@5 batch3 x: -7.717104932293296: root modified ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.859578140109079:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator']
copynode -3.215280340751633:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -3.215280340751633:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -4.863396570086479:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.0462563873734325:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.122680433327332:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -5.329050684114918:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -5.338755989214405:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -4.682206079363823:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -4.311089182039723:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -4.453040048480034:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -4.311089182039723:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -5.617789173265919:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -5.735685968538746:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.586476303666132:  root modified ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator']
copynode -5.839247681229608:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator']
copynode -5.792187906830804:  root modified ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator']
copynode -5.762455917923944:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator']
copynode -5.7800397649698425:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator']
copynode -5.086897656321526:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -3.215280340751633:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.915757156937616:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator']
copynode -4.311089182039723:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -6.401602649828419:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -3.215280340751633:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -6.442272942047566:  root modified ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -3.215280340751633:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -6.200674988358514:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator']
copynode -4.453040048480034:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.453040048480034:  root add ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.692211771151051:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter']
copynode -5.831232929369435:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.086897656321526:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -4.453040048480034:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.311089182039723:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -4.682206079363823:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -6.951801598072052:  root modified ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -3.215280340751633:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -6.719276651216205:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name Node_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -5.762455917923944:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -5.086897656321526:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -5.915757156937616:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -4.453040048480034:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.7800397649698425:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -5.982579136034474:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier']
copynode -6.665153287351131:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -4.682206079363823:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -4.453040048480034:  root add ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.982579136034474:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown']
copynode -5.586476303666132:  root modified ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -4.682206079363823:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -7.123936736723408:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -5.086897656321526:  root add ^ StatementExpression expression MethodInvocation arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -5.792187906830804:  root modified ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -4.453040048480034:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.6239481419324875:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown']
copynode -7.362035274505615:  root add ^ StatementExpression expression SuperMethodInvocation member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> member', 'member -> meth0']
copynode -6.200674988358514:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -3.215280340751633:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter']
copynode -7.356225097319111:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -7.675961539149284:  root add ^ StatementExpression expression MethodInvocation selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation']
copynode -7.452168548246846:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.665153287351131:  root add ^ StatementExpression expression MemberReference postfix_operators --_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> --_ter']
copynode -4.311089182039723:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -7.426315868040547:  root add ^ IfStatement condition This selectors MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -4.453040048480034:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.453040048480034:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.682206079363823:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -7.5271600724663585:  root add ^ IfStatement condition MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -1.4833272215910256:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -1.4833272215910256:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -3.3136689215898514:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators !_ter ^ ^ member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc2', 'root -> End']
copynode -3.3162439805455506:  root modified ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2']
copynode -2.7274095682660118:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -2.7274095682660118:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -4.178324286360294:  root modified ^ IfStatement condition MemberReference member loc2 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -4.159111809567548:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.335754103027284:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -2.7274095682660118:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -4.427944153547287:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.531065773800947:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -4.049131248611957:  root modified ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2']
copynode -3.487115830183029:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
copynode -4.947770130471326:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -5.013625834602863:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -4.133628815412521:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -5.136017296928912:  root modified ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -5.175932649988681:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -4.217659842805006:  root add ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2']
copynode -5.326271548867226:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators -_ter ^ ^ member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> loc2', 'root -> End']
copynode -5.4157664817757905:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -4.049131248611957:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -4.972623561043292:  root modified ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.462515596766025:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -2.7274095682660118:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -3.487115830183029:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -5.5320818573236465:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  postfix_operators ++_ter ^ ^ member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter', 'member -> loc2', 'root -> End']
copynode -5.5647542220540345:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -3.5397739112377167:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.6432540458627045:  root modified ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -3.5397739112377167:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.487115830183029:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2']
copynode -3.5397739112377167:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.888886217493564:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -3.5397739112377167:  root add ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.5397739112377167:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2']
copynode -5.443963877856731:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -3.5397739112377167:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1']
copynode -6.156364277005196:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators !_ter ^ ^ member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc1', 'root -> End']
copynode -6.1796911507844925:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators !_ter ^ ^ member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc3', 'root -> End']
copynode -3.5397739112377167:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.487115830183029:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -3.5397739112377167:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3']
copynode -3.487115830183029:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -2.7274095682660118:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -4.133628815412521:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.239457142190076:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -5.923778269905597:  root modified ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc2']
copynode -3.5397739112377167:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.0380156157771125:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -3.487115830183029:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -3.487115830183029:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -4.217659842805006:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
copynode -5.932929728645831:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -5.443963877856731:  root add ^ StatementExpression expression MemberReference postfix_operators --_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> --_ter']
copynode -3.487115830183029:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -3.3162439805455506:  root modified ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -4.217659842805006:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -6.196111929253675:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.5631151316920295:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -2.7274095682660118:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -3.487115830183029:  root add ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -6.651964907068759:  root modified ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -4.217659842805006:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3']
copynode -4.133628815412521:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -4.133628815412521:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -6.398617040948011:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.382780325249769:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -1.4833272215910256:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -6.838883411721326:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -6.49015666230116:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.885895740822889:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter']
copynode -3.487115830183029:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3']
copynode -6.888685439247638:  root modified ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -6.903681069612503:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'root -> End']
copynode -5.483963978127576:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.958495870232582:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  postfix_operators --_ter ^ ^ member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> --_ter', 'member -> loc2', 'root -> End']
copynode -1.682374068594072:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -1.9111071909428574:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -2.116883882379625:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -2.116883882379625:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -4.643089641758706:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -4.12015125202015:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -3.0246818512678146:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -3.0246818512678146:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.0246818512678146:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.0246818512678146:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3']
copynode -3.0246818512678146:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.423108347749803:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -4.12015125202015:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -3.0246818512678146:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.7865151315927505:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -5.898827448487282:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.792436331976205:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.227279060578439:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.050095805025194:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -3.0246818512678146:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.12015125202015:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -3.0246818512678146:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2']
copynode -3.0246818512678146:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1']
copynode -6.300224870909005:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -6.353835791815072:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -5.783994191384409:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.438301556801889:  root modified ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -3.0246818512678146:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -6.46456266293535:  root modified ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.562838801241014:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -4.4291694313287735:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -4.4291694313287735:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3']
copynode -4.4291694313287735:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -4.4291694313287735:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -2.116883882379625:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -6.728183263039682:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -4.7865151315927505:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -6.237407803535461:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -4.4291694313287735:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -6.022132330632303:  root modified ^ IfStatement condition MemberReference member loc4 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -6.828339093422983:  root modified ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -6.814935200905893:  root modified ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.862305254209787:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -6.022132330632303:  root modified ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.12015125202015:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -5.885605425108224:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -7.010729306435678:  root modified ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -4.7865151315927505:  root add ^ StatementExpression expression MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -4.12015125202015:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -6.722662061918527:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -7.1945633823634125:  root modified ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member detachFromParent_ter ^ ^ ^ ^ member getInitialValue_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -6.823715299833566:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -1.9162851758301258:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3']
copynode -2.039091557264328:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3']
copynode -3.0984200757811777:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -4.231932856957428:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -2.039091557264328:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -2.039091557264328:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.8852810859680176:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3']
copynode -4.686418294615578:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -3.0984200757811777:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -2.039091557264328:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.856185495562386:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -4.5072703954647295:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.0935817954014055:  root add ^ IfStatement condition MethodInvocation qualifier loc6 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc6']
copynode -4.4392991065979:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -2.039091557264328:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.156265765428543:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -3.0984200757811777:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.465491890616249:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -2.039091557264328:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2']
copynode -5.559661626815796:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -2.039091557264328:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -2.039091557264328:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.932680010504555:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter']
copynode -2.039091557264328:  root add ^ StatementExpression expression MethodInvocation qualifier loc6 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc6']
copynode -3.8852810859680176:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -2.039091557264328:  root add ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.903459310240578:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -3.8852810859680176:  root add ^ StatementExpression expression MethodInvocation qualifier loc6 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc6']
copynode -4.4392991065979:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -3.0984200757811777:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -5.528994083404541:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc3']
copynode -6.266664402617607:  root modified ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -5.460431694693398:  root add ^ IfStatement condition MethodInvocation qualifier loc6 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc6']
copynode -6.309608101553749:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -3.0984200757811777:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -4.0935817954014055:  root add ^ IfStatement condition MethodInvocation qualifier loc5 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc5']
copynode -6.414027005434036:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3']
copynode -6.590699911117554:  root modified ^ MemberReference-MemberReference member loc9 ^ ^ ^  qualifier loc6 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc6', 'start -> unknown', 'root -> End']
copynode -6.689503610134125:  root modified ^ MemberReference-MemberReference member loc5 ^ ^ ^  qualifier loc6 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc6', 'start -> unknown', 'root -> End']
copynode -6.68965139053762:  root modified ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -6.786357521719765:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -6.64549368590815:  root add ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -3.8852810859680176:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -3.0984200757811777:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -4.0935817954014055:  root add ^ IfStatement condition MethodInvocation qualifier loc7 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc7']
copynode -6.728015362925362:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -4.903459310240578:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3']
copynode -6.918152987665962:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.54862217605114:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -3.8852810859680176:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -4.0935817954014055:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
before@6 batch0 x: -7.901123428484425: root add ^ IfStatement condition MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
after@6 batch0 x: -7.901123428484425: root add ^ IfStatement condition MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
before@6 batch1 x: -6.959047663433012: root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  postfix_operators --_ter ^ ^ member loc2 ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> --_ter', 'member -> loc2', 'root -> End']
after@6 batch1 x: -6.959047663433012: root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  postfix_operators --_ter ^ ^ member loc2 ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> --_ter', 'member -> loc2', 'root -> End']
before@6 batch2 x: -7.20687234448269: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
after@6 batch2 x: -7.20687234448269: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
before@6 batch3 x: -7.092342495627236: root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
after@6 batch3 x: -7.092342495627236: root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -2.8672100594558287:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -4.208223031600937:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -4.007892297348008:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -4.897186242043972:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -5.163714938098565:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -4.007892297348008:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -5.343308448558673:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -5.521375680109486:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -5.619908933062106:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -5.778244696586626:  root modified ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -5.093879146268591:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -5.946478515892522:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -5.093879146268591:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -6.010699726670282:  root modified ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -6.047983504860895:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -6.05812863263418:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -4.208223031600937:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -6.135278269648552:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.2534845546178985:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -5.772798770805821:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -6.4659382603131235:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -6.362783575197682:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.176006125053391:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -6.531843371718423:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -5.557954236865044:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.3312075971625745:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier v_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -5.3312075971625745:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -5.772798770805821:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -6.531011150917038:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -6.823796793818474:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -6.931010887026787:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.879457616945729:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -7.043342843127903:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -7.1827401891641784:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators', 'root -> End']
copynode -7.187311865418451:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators', 'root -> End']
copynode -7.220881201355951:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators', 'root -> End']
copynode -6.429940985282883:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -5.557954236865044:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal']
copynode -7.257163688540459:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -7.3734657541208435:  root modified ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators', 'root -> End']
copynode -7.2296277524437755:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation']
copynode -6.429940985282883:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MethodInvocation']
copynode -7.2383522018790245:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter', 'start -> unknown']
copynode -7.418288752436638:  root add ^ StatementExpression expression MethodInvocation arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value']
copynode -5.3312075971625745:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier v_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -7.388729020953178:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -7.454977013199823:  root modified ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators', 'root -> End']
copynode -6.40454440866597:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -7.4849828258447815:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators', 'root -> End']
copynode -7.370942497393116:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -7.4800474643707275:  root add ^ StatementExpression expression SuperMethodInvocation member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> member', 'member -> meth0', 'root -> End']
copynode -7.478686079382896:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -2.8672100594558287:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name']
copynode -5.557954236865044:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -5.093879146268591:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression']
copynode -5.3312075971625745:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier v_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -6.973052786430344:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -4.007892297348008:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
copynode -6.754918778082356:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -7.845239216228947:  root add ^ IfStatement condition This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -4.007892297348008:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
copynode -7.184333607554436:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.176006125053391:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -7.888082191348076:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.973052786430344:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MethodInvocation']
copynode -1.984178137499839:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference']
copynode -2.438123357016593:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference']
copynode -3.6444201139966026:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -3.600907836575061:  root modified ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown']
copynode -4.225426830817014:  root modified ^ IfStatement condition MemberReference member loc2 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'root -> End']
copynode -4.372750370763242:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -3.9983380703488365:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -4.475428897887468:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -4.5350923553342:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -4.406482305959798:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -4.912896364927292:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown']
copynode -5.084651321172714:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -1.984178137499839:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -5.137622605427168:  root modified ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member loc2 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc2']
copynode -4.338361662463285:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -5.015168041689321:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc2 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc2']
copynode -5.228304993943311:  root add ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown']
copynode -5.46213335217908:  root modified ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -4.338361662463285:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression']
copynode -3.9983380703488365:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -1.984178137499839:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -4.865234826225787:  root modified ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2', 'arguments -> MemberReference']
copynode -3.6444201139966026:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -2.438123357016593:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation']
copynode -4.338361662463285:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -5.755866259336472:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown']
copynode -5.422716591972858:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -4.949228586745448:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc2 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc2']
copynode -6.189601629972458:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.229436129331589:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -4.406482305959798:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference']
copynode -6.254518483299762:  root modified ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc2', 'selectors -> MethodInvocation']
copynode -6.236751765012741:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -2.438123357016593:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -5.5663612021598965:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc2 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'qualifier -> loc2']
copynode -5.46391054673586:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -6.3519227206707:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.502514396328479:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.406482305959798:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -5.625230759382248:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -6.462791174650192:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.4829207776347175:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown']
copynode -6.598367661237717:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -5.705770939588547:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -6.6522214114665985:  root add ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.619576309341937:  root modified ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -3.600907836575061:  root modified ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'copy-member']
copynode -5.46391054673586:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference']
copynode -6.738908737897873:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -6.231728997663595:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -5.803322285413742:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -6.697014939622022:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown']
copynode -3.9983380703488365:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
copynode -6.803695034701377:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -6.888598650693893:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown']
copynode -6.840268748346716:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -5.5663612021598965:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -3.6444201139966026:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'copy-operandl']
copynode -4.865234826225787:  root modified ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2', 'arguments -> MethodInvocation']
copynode -2.5019953931332566:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -2.5019953931332566:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl']
copynode -3.3190159882069565:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -3.3190159882069565:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -4.714868095645215:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -4.925489217508584:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -5.677435651421547:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.949034471064806:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -5.084083363413811:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.482991904485971:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -2.5019953931332566:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation']
copynode -5.270356938242912:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.1995847672224045:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.232295796275139:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -6.415499203896616:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.925489217508584:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -5.235166355967522:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference']
copynode -6.35978656867519:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -2.5019953931332566:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference']
copynode -6.011367493367288:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.572088047862053:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -6.607477441430092:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -5.482991904485971:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -6.593815580010414:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown']
copynode -6.601190581917763:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -5.9546435181982815:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -6.192373008001596:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -5.9546435181982815:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression']
copynode -6.8248482281924225:  root modified ^ IfStatement condition MemberReference member loc4 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'root -> End']
copynode -3.3190159882069565:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -6.842766013985965:  root modified ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -6.764013543725014:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.885400765633676:  root modified ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -5.235166355967522:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal']
copynode -5.235166355967522:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation']
copynode -6.100200459361076:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.084083363413811:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal']
copynode -5.1995847672224045:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -5.235166355967522:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'copy-arguments']
copynode -5.084083363413811:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -1.9352531675249338:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference']
copynode -1.9352531675249338:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation']
copynode -2.7467143833637238:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference']
copynode -3.6699798625777476:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -2.7467143833637238:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation']
copynode -4.253384250099771:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -4.590437531471252:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown']
copynode -2.7467143833637238:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal']
copynode -4.366796940565109:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.063960134983063:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.9512653347919695:  root add ^ IfStatement condition MethodInvocation qualifier loc6 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc6', 'start -> unknown']
copynode -4.697264365560841:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -1.9352531675249338:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal']
copynode -4.870608004450332:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -4.512005299329758:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -4.87677374453051:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -5.32481424510479:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.6699798625777476:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -4.737068623304367:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.577480902895331:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -4.689460429537576:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc6 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc6']
copynode -5.077652662992477:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -4.697264365560841:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -4.366796940565109:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -1.9352531675249338:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'copy-arguments']
copynode -1.9352531675249338:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments BinaryOperation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> BinaryOperation']
copynode -6.0159831047058105:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -5.415070227987599:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -4.512005299329758:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -4.87677374453051:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression']
copynode -6.121901273727417:  root add ^ StatementExpression expression MethodInvocation qualifier loc6 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc6', 'start -> unknown']
copynode -2.7467143833637238:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'copy-arguments']
copynode -1.9352531675249338:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'copy-arguments']
copynode -4.737068623304367:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -5.697061747312546:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -2.7467143833637238:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'copy-arguments']
copynode -6.317253181769047:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -6.317245543003082:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc3', 'selectors -> MethodInvocation']
copynode -1.9352531675249338:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'copy-arguments']
copynode -1.9352531675249338:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'copy-arguments']
copynode -5.482075423002243:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2', 'arguments -> MemberReference']
copynode -2.7467143833637238:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'copy-arguments']
copynode -6.337390541739296:  root add ^ IfStatement condition MethodInvocation qualifier loc6 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc6', 'selectors -> MethodInvocation']
copynode -6.442594647116493:  root add ^ IfStatement condition MethodInvocation qualifier loc5 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc5', 'start -> unknown']
copynode -6.459744032472372:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'copy-member']
copynode -2.7467143833637238:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments BinaryOperation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> BinaryOperation']
copynode -4.689460429537576:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc5 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc5']
copynode -5.468028540897649:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -5.482075423002243:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2', 'arguments -> MethodInvocation']
copynode -6.371339831210207:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -5.077652662992477:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
before@7 batch0 x: -7.959502743324265: root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MethodInvocation']
after@7 batch0 x: -7.959502743324265: root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MethodInvocation']
before@7 batch1 x: -7.093719933647662: root modified ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2', 'arguments -> MethodInvocation']
after@7 batch1 x: -7.093719933647662: root modified ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2', 'arguments -> MethodInvocation']
before@7 batch2 x: -7.226477190852165: root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
after@7 batch2 x: -7.226477190852165: root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
before@7 batch3 x: -6.821697733175824: root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
after@7 batch3 x: -6.821697733175824: root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member recordAlias_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -2.8794158799864817:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0']
copynode -4.487538801273331:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.494149075588211:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.197474342072383:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.791637377842562:  root modified ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0']
copynode -5.792835337808356:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement_ter', 'root -> End']
copynode -5.959915478742914:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0']
copynode -5.363507197936997:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.0239313124038745:  root modified ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0']
copynode -6.061241243995028:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0']
copynode -6.070924296072917:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0']
copynode -5.412551745539531:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -5.650454753777012:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -5.412551745539531:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -6.266156704194145:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0']
copynode -5.696520124096423:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -6.350868457695469:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement_ter', 'root -> End']
copynode -6.488283717539161:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.544145976222353:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0']
copynode -6.604535385966301:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.533845411380753:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.696520124096423:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -6.188479550182819:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.112327025970444:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.656545007135719:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier', 'start -> unknown']
copynode -5.650454753777012:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.907498225569725:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -6.51240731193684:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -6.969800278544426:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.885052369674668:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.056218081561383:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators', 'root -> End']
copynode -7.232931958278641:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.247041031718254:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value']
copynode -7.305594738572836:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -7.407839618623257:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter', 'start -> unknown', 'root -> End']
copynode -7.450387589633465:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -7.034952679416165:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -7.548144011787372:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name', 'name -> loc0']
copynode -7.437308633234352:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier', 'start -> unknown']
copynode -7.7705703841056675:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.51240731193684:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -5.197474342072383:  root add ^ StatementExpression expression Assignment expressionl MemberReference member v_ter ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.812481367727742:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.363507197936997:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getParent_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.752353591611609:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -7.376085260650143:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.75556501140818:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier', 'start -> unknown']
copynode -7.950068190693855:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -7.848282546969131:  root add ^ IfStatement condition This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.197474342072383:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.363507197936997:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -7.40391437872313:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.501812943955883:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.564370557665825:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.541070032864809:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -2.094271939713508:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -2.5522306230850518:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -3.8964129654923454:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -3.9187993449158967:  root modified ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown', 'root -> End']
copynode -4.439675268367864:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.990556180477142:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'root -> End']
copynode -5.172889779671095:  root modified ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member loc2 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc2', 'root -> End']
copynode -4.818622024380602:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -4.965554442838766:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.431546869687736:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -5.673758004326373:  root modified ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.508699101046659:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -2.094271939713508:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -5.827905458048917:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement_ter', 'root -> End']
copynode -5.833321176469326:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown', 'root -> End']
copynode -4.431546869687736:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -2.094271939713508:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.402189374668524:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc2', 'start -> unknown']
copynode -5.990302179474384:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.585410085157491:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.269017539918423:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.0450771470787:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc2', 'start -> unknown']
copynode -5.693234649137594:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.310068294405937:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -6.35369373857975:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -2.5522306230850518:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.122890949249268:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.433955438435078:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -4.431546869687736:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.5097534116357565:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -5.447385382489301:  root add ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -5.645898174960166:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.818622024380602:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -5.447385382489301:  root add ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown', 'root -> StatementExpression']
copynode -6.57698555290699:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.55927500128746:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.310223784879781:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.705933354794979:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -5.169543575961143:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.391933765844442:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.77636044472456:  root add ^ StatementExpression expression MethodInvocation qualifier scopedAliasNames_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.749626129865646:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -2.5522306230850518:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference prefix_operators ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -4.818622024380602:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> StatementExpression']
copynode -6.83104356052354:  root modified ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.834113155025989:  root modified ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'copy-member', 'root -> End']
copynode -6.342763696331531:  root modified ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc2', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.447385382489301:  root add ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown', 'root -> End']
copynode -6.84411147236824:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member v_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -6.871503856615163:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.122890949249268:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.899773687124252:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.952438828069717:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.966962486505508:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'root -> End']
copynode -4.431546869687736:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -3.0782123888493516:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.45839286694536:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -3.0782123888493516:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.903365084028337:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.45839286694536:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> MethodInvocation']
copynode -4.27465058217058:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -3.903365084028337:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.761316076794174:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.267204344738275:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.27465058217058:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation']
copynode -6.047807902563363:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -3.45839286694536:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'copy-operandr']
copynode -6.042662069201469:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.358978793025017:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.376820012927055:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.413686081767082:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.42742045695195:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -6.519503399729729:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.602310233807657:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.6366259306669235:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.719015676528215:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.679734580218792:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.705552786588669:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'root -> End']
copynode -6.708712734282017:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.600259133672807:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.850323148071766:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.898262903094292:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value']
copynode -4.27465058217058:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'copy-operandr']
copynode -6.561259521637112:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -3.45839286694536:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> MemberReference']
copynode -7.139759585261345:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value']
copynode -7.098825320601463:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.49550822423771:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.7823213641531765:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -6.764876693952829:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.400830501690507:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.7116799652576447:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.8984342289040796:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -3.4410832170397043:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.638675656169653:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'root -> End']
copynode -4.697655230760574:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value']
copynode -4.043777972459793:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.29764696105849:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.041232854127884:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.170363150245976:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.183875346556306:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value']
copynode -5.211720734834671:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.4410832170397043:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.20094883692218:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -3.4410832170397043:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.522697597742081:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.820262581110001:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.115204184956383:  root add ^ IfStatement condition MethodInvocation qualifier loc6 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc6', 'start -> unknown', 'root -> StatementExpression']
copynode -5.742019805300515:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc6 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc6', 'start -> unknown']
copynode -5.115204184956383:  root add ^ IfStatement condition MethodInvocation qualifier loc6 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc6', 'start -> unknown', 'root -> End']
copynode -5.982934499159455:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'copy-arguments', 'copy-member']
copynode -6.05282648652792:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -3.7116799652576447:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -4.043777972459793:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -6.17636114731431:  root add ^ StatementExpression expression MethodInvocation qualifier loc6 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc6', 'start -> unknown', 'root -> End']
copynode -5.514677457220387:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.090325347788166:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.4410832170397043:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -6.164954214997124:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -6.27925636805594:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'copy-arguments', 'copy-member']
copynode -6.334840506315231:  root add ^ StatementExpression expression MethodInvocation qualifier compiler_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.4410832170397043:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.087677638977766:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -6.36823227442801:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'copy-arguments', 'copy-member']
copynode -6.4077372793108225:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'copy-arguments', 'copy-member']
copynode -6.015399003401399:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.333333964459598:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -6.19598463177681:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'copy-arguments', 'start -> unknown']
copynode -6.4378800094127655:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.349411755800247:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'copy-arguments', 'start -> unknown']
copynode -3.4410832170397043:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -2.400830501690507:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.645563822239637:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'copy-member', 'root -> End']
copynode -5.910532884008717:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.4410832170397043:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.333333964459598:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -3.4410832170397043:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.043777972459793:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.980106204748154:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.364451058208942:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc3', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.29764696105849:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc3']
before@8 batch0 x: -8.231759060174227: root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
after@8 batch0 x: -8.231759060174227: root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
before@8 batch1 x: -7.117886724881828: root add ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
after@8 batch1 x: -7.117886724881828: root add ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
before@8 batch2 x: -7.471016735304147: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
after@8 batch2 x: -7.471016735304147: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
before@8 batch3 x: -6.761453351820819: root add ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc3']
after@8 batch3 x: -6.761453351820819: root add ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -2.8812953105953056:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation']
copynode -4.507359522162005:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.494563986314461:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.79433604030055:  root modified ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation']
copynode -5.962462048773887:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation']
copynode -2.8812953105953056:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast']
copynode -6.02672996770707:  root modified ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation']
copynode -6.159093731781468:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> ReturnStatement_ter', 'root -> End']
copynode -6.064067992410855:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation']
copynode -6.0737553478975315:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation']
copynode -5.502287548268214:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation']
copynode -6.266895457869396:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement_ter', 'root -> End']
copynode -6.279516969341785:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement_ter', 'root -> End']
copynode -6.269155973364832:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation']
copynode -4.494563986314461:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member v_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.525939909275621:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation']
copynode -6.5469495924480725:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation']
copynode -4.507359522162005:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member v_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.502287548268214:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal']
copynode -6.992086777230725:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> ReturnStatement_ter', 'root -> End']
copynode -2.8812953105953056:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MemberReference']
copynode -2.8812953105953056:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This']
copynode -5.502287548268214:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference']
copynode -6.809168107807636:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -6.025132464012131:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -6.856457480695099:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -6.025132464012131:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -2.8812953105953056:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> BinaryOperation']
copynode -7.526486137649044:  root add ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> ReturnStatement_ter', 'root -> End']
copynode -7.55009217877523:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name', 'name -> loc0', 'root -> End']
copynode -6.696791739901528:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -7.2565211821347475:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -2.8812953105953056:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer TernaryExpression ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> TernaryExpression']
copynode -6.696791739901528:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -7.0317439751233906:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -7.2440506217535585:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.856457480695099:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.822486148914322:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -7.892879111459479:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -4.494563986314461:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member v_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.025132464012131:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -7.7865618818905205:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -2.141814996022731:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -2.589763716328889:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -3.9069207260617986:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -4.454489824012853:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -5.7039784849621356:  root modified ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -5.37166506331414:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'value -> MethodInvocation']
copynode -5.851798814255744:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -5.2979134587803856:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -5.846251052455045:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -5.98465281794779:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc2', 'start -> unknown', 'root -> End']
copynode -5.999552197288722:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -3.9069207260617986:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -4.454489824012853:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -5.971467774827033:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference qualifier unknown ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -6.553927969769575:  root add ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown', 'root -> ReturnStatement_ter', 'root -> End']
copynode -6.583183200680651:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement_ter', 'root -> End']
copynode -2.141814996022731:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -2.141814996022731:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.2979134587803856:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.816421773750335:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -5.891619744710624:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation']
copynode -6.463957968167961:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'value -> MethodInvocation']
copynode -6.597068381146528:  root add ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -6.958543055225164:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.421667363960296:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference qualifier unknown ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -3.9069207260617986:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -2.589763716328889:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.539219221100211:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -6.435471057891846:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -2.589763716328889:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.828704746090807:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -5.891619744710624:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal']
copynode -6.311251195264049:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc2', 'start -> unknown', 'root -> End']
copynode -6.742520880419761:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier loc2 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2']
copynode -2.141814996022731:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -3.9069207260617986:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -5.891619744710624:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference']
copynode -3.4959118748665787:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -3.9912187541485764:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.18053949723253:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -3.4959118748665787:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation']
copynode -4.317801603174303:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -4.824294396734331:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.4959118748665787:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -4.18053949723253:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -4.317801603174303:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation']
copynode -5.009023496008012:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -5.009023496008012:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -6.066519507265184:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'copy-operandr', 'root -> End']
copynode -5.1422245660214685:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation']
copynode -4.317801603174303:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -4.671713122224901:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.1422245660214685:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal']
copynode -3.9912187541485764:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.277176946867257:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.1422245660214685:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference']
copynode -3.4959118748665787:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MemberReference']
copynode -4.671713122224901:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -3.9912187541485764:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.671713122224901:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.6148606353090145:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -3.9912187541485764:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.671713122224901:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -7.000946053361986:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'copy-operandr', 'root -> End']
copynode -5.414168604707811:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.504503642267082:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End']
copynode -6.063356401864439:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.414168604707811:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -4.824294396734331:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.277176946867257:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -2.416149222292006:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -2.416149222292006:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7']
copynode -2.416149222292006:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5']
copynode -2.416149222292006:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc8 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8']
copynode -3.81245294213295:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -3.910805808089208:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc6 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -4.490436220541596:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier loc6 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc6']
copynode -2.416149222292006:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc9']
copynode -4.958749434794299:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation']
copynode -3.81245294213295:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -2.416149222292006:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -3.910805808089208:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc7']
copynode -2.416149222292006:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -3.81245294213295:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7']
copynode -4.705815769731998:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -4.705815769731998:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -2.416149222292006:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.335358524695039:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference']
copynode -6.052147464826703:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc8 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'copy-arguments', 'copy-member', 'root -> End']
copynode -5.915552049584221:  root add ^ IfStatement condition MethodInvocation qualifier loc6 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc6', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -5.925798851239961:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc6 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc6', 'start -> unknown', 'root -> End']
copynode -3.910805808089208:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc5']
copynode -3.910805808089208:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.705815769731998:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -6.367546500638127:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'copy-arguments', 'copy-member', 'root -> End']
copynode -4.71720889210701:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -5.07859268784523:  root add ^ StatementExpression expression MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -6.30400760442717:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -2.416149222292006:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member t_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.104843646287918:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -5.4446237329393625:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.195924944884609:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc6 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -6.431248554959893:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'copy-arguments', 'copy-member', 'root -> End']
copynode -6.464602803811431:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'copy-arguments', 'copy-member', 'root -> End']
copynode -4.71720889210701:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier loc6 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc6']
copynode -5.198370362631977:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.5326487720012665:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member v_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -2.416149222292006:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.958749434794299:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference']
copynode -5.198370362631977:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -6.575718238949776:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -5.198370362631977:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -5.250058215111494:  root add ^ StatementExpression expression MethodInvocation qualifier v_ter ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -6.465024733915925:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -5.335358524695039:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -4.71720889210701:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier loc9 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc9']
copynode -5.195924944884609:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc7']
before@9 batch0 x: -8.192953472724184: root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
after@9 batch0 x: -8.192953472724184: root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
before@9 batch1 x: -7.1882314113900065: root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference']
after@9 batch1 x: -7.1882314113900065: root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference']
before@9 batch2 x: -7.157715052831918: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4']
after@9 batch2 x: -7.157715052831918: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4']
before@9 batch3 x: -6.698984332091641: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc7']
after@9 batch3 x: -6.698984332091641: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc7']
copynode -2.99112843934563:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.99112843934563:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -2.99112843934563:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -2.99112843934563:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> member']
copynode -2.99112843934563:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.7537942721974105:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -4.741092311916873:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -6.1337855926540215:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression']
copynode -4.7537942721974105:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -2.99112843934563:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -6.600240749772638:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.741092311916873:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -6.750640433514491:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value']
copynode -4.7537942721974105:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -4.7537942721974105:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -5.919108268601121:  root modified ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.2733742410782725:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.741092311916873:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal']
copynode -5.919108268601121:  root modified ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.114685641863616:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors']
copynode -6.08459493870032:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.151589792454615:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference', 'MemberReference -> member']
copynode -4.741092311916873:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -6.15240548204747:  root modified ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.08459493870032:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.097779857256683:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MemberReference', 'MemberReference -> member']
copynode -6.191130879364209:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.200458088685991:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.741092311916873:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> MemberReference']
copynode -6.585502554429695:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member v_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr']
copynode -4.741092311916873:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -6.15240548204747:  root modified ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.191130879364209:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.200458088685991:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.741092311916873:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -7.402447113301605:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier', 'start -> unknown', 'root -> ReturnStatement_ter', 'root -> End']
copynode -6.397925728728296:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.99112843934563:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -7.524077998736175:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.590371715166839:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -6.397925728728296:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -2.184508923906833:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation']
copynode -2.184508923906833:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MethodInvocation']
copynode -2.633498859126121:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation']
copynode -2.184508923906833:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference']
copynode -2.633498859126121:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MethodInvocation']
copynode -2.633498859126121:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference']
copynode -2.184508923906833:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member isQualifiedName_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -4.189036304713227:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -2.633498859126121:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member isQualifiedName_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -4.189036304713227:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -5.855321207782254:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member loc2 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc2']
copynode -4.189036304713227:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -4.189036304713227:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -5.761341488454491:  root modified ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -2.184508923906833:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -5.906555440858938:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -2.633498859126121:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -6.023173817899078:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -4.814480301574804:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference']
copynode -4.814480301574804:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -4.814480301574804:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -4.189036304713227:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal']
copynode -4.814480301574804:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -6.820628864225:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member loc2 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc2']
copynode -4.814480301574804:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal']
copynode -5.780444833450019:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -2.184508923906833:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -4.814480301574804:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -2.184508923906833:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -6.97257928235922:  root add ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -4.189036304713227:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference']
copynode -5.97581214888487:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.068541010841727:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'start -> unknown']
copynode -7.077114045619965:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'start -> unknown']
copynode -4.1805504346848466:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.304835059738252:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.298825779056642:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'root -> End']
copynode -4.620288291072939:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -5.0314886654377915:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.620288291072939:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl']
copynode -4.304835059738252:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -5.149374910688493:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.38200331578264:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -4.304835059738252:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.209240325784776:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'root -> End']
copynode -4.304835059738252:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -5.38200331578264:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -6.325851694622543:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value']
copynode -5.617017933225725:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -4.829659261798952:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.468298622465227:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -5.617017933225725:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl']
copynode -6.50817895779619:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -6.474073545017745:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference', 'MemberReference -> member']
copynode -4.829659261798952:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -6.574351021146867:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -5.149374910688493:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -6.0322781289578415:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -4.1805504346848466:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.149374910688493:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -4.829659261798952:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.0322781289578415:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -6.909895607328508:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -4.1805504346848466:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.149374910688493:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -6.994627245760057:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -6.508103170490358:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -4.829659261798952:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -3.5516614550724626:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference']
copynode -4.229433977045119:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> MemberReference']
copynode -4.321585618890822:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MemberReference']
copynode -4.718947493471205:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc8 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8', 'arguments -> MemberReference']
copynode -4.8987254202365875:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -3.5516614550724626:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MethodInvocation']
copynode -3.5516614550724626:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End']
copynode -5.3815317982807755:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc9', 'arguments -> MemberReference']
copynode -5.472780019044876:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End']
copynode -4.9292645321111195:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc6 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'copy-operandr']
copynode -5.300278032198548:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier loc6 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc6', 'start -> unknown']
copynode -5.570502125658095:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc3 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> MemberReference']
copynode -6.022756123915315:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.746676289476454:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference']
copynode -5.956945396959782:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -4.229433977045119:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> MethodInvocation']
copynode -6.117430612153839:  root add ^ IfStatement condition MethodInvocation qualifier loc6 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc6', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -4.321585618890822:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MethodInvocation']
copynode -5.987034880556166:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference']
copynode -4.9292645321111195:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc6 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'copy-operandr']
copynode -3.5516614550724626:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> Literal']
copynode -4.229433977045119:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End']
copynode -5.933723360300064:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End']
copynode -4.9292645321111195:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc6 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'copy-operandr']
copynode -5.448102853144519:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.321585618890822:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End']
copynode -5.9655437245965:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -6.303785301744938:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End']
copynode -6.572200677241199:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference', 'MemberReference -> member']
copynode -4.718947493471205:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc8 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8', 'arguments -> MethodInvocation']
copynode -5.65963219263358:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'copy-operandr']
copynode -6.374900772876572:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.380627715028822:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member t_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference']
copynode -6.641726994886994:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member']
copynode -6.469025403261185:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier loc6 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc6', 'start -> unknown']
copynode -4.8987254202365875:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference']
copynode -6.561195398680866:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value null_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> MemberReference']
copynode -6.610225702635944:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference']
copynode -4.718947493471205:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc8 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8', 'arguments -> End']
copynode -6.596065427176654:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value false_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> MemberReference']
before@10 batch0 x: -7.605002039839746: root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member']
after@10 batch0 x: -7.605002039839746: root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member']
before@10 batch1 x: -7.1447934210300446: root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'start -> unknown']
after@10 batch1 x: -7.1447934210300446: root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'start -> unknown']
before@10 batch2 x: -7.073753395176027: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
after@10 batch2 x: -7.073753395176027: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
before@10 batch3 x: -6.880193228833377: root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value false_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> MemberReference']
after@10 batch3 x: -6.880193228833377: root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value false_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> MemberReference']
copynode -4.07879602376488:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -4.177028412261279:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -4.07879602376488:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.177028412261279:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -5.515289062896045:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.696133362827823:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement_ter']
copynode -5.1295106357720215:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier']
copynode -5.600457926047966:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -6.208921859302791:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type ReferenceType ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType']
copynode -5.1295106357720215:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown']
copynode -5.54576277200249:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -5.515289062896045:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -6.647940838243812:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter']
copynode -6.461024994292529:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation']
copynode -4.177028412261279:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -6.279035289539024:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -5.600457926047966:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement_ter']
copynode -4.177028412261279:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -5.54576277200249:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -6.658846604404971:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement_ter']
copynode -4.07879602376488:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -7.093627798138186:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value']
copynode -4.07879602376488:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.07879602376488:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.07879602376488:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier scopedAliasNames_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.07879602376488:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.862787087215111:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -7.2672353557136375:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.296609629644081:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member v_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member', 'copy-operandr', 'root -> End']
copynode -5.696133362827823:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -6.279035289539024:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement_ter']
copynode -6.997100670589134:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -7.27959834295325:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.232613193569705:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement_ter']
copynode -4.177028412261279:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -5.1295106357720215:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier']
copynode -7.320801364956424:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement_ter']
copynode -6.786295432830229:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -5.1295106357720215:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier']
copynode -7.1648128836241085:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -2.9891256731934845:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.534553956706077:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.882501129526645:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -4.132770967204124:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -3.4686083835549653:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.9662613389082253:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.3419505399651825:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member isQualifiedName_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'root -> End']
copynode -3.4686083835549653:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.882501129526645:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -5.7390090939588845:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member isQualifiedName_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'root -> End']
copynode -3.4686083835549653:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -2.9891256731934845:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.4753735611448064:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'root -> End']
copynode -6.120772485155612:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'root -> End']
copynode -3.9662613389082253:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.9662613389082253:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.857095057726838:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'root -> End']
copynode -6.2545307545224205:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.100557422731072:  root modified ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'start -> unknown']
copynode -5.928689296008088:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'root -> End']
copynode -6.380292129237205:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'root -> End']
copynode -4.132770967204124:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -3.534553956706077:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.014850075007416:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'root -> End']
copynode -2.9891256731934845:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -2.9891256731934845:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member isQualifiedName_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -2.9891256731934845:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.4686083835549653:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MethodInvocation', 'MethodInvocation -> member']
copynode -2.9891256731934845:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.9237580539193:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member loc2 ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc2', 'operandr -> BinaryOperation']
copynode -2.9891256731934845:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.434649702743627:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -3.4686083835549653:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation qualifier loc1 ^ ^ member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.748429472208954:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value']
copynode -3.4686083835549653:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -2.9891256731934845:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.547455706691835:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -5.2558020139695145:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -4.547455706691835:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -5.493064322567079:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -5.6112670684815384:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -5.357932069397066:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.357932069397066:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.395141252374742:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -4.547455706691835:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -6.564977564907167:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -5.395141252374742:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.092789598798845:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -5.2558020139695145:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -6.236112543439958:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -6.793440201377962:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.949753382301424:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.505413004255388:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -6.126579531526659:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.126579531526659:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.180795528984163:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -5.6112670684815384:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl']
copynode -7.073753395176027:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -6.232236721611116:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -4.547455706691835:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -6.413770594692323:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc4 ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc4']
copynode -6.348663398122881:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.493064322567079:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> MethodInvocation']
copynode -6.347975739219692:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -6.348663398122881:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.023217343725264:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.680200600065291:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.778583311475813:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.1418326729908586:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc8 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.585862361826003:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'copy-member']
copynode -5.8259563678875566:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc9', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.985205792821944:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc3 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.935947643301915:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc6 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'copy-operandr', 'root -> End']
copynode -5.853196054697037:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'start -> unknown']
copynode -6.135565870441496:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.939364517107606:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier loc6 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc6', 'start -> unknown', 'arguments -> End']
copynode -6.207572468556464:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.284547054208815:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> Literal', 'Literal -> value']
copynode -6.249039040587377:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc6 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'copy-operandr', 'root -> End']
copynode -6.1358980014920235:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'start -> unknown']
copynode -6.285310708917677:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End', 'copy-member']
copynode -6.320820079825353:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc6 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'copy-operandr', 'root -> End']
copynode -6.17198206827743:  root add ^ IfStatement condition MethodInvocation qualifier loc6 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc6', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.406085097230971:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.383660995401442:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End', 'copy-member']
copynode -6.313403159379959:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End', 'start -> unknown']
copynode -6.3919344916939735:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'start -> unknown']
copynode -6.467737279832363:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'start -> unknown']
copynode -6.695408025756478:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.691782080568373:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member t_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.670540677092504:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'copy-operandr', 'root -> End']
copynode -6.805488879792392:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value null_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.786470323801041:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.72374814748764:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier loc6 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc6', 'start -> unknown', 'arguments -> End']
copynode -6.863112146966159:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.880193228833377:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value false_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.870079361833632:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc8 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8', 'arguments -> End', 'copy-member']
copynode -6.037190907634795:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -6.139341437257826:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.686066820926499:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3']
copynode -6.189490997232497:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.037190907634795:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7']
copynode -5.406085097230971:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.366175076807849:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation qualifier loc6 ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc6']
copynode -5.406085097230971:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
before@11 batch0 x: -7.754889210948022: root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference']
after@11 batch0 x: -7.754889210948022: root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference']
before@11 batch1 x: -6.905050469911657: root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  qualifier loc1 ^ ^ member unknown ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'root -> End']
after@11 batch1 x: -6.905050469911657: root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  qualifier loc1 ^ ^ member unknown ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'root -> End']
before@11 batch2 x: -7.2103123749257065: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
after@11 batch2 x: -7.2103123749257065: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
before@11 batch3 x: -7.450569712556899: root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
after@11 batch3 x: -7.450569712556899: root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MethodInvocation qualifier compiler_ter ^ ^ member getCodingConvention_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.18271505300072:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'copy-member']
copynode -5.18271505300072:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -5.954911912122043:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -6.033046620665118:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement_ter', 'root -> End']
copynode -5.154040092864307:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.30507468644646:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -6.0800135082390625:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation']
copynode -6.212199759000214:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type ReferenceType name Node_ter ^ ^ ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -5.154040092864307:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -6.610063189902576:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'root -> End']
copynode -5.30507468644646:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -6.606247896590503:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.648995323339477:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter', 'root -> End']
copynode -6.496473783889087:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -6.796020288718864:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement_ter', 'root -> End']
copynode -5.408623213210376:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown', 'copy-member']
copynode -7.007156121311709:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement_ter', 'root -> End']
copynode -6.6759781486180145:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.131095914868638:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.30507468644646:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -6.7419631427910645:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.799130196013721:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -5.154040092864307:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal']
copynode -7.399552094080718:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -7.481895287288353:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement_ter', 'root -> End']
copynode -6.988038057723315:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.578407811699435:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement_ter', 'root -> End']
copynode -6.7419631427910645:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'copy-member']
copynode -7.670219826279208:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> ReturnStatement_ter', 'root -> End']
copynode -7.719788749003783:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> false_ter', 'type -> =_ter']
copynode -7.754889210948022:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -6.799130196013721:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'copy-member']
copynode -7.597757572570117:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation']
copynode -6.6759781486180145:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.326337729115039:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -3.326337729115039:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -4.137230281252414:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -3.899973433930427:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -3.899973433930427:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -4.303323384840041:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.137230281252414:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -4.529445533175021:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation qualifier loc2 ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2']
copynode -3.326337729115039:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -4.303323384840041:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -3.899973433930427:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.645100001711398:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -5.801106218714267:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -5.8766917628236115:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -5.005127381999046:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation qualifier loc2 ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2']
copynode -3.326337729115039:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -6.228035402018577:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation qualifier loc1 ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -6.292236840818077:  root modified ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -3.899973433930427:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -6.396398257929832:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -6.409343194682151:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ operandr MemberReference qualifier Token_ter ^ ^ member LP_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.457739059347659:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.520008270163089:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member isQualifiedName_ter ^ ^ ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.538469259161502:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -3.326337729115039:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -4.529445533175021:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -3.326337729115039:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -6.667028610128909:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.610477451700717:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.679998342413455:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc6 ^ ^ ^ ^ ^ ^ operandr TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc7 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ if_true Literal value <string>_ter ^ ^ ^ ^ if_false BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr MemberReference member loc7 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.716717485804111:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation qualifier loc1 ^ ^ member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -3.899973433930427:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -5.565767292398959:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -3.899973433930427:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -5.95559112081537:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.558695235347841:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -5.8331646109581925:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -6.445177474117372:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -5.558695235347841:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -5.82533011684427:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.8331646109581925:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -6.204436638450716:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -6.731194444990251:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.2257101322175:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -6.373144277429674:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -7.195257135608699:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> false_ter', 'type -> =_ter']
copynode -5.82533011684427:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.558695235347841:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
copynode -7.168811419105623:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc4 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc4', 'start -> unknown']
copynode -6.2257101322175:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -6.566281073668506:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier loc4 ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc4']
copynode -6.9584842408658005:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.18479684839258:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.589702733850572:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -6.686137774086092:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -5.82533011684427:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.18479684839258:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.373144277429674:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -6.204436638450716:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -7.1164592886925675:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -5.82533011684427:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.041451609693468:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -5.658902497030795:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'copy-member', 'root -> End']
copynode -4.041451609693468:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7']
copynode -4.697852182202041:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -4.797909100539982:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -6.050523802638054:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.179048547521234:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier loc6 ^ ^ member unknown ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc6', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -4.697852182202041:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7']
copynode -6.35709607694298:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End', 'copy-member', 'root -> End']
copynode -4.041451609693468:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc9']
copynode -5.159329083748162:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc8 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -6.355309136211872:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.45590051356703:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End', 'copy-member', 'root -> End']
copynode -4.797909100539982:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7']
copynode -6.507010340690613:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -4.041451609693468:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5']
copynode -4.041451609693468:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc8 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8']
copynode -6.637385047972202:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.690360151231289:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.159329083748162:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc8 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7']
copynode -6.9419507989659905:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc8 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8', 'arguments -> End', 'copy-member', 'root -> End']
copynode -4.697852182202041:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc9']
copynode -5.842790202237666:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc9', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -6.415756944275927:  root add ^ IfStatement condition MethodInvocation qualifier loc6 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc6', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3']
copynode -6.004164551384747:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc3 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -4.041451609693468:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.221692488528788:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -4.697852182202041:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5']
copynode -4.797909100539982:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5']
copynode -4.697852182202041:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ MemberReference member loc8 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8']
copynode -6.15477888006717:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -4.041451609693468:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -4.797909100539982:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc9']
copynode -4.797909100539982:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc8 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8']
copynode -4.041451609693468:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4']
before@12 batch0 x: -7.851923788228305: root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
after@12 batch0 x: -7.851923788228305: root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
before@12 batch1 x: -6.831575733143836: root modified ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
after@12 batch1 x: -6.831575733143836: root modified ^ IfStatement condition MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
before@12 batch2 x: -7.609144785499666: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
after@12 batch2 x: -7.609144785499666: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
before@12 batch3 x: -7.444485104642808: root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4']
after@12 batch3 x: -7.444485104642808: root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -5.888240808882983:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'copy-member', 'root -> End']
copynode -5.91118835870293:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.163333529868396:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.233072037139209:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.480329048150452:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type ReferenceType name Node_ter ^ ^ ^ ^ expression MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation']
copynode -6.233347634115489:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.570670837798389:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.909917945304187:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown', 'copy-member', 'root -> End']
copynode -6.704977253713878:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.62775239374605:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.225736493506702:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value']
copynode -7.30183845225838:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.233347634115489:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.339943284430774:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -7.340413803496631:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value']
copynode -7.216014540521428:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement_ter']
copynode -6.622316235938342:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.544610614218982:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -7.694539184012683:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'copy-member', 'root -> End']
copynode -7.77099322740105:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'copy-member', 'root -> End']
copynode -7.724140641512349:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> false_ter', 'type -> =_ter', 'root -> End']
copynode -7.128348255791934:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation selectors MethodInvocation member getNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -7.128348255791934:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.622316235938342:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ arguments MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.2057085377164185:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -5.013761762995273:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -4.582568202633411:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -5.21222734125331:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -5.344614271540195:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'root -> End']
copynode -5.439499494154006:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'root -> End']
copynode -4.2057085377164185:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -5.18047170015052:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -5.1564753470011055:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -4.582568202633411:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -5.405631248373538:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown']
copynode -5.420298491138965:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference']
copynode -5.1564753470011055:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -5.886598300654441:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown']
copynode -5.649385027587414:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -5.540012639481574:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference']
copynode -5.18047170015052:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -6.680419434327632:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -5.420298491138965:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -6.061194334644824:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MethodInvocation']
copynode -6.061194334644824:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -5.649385027587414:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference prefix_operators !_ter ^ ^ member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc2']
copynode -5.540012639481574:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -6.9711804772377945:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.996242680645082:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.201625563611742:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> false_ter', 'type -> =_ter', 'root -> End']
copynode -7.290155314898584:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc4 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc4', 'start -> unknown', 'root -> End']
copynode -6.323221155500505:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.329998531437013:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.107535519695375:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.315321200469043:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier loc4 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc4', 'start -> unknown']
copynode -6.323221155500505:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -7.551356800890062:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.623127141094301:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.366018929576967:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.013082602119539:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -6.97629938373575:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -7.306031086540315:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'copy-operandr']
copynode -6.323221155500505:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -6.9314233745099045:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.203308680152986:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -7.013082602119539:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -7.262619891262148:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl', 'operandr -> MemberReference']
copynode -7.097539582347963:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -6.329998531437013:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -7.159114428854082:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.203308680152986:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -7.34115830907831:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -7.467680552101228:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -7.097539582347963:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -5.257006085477769:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End']
copynode -5.7185331946238875:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End']
copynode -5.913961338810623:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End']
copynode -6.032882173545659:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End']
copynode -6.221040865406394:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation qualifier loc6 ^ ^ member unknown ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc6', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.351020741276443:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End']
copynode -6.361544287763536:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc9', 'arguments -> End']
copynode -6.368053105659783:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc8 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End']
copynode -6.51295240689069:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End']
copynode -6.565245307050645:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End']
copynode -6.644033825956285:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc8 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8', 'arguments -> End']
copynode -6.7977997334674:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc8 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End']
copynode -6.942760515026748:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc9', 'arguments -> End']
copynode -7.032680586911738:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc9', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End']
copynode -7.152253841049969:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc3 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End']
copynode -7.215084469877183:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -7.230771944858134:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End']
copynode -7.240506934933364:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End']
copynode -7.241599400527775:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End']
copynode -7.285758781246841:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ MemberReference member loc8 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8', 'arguments -> End']
copynode -7.338427861221135:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc9', 'arguments -> End']
copynode -7.335655606351793:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End']
copynode -7.318797987885773:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End']
copynode -7.444485104642808:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End']
copynode -7.438388188369572:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc8 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8', 'arguments -> End']
copynode -5.257006085477769:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference']
before@13 batch0 x: -8.049482340255054: root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ arguments MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
after@13 batch0 x: -8.049482340255054: root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ arguments MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
before@13 batch1 x: -7.048470180947334: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
after@13 batch1 x: -7.048470180947334: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
before@13 batch2 x: -8.296951212978456: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
after@13 batch2 x: -8.296951212978456: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
before@13 batch3 x: -7.965174592100084: root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference']
after@13 batch3 x: -7.965174592100084: root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference']
copynode -6.27038948822883:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.88127850953606:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -6.647963863128098:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type ReferenceType name Node_ter ^ ^ ^ ^ expression MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.044551581406267:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -6.728491345682414:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.728491345682414:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member getNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -7.612136549083516:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement_ter', 'root -> End']
copynode -7.353145776578458:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -7.67132432226208:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown']
copynode -7.866433466115268:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation selectors MethodInvocation member getNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End']
copynode -7.895884776749881:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -8.049482340255054:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ arguments MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -7.035248318949016:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ selectors MethodInvocation member getNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -7.332844356336864:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.647963863128098:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type ReferenceType name Node_ter ^ ^ ^ ^ expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.2547885182139:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -4.693305585999042:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.19306067051366:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.630802017170936:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.725016933400184:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.854709242004901:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown', 'root -> End']
copynode -5.484868560452014:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.3793177721090615:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown', 'root -> End']
copynode -6.385484986007214:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -5.743651066441089:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.351181302685291:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.397503596264869:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.992441509384662:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.044329099357128:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference prefix_operators !_ter ^ ^ member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc2', 'root -> End']
copynode -6.377658170182258:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.528612059075385:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.833915982861072:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.917803202290088:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.048470180947334:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.009474479651544:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -7.032401402539108:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -7.503664457181003:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier loc4 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc4', 'start -> unknown', 'root -> End']
copynode -7.588197895383928:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -7.943869032955263:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -8.018722155189607:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'root -> End']
copynode -7.39003936300287:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc4 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc4']
copynode -8.233605482673738:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'root -> End']
copynode -8.088726916408632:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.384497472143266:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -7.483947494125459:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -7.632220664119814:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc4 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc4']
copynode -7.581576176977251:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -8.027594068145845:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -7.581576176977251:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -7.483947494125459:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -7.836572029686067:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.883272507286165:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -7.95370764384279:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -7.384497472143266:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -7.836572029686067:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.977780052518938:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -7.384497472143266:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
copynode -7.807046749687288:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -8.156617113447282:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc4 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc4']
copynode -5.405427015386522:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'copy-member']
copynode -5.869974768720567:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End', 'copy-member']
copynode -6.063614088110626:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'copy-member']
copynode -6.191533972509205:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'copy-member']
copynode -6.505310627631843:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End', 'copy-member']
copynode -6.506561300717294:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc9', 'arguments -> End', 'copy-member']
copynode -6.5532754780724645:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc8 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'copy-member']
copynode -6.675842975266278:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End', 'copy-member']
copynode -6.722320816479623:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End', 'copy-member']
copynode -6.811771563254297:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc8 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8', 'arguments -> End', 'copy-member']
copynode -6.9884047182276845:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc8 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End', 'copy-member']
copynode -7.08938695769757:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc9', 'arguments -> End', 'copy-member']
copynode -7.2057947078719735:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc9', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'copy-member']
copynode -7.312517038546503:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.304163639433682:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc3 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'copy-member']
copynode -7.3532823184505105:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'copy-member']
copynode -7.399693342857063:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End', 'copy-member']
copynode -7.414559398777783:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End', 'copy-member']
copynode -7.4542140839621425:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ MemberReference member loc8 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8', 'arguments -> End', 'copy-member']
copynode -7.488448132760823:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc9', 'arguments -> End', 'copy-member']
copynode -7.500641114078462:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc3 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'copy-member']
copynode -7.501009833998978:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'copy-member']
copynode -7.615162215195596:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End', 'copy-member']
copynode -7.618157063610852:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc8 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8', 'arguments -> End', 'copy-member']
copynode -7.965174592100084:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member']
before@14 batch0 x: -8.662172913813265: root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
after@14 batch0 x: -8.662172913813265: root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
before@14 batch1 x: -7.685505491215736: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
after@14 batch1 x: -7.685505491215736: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
before@14 batch2 x: -8.93568242440233: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc4 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc4']
after@14 batch2 x: -8.93568242440233: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc4 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc4']
before@14 batch3 x: -8.000367297790945: root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member']
after@14 batch3 x: -8.000367297790945: root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.480065902956994:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -7.08772493552533:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type ReferenceType name Node_ter ^ ^ ^ ^ expression MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -7.424878100195201:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -7.547628382482799:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member getNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End']
copynode -7.828079546132358:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -7.139602385723265:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.819240032025846:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -7.9856201431539375:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation selectors MethodInvocation member getNode_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'start -> unknown']
copynode -8.301287332811626:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ selectors MethodInvocation member getNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End']
copynode -8.56587241057423:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -8.193925867119106:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ arguments MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown']
copynode -8.662172913813265:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -8.13438732389477:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation selectors MethodInvocation member unknown ^ ^ ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member']
copynode -7.424878100195201:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -8.591559510939987:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type ReferenceType name Node_ter ^ ^ ^ ^ expression MethodInvocation qualifier v_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -4.736996338237077:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -5.238637630362064:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -4.736996338237077:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.672524840105325:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -5.767949130851775:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -4.736996338237077:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -5.238637630362064:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.202348981518298:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc2 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2']
copynode -5.238637630362064:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -6.475914154667407:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc2 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2']
copynode -5.672524840105325:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.736996338237077:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member v_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.736996338237077:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -5.767949130851775:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.2286201501847245:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference']
copynode -7.300990750140045:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference']
copynode -7.2286201501847245:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr']
copynode -8.54006702551851:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.300990750140045:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr']
copynode -8.147158959007356:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc4 ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc4', 'start -> unknown']
copynode -8.539080181217287:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -8.69963962683687:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -8.42652002820978:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc4 ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc4', 'start -> unknown']
copynode -7.88622871885309:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference']
copynode -7.2286201501847245:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr']
copynode -8.240782299137209:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr MemberReference member loc4 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -7.300990750140045:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr']
copynode -8.317662545538042:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.88622871885309:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr']
copynode -8.324574687576387:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -8.500552483892534:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -8.93568242440233:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc4 ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc4', 'start -> unknown']
copynode -8.630402096605394:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -8.777464279031847:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -8.569129207229707:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -5.454515687189996:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.919532137922943:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.113388507626951:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.239863426424563:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.555268741212785:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.559085167013109:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc9', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.601853751577437:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc8 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.724382077343762:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.768473564647138:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.859114873223007:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc8 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.037433479912579:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc8 ^ ^ ^ MemberReference member loc7 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.142470574937761:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc9', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.25608164165169:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc9 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc9', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.353119286708534:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.353894834406674:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc3 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.413277321495116:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.446471172384918:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.459137533791363:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.5026202974841:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc7 ^ ^ ^ MemberReference member loc8 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc7', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.540520870126784:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc9', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.54626879375428:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc3 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.551019393838942:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.659877839498222:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.665063005872071:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc5 ^ ^ ^ MemberReference member loc8 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc8', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.000367297790945:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6']
before@15 batch0 x: -9.616202574485214: root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type ReferenceType name Node_ter ^ ^ ^ ^ expression MethodInvocation qualifier v_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
after@15 batch0 x: -9.616202574485214: root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type ReferenceType name Node_ter ^ ^ ^ ^ expression MethodInvocation qualifier v_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
before@15 batch1 x: -7.62469568522647: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
after@15 batch1 x: -7.62469568522647: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
before@15 batch2 x: -9.424913623428438: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
after@15 batch2 x: -9.424913623428438: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
before@15 batch3 x: -9.4474429031834: root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6']
after@15 batch3 x: -9.4474429031834: root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6']
copynode -6.563891386875184:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.918935500347288:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.671085084119113:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member']
copynode -8.255140992143424:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation selectors MethodInvocation member getNode_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'start -> unknown', 'root -> End']
copynode -7.674752438702853:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member getNode_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'start -> unknown']
copynode -7.674752438702853:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member getNode_ter ^ ^ ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'copy-member']
copynode -8.702301154175075:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ arguments MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -8.724345881753834:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member']
copynode -8.94282067779568:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation selectors MethodInvocation member unknown ^ ^ ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'root -> End']
copynode -8.666623244324:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.968454102316173:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -9.616202574485214:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type ReferenceType name Node_ter ^ ^ ^ ^ expression MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'copy-member']
copynode -9.616202574485214:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type ReferenceType name Node_ter ^ ^ ^ ^ expression MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -5.777081653941423:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -5.777081653941423:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -5.777081653941423:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference']
copynode -6.2321981829591095:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference']
copynode -5.777081653941423:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -6.3772021983750165:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -5.777081653941423:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -7.117102656979114:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown']
copynode -6.609526481945068:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference']
copynode -6.3772021983750165:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -6.2321981829591095:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -6.558943123091012:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -6.2321981829591095:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -6.3772021983750165:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -8.25895295391092:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -8.349376251047943:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -8.553141572570894:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'root -> End']
copynode -8.587007691210601:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'root -> End']
copynode -8.580691558367107:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -9.066880085563753:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'root -> End']
copynode -9.112620570755098:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr MemberReference member loc4 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'root -> End']
copynode -9.114597489184234:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'root -> End']
copynode -8.749646552896593:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -8.947553434467409:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -9.17908350477228:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'root -> End']
copynode -9.379626282548998:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -9.424913623428438:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -8.731315040087793:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -8.606460222101305:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc4 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc4', 'start -> unknown', 'copy-operandr']
copynode -8.606460222101305:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc4 ^ ^ member unknown ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc4', 'start -> unknown', 'operandr -> MemberReference']
copynode -8.731315040087793:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -8.805669852590654:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc4 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc4', 'start -> unknown', 'copy-operandr']
copynode -9.119195886945818:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc4 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc4']
copynode -9.209344037866686:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc4 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc4']
copynode -8.25895295391092:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> qualifier member']
copynode -9.4474429031834:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End']
before@16 batch0 x: -10.374520760291489: root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type ReferenceType name Node_ter ^ ^ ^ ^ expression MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
after@16 batch0 x: -10.374520760291489: root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type ReferenceType name Node_ter ^ ^ ^ ^ expression MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
before@16 batch1 x: -8.199576423037797: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
after@16 batch1 x: -8.199576423037797: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
before@16 batch2 x: -10.004374125099275: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> qualifier member']
after@16 batch2 x: -10.004374125099275: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> qualifier member']
before@16 batch3 x: -9.524362436495721: root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End']
after@16 batch3 x: -9.524362436495721: root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End']
copynode -6.7215188502159435:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.928669417538913:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'root -> End']
copynode -8.30507018629578:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member getNode_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'start -> unknown', 'root -> End']
copynode -8.694715941586765:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member getNode_ter ^ ^ ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'copy-member', 'root -> End']
copynode -8.926287029200466:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -9.023852179088863:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -10.312575977557572:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type ReferenceType name Node_ter ^ ^ ^ ^ expression MethodInvocation qualifier v_ter ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'copy-member', 'root -> End']
copynode -10.374520760291489:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer Cast type ReferenceType name Node_ter ^ ^ ^ ^ expression MethodInvocation qualifier v_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -9.484975913801463:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ MethodInvocation member getNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -7.31379906879738:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'root -> End']
copynode -7.47487084614113:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'root -> End']
copynode -7.660473034251481:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'root -> End']
copynode -7.493276045192033:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.511369649786502:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.811495826113969:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -7.8492013667710125:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'root -> End']
copynode -7.954533502925187:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -8.044491474051028:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'root -> End']
copynode -8.078266233671457:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'root -> End']
copynode -8.145733658690006:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'root -> End']
copynode -7.927539911586791:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -8.199576423037797:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -7.511369649786502:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> qualifier member']
copynode -8.462385782098863:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.553517942375038:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -9.787360795831773:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc4 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc4', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -9.147659474110696:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -9.421386578178499:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -9.023694229370449:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr']
copynode -9.933412858343218:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc4 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc4', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -9.805835851526354:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc4 ^ ^ member unknown ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc4', 'start -> unknown', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -9.128821262216661:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr']
copynode -9.68671365926275:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -8.462385782098863:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member loc4 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -9.128821262216661:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference']
copynode -9.023694229370449:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference']
copynode -10.004374125099275:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -9.023694229370449:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr']
copynode -9.524362436495721:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'copy-member']
before@17 batch0 x: -11.33805964354542: root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ MethodInvocation member getNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
after@17 batch0 x: -11.33805964354542: root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ MethodInvocation member getNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
before@17 batch1 x: -9.037702505011111: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> qualifier member']
after@17 batch1 x: -9.037702505011111: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> qualifier member']
before@17 batch2 x: -10.573765111214016: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr']
after@17 batch2 x: -10.573765111214016: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr']
before@17 batch3 x: -9.559613986872137: root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'copy-member']
after@17 batch3 x: -9.559613986872137: root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'copy-member']
copynode -9.137787485757144:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member getNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -11.33805964354542:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ MethodInvocation member getNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End']
copynode -7.715278581250459:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.758756537456065:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.16422149213031:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.715278581250459:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -9.208576330041979:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -9.211357598251197:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -9.806423836445902:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -9.894828987366054:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'copy-operandr']
copynode -10.12384832749376:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'copy-operandr']
copynode -10.353946932649706:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member loc4 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'root -> End']
copynode -10.311617636180017:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -10.41558850655565:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -10.468894553428981:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -10.573765111214016:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'copy-operandr']
copynode -9.873676338291261:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr']
copynode -9.873676338291261:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr']
copynode -9.894828987366054:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation']
copynode -9.559613986872137:  root modified ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ member addChildBefore_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc6', 'arguments -> End', 'copy-member', 'root -> End']
before@18 batch0 x: -11.519335711636813: root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ MethodInvocation member getNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End']
after@18 batch0 x: -11.519335711636813: root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ MethodInvocation member getNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End']
before@18 batch1 x: -9.651294425595552: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc2']
after@18 batch1 x: -9.651294425595552: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc2']
before@18 batch2 x: -11.662014198547695: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation']
after@18 batch2 x: -11.662014198547695: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation']
copynode -9.974177981057437:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member getNode_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'selectors -> End']
copynode -11.519335711636813:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ MethodInvocation member getNode_ter ^ ^ ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'copy-member']
copynode -8.668710306752473:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -8.720927078742534:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -9.161864486057311:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -9.651294425595552:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'root -> End']
copynode -10.100807917362545:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -10.310646989441011:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -10.77399654412875:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -10.790115156269167:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation']
copynode -10.684002009278629:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -10.3649988482357:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -10.624594383931253:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -11.26094988832483:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation']
copynode -10.790115156269167:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'copy-operandr']
before@19 batch0 x: -12.248737717309268: root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ MethodInvocation member getNode_ter ^ ^ ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'copy-member']
after@19 batch0 x: -12.248737717309268: root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ MethodInvocation member getNode_ter ^ ^ ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'copy-member']
before@19 batch2 x: -12.024773993587587: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'copy-operandr']
after@19 batch2 x: -12.024773993587587: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'copy-operandr']
copynode -9.991973107942613:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member getNode_ter ^ ^ ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'selectors -> End', 'copy-member']
copynode -12.248737717309268:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ MethodInvocation member getNode_ter ^ ^ ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'copy-member', 'root -> End']
copynode -11.601677683240268:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -11.657938175892923:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -12.024773993587587:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -11.520546891784761:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -11.63344994286308:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -12.00211612234125:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
before@20 batch0 x: -12.24897777402657: root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ MethodInvocation member getNode_ter ^ ^ ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'copy-member', 'root -> End']
after@20 batch0 x: -12.24897777402657: root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ MethodInvocation member getNode_ter ^ ^ ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'copy-member', 'root -> End']
before@20 batch2 x: -12.806505539512727: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
after@20 batch2 x: -12.806505539512727: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -10.422023451217683:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier v_ter ^ ^ selectors MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member getNode_ter ^ ^ ^ ^ member getNode_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc0', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'selectors -> End', 'copy-member', 'root -> End']
copynode -11.733545494324062:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -11.76631448516855:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -12.319773056602571:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -12.683219940459821:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'copy-operandr']
copynode -12.806505539512727:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
before@21 batch2 x: -13.514840879535768: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
after@21 batch2 x: -13.514840879535768: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -13.179107011354063:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'copy-operandr', 'copy-operandr']
copynode -13.023268320655916:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -13.023268320655916:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
before@22 batch2 x: -13.863337614631746: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
after@22 batch2 x: -13.863337614631746: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -13.431212664640043:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -13.850167372322176:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -13.863337614631746:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
before@23 batch2 x: -14.635738411045168: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
after@23 batch2 x: -14.635738411045168: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -13.89505348081002:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -13.89505348081002:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
before@24 batch2 x: -15.58398637647042: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
after@24 batch2 x: -15.58398637647042: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -15.35853586072335:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference']
copynode -15.58398637647042:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
before@25 batch2 x: -16.684175347036216: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
after@25 batch2 x: -16.684175347036216: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -16.2518914687098:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -16.684175347036216:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
before@26 batch2 x: -16.69479701766977: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
after@26 batch2 x: -16.69479701766977: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -16.374915299064014:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
before@27 batch2 x: -16.922688123828266: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
after@27 batch2 x: -16.922688123828266: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -16.922688123828266:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier v_ter ^ ^ member getJSDocInfo_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
method
v_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
v_ter SCOPING_METHOD_NAME
v_ter compiler
v_ter preprocessorSymbolTable
v_ter transformationHandler
v_ter GOOG_SCOPE_USED_IMPROPERLY
v_ter GOOG_SCOPE_HAS_BAD_PARAMETERS
v_ter GOOG_SCOPE_REFERENCES_THIS
v_ter GOOG_SCOPE_USES_RETURN
v_ter GOOG_SCOPE_USES_THROW
v_ter GOOG_SCOPE_ALIAS_REDEFINED
v_ter GOOG_SCOPE_ALIAS_CYCLE
v_ter GOOG_SCOPE_NON_ALIAS_LOCAL
v_ter scopedAliasNames
7 
None  process getNode_ter
None  hotSwapScript getNode_ter
method
7 
method
7 
None  process 
None  hotSwapScript 
method
v_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
v_ter SCOPING_METHOD_NAME
v_ter compiler
v_ter preprocessorSymbolTable
v_ter transformationHandler
v_ter GOOG_SCOPE_USED_IMPROPERLY
v_ter GOOG_SCOPE_HAS_BAD_PARAMETERS
v_ter GOOG_SCOPE_REFERENCES_THIS
v_ter GOOG_SCOPE_USES_RETURN
v_ter GOOG_SCOPE_USES_THROW
v_ter GOOG_SCOPE_ALIAS_REDEFINED
v_ter GOOG_SCOPE_ALIAS_CYCLE
v_ter GOOG_SCOPE_NON_ALIAS_LOCAL
v_ter scopedAliasNames
7 
method
7 
method
v_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
v_ter SCOPING_METHOD_NAME
v_ter compiler
v_ter preprocessorSymbolTable
v_ter transformationHandler
v_ter GOOG_SCOPE_USED_IMPROPERLY
v_ter GOOG_SCOPE_HAS_BAD_PARAMETERS
v_ter GOOG_SCOPE_REFERENCES_THIS
v_ter GOOG_SCOPE_USES_RETURN
v_ter GOOG_SCOPE_USES_THROW
v_ter GOOG_SCOPE_ALIAS_REDEFINED
v_ter GOOG_SCOPE_ALIAS_CYCLE
v_ter GOOG_SCOPE_NON_ALIAS_LOCAL
v_ter scopedAliasNames
7 
method
7 
method
7 
method
7 
method
7 
method
v_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
v_ter SCOPING_METHOD_NAME
v_ter compiler
v_ter preprocessorSymbolTable
v_ter transformationHandler
v_ter GOOG_SCOPE_USED_IMPROPERLY
v_ter GOOG_SCOPE_HAS_BAD_PARAMETERS
v_ter GOOG_SCOPE_REFERENCES_THIS
v_ter GOOG_SCOPE_USES_RETURN
v_ter GOOG_SCOPE_USES_THROW
v_ter GOOG_SCOPE_ALIAS_REDEFINED
v_ter GOOG_SCOPE_ALIAS_CYCLE
v_ter GOOG_SCOPE_NON_ALIAS_LOCAL
v_ter scopedAliasNames
7 
method
7 
method
7 
None  process 
None  hotSwapScript 
method
v_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
v_ter SCOPING_METHOD_NAME
v_ter compiler
v_ter preprocessorSymbolTable
v_ter transformationHandler
v_ter GOOG_SCOPE_USED_IMPROPERLY
v_ter GOOG_SCOPE_HAS_BAD_PARAMETERS
v_ter GOOG_SCOPE_REFERENCES_THIS
v_ter GOOG_SCOPE_USES_RETURN
v_ter GOOG_SCOPE_USES_THROW
v_ter GOOG_SCOPE_ALIAS_REDEFINED
v_ter GOOG_SCOPE_ALIAS_CYCLE
v_ter GOOG_SCOPE_NON_ALIAS_LOCAL
v_ter scopedAliasNames
7 
None  process 
None  hotSwapScript 
method
v_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
v_ter SCOPING_METHOD_NAME
v_ter compiler
v_ter preprocessorSymbolTable
v_ter transformationHandler
v_ter GOOG_SCOPE_USED_IMPROPERLY
v_ter GOOG_SCOPE_HAS_BAD_PARAMETERS
v_ter GOOG_SCOPE_REFERENCES_THIS
v_ter GOOG_SCOPE_USES_RETURN
v_ter GOOG_SCOPE_USES_THROW
v_ter GOOG_SCOPE_ALIAS_REDEFINED
v_ter GOOG_SCOPE_ALIAS_CYCLE
v_ter GOOG_SCOPE_NON_ALIAS_LOCAL
v_ter scopedAliasNames
7 
6 isVar_ter
6 isVar_ter
6 isVar_ter
6 isVar_ter
method
isVar_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
7 boolean
6 isVar_ter
method
7 
None  process 
None  hotSwapScript 
6 isVar_ter
6 isVar_ter
6 isVar_ter
method
parent_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
7 Node
String  propToString 
Node  newNumber 
Node  newNumber 
Node  newString 
Node  newString 
Node  newString 
Node  newString 
int  getType 
None  setType 
boolean  hasChildren 
Node  getFirstChild 
Node  getLastChild 
Node  getNext 
Node  getChildBefore 
Node  getChildAtIndex 
int  getIndexOfChild 
Node  getLastSibling 
None  addChildToFront 
None  addChildToBack 
None  addChildrenToFront 
None  addChildrenToBack 
None  addChildBefore 
None  addChildAfter 
None  addChildrenAfter 
None  removeChild 
None  replaceChild 
None  replaceChildAfter 
PropListItem  lookupProperty 
Node  clonePropsFrom 
None  removeProp 
PropListItem  removeProp 
Object  getProp 
boolean  getBooleanProp 
int  getIntProp 
int  getExistingIntProp 
None  putProp 
None  putBooleanProp 
None  putIntProp 
PropListItem  createProp 
PropListItem  createProp 
int  getSortedPropTypes 
double  getDouble 
None  setDouble 
String  getString 
None  setString 
String  toString 
String  toString 
None  toString 
String  toStringTree 
String  toStringTreeImpl 
None  appendStringTree 
None  toStringTreeHelper 
None  setStaticSourceFile 
None  setSourceFileForTesting 
String  getSourceFileName 
StaticSourceFile  getStaticSourceFile 
None  setInputId 
InputId  getInputId 
boolean  isFromExterns 
int  getLength 
None  setLength 
int  getLineno 
int  getCharno 
int  getSourceOffset 
int  getSourcePosition 
None  setLineno 
None  setCharno 
None  setSourceEncodedPosition 
None  setSourceEncodedPositionForTree 
int  mergeLineCharNo 
int  extractLineno 
int  extractCharno 
Iterable  children 
Iterable  siblings 
PropListItem  getPropListHeadForTesting 
Node  getParent 
Node  getAncestor 
AncestorIterable  getAncestors 
boolean  hasOneChild 
boolean  hasMoreThanOneChild 
int  getChildCount 
boolean  hasChild 
String  checkTreeEquals 
NodeMismatch  checkTreeEqualsImpl 
NodeMismatch  checkTreeTypeAwareEqualsImpl 
boolean  isEquivalentTo 
boolean  isEquivalentToShallow 
boolean  isEquivalentToTyped 
boolean  isEquivalentTo 
String  getQualifiedName 
boolean  isQualifiedName 
boolean  isUnscopedQualifiedName 
Node  detachFromParent 
Node  removeFirstChild 
Node  removeChildren 
None  detachChildren 
Node  removeChildAfter 
Node  cloneNode 
Node  cloneTree 
Node  copyInformationFrom 
Node  copyInformationFromForTree 
Node  useSourceInfoFrom 
Node  srcref 
Node  useSourceInfoFromForTree 
Node  srcrefTree 
Node  useSourceInfoIfMissingFrom 
Node  useSourceInfoIfMissingFromForTree 
JSType  getJSType 
None  setJSType 
FileLevelJsDocBuilder  getJsDocBuilderForNode 
JSDocInfo  getJSDocInfo 
Node  setJSDocInfo 
None  setChangeTime 
int  getChangeTime 
None  setVarArgs 
boolean  isVarArgs 
None  setOptionalArg 
boolean  isOptionalArg 
None  setIsSyntheticBlock 
boolean  isSyntheticBlock 
None  setDirectives 
Set  getDirectives 
None  addSuppression 
None  setWasEmptyNode 
boolean  wasEmptyNode 
None  setSideEffectFlags 
None  setSideEffectFlags 
int  getSideEffectFlags 
boolean  isOnlyModifiesThisCall 
boolean  isOnlyModifiesArgumentsCall 
boolean  isNoSideEffectsCall 
boolean  isLocalResultCall 
boolean  mayMutateArguments 
boolean  mayMutateGlobalStateOrThrow 
boolean  areBitFlagsSet 
boolean  isQuotedString 
None  setQuotedString 
boolean  isAdd 
boolean  isAnd 
boolean  isArrayLit 
boolean  isAssign 
boolean  isAssignAdd 
boolean  isBlock 
boolean  isBreak 
boolean  isCall 
boolean  isCase 
boolean  isCast 
boolean  isCatch 
boolean  isComma 
boolean  isContinue 
boolean  isDebugger 
boolean  isDec 
boolean  isDefaultCase 
boolean  isDelProp 
boolean  isDo 
boolean  isEmpty 
boolean  isExprResult 
boolean  isFalse 
boolean  isFor 
boolean  isFunction 
boolean  isGetterDef 
boolean  isGetElem 
boolean  isGetProp 
boolean  isHook 
boolean  isIf 
boolean  isIn 
boolean  isInc 
boolean  isInstanceOf 
boolean  isLabel 
boolean  isLabelName 
boolean  isName 
boolean  isNE 
boolean  isNew 
boolean  isNot 
boolean  isNull 
boolean  isNumber 
boolean  isObjectLit 
boolean  isOr 
boolean  isParamList 
boolean  isRegExp 
boolean  isReturn 
boolean  isScript 
boolean  isSetterDef 
boolean  isString 
boolean  isStringKey 
boolean  isSwitch 
boolean  isThis 
boolean  isThrow 
boolean  isTrue 
boolean  isTry 
boolean  isTypeOf 
boolean  isVar 
boolean  isVoid 
boolean  isWhile 
boolean  isWith 
6 isVar_ter
6 isVar_ter
method
7 
6 isVar_ter
method
isVar_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
7 boolean
method
isVar_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
7 boolean
method
isVar_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
7 boolean
6 isVar_ter
6 isVar_ter
6 isVar_ter
method
isVar_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
7 boolean
method
v_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
v_ter SCOPING_METHOD_NAME
v_ter compiler
v_ter preprocessorSymbolTable
v_ter transformationHandler
v_ter GOOG_SCOPE_USED_IMPROPERLY
v_ter GOOG_SCOPE_HAS_BAD_PARAMETERS
v_ter GOOG_SCOPE_REFERENCES_THIS
v_ter GOOG_SCOPE_USES_RETURN
v_ter GOOG_SCOPE_USES_THROW
v_ter GOOG_SCOPE_ALIAS_REDEFINED
v_ter GOOG_SCOPE_ALIAS_CYCLE
v_ter GOOG_SCOPE_NON_ALIAS_LOCAL
v_ter scopedAliasNames
7 
None  process 
None  hotSwapScript 
method
n_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
7 Node
String  propToString 
Node  newNumber 
Node  newNumber 
Node  newString 
Node  newString 
Node  newString 
Node  newString 
int  getType 
None  setType 
boolean  hasChildren 
Node  getFirstChild 
Node  getLastChild 
Node  getNext 
Node  getChildBefore 
Node  getChildAtIndex 
int  getIndexOfChild 
Node  getLastSibling 
None  addChildToFront 
None  addChildToBack 
None  addChildrenToFront 
None  addChildrenToBack 
None  addChildBefore 
None  addChildAfter 
None  addChildrenAfter 
None  removeChild 
None  replaceChild 
None  replaceChildAfter 
PropListItem  lookupProperty 
Node  clonePropsFrom 
None  removeProp 
PropListItem  removeProp 
Object  getProp 
boolean  getBooleanProp 
int  getIntProp 
int  getExistingIntProp 
None  putProp 
None  putBooleanProp 
None  putIntProp 
PropListItem  createProp 
PropListItem  createProp 
int  getSortedPropTypes 
double  getDouble 
None  setDouble 
String  getString 
None  setString 
String  toString 
String  toString 
None  toString 
String  toStringTree 
String  toStringTreeImpl 
None  appendStringTree 
None  toStringTreeHelper 
None  setStaticSourceFile 
None  setSourceFileForTesting 
String  getSourceFileName 
StaticSourceFile  getStaticSourceFile 
None  setInputId 
InputId  getInputId 
boolean  isFromExterns 
int  getLength 
None  setLength 
int  getLineno 
int  getCharno 
int  getSourceOffset 
int  getSourcePosition 
None  setLineno 
None  setCharno 
None  setSourceEncodedPosition 
None  setSourceEncodedPositionForTree 
int  mergeLineCharNo 
int  extractLineno 
int  extractCharno 
Iterable  children 
Iterable  siblings 
PropListItem  getPropListHeadForTesting 
Node  getParent 
Node  getAncestor 
AncestorIterable  getAncestors 
boolean  hasOneChild 
boolean  hasMoreThanOneChild 
int  getChildCount 
boolean  hasChild 
String  checkTreeEquals 
NodeMismatch  checkTreeEqualsImpl 
NodeMismatch  checkTreeTypeAwareEqualsImpl 
boolean  isEquivalentTo 
boolean  isEquivalentToShallow 
boolean  isEquivalentToTyped 
boolean  isEquivalentTo 
String  getQualifiedName 
boolean  isQualifiedName 
boolean  isUnscopedQualifiedName 
Node  detachFromParent 
Node  removeFirstChild 
Node  removeChildren 
None  detachChildren 
Node  removeChildAfter 
Node  cloneNode 
Node  cloneTree 
Node  copyInformationFrom 
Node  copyInformationFromForTree 
Node  useSourceInfoFrom 
Node  srcref 
Node  useSourceInfoFromForTree 
Node  srcrefTree 
Node  useSourceInfoIfMissingFrom 
Node  useSourceInfoIfMissingFromForTree 
JSType  getJSType 
None  setJSType 
FileLevelJsDocBuilder  getJsDocBuilderForNode 
JSDocInfo  getJSDocInfo 
Node  setJSDocInfo 
None  setChangeTime 
int  getChangeTime 
None  setVarArgs 
boolean  isVarArgs 
None  setOptionalArg 
boolean  isOptionalArg 
None  setIsSyntheticBlock 
boolean  isSyntheticBlock 
None  setDirectives 
Set  getDirectives 
None  addSuppression 
None  setWasEmptyNode 
boolean  wasEmptyNode 
None  setSideEffectFlags 
None  setSideEffectFlags 
int  getSideEffectFlags 
boolean  isOnlyModifiesThisCall 
boolean  isOnlyModifiesArgumentsCall 
boolean  isNoSideEffectsCall 
boolean  isLocalResultCall 
boolean  mayMutateArguments 
boolean  mayMutateGlobalStateOrThrow 
boolean  areBitFlagsSet 
boolean  isQuotedString 
None  setQuotedString 
boolean  isAdd 
boolean  isAnd 
boolean  isArrayLit 
boolean  isAssign 
boolean  isAssignAdd 
boolean  isBlock 
boolean  isBreak 
boolean  isCall 
boolean  isCase 
boolean  isCast 
boolean  isCatch 
boolean  isComma 
boolean  isContinue 
boolean  isDebugger 
boolean  isDec 
boolean  isDefaultCase 
boolean  isDelProp 
boolean  isDo 
boolean  isEmpty 
boolean  isExprResult 
boolean  isFalse 
boolean  isFor 
boolean  isFunction 
boolean  isGetterDef 
boolean  isGetElem 
boolean  isGetProp 
boolean  isHook 
boolean  isIf 
boolean  isIn 
boolean  isInc 
boolean  isInstanceOf 
boolean  isLabel 
boolean  isLabelName 
boolean  isName 
boolean  isNE 
boolean  isNew 
boolean  isNot 
boolean  isNull 
boolean  isNumber 
boolean  isObjectLit 
boolean  isOr 
boolean  isParamList 
boolean  isRegExp 
boolean  isReturn 
boolean  isScript 
boolean  isSetterDef 
boolean  isString 
boolean  isStringKey 
boolean  isSwitch 
boolean  isThis 
boolean  isThrow 
boolean  isTrue 
boolean  isTry 
boolean  isTypeOf 
boolean  isVar 
boolean  isVoid 
boolean  isWhile 
boolean  isWith 
method
isVar_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
7 boolean
method
7 
None  process 
None  hotSwapScript 
method
v_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
v_ter SCOPING_METHOD_NAME
v_ter compiler
v_ter preprocessorSymbolTable
v_ter transformationHandler
v_ter GOOG_SCOPE_USED_IMPROPERLY
v_ter GOOG_SCOPE_HAS_BAD_PARAMETERS
v_ter GOOG_SCOPE_REFERENCES_THIS
v_ter GOOG_SCOPE_USES_RETURN
v_ter GOOG_SCOPE_USES_THROW
v_ter GOOG_SCOPE_ALIAS_REDEFINED
v_ter GOOG_SCOPE_ALIAS_CYCLE
v_ter GOOG_SCOPE_NON_ALIAS_LOCAL
v_ter scopedAliasNames
7 
None  process getJSDocInfo_ter
None  hotSwapScript getJSDocInfo_ter
6 value_ter
method
7 
6 value_ter
6 value_ter
6 value_ter
method
7 
None  process 
None  hotSwapScript 
method
compiler_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
compiler_ter SCOPING_METHOD_NAME
compiler_ter compiler
7 AbstractCompiler
CompilerInput  getInput 
SourceFile  getSourceFileByName 
CompilerInput  newExternInput 
JSModuleGraph  getModuleGraph 
List  getInputsInOrder 
JSTypeRegistry  getTypeRegistry 
ScopeCreator  getTypedScopeCreator 
Scope  getTopScope 
None  report 
None  throwInternalError 
CodingConvention  getCodingConvention 
None  reportCodeChange 
None  addToDebugLog 
None  setCssRenamingMap 
CssRenamingMap  getCssRenamingMap 
Node  getNodeForCodeInsertion 
TypeValidator  getTypeValidator 
Node  parseSyntheticCode 
Node  parseSyntheticCode 
Node  parseTestCode 
String  toSource 
ErrorReporter  getDefaultErrorReporter 
ReverseAbstractInterpreter  getReverseAbstractInterpreter 
LifeCycleStage  getLifeCycleStage 
Supplier  getUniqueNameIdSupplier 
boolean  hasHaltingErrors 
None  addChangeHandler 
None  removeChangeHandler 
None  setScope 
Node  getJsRoot 
boolean  hasScopeChanged 
None  reportChangeToEnclosingScope 
boolean  isIdeMode 
boolean  acceptEcmaScript5 
boolean  acceptConstKeyword 
Config  getParserConfig 
boolean  isTypeCheckingEnabled 
None  prepareAst 
ErrorManager  getErrorManager 
None  setLifeCycleStage 
boolean  areNodesEqualForInlining 
None  setHasRegExpGlobalReferences 
boolean  hasRegExpGlobalReferences 
CheckLevel  getErrorLevel 
None  process 
Node  getRoot 
None  updateGlobalVarReferences 
GlobalVarReferenceMap  getGlobalVarReferences 
CompilerInput  getSynthesizedExternsInput 
double  getProgress 
String  getLastPassName 
None  setProgress 
Node  ensureLibraryInjected 
None  setOldParseTree 
AstRoot  getOldParseTreeByName 
method
grandparent_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
7 Node
String  propToString 
Node  newNumber 
Node  newNumber 
Node  newString 
Node  newString 
Node  newString 
Node  newString 
int  getType 
None  setType 
boolean  hasChildren 
Node  getFirstChild 
Node  getLastChild 
Node  getNext 
Node  getChildBefore 
Node  getChildAtIndex 
int  getIndexOfChild 
Node  getLastSibling 
None  addChildToFront 
None  addChildToBack 
None  addChildrenToFront 
None  addChildrenToBack 
None  addChildBefore 
None  addChildAfter 
None  addChildrenAfter 
None  removeChild 
None  replaceChild 
None  replaceChildAfter 
PropListItem  lookupProperty 
Node  clonePropsFrom 
None  removeProp 
PropListItem  removeProp 
Object  getProp 
boolean  getBooleanProp 
int  getIntProp 
int  getExistingIntProp 
None  putProp 
None  putBooleanProp 
None  putIntProp 
PropListItem  createProp 
PropListItem  createProp 
int  getSortedPropTypes 
double  getDouble 
None  setDouble 
String  getString 
None  setString 
String  toString 
String  toString 
None  toString 
String  toStringTree 
String  toStringTreeImpl 
None  appendStringTree 
None  toStringTreeHelper 
None  setStaticSourceFile 
None  setSourceFileForTesting 
String  getSourceFileName 
StaticSourceFile  getStaticSourceFile 
None  setInputId 
InputId  getInputId 
boolean  isFromExterns 
int  getLength 
None  setLength 
int  getLineno 
int  getCharno 
int  getSourceOffset 
int  getSourcePosition 
None  setLineno 
None  setCharno 
None  setSourceEncodedPosition 
None  setSourceEncodedPositionForTree 
int  mergeLineCharNo 
int  extractLineno 
int  extractCharno 
Iterable  children 
Iterable  siblings 
PropListItem  getPropListHeadForTesting 
Node  getParent 
Node  getAncestor 
AncestorIterable  getAncestors 
boolean  hasOneChild 
boolean  hasMoreThanOneChild 
int  getChildCount 
boolean  hasChild 
String  checkTreeEquals 
NodeMismatch  checkTreeEqualsImpl 
NodeMismatch  checkTreeTypeAwareEqualsImpl 
boolean  isEquivalentTo 
boolean  isEquivalentToShallow 
boolean  isEquivalentToTyped 
boolean  isEquivalentTo 
String  getQualifiedName 
boolean  isQualifiedName 
boolean  isUnscopedQualifiedName 
Node  detachFromParent 
Node  removeFirstChild 
Node  removeChildren 
None  detachChildren 
Node  removeChildAfter 
Node  cloneNode 
Node  cloneTree 
Node  copyInformationFrom 
Node  copyInformationFromForTree 
Node  useSourceInfoFrom 
Node  srcref 
Node  useSourceInfoFromForTree 
Node  srcrefTree 
Node  useSourceInfoIfMissingFrom 
Node  useSourceInfoIfMissingFromForTree 
JSType  getJSType 
None  setJSType 
FileLevelJsDocBuilder  getJsDocBuilderForNode 
JSDocInfo  getJSDocInfo 
Node  setJSDocInfo 
None  setChangeTime 
int  getChangeTime 
None  setVarArgs 
boolean  isVarArgs 
None  setOptionalArg 
boolean  isOptionalArg 
None  setIsSyntheticBlock 
boolean  isSyntheticBlock 
None  setDirectives 
Set  getDirectives 
None  addSuppression 
None  setWasEmptyNode 
boolean  wasEmptyNode 
None  setSideEffectFlags 
None  setSideEffectFlags 
int  getSideEffectFlags 
boolean  isOnlyModifiesThisCall 
boolean  isOnlyModifiesArgumentsCall 
boolean  isNoSideEffectsCall 
boolean  isLocalResultCall 
boolean  mayMutateArguments 
boolean  mayMutateGlobalStateOrThrow 
boolean  areBitFlagsSet 
boolean  isQuotedString 
None  setQuotedString 
boolean  isAdd 
boolean  isAnd 
boolean  isArrayLit 
boolean  isAssign 
boolean  isAssignAdd 
boolean  isBlock 
boolean  isBreak 
boolean  isCall 
boolean  isCase 
boolean  isCast 
boolean  isCatch 
boolean  isComma 
boolean  isContinue 
boolean  isDebugger 
boolean  isDec 
boolean  isDefaultCase 
boolean  isDelProp 
boolean  isDo 
boolean  isEmpty 
boolean  isExprResult 
boolean  isFalse 
boolean  isFor 
boolean  isFunction 
boolean  isGetterDef 
boolean  isGetElem 
boolean  isGetProp 
boolean  isHook 
boolean  isIf 
boolean  isIn 
boolean  isInc 
boolean  isInstanceOf 
boolean  isLabel 
boolean  isLabelName 
boolean  isName 
boolean  isNE 
boolean  isNew 
boolean  isNot 
boolean  isNull 
boolean  isNumber 
boolean  isObjectLit 
boolean  isOr 
boolean  isParamList 
boolean  isRegExp 
boolean  isReturn 
boolean  isScript 
boolean  isSetterDef 
boolean  isString 
boolean  isStringKey 
boolean  isSwitch 
boolean  isThis 
boolean  isThrow 
boolean  isTrue 
boolean  isTry 
boolean  isTypeOf 
boolean  isVar 
boolean  isVoid 
boolean  isWhile 
boolean  isWith 
method
v_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
v_ter SCOPING_METHOD_NAME
v_ter compiler
v_ter preprocessorSymbolTable
v_ter transformationHandler
v_ter GOOG_SCOPE_USED_IMPROPERLY
v_ter GOOG_SCOPE_HAS_BAD_PARAMETERS
v_ter GOOG_SCOPE_REFERENCES_THIS
v_ter GOOG_SCOPE_USES_RETURN
v_ter GOOG_SCOPE_USES_THROW
v_ter GOOG_SCOPE_ALIAS_REDEFINED
v_ter GOOG_SCOPE_ALIAS_CYCLE
v_ter GOOG_SCOPE_NON_ALIAS_LOCAL
v_ter scopedAliasNames
7 
None  process 
None  hotSwapScript 
method
7 
method
NodeUtil_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
NodeUtil_ter SCOPING_METHOD_NAME
NodeUtil_ter compiler
NodeUtil_ter preprocessorSymbolTable
NodeUtil_ter transformationHandler
NodeUtil_ter GOOG_SCOPE_USED_IMPROPERLY
NodeUtil_ter GOOG_SCOPE_HAS_BAD_PARAMETERS
NodeUtil_ter GOOG_SCOPE_REFERENCES_THIS
NodeUtil_ter GOOG_SCOPE_USES_RETURN
NodeUtil_ter GOOG_SCOPE_USES_THROW
NodeUtil_ter GOOG_SCOPE_ALIAS_REDEFINED
NodeUtil_ter GOOG_SCOPE_ALIAS_CYCLE
NodeUtil_ter GOOG_SCOPE_NON_ALIAS_LOCAL
NodeUtil_ter scopedAliasNames
7 
None  process 
None  hotSwapScript 
6 value_ter
method
grandparent_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
7 Node
String None propToString addChildBefore_ter
Node None newNumber addChildBefore_ter
Node None newNumber addChildBefore_ter
Node None newString addChildBefore_ter
Node None newString addChildBefore_ter
Node None newString addChildBefore_ter
Node None newString addChildBefore_ter
int None getType addChildBefore_ter
None None setType addChildBefore_ter
boolean None hasChildren addChildBefore_ter
Node None getFirstChild addChildBefore_ter
Node None getLastChild addChildBefore_ter
Node None getNext addChildBefore_ter
Node None getChildBefore addChildBefore_ter
Node None getChildAtIndex addChildBefore_ter
int None getIndexOfChild addChildBefore_ter
Node None getLastSibling addChildBefore_ter
None None addChildToFront addChildBefore_ter
None None addChildToBack addChildBefore_ter
None None addChildrenToFront addChildBefore_ter
None None addChildrenToBack addChildBefore_ter
None None addChildBefore addChildBefore_ter
None None addChildAfter addChildBefore_ter
None None addChildrenAfter addChildBefore_ter
None None removeChild addChildBefore_ter
None None replaceChild addChildBefore_ter
None None replaceChildAfter addChildBefore_ter
PropListItem None lookupProperty addChildBefore_ter
Node None clonePropsFrom addChildBefore_ter
None None removeProp addChildBefore_ter
PropListItem None removeProp addChildBefore_ter
Object None getProp addChildBefore_ter
boolean None getBooleanProp addChildBefore_ter
int None getIntProp addChildBefore_ter
int None getExistingIntProp addChildBefore_ter
None None putProp addChildBefore_ter
None None putBooleanProp addChildBefore_ter
None None putIntProp addChildBefore_ter
PropListItem None createProp addChildBefore_ter
PropListItem None createProp addChildBefore_ter
int None getSortedPropTypes addChildBefore_ter
double None getDouble addChildBefore_ter
None None setDouble addChildBefore_ter
String None getString addChildBefore_ter
None None setString addChildBefore_ter
String None toString addChildBefore_ter
String None toString addChildBefore_ter
None None toString addChildBefore_ter
String None toStringTree addChildBefore_ter
String None toStringTreeImpl addChildBefore_ter
None None appendStringTree addChildBefore_ter
None None toStringTreeHelper addChildBefore_ter
None None setStaticSourceFile addChildBefore_ter
None None setSourceFileForTesting addChildBefore_ter
String None getSourceFileName addChildBefore_ter
StaticSourceFile None getStaticSourceFile addChildBefore_ter
None None setInputId addChildBefore_ter
InputId None getInputId addChildBefore_ter
boolean None isFromExterns addChildBefore_ter
int None getLength addChildBefore_ter
None None setLength addChildBefore_ter
int None getLineno addChildBefore_ter
int None getCharno addChildBefore_ter
int None getSourceOffset addChildBefore_ter
int None getSourcePosition addChildBefore_ter
None None setLineno addChildBefore_ter
None None setCharno addChildBefore_ter
None None setSourceEncodedPosition addChildBefore_ter
None None setSourceEncodedPositionForTree addChildBefore_ter
int None mergeLineCharNo addChildBefore_ter
int None extractLineno addChildBefore_ter
int None extractCharno addChildBefore_ter
Iterable None children addChildBefore_ter
Iterable None siblings addChildBefore_ter
PropListItem None getPropListHeadForTesting addChildBefore_ter
Node None getParent addChildBefore_ter
Node None getAncestor addChildBefore_ter
AncestorIterable None getAncestors addChildBefore_ter
boolean None hasOneChild addChildBefore_ter
boolean None hasMoreThanOneChild addChildBefore_ter
int None getChildCount addChildBefore_ter
boolean None hasChild addChildBefore_ter
String None checkTreeEquals addChildBefore_ter
NodeMismatch None checkTreeEqualsImpl addChildBefore_ter
NodeMismatch None checkTreeTypeAwareEqualsImpl addChildBefore_ter
boolean None isEquivalentTo addChildBefore_ter
boolean None isEquivalentToShallow addChildBefore_ter
boolean None isEquivalentToTyped addChildBefore_ter
boolean None isEquivalentTo addChildBefore_ter
String None getQualifiedName addChildBefore_ter
boolean None isQualifiedName addChildBefore_ter
boolean None isUnscopedQualifiedName addChildBefore_ter
Node None detachFromParent addChildBefore_ter
Node None removeFirstChild addChildBefore_ter
Node None removeChildren addChildBefore_ter
None None detachChildren addChildBefore_ter
Node None removeChildAfter addChildBefore_ter
Node None cloneNode addChildBefore_ter
Node None cloneTree addChildBefore_ter
Node None copyInformationFrom addChildBefore_ter
Node None copyInformationFromForTree addChildBefore_ter
Node None useSourceInfoFrom addChildBefore_ter
Node None srcref addChildBefore_ter
Node None useSourceInfoFromForTree addChildBefore_ter
Node None srcrefTree addChildBefore_ter
Node None useSourceInfoIfMissingFrom addChildBefore_ter
Node None useSourceInfoIfMissingFromForTree addChildBefore_ter
JSType None getJSType addChildBefore_ter
None None setJSType addChildBefore_ter
FileLevelJsDocBuilder None getJsDocBuilderForNode addChildBefore_ter
JSDocInfo None getJSDocInfo addChildBefore_ter
Node None setJSDocInfo addChildBefore_ter
None None setChangeTime addChildBefore_ter
int None getChangeTime addChildBefore_ter
None None setVarArgs addChildBefore_ter
boolean None isVarArgs addChildBefore_ter
None None setOptionalArg addChildBefore_ter
boolean None isOptionalArg addChildBefore_ter
None None setIsSyntheticBlock addChildBefore_ter
boolean None isSyntheticBlock addChildBefore_ter
None None setDirectives addChildBefore_ter
Set None getDirectives addChildBefore_ter
None None addSuppression addChildBefore_ter
None None setWasEmptyNode addChildBefore_ter
boolean None wasEmptyNode addChildBefore_ter
None None setSideEffectFlags addChildBefore_ter
None None setSideEffectFlags addChildBefore_ter
int None getSideEffectFlags addChildBefore_ter
boolean None isOnlyModifiesThisCall addChildBefore_ter
boolean None isOnlyModifiesArgumentsCall addChildBefore_ter
boolean None isNoSideEffectsCall addChildBefore_ter
boolean None isLocalResultCall addChildBefore_ter
boolean None mayMutateArguments addChildBefore_ter
boolean None mayMutateGlobalStateOrThrow addChildBefore_ter
boolean None areBitFlagsSet addChildBefore_ter
boolean None isQuotedString addChildBefore_ter
None None setQuotedString addChildBefore_ter
boolean None isAdd addChildBefore_ter
boolean None isAnd addChildBefore_ter
boolean None isArrayLit addChildBefore_ter
boolean None isAssign addChildBefore_ter
boolean None isAssignAdd addChildBefore_ter
boolean None isBlock addChildBefore_ter
boolean None isBreak addChildBefore_ter
boolean None isCall addChildBefore_ter
boolean None isCase addChildBefore_ter
boolean None isCast addChildBefore_ter
boolean None isCatch addChildBefore_ter
boolean None isComma addChildBefore_ter
boolean None isContinue addChildBefore_ter
boolean None isDebugger addChildBefore_ter
boolean None isDec addChildBefore_ter
boolean None isDefaultCase addChildBefore_ter
boolean None isDelProp addChildBefore_ter
boolean None isDo addChildBefore_ter
boolean None isEmpty addChildBefore_ter
boolean None isExprResult addChildBefore_ter
boolean None isFalse addChildBefore_ter
boolean None isFor addChildBefore_ter
boolean None isFunction addChildBefore_ter
boolean None isGetterDef addChildBefore_ter
boolean None isGetElem addChildBefore_ter
boolean None isGetProp addChildBefore_ter
boolean None isHook addChildBefore_ter
boolean None isIf addChildBefore_ter
boolean None isIn addChildBefore_ter
boolean None isInc addChildBefore_ter
boolean None isInstanceOf addChildBefore_ter
boolean None isLabel addChildBefore_ter
boolean None isLabelName addChildBefore_ter
boolean None isName addChildBefore_ter
boolean None isNE addChildBefore_ter
boolean None isNew addChildBefore_ter
boolean None isNot addChildBefore_ter
boolean None isNull addChildBefore_ter
boolean None isNumber addChildBefore_ter
boolean None isObjectLit addChildBefore_ter
boolean None isOr addChildBefore_ter
boolean None isParamList addChildBefore_ter
boolean None isRegExp addChildBefore_ter
boolean None isReturn addChildBefore_ter
boolean None isScript addChildBefore_ter
boolean None isSetterDef addChildBefore_ter
boolean None isString addChildBefore_ter
boolean None isStringKey addChildBefore_ter
boolean None isSwitch addChildBefore_ter
boolean None isThis addChildBefore_ter
boolean None isThrow addChildBefore_ter
boolean None isTrue addChildBefore_ter
boolean None isTry addChildBefore_ter
boolean None isTypeOf addChildBefore_ter
boolean None isVar addChildBefore_ter
boolean None isVoid addChildBefore_ter
boolean None isWhile addChildBefore_ter
boolean None isWith addChildBefore_ter
6 newDecl_ter
6 varNode_ter
6 newDecl_ter
6 varNode_ter
6 newDecl_ter
method
grandparent_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
7 Node
String  propToString 
Node  newNumber 
Node  newNumber 
Node  newString 
Node  newString 
Node  newString 
Node  newString 
int  getType 
None  setType 
boolean  hasChildren 
Node  getFirstChild 
Node  getLastChild 
Node  getNext 
Node  getChildBefore 
Node  getChildAtIndex 
int  getIndexOfChild 
Node  getLastSibling 
None  addChildToFront 
None  addChildToBack 
None  addChildrenToFront 
None  addChildrenToBack 
None  addChildBefore 
None  addChildAfter 
None  addChildrenAfter 
None  removeChild 
None  replaceChild 
None  replaceChildAfter 
PropListItem  lookupProperty 
Node  clonePropsFrom 
None  removeProp 
PropListItem  removeProp 
Object  getProp 
boolean  getBooleanProp 
int  getIntProp 
int  getExistingIntProp 
None  putProp 
None  putBooleanProp 
None  putIntProp 
PropListItem  createProp 
PropListItem  createProp 
int  getSortedPropTypes 
double  getDouble 
None  setDouble 
String  getString 
None  setString 
String  toString 
String  toString 
None  toString 
String  toStringTree 
String  toStringTreeImpl 
None  appendStringTree 
None  toStringTreeHelper 
None  setStaticSourceFile 
None  setSourceFileForTesting 
String  getSourceFileName 
StaticSourceFile  getStaticSourceFile 
None  setInputId 
InputId  getInputId 
boolean  isFromExterns 
int  getLength 
None  setLength 
int  getLineno 
int  getCharno 
int  getSourceOffset 
int  getSourcePosition 
None  setLineno 
None  setCharno 
None  setSourceEncodedPosition 
None  setSourceEncodedPositionForTree 
int  mergeLineCharNo 
int  extractLineno 
int  extractCharno 
Iterable  children 
Iterable  siblings 
PropListItem  getPropListHeadForTesting 
Node  getParent 
Node  getAncestor 
AncestorIterable  getAncestors 
boolean  hasOneChild 
boolean  hasMoreThanOneChild 
int  getChildCount 
boolean  hasChild 
String  checkTreeEquals 
NodeMismatch  checkTreeEqualsImpl 
NodeMismatch  checkTreeTypeAwareEqualsImpl 
boolean  isEquivalentTo 
boolean  isEquivalentToShallow 
boolean  isEquivalentToTyped 
boolean  isEquivalentTo 
String  getQualifiedName 
boolean  isQualifiedName 
boolean  isUnscopedQualifiedName 
Node  detachFromParent 
Node  removeFirstChild 
Node  removeChildren 
None  detachChildren 
Node  removeChildAfter 
Node  cloneNode 
Node  cloneTree 
Node  copyInformationFrom 
Node  copyInformationFromForTree 
Node  useSourceInfoFrom 
Node  srcref 
Node  useSourceInfoFromForTree 
Node  srcrefTree 
Node  useSourceInfoIfMissingFrom 
Node  useSourceInfoIfMissingFromForTree 
JSType  getJSType 
None  setJSType 
FileLevelJsDocBuilder  getJsDocBuilderForNode 
JSDocInfo  getJSDocInfo 
Node  setJSDocInfo 
None  setChangeTime 
int  getChangeTime 
None  setVarArgs 
boolean  isVarArgs 
None  setOptionalArg 
boolean  isOptionalArg 
None  setIsSyntheticBlock 
boolean  isSyntheticBlock 
None  setDirectives 
Set  getDirectives 
None  addSuppression 
None  setWasEmptyNode 
boolean  wasEmptyNode 
None  setSideEffectFlags 
None  setSideEffectFlags 
int  getSideEffectFlags 
boolean  isOnlyModifiesThisCall 
boolean  isOnlyModifiesArgumentsCall 
boolean  isNoSideEffectsCall 
boolean  isLocalResultCall 
boolean  mayMutateArguments 
boolean  mayMutateGlobalStateOrThrow 
boolean  areBitFlagsSet 
boolean  isQuotedString 
None  setQuotedString 
boolean  isAdd 
boolean  isAnd 
boolean  isArrayLit 
boolean  isAssign 
boolean  isAssignAdd 
boolean  isBlock 
boolean  isBreak 
boolean  isCall 
boolean  isCase 
boolean  isCast 
boolean  isCatch 
boolean  isComma 
boolean  isContinue 
boolean  isDebugger 
boolean  isDec 
boolean  isDefaultCase 
boolean  isDelProp 
boolean  isDo 
boolean  isEmpty 
boolean  isExprResult 
boolean  isFalse 
boolean  isFor 
boolean  isFunction 
boolean  isGetterDef 
boolean  isGetElem 
boolean  isGetProp 
boolean  isHook 
boolean  isIf 
boolean  isIn 
boolean  isInc 
boolean  isInstanceOf 
boolean  isLabel 
boolean  isLabelName 
boolean  isName 
boolean  isNE 
boolean  isNew 
boolean  isNot 
boolean  isNull 
boolean  isNumber 
boolean  isObjectLit 
boolean  isOr 
boolean  isParamList 
boolean  isRegExp 
boolean  isReturn 
boolean  isScript 
boolean  isSetterDef 
boolean  isString 
boolean  isStringKey 
boolean  isSwitch 
boolean  isThis 
boolean  isThrow 
boolean  isTrue 
boolean  isTry 
boolean  isTypeOf 
boolean  isVar 
boolean  isVoid 
boolean  isWhile 
boolean  isWith 
6 varNode_ter
6 newDecl_ter
6 varNode_ter
6 newDecl_ter
6 varNode_ter
method
7 
None  process 
None  hotSwapScript 
6 newDecl_ter
6 varNode_ter
method
7 
method
name_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
7 String
method
grandparent_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
7 Node
String  propToString 
Node  newNumber 
Node  newNumber 
Node  newString 
Node  newString 
Node  newString 
Node  newString 
int  getType 
None  setType 
boolean  hasChildren 
Node  getFirstChild 
Node  getLastChild 
Node  getNext 
Node  getChildBefore 
Node  getChildAtIndex 
int  getIndexOfChild 
Node  getLastSibling 
None  addChildToFront 
None  addChildToBack 
None  addChildrenToFront 
None  addChildrenToBack 
None  addChildBefore 
None  addChildAfter 
None  addChildrenAfter 
None  removeChild 
None  replaceChild 
None  replaceChildAfter 
PropListItem  lookupProperty 
Node  clonePropsFrom 
None  removeProp 
PropListItem  removeProp 
Object  getProp 
boolean  getBooleanProp 
int  getIntProp 
int  getExistingIntProp 
None  putProp 
None  putBooleanProp 
None  putIntProp 
PropListItem  createProp 
PropListItem  createProp 
int  getSortedPropTypes 
double  getDouble 
None  setDouble 
String  getString 
None  setString 
String  toString 
String  toString 
None  toString 
String  toStringTree 
String  toStringTreeImpl 
None  appendStringTree 
None  toStringTreeHelper 
None  setStaticSourceFile 
None  setSourceFileForTesting 
String  getSourceFileName 
StaticSourceFile  getStaticSourceFile 
None  setInputId 
InputId  getInputId 
boolean  isFromExterns 
int  getLength 
None  setLength 
int  getLineno 
int  getCharno 
int  getSourceOffset 
int  getSourcePosition 
None  setLineno 
None  setCharno 
None  setSourceEncodedPosition 
None  setSourceEncodedPositionForTree 
int  mergeLineCharNo 
int  extractLineno 
int  extractCharno 
Iterable  children 
Iterable  siblings 
PropListItem  getPropListHeadForTesting 
Node  getParent 
Node  getAncestor 
AncestorIterable  getAncestors 
boolean  hasOneChild 
boolean  hasMoreThanOneChild 
int  getChildCount 
boolean  hasChild 
String  checkTreeEquals 
NodeMismatch  checkTreeEqualsImpl 
NodeMismatch  checkTreeTypeAwareEqualsImpl 
boolean  isEquivalentTo 
boolean  isEquivalentToShallow 
boolean  isEquivalentToTyped 
boolean  isEquivalentTo 
String  getQualifiedName 
boolean  isQualifiedName 
boolean  isUnscopedQualifiedName 
Node  detachFromParent 
Node  removeFirstChild 
Node  removeChildren 
None  detachChildren 
Node  removeChildAfter 
Node  cloneNode 
Node  cloneTree 
Node  copyInformationFrom 
Node  copyInformationFromForTree 
Node  useSourceInfoFrom 
Node  srcref 
Node  useSourceInfoFromForTree 
Node  srcrefTree 
Node  useSourceInfoIfMissingFrom 
Node  useSourceInfoIfMissingFromForTree 
JSType  getJSType 
None  setJSType 
FileLevelJsDocBuilder  getJsDocBuilderForNode 
JSDocInfo  getJSDocInfo 
Node  setJSDocInfo 
None  setChangeTime 
int  getChangeTime 
None  setVarArgs 
boolean  isVarArgs 
None  setOptionalArg 
boolean  isOptionalArg 
None  setIsSyntheticBlock 
boolean  isSyntheticBlock 
None  setDirectives 
Set  getDirectives 
None  addSuppression 
None  setWasEmptyNode 
boolean  wasEmptyNode 
None  setSideEffectFlags 
None  setSideEffectFlags 
int  getSideEffectFlags 
boolean  isOnlyModifiesThisCall 
boolean  isOnlyModifiesArgumentsCall 
boolean  isNoSideEffectsCall 
boolean  isLocalResultCall 
boolean  mayMutateArguments 
boolean  mayMutateGlobalStateOrThrow 
boolean  areBitFlagsSet 
boolean  isQuotedString 
None  setQuotedString 
boolean  isAdd 
boolean  isAnd 
boolean  isArrayLit 
boolean  isAssign 
boolean  isAssignAdd 
boolean  isBlock 
boolean  isBreak 
boolean  isCall 
boolean  isCase 
boolean  isCast 
boolean  isCatch 
boolean  isComma 
boolean  isContinue 
boolean  isDebugger 
boolean  isDec 
boolean  isDefaultCase 
boolean  isDelProp 
boolean  isDo 
boolean  isEmpty 
boolean  isExprResult 
boolean  isFalse 
boolean  isFor 
boolean  isFunction 
boolean  isGetterDef 
boolean  isGetElem 
boolean  isGetProp 
boolean  isHook 
boolean  isIf 
boolean  isIn 
boolean  isInc 
boolean  isInstanceOf 
boolean  isLabel 
boolean  isLabelName 
boolean  isName 
boolean  isNE 
boolean  isNew 
boolean  isNot 
boolean  isNull 
boolean  isNumber 
boolean  isObjectLit 
boolean  isOr 
boolean  isParamList 
boolean  isRegExp 
boolean  isReturn 
boolean  isScript 
boolean  isSetterDef 
boolean  isString 
boolean  isStringKey 
boolean  isSwitch 
boolean  isThis 
boolean  isThrow 
boolean  isTrue 
boolean  isTry 
boolean  isTypeOf 
boolean  isVar 
boolean  isVoid 
boolean  isWhile 
boolean  isWith 
method
v_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
v_ter SCOPING_METHOD_NAME
v_ter compiler
v_ter preprocessorSymbolTable
v_ter transformationHandler
v_ter GOOG_SCOPE_USED_IMPROPERLY
v_ter GOOG_SCOPE_HAS_BAD_PARAMETERS
v_ter GOOG_SCOPE_REFERENCES_THIS
v_ter GOOG_SCOPE_USES_RETURN
v_ter GOOG_SCOPE_USES_THROW
v_ter GOOG_SCOPE_ALIAS_REDEFINED
v_ter GOOG_SCOPE_ALIAS_CYCLE
v_ter GOOG_SCOPE_NON_ALIAS_LOCAL
v_ter scopedAliasNames
7 
None  process 
None  hotSwapScript 
6 newDecl_ter
method
name_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
7 String
method
name_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
7 String
String  get 
String  getIgnoreCase 
6 varNode_ter
method
name_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
7 String
method
grandparent_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
7 Node
String  propToString 
Node  newNumber 
Node  newNumber 
Node  newString 
Node  newString 
Node  newString 
Node  newString 
int  getType 
None  setType 
boolean  hasChildren 
Node  getFirstChild 
Node  getLastChild 
Node  getNext 
Node  getChildBefore 
Node  getChildAtIndex 
int  getIndexOfChild 
Node  getLastSibling 
None  addChildToFront 
None  addChildToBack 
None  addChildrenToFront 
None  addChildrenToBack 
None  addChildBefore 
None  addChildAfter 
None  addChildrenAfter 
None  removeChild 
None  replaceChild 
None  replaceChildAfter 
PropListItem  lookupProperty 
Node  clonePropsFrom 
None  removeProp 
PropListItem  removeProp 
Object  getProp 
boolean  getBooleanProp 
int  getIntProp 
int  getExistingIntProp 
None  putProp 
None  putBooleanProp 
None  putIntProp 
PropListItem  createProp 
PropListItem  createProp 
int  getSortedPropTypes 
double  getDouble 
None  setDouble 
String  getString 
None  setString 
String  toString 
String  toString 
None  toString 
String  toStringTree 
String  toStringTreeImpl 
None  appendStringTree 
None  toStringTreeHelper 
None  setStaticSourceFile 
None  setSourceFileForTesting 
String  getSourceFileName 
StaticSourceFile  getStaticSourceFile 
None  setInputId 
InputId  getInputId 
boolean  isFromExterns 
int  getLength 
None  setLength 
int  getLineno 
int  getCharno 
int  getSourceOffset 
int  getSourcePosition 
None  setLineno 
None  setCharno 
None  setSourceEncodedPosition 
None  setSourceEncodedPositionForTree 
int  mergeLineCharNo 
int  extractLineno 
int  extractCharno 
Iterable  children 
Iterable  siblings 
PropListItem  getPropListHeadForTesting 
Node  getParent 
Node  getAncestor 
AncestorIterable  getAncestors 
boolean  hasOneChild 
boolean  hasMoreThanOneChild 
int  getChildCount 
boolean  hasChild 
String  checkTreeEquals 
NodeMismatch  checkTreeEqualsImpl 
NodeMismatch  checkTreeTypeAwareEqualsImpl 
boolean  isEquivalentTo 
boolean  isEquivalentToShallow 
boolean  isEquivalentToTyped 
boolean  isEquivalentTo 
String  getQualifiedName 
boolean  isQualifiedName 
boolean  isUnscopedQualifiedName 
Node  detachFromParent 
Node  removeFirstChild 
Node  removeChildren 
None  detachChildren 
Node  removeChildAfter 
Node  cloneNode 
Node  cloneTree 
Node  copyInformationFrom 
Node  copyInformationFromForTree 
Node  useSourceInfoFrom 
Node  srcref 
Node  useSourceInfoFromForTree 
Node  srcrefTree 
Node  useSourceInfoIfMissingFrom 
Node  useSourceInfoIfMissingFromForTree 
JSType  getJSType 
None  setJSType 
FileLevelJsDocBuilder  getJsDocBuilderForNode 
JSDocInfo  getJSDocInfo 
Node  setJSDocInfo 
None  setChangeTime 
int  getChangeTime 
None  setVarArgs 
boolean  isVarArgs 
None  setOptionalArg 
boolean  isOptionalArg 
None  setIsSyntheticBlock 
boolean  isSyntheticBlock 
None  setDirectives 
Set  getDirectives 
None  addSuppression 
None  setWasEmptyNode 
boolean  wasEmptyNode 
None  setSideEffectFlags 
None  setSideEffectFlags 
int  getSideEffectFlags 
boolean  isOnlyModifiesThisCall 
boolean  isOnlyModifiesArgumentsCall 
boolean  isNoSideEffectsCall 
boolean  isLocalResultCall 
boolean  mayMutateArguments 
boolean  mayMutateGlobalStateOrThrow 
boolean  areBitFlagsSet 
boolean  isQuotedString 
None  setQuotedString 
boolean  isAdd 
boolean  isAnd 
boolean  isArrayLit 
boolean  isAssign 
boolean  isAssignAdd 
boolean  isBlock 
boolean  isBreak 
boolean  isCall 
boolean  isCase 
boolean  isCast 
boolean  isCatch 
boolean  isComma 
boolean  isContinue 
boolean  isDebugger 
boolean  isDec 
boolean  isDefaultCase 
boolean  isDelProp 
boolean  isDo 
boolean  isEmpty 
boolean  isExprResult 
boolean  isFalse 
boolean  isFor 
boolean  isFunction 
boolean  isGetterDef 
boolean  isGetElem 
boolean  isGetProp 
boolean  isHook 
boolean  isIf 
boolean  isIn 
boolean  isInc 
boolean  isInstanceOf 
boolean  isLabel 
boolean  isLabelName 
boolean  isName 
boolean  isNE 
boolean  isNew 
boolean  isNot 
boolean  isNull 
boolean  isNumber 
boolean  isObjectLit 
boolean  isOr 
boolean  isParamList 
boolean  isRegExp 
boolean  isReturn 
boolean  isScript 
boolean  isSetterDef 
boolean  isString 
boolean  isStringKey 
boolean  isSwitch 
boolean  isThis 
boolean  isThrow 
boolean  isTrue 
boolean  isTry 
boolean  isTypeOf 
boolean  isVar 
boolean  isVoid 
boolean  isWhile 
boolean  isWith 
6 newDecl_ter
method
grandparent_ter {'n_ter': 'Node', 'parent_ter': 'Node', 'isVar_ter': 'boolean', 'grandparent_ter': 'Node', 'value_ter': 'Node', 'varNode_ter': 'Node', 'name_ter': 'String', 'nameCount_ter': 'int', 'globalName_ter': 'String', 'newDecl_ter': 'Node'}
7 Node
String  propToString 
Node  newNumber 
Node  newNumber 
Node  newString 
Node  newString 
Node  newString 
Node  newString 
int  getType 
None  setType 
boolean  hasChildren 
Node  getFirstChild 
Node  getLastChild 
Node  getNext 
Node  getChildBefore 
Node  getChildAtIndex 
int  getIndexOfChild 
Node  getLastSibling 
None  addChildToFront 
None  addChildToBack 
None  addChildrenToFront 
None  addChildrenToBack 
None  addChildBefore 
None  addChildAfter 
None  addChildrenAfter 
None  removeChild 
None  replaceChild 
None  replaceChildAfter 
PropListItem  lookupProperty 
Node  clonePropsFrom 
None  removeProp 
PropListItem  removeProp 
Object  getProp 
boolean  getBooleanProp 
int  getIntProp 
int  getExistingIntProp 
None  putProp 
None  putBooleanProp 
None  putIntProp 
PropListItem  createProp 
PropListItem  createProp 
int  getSortedPropTypes 
double  getDouble 
None  setDouble 
String  getString 
None  setString 
String  toString 
String  toString 
None  toString 
String  toStringTree 
String  toStringTreeImpl 
None  appendStringTree 
None  toStringTreeHelper 
None  setStaticSourceFile 
None  setSourceFileForTesting 
String  getSourceFileName 
StaticSourceFile  getStaticSourceFile 
None  setInputId 
InputId  getInputId 
boolean  isFromExterns 
int  getLength 
None  setLength 
int  getLineno 
int  getCharno 
int  getSourceOffset 
int  getSourcePosition 
None  setLineno 
None  setCharno 
None  setSourceEncodedPosition 
None  setSourceEncodedPositionForTree 
int  mergeLineCharNo 
int  extractLineno 
int  extractCharno 
Iterable  children 
Iterable  siblings 
PropListItem  getPropListHeadForTesting 
Node  getParent 
Node  getAncestor 
AncestorIterable  getAncestors 
boolean  hasOneChild 
boolean  hasMoreThanOneChild 
int  getChildCount 
boolean  hasChild 
String  checkTreeEquals 
NodeMismatch  checkTreeEqualsImpl 
NodeMismatch  checkTreeTypeAwareEqualsImpl 
boolean  isEquivalentTo 
boolean  isEquivalentToShallow 
boolean  isEquivalentToTyped 
boolean  isEquivalentTo 
String  getQualifiedName 
boolean  isQualifiedName 
boolean  isUnscopedQualifiedName 
Node  detachFromParent 
Node  removeFirstChild 
Node  removeChildren 
None  detachChildren 
Node  removeChildAfter 
Node  cloneNode 
Node  cloneTree 
Node  copyInformationFrom 
Node  copyInformationFromForTree 
Node  useSourceInfoFrom 
Node  srcref 
Node  useSourceInfoFromForTree 
Node  srcrefTree 
Node  useSourceInfoIfMissingFrom 
Node  useSourceInfoIfMissingFromForTree 
JSType  getJSType 
None  setJSType 
FileLevelJsDocBuilder  getJsDocBuilderForNode 
JSDocInfo  getJSDocInfo 
Node  setJSDocInfo 
None  setChangeTime 
int  getChangeTime 
None  setVarArgs 
boolean  isVarArgs 
None  setOptionalArg 
boolean  isOptionalArg 
None  setIsSyntheticBlock 
boolean  isSyntheticBlock 
None  setDirectives 
Set  getDirectives 
None  addSuppression 
None  setWasEmptyNode 
boolean  wasEmptyNode 
None  setSideEffectFlags 
None  setSideEffectFlags 
int  getSideEffectFlags 
boolean  isOnlyModifiesThisCall 
boolean  isOnlyModifiesArgumentsCall 
boolean  isNoSideEffectsCall 
boolean  isLocalResultCall 
boolean  mayMutateArguments 
boolean  mayMutateGlobalStateOrThrow 
boolean  areBitFlagsSet 
boolean  isQuotedString 
None  setQuotedString 
boolean  isAdd 
boolean  isAnd 
boolean  isArrayLit 
boolean  isAssign 
boolean  isAssignAdd 
boolean  isBlock 
boolean  isBreak 
boolean  isCall 
boolean  isCase 
boolean  isCast 
boolean  isCatch 
boolean  isComma 
boolean  isContinue 
boolean  isDebugger 
boolean  isDec 
boolean  isDefaultCase 
boolean  isDelProp 
boolean  isDo 
boolean  isEmpty 
boolean  isExprResult 
boolean  isFalse 
boolean  isFor 
boolean  isFunction 
boolean  isGetterDef 
boolean  isGetElem 
boolean  isGetProp 
boolean  isHook 
boolean  isIf 
boolean  isIn 
boolean  isInc 
boolean  isInstanceOf 
boolean  isLabel 
boolean  isLabelName 
boolean  isName 
boolean  isNE 
boolean  isNew 
boolean  isNot 
boolean  isNull 
boolean  isNumber 
boolean  isObjectLit 
boolean  isOr 
boolean  isParamList 
boolean  isRegExp 
boolean  isReturn 
boolean  isScript 
boolean  isSetterDef 
boolean  isString 
boolean  isStringKey 
boolean  isSwitch 
boolean  isThis 
boolean  isThrow 
boolean  isTrue 
boolean  isTry 
boolean  isTypeOf 
boolean  isVar 
boolean  isVoid 
boolean  isWhile 
boolean  isWith 
stderr: Check out program version: Closure-110b.................................... OK
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Running ant (export.dir.src.classes)....................................... OK

  0%|          | 0/1 [00:00<?, ?it/s]/root/projects/Recoder-bwk/run.py:527: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  tmpdepth = np.array(tmpdepth)
/root/envs/recoder/lib/python3.7/site-packages/torch/nn/functional.py:1340: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
100%|██████████| 1/1 [01:01<00:00, 61.81s/it]100%|██████████| 1/1 [01:01<00:00, 61.81s/it]
