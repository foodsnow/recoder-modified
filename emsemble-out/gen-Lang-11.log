stdout: else_statement -> BlockStatement
using GPU
p
path org.apache.commons.lang3.RandomStringUtils
random
Position(line=223, column=19)
FOUND IT!
[{'bugid': 'Lang-11', 'treeroot': <Searchnode.Node object at 0x7f8d2e9a0b90>, 'troot': <Searchnode.Node object at 0x7f8d4464eed0>, 'oldcode': '        char[] buffer = new char[count];', 'filepath': 'buggy/Lang-11/src/main/java/org/apache/commons/lang3/RandomStringUtils.java', 'subroot': <Searchnode.Node object at 0x7f8d2e960350>, 'vardic': {'random_ter': 'meth0', 'buffer_ter': 'loc3', 'gap_ter': 'loc1'}, 'typedic': {'buffer_ter': 'char', 'gap_ter': 'int'}, 'idss': 'Lang-11', 'classname': 'org.apache.commons.lang3.RandomStringUtils', 'precode': '/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the "License"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.lang3;\n\nimport java.util.Random;\n\n/**\n * <p>Operations for random {@code String}s.</p>\n * <p>Currently <em>private high surrogate</em> characters are ignored. \n * These are Unicode characters that fall between the values 56192 (db80)\n * and 56319 (dbff) as we don\'t know how to handle them. \n * High and low surrogates are correctly dealt with - that is if a \n * high surrogate is randomly chosen, 55296 (d800) to 56191 (db7f) \n * then it is followed by a low surrogate. If a low surrogate is chosen, \n * 56320 (dc00) to 57343 (dfff) then it is placed after a randomly \n * chosen high surrogate. </p>\n *\n * <p>#ThreadSafe#</p>\n * @since 1.0\n * @version $Id$\n */\npublic class RandomStringUtils {\n\n    /**\n     * <p>Random object used by random method. This has to be not local\n     * to the random method so as to not return the same value in the \n     * same millisecond.</p>\n     */\n    private static final Random RANDOM = new Random();\n\n    /**\n     * <p>{@code RandomStringUtils} instances should NOT be constructed in\n     * standard programming. Instead, the class should be used as\n     * {@code RandomStringUtils.random(5);}.</p>\n     *\n     * <p>This constructor is public to permit tools that require a JavaBean instance\n     * to operate.</p>\n     */\n    public RandomStringUtils() {\n      super();\n    }\n\n    // Random\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Creates a random string whose length is the number of characters\n     * specified.</p>\n     *\n     * <p>Characters will be chosen from the set of all characters.</p>\n     *\n     * @param count  the length of random string to create\n     * @return the random string\n     */\n    public static String random(int count) {\n        return random(count, false, false);\n    }\n\n    /**\n     * <p>Creates a random string whose length is the number of characters\n     * specified.</p>\n     *\n     * <p>Characters will be chosen from the set of characters whose\n     * ASCII value is between {@code 32} and {@code 126} (inclusive).</p>\n     *\n     * @param count  the length of random string to create\n     * @return the random string\n     */\n    public static String randomAscii(int count) {\n        return random(count, 32, 127, false, false);\n    }\n    \n    /**\n     * <p>Creates a random string whose length is the number of characters\n     * specified.</p>\n     *\n     * <p>Characters will be chosen from the set of alphabetic\n     * characters.</p>\n     *\n     * @param count  the length of random string to create\n     * @return the random string\n     */\n    public static String randomAlphabetic(int count) {\n        return random(count, true, false);\n    }\n    \n    /**\n     * <p>Creates a random string whose length is the number of characters\n     * specified.</p>\n     *\n     * <p>Characters will be chosen from the set of alpha-numeric\n     * characters.</p>\n     *\n     * @param count  the length of random string to create\n     * @return the random string\n     */\n    public static String randomAlphanumeric(int count) {\n        return random(count, true, true);\n    }\n    \n    /**\n     * <p>Creates a random string whose length is the number of characters\n     * specified.</p>\n     *\n     * <p>Characters will be chosen from the set of numeric\n     * characters.</p>\n     *\n     * @param count  the length of random string to create\n     * @return the random string\n     */\n    public static String randomNumeric(int count) {\n        return random(count, false, true);\n    }\n\n    /**\n     * <p>Creates a random string whose length is the number of characters\n     * specified.</p>\n     *\n     * <p>Characters will be chosen from the set of alpha-numeric\n     * characters as indicated by the arguments.</p>\n     *\n     * @param count  the length of random string to create\n     * @param letters  if {@code true}, generated string will include\n     *  alphabetic characters\n     * @param numbers  if {@code true}, generated string will include\n     *  numeric characters\n     * @return the random string\n     */\n    public static String random(int count, boolean letters, boolean numbers) {\n        return random(count, 0, 0, letters, numbers);\n    }\n    \n    /**\n     * <p>Creates a random string whose length is the number of characters\n     * specified.</p>\n     *\n     * <p>Characters will be chosen from the set of alpha-numeric\n     * characters as indicated by the arguments.</p>\n     *\n     * @param count  the length of random string to create\n     * @param start  the position in set of chars to start at\n     * @param end  the position in set of chars to end before\n     * @param letters  if {@code true}, generated string will include\n     *  alphabetic characters\n     * @param numbers  if {@code true}, generated string will include\n     *  numeric characters\n     * @return the random string\n     */\n    public static String random(int count, int start, int end, boolean letters, boolean numbers) {\n        return random(count, start, end, letters, numbers, null, RANDOM);\n    }\n\n    /**\n     * <p>Creates a random string based on a variety of options, using\n     * default source of randomness.</p>\n     *\n     * <p>This method has exactly the same semantics as\n     * {@link #random(int,int,int,boolean,boolean,char[],Random)}, but\n     * instead of using an externally supplied source of randomness, it uses\n     * the internal static {@link Random} instance.</p>\n     *\n     * @param count  the length of random string to create\n     * @param start  the position in set of chars to start at\n     * @param end  the position in set of chars to end before\n     * @param letters  only allow letters?\n     * @param numbers  only allow numbers?\n     * @param chars  the set of chars to choose randoms from.\n     *  If {@code null}, then it will use the set of all chars.\n     * @return the random string\n     * @throws ArrayIndexOutOfBoundsException if there are not\n     *  {@code (end - start) + 1} characters in the set array.\n     */\n    public static String random(int count, int start, int end, boolean letters, boolean numbers, char... chars) {\n        return random(count, start, end, letters, numbers, chars, RANDOM);\n    }\n\n    /**\n     * <p>Creates a random string based on a variety of options, using\n     * supplied source of randomness.</p>\n     *\n     * <p>If start and end are both {@code 0}, start and end are set\n     * to {@code \' \'} and {@code \'z\'}, the ASCII printable\n     * characters, will be used, unless letters and numbers are both\n     * {@code false}, in which case, start and end are set to\n     * {@code 0} and {@code Integer.MAX_VALUE}.\n     *\n     * <p>If set is not {@code null}, characters between start and\n     * end are chosen.</p>\n     *\n     * <p>This method accepts a user-supplied {@link Random}\n     * instance to use as a source of randomness. By seeding a single \n     * {@link Random} instance with a fixed seed and using it for each call,\n     * the same random sequence of strings can be generated repeatedly\n     * and predictably.</p>\n     *\n     * @param count  the length of random string to create\n     * @param start  the position in set of chars to start at\n     * @param end  the position in set of chars to end before\n     * @param letters  only allow letters?\n     * @param numbers  only allow numbers?\n     * @param chars  the set of chars to choose randoms from, must not be empty.\n     *  If {@code null}, then it will use the set of all chars.\n     * @param random  a source of randomness.\n     * @return the random string\n     * @throws ArrayIndexOutOfBoundsException if there are not\n     *  {@code (end - start) + 1} characters in the set array.\n     * @throws IllegalArgumentException if {@code count} &lt; 0 or the provided chars array is empty.\n     * @since 2.0\n     */\n    public static String random(int count, int start, int end, boolean letters, boolean numbers,\n                                char[] chars, Random random) {\n        if (count == 0) {\n            return "";\n        } else if (count < 0) {\n            throw new IllegalArgumentException("Requested random string length " + count + " is less than 0.");\n        }\n        if (chars != null && chars.length == 0) {\n            throw new IllegalArgumentException("The chars array must not be empty");\n        }\n\n        if (start == 0 && end == 0) {\n            if (chars != null) {\n                end = chars.length;\n            } else {\n                if (!letters && !numbers) {\n                    end = Integer.MAX_VALUE;\n                } else {\n                    end = \'z\' + 1;\n                    start = \' \';                \n                }\n            }\n        }\n', 'aftercode': '        int gap = end - start;\n\n        while (count-- != 0) {\n            char ch;\n            if (chars == null) {\n                ch = (char) (random.nextInt(gap) + start);\n            } else {\n                ch = chars[random.nextInt(gap) + start];\n            }\n            if (letters && Character.isLetter(ch)\n                    || numbers && Character.isDigit(ch)\n                    || !letters && !numbers) {\n                if(ch >= 56320 && ch <= 57343) {\n                    if(count == 0) {\n                        count++;\n                    } else {\n                        // low surrogate, insert high surrogate after putting it in\n                        buffer[count] = ch;\n                        count--;\n                        buffer[count] = (char) (55296 + random.nextInt(128));\n                    }\n                } else if(ch >= 55296 && ch <= 56191) {\n                    if(count == 0) {\n                        count++;\n                    } else {\n                        // high surrogate, insert low surrogate before putting it in\n                        buffer[count] = (char) (56320 + random.nextInt(128));\n                        count--;\n                        buffer[count] = ch;\n                    }\n                } else if(ch >= 56192 && ch <= 56319) {\n                    // private high surrogate, no effing clue, so skip it\n                    count++;\n                } else {\n                    buffer[count] = ch;\n                }\n            } else {\n                count++;\n            }\n        }\n        return new String(buffer);\n    }\n\n    /**\n     * <p>Creates a random string whose length is the number of characters\n     * specified.</p>\n     *\n     * <p>Characters will be chosen from the set of characters\n     * specified by the string, must not be empty. \n     * If null, the set of all characters is used.</p>\n     *\n     * @param count  the length of random string to create\n     * @param chars  the String containing the set of characters to use,\n     *  may be null, but must not be empty\n     * @return the random string\n     * @throws IllegalArgumentException if {@code count} &lt; 0 or the string is empty.\n     */\n    public static String random(int count, String chars) {\n        if (chars == null) {\n            return random(count, 0, 0, false, false, null, RANDOM);\n        }\n        return random(count, chars.toCharArray());\n    }\n\n    /**\n     * <p>Creates a random string whose length is the number of characters\n     * specified.</p>\n     *\n     * <p>Characters will be chosen from the set of characters specified.</p>\n     *\n     * @param count  the length of random string to create\n     * @param chars  the character array containing the set of characters to use,\n     *  may be null\n     * @return the random string\n     * @throws IllegalArgumentException if {@code count} &lt; 0.\n     */\n    public static String random(int count, char... chars) {\n        if (chars == null) {\n            return random(count, 0, 0, false, false, null, RANDOM);\n        }\n        return random(count, 0, chars.length, false, false, chars, RANDOM);\n    }\n    \n}', 'tree': 'body LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation operator -_ter ^ ^ operandl MemberReference member end_ter ^ ^ ^ ^ operandr MemberReference member start_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member start_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member end_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member chars_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value MemberReference qualifier chars_ter ^ ^ member length_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member letters_ter ^ ^ ^ ^ operandr MemberReference prefix_operators !_ter ^ ^ member numbers_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value MemberReference qualifier Integer_ter ^ ^ member MAX_VALUE_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member start_ter ^ ^ ^ ^ value Literal value <string>_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member start_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member end_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member chars_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value MemberReference qualifier chars_ter ^ ^ member length_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member letters_ter ^ ^ ^ ^ operandr MemberReference prefix_operators !_ter ^ ^ member numbers_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value MemberReference qualifier Integer_ter ^ ^ member MAX_VALUE_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member start_ter ^ ^ ^ ^ value Literal value <string>_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member start_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member end_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member chars_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value MemberReference qualifier chars_ter ^ ^ member length_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member letters_ter ^ ^ ^ ^ operandr MemberReference prefix_operators !_ter ^ ^ member numbers_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value MemberReference qualifier Integer_ter ^ ^ member MAX_VALUE_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member start_ter ^ ^ ^ ^ value Literal value <string>_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ', 'prob': [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3], 'mode': 0, 'line': 247, 'isa': False, 'fl_score': 1}]
before@0 batch0 x: 0: root ^  ; []
after@0 batch0 x: 0: root ^  ; []
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root BasicType-BasicType name char_ter ^ ^ ^  ^ ^ ; ['copy-BasicType']
copynode 0:  root MemberReference-MemberReference member count_ter ^ ^ ^  ^ ^ ; ['copy-MemberReference']
copynode 0:  root BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  ^ ^ ; ['copy-BasicType']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root MemberReference-MemberReference member count_ter ^ ^ ^  ^ ^ ; ['copy-MemberReference']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
before@1 batch0 x: -13.62911605834961: root return_type ^ ^  ; ['root -> return_type']
after@1 batch0 x: -13.62911605834961: root return_type ^ ^  ; ['root -> return_type']
copynode -0.08912495523691177:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-BasicType']
copynode -0.08912495523691177:  root modified ^ LocalVariableDeclaration ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration']
copynode -0.08912495523691177:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-BasicType']
copynode -0.08912495523691177:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -2.464233636856079:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -2.464233636856079:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -0.08912495523691177:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -2.464233636856079:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -0.08912495523691177:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -0.08912495523691177:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.08912495523691177:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-BasicType']
copynode -0.08912495523691177:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-BasicType']
copynode -0.08912495523691177:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -2.464233636856079:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -2.464233636856079:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -2.464233636856079:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -2.464233636856079:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter']
copynode -2.464233636856079:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -2.464233636856079:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter']
copynode -2.464233636856079:  root add ^ WhileStatement ^ ^ ; ['root -> add', 'root -> WhileStatement']
copynode -9.503714561462402:  root BasicType-BasicType name char_ter ^ ^ ^  name ^ ^ ^ ; ['copy-BasicType', 'BasicType -> name']
copynode -10.633090019226074:  root MemberReference-MemberReference member count_ter ^ ^ ^  member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member']
copynode -11.16434097290039:  root BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name ^ ^ ^ ; ['copy-BasicType', 'BasicType -> name']
copynode -12.423778533935547:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -9.503714561462402:  root BasicType-BasicType name char_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['copy-BasicType', 'copy-BasicType']
copynode -9.503714561462402:  root BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['copy-BasicType', 'copy-BasicType']
copynode -13.00265884399414:  root MemberReference-MemberReference member count_ter ^ ^ ^  member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member']
copynode -9.503714561462402:  root BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['copy-BasicType', 'copy-BasicType']
copynode -13.197647094726562:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -13.62911605834961:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -10.633090019226074:  root MemberReference-MemberReference member count_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier member']
copynode -11.16434097290039:  root BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['copy-BasicType', 'copy-BasicType']
copynode -9.503714561462402:  root BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['copy-BasicType', 'copy-BasicType']
copynode -11.16434097290039:  root BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['copy-BasicType', 'copy-BasicType']
copynode -9.503714561462402:  root BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['copy-BasicType', 'copy-BasicType']
copynode -10.633090019226074:  root MemberReference-MemberReference member count_ter ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -13.62911605834961:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -9.503714561462402:  root BasicType-BasicType name char_ter ^ ^ ^  name ^ dimensions ^ ^ ^ ; ['copy-BasicType', 'BasicType -> name dimensions']
copynode -11.16434097290039:  root BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['copy-BasicType', 'copy-BasicType']
copynode -10.633090019226074:  root MemberReference-MemberReference member count_ter ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -13.197647094726562:  root StatementExpression expression Assignment expressionl MemberReference member start_ter ^ ^ ^ ^ value Literal value <string>_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -9.503714561462402:  root BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['copy-BasicType', 'copy-BasicType']
copynode -13.197647094726562:  root StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -9.503714561462402:  root BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['copy-BasicType', 'copy-BasicType']
copynode -13.197647094726562:  root StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value MemberReference qualifier Integer_ter ^ ^ member MAX_VALUE_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.16434097290039:  root BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['copy-BasicType', 'copy-BasicType']
copynode -13.197647094726562:  root StatementExpression expression Assignment expressionl MemberReference member start_ter ^ ^ ^ ^ value Literal value <string>_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.16434097290039:  root BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['copy-BasicType', 'copy-BasicType']
copynode -13.197647094726562:  root StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -13.197647094726562:  root StatementExpression expression Assignment expressionl MemberReference member start_ter ^ ^ ^ ^ value Literal value <string>_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -13.197647094726562:  root StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value MemberReference qualifier chars_ter ^ ^ member length_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -13.197647094726562:  root StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -13.197647094726562:  root StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value MemberReference qualifier Integer_ter ^ ^ member MAX_VALUE_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -13.00265884399414:  root MemberReference-MemberReference member count_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier member']
copynode -11.16434097290039:  root BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name ^ dimensions ^ ^ ^ ; ['copy-BasicType', 'BasicType -> name dimensions']
copynode -13.00265884399414:  root MemberReference-MemberReference member count_ter ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -11.16434097290039:  root BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['copy-BasicType', 'copy-BasicType']
copynode -11.16434097290039:  root BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['copy-BasicType', 'copy-BasicType']
copynode -13.00265884399414:  root MemberReference-MemberReference member count_ter ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -9.503714561462402:  root BasicType-BasicType name char_ter ^ ^ ^  loc1 ^ ^ ^ ; ['copy-BasicType', 'copy-VariableDeclarator']
copynode -10.633090019226074:  root MemberReference-MemberReference member count_ter ^ ^ ^  selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> selectors member']
copynode -11.16434097290039:  root BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  loc1 ^ ^ ^ ; ['copy-BasicType', 'copy-VariableDeclarator']
copynode -13.00265884399414:  root MemberReference-MemberReference member count_ter ^ ^ ^  selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> selectors member']
copynode -10.633090019226074:  root MemberReference-MemberReference member count_ter ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -10.633090019226074:  root MemberReference-MemberReference member count_ter ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -10.633090019226074:  root MemberReference-MemberReference member count_ter ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -13.00265884399414:  root MemberReference-MemberReference member count_ter ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -10.633090019226074:  root MemberReference-MemberReference member count_ter ^ ^ ^  postfix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators selectors member']
copynode -13.00265884399414:  root MemberReference-MemberReference member count_ter ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -10.633090019226074:  root MemberReference-MemberReference member count_ter ^ ^ ^  prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier selectors member']
copynode -13.00265884399414:  root MemberReference-MemberReference member count_ter ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -13.00265884399414:  root MemberReference-MemberReference member count_ter ^ ^ ^  postfix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators selectors member']
copynode -12.423778533935547:  root ReturnStatement loc1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -13.00265884399414:  root MemberReference-MemberReference member count_ter ^ ^ ^  prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier selectors member']
copynode -13.62911605834961:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -12.423778533935547:  root ReturnStatement loc3 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -13.62911605834961:  root return_type loc1 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -12.423778533935547:  root ReturnStatement unknown ^ ^ ^ ; ['root -> ReturnStatement', 'start -> unknown']
copynode -12.423778533935547:  root ReturnStatement loc3 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -12.423778533935547:  root ReturnStatement loc3 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -13.62911605834961:  root return_type loc3 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -13.62911605834961:  root return_type loc3 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -13.62911605834961:  root return_type loc3 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
before@2 batch0 x: -30.57221794128418: root return_type loc3 ^ ^ ^  ; ['root -> return_type', 'copy-VariableDeclarator']
after@2 batch0 x: -30.57221794128418: root return_type loc3 ^ ^ ^  ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -0.9275665655732155:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name']
copynode -1.0699479952454567:  root modified ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -2.315674342215061:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name']
copynode -2.9549670591950417:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -3.1873595118522644:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -3.2877013087272644:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -0.9275665655732155:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -1.0699479952454567:  root modified ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -0.9275665655732155:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -5.1536572352051735:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -5.305811643600464:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -2.315674342215061:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -5.634954251348972:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -3.2877013087272644:  root add ^ StatementExpression expression Assignment expressionl MemberReference member start_ter ^ ^ ^ ^ value Literal value <string>_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -0.9275665655732155:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -5.874755658209324:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -5.899829663336277:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name']
copynode -0.9275665655732155:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -3.2877013087272644:  root add ^ StatementExpression expression Assignment expressionl MemberReference member start_ter ^ ^ ^ ^ value Literal value <string>_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.2877013087272644:  root add ^ StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.2877013087272644:  root add ^ StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value MemberReference qualifier Integer_ter ^ ^ member MAX_VALUE_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -0.9275665655732155:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name ^ dimensions ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name dimensions']
copynode -6.2798779383301735:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name']
copynode -3.2877013087272644:  root add ^ StatementExpression expression Assignment expressionl MemberReference member start_ter ^ ^ ^ ^ value Literal value <string>_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -0.9275665655732155:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -3.2877013087272644:  root add ^ StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.2877013087272644:  root add ^ StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value MemberReference qualifier Integer_ter ^ ^ member MAX_VALUE_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.2877013087272644:  root add ^ StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.2877013087272644:  root add ^ StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value MemberReference qualifier chars_ter ^ ^ member length_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.9549670591950417:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -2.315674342215061:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -2.9549670591950417:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -2.9549670591950417:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -2.315674342215061:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -2.9549670591950417:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -2.315674342215061:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name ^ dimensions ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name dimensions']
copynode -0.9275665655732155:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -1.0699479952454567:  root modified ^ LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -2.315674342215061:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -0.9275665655732155:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -2.315674342215061:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -8.585823774337769:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> End']
copynode -1.0699479952454567:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation operator -_ter ^ ^ operandl MemberReference member end_ter ^ ^ ^ ^ operandr MemberReference member start_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -1.0699479952454567:  root modified ^ LocalVariableDeclaration modifiers ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators']
copynode -5.1536572352051735:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -8.57883906364441:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -0.9275665655732155:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  loc1 ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-VariableDeclarator']
copynode -8.32640528678894:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -8.56425929069519:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -5.899829663336277:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -5.874755658209324:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -9.179190397262573:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> End']
copynode -9.165829420089722:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -9.183104276657104:  root add ^ WhileStatement condition ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -5.1536572352051735:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -2.315674342215061:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -5.1536572352051735:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -2.315674342215061:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -6.2798779383301735:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -8.56425929069519:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation operator -_ter ^ ^ operandl MemberReference member end_ter ^ ^ ^ ^ operandr MemberReference member start_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -5.634954251348972:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -5.634954251348972:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value MemberReference qualifier chars_ter ^ ^ member length_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -5.874755658209324:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -5.1536572352051735:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -5.874755658209324:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -5.634954251348972:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value MemberReference qualifier Integer_ter ^ ^ member MAX_VALUE_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -5.634954251348972:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value MemberReference qualifier Integer_ter ^ ^ member MAX_VALUE_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -5.634954251348972:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member start_ter ^ ^ ^ ^ value Literal value <string>_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -5.634954251348972:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -5.305811643600464:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -9.660092189908028:  root BasicType-BasicType name char_ter ^ ^ ^  name long_ter ^ ^ ^ ^ ; ['copy-BasicType', 'BasicType -> name', 'name -> long_ter']
copynode -5.634954251348972:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value MemberReference qualifier Integer_ter ^ ^ member MAX_VALUE_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -5.634954251348972:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value MemberReference qualifier chars_ter ^ ^ member length_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -5.899829663336277:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -5.634954251348972:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -5.874755658209324:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -2.315674342215061:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  loc1 ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-VariableDeclarator']
copynode -5.899829663336277:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -9.660092189908028:  root BasicType-BasicType name char_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['copy-BasicType', 'BasicType -> name', 'name -> int_ter']
copynode -5.899829663336277:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name ^ dimensions ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name dimensions']
copynode -5.305811643600464:  root add ^ ReturnStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement']
copynode -5.899829663336277:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -6.2798779383301735:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -6.2798779383301735:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name ^ dimensions ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name dimensions']
copynode -6.2798779383301735:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -1.0699479952454567:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -1.0699479952454567:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -5.899829663336277:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -10.687186662107706:  root MemberReference-MemberReference member count_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.305811643600464:  root add ^ ReturnStatement_ter ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement_ter']
copynode -11.310991704463959:  root BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name long_ter ^ ^ ^ ^ ; ['copy-BasicType', 'BasicType -> name', 'name -> long_ter']
copynode -5.305811643600464:  root add ^ ReturnStatement_ter ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ContinueStatement_ter']
copynode -9.660092189908028:  root BasicType-BasicType name char_ter ^ ^ ^  name boolean_ter ^ ^ ^ ^ ; ['copy-BasicType', 'BasicType -> name', 'name -> boolean_ter']
copynode -5.899829663336277:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -6.2798779383301735:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType']
copynode -2.9549670591950417:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -2.9549670591950417:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -1.0699479952454567:  root modified ^ LocalVariableDeclaration unknown ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'start -> unknown']
before@3 batch0 x: -12.55189684778452: root modified ^ LocalVariableDeclaration unknown ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'start -> unknown']
after@3 batch0 x: -12.55189684778452: root modified ^ LocalVariableDeclaration unknown ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'start -> unknown']
copynode -1.108701266348362:  root modified ^ LocalVariableDeclaration type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType']
copynode -1.0547878965735435:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name long_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> long_ter']
copynode -1.0547878965735435:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> int_ter']
copynode -2.416976235806942:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name long_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> long_ter']
copynode -2.416976235806942:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> int_ter']
copynode -3.1878508939989842:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -4.0578883066773415:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -4.020694732666016:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -4.432307757437229:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter']
copynode -3.021598346531391:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -3.1878508939989842:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -5.071264781057835:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -3.1878508939989842:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -3.021598346531391:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member start_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -1.0547878965735435:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name boolean_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> boolean_ter']
copynode -4.020694732666016:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -5.509232319891453:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -1.108701266348362:  root modified ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -3.021598346531391:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member end_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.859958827495575:  root add ^ StatementExpression expression Assignment expressionl MemberReference member start_ter ^ ^ ^ ^ value Literal value <string>_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -5.923715628683567:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -3.021598346531391:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member end_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -3.021598346531391:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member end_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.153654135763645:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -5.760747976601124:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -6.209516704082489:  root add ^ StatementExpression expression Assignment expressionl MemberReference member start_ter ^ ^ ^ ^ value Literal value <string>_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -3.021598346531391:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member chars_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.212198436260223:  root add ^ StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -3.021598346531391:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member letters_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.373739421367645:  root add ^ StatementExpression expression Assignment expressionl MemberReference member start_ter ^ ^ ^ ^ value Literal value <string>_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.309089839458466:  root add ^ StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value MemberReference qualifier Integer_ter ^ ^ member MAX_VALUE_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.442709006369114:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -3.021598346531391:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member end_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -3.021598346531391:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member end_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -3.021598346531391:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member letters_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.4935800433158875:  root add ^ StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.009446419775486:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> int_ter']
copynode -2.416976235806942:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name boolean_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> boolean_ter']
copynode -6.577743709087372:  root add ^ StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value MemberReference qualifier Integer_ter ^ ^ member MAX_VALUE_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.593164622783661:  root add ^ StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value MemberReference qualifier chars_ter ^ ^ member length_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.5800668597221375:  root add ^ StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -1.0547878965735435:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'copy-name']
copynode -6.8768415823578835:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -6.009446419775486:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name long_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> long_ter']
copynode -6.366528280079365:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> int_ter']
copynode -5.222461022436619:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.3135295286774635:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name long_ter ^ ^ dimensions ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name dimensions', 'name -> long_ter']
copynode -3.1878508939989842:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member start_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member end_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -6.3135295286774635:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name int_ter ^ ^ dimensions ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name dimensions', 'name -> int_ter']
copynode -1.0547878965735435:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'copy-name']
copynode -3.1878508939989842:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member chars_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -5.760747976601124:  root modified ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -3.1878508939989842:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member letters_ter ^ ^ ^ ^ operandr MemberReference prefix_operators !_ter ^ ^ member numbers_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -6.366528280079365:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name long_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> long_ter']
copynode -3.1878508939989842:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member start_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member end_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.4315290823578835:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -4.020694732666016:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -3.1878508939989842:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member start_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member end_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -3.1878508939989842:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member chars_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.030944384634495:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  prefix_operators -_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter']
copynode -3.1878508939989842:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member letters_ter ^ ^ ^ ^ operandr MemberReference prefix_operators !_ter ^ ^ member numbers_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -1.0547878965735435:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'copy-name']
copynode -1.0547878965735435:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'copy-name']
copynode -7.454598940908909:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  selectors ArraySelector ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector']
copynode -5.222461022436619:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member start_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.791717566549778:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -6.801492251455784:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -5.96120822429657:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.190740145742893:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  postfix_operators ++_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -1.0547878965735435:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name Object_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> Object_ter']
copynode -7.030944384634495:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  prefix_operators !_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -5.760747976601124:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -8.162506617605686:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -8.278966940939426:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -5.222461022436619:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member end_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -8.296942748129368:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'copy-BasicType', 'root -> End']
copynode -7.190740145742893:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  postfix_operators --_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> --_ter']
copynode -5.222461022436619:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member end_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.653128184378147:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name long_ter ^ ^ dimensions ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name dimensions', 'name -> long_ter']
copynode -2.416976235806942:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'copy-name']
copynode -7.653128184378147:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name int_ter ^ ^ dimensions ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name dimensions', 'name -> int_ter']
copynode -5.222461022436619:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member chars_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.222461022436619:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member end_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.222461022436619:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member end_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.222461022436619:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member end_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -8.610241688787937:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation operator -_ter ^ ^ operandl MemberReference member end_ter ^ ^ ^ ^ operandr MemberReference member start_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -5.222461022436619:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member letters_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -2.416976235806942:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'copy-name']
copynode -5.222461022436619:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member end_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.96120822429657:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member start_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.212198436260223:  root add ^ StatementExpression expression Assignment expressionl MemberReference member end_ter ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -2.416976235806942:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name Object_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> Object_ter']
copynode -6.801492251455784:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  qualifier chars_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -6.801492251455784:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  qualifier chars_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -6.801492251455784:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  qualifier Integer_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -2.416976235806942:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'copy-name']
copynode -2.416976235806942:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'copy-name']
before@4 batch0 x: -8.99821975082159: root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name char_ter ^ ^ ^ ^  ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'copy-name']
after@4 batch0 x: -8.99821975082159: root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name char_ter ^ ^ ^ ^  ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'copy-name']
copynode -1.1202573515474796:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
copynode -1.7520052418112755:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name long_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> long_ter', 'root -> End']
copynode -1.8519426807761192:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> int_ter', 'root -> End']
copynode -3.108564518392086:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name long_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> long_ter', 'root -> End']
copynode -3.212501607835293:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> int_ter', 'root -> End']
copynode -1.1202573515474796:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
copynode -3.7464819565066136:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -1.1202573515474796:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
copynode -1.1202573515474796:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
copynode -4.397406727075577:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -4.621601350605488:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -1.1202573515474796:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
copynode -4.591533146798611:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> BasicType']
copynode -1.1202573515474796:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
copynode -5.2805032804608345:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member start_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -5.282679341733456:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name boolean_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> boolean_ter', 'root -> End']
copynode -1.1202573515474796:  root modified ^ LocalVariableDeclaration type BasicType name ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name']
copynode -5.268271388078574:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -5.826445586979389:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member end_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -5.940884597599506:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member end_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -6.041996963322163:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member end_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -1.1202573515474796:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType']
copynode -5.34747040271759:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.984662117029075:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.215365447103977:  root modified ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -6.323891647160053:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member chars_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -4.984662117029075:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.421135909855366:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member letters_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -6.481105096638203:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member end_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -6.50036907941103:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member end_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -6.555377013981342:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member letters_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -6.649168349802494:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> int_ter', 'root -> End']
copynode -5.268271388078574:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -6.654020570218563:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name boolean_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> boolean_ter', 'root -> End']
copynode -6.84606196731329:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'copy-name', 'root -> End']
copynode -4.984662117029075:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.34747040271759:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.004118360579014:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name long_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> long_ter', 'root -> End']
copynode -7.006447322666645:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name int_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> int_ter', 'root -> End']
copynode -7.0152130499482155:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -5.34747040271759:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.177276872098446:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'copy-name', 'root -> End']
copynode -5.34747040271759:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.348278410732746:  root modified ^ BasicType-BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^  name long_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> long_ter', 'root -> End']
copynode -7.2689201310276985:  root modified ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -3.7464819565066136:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member end_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.7464819565066136:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member start_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.659210465848446:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'copy-name', 'root -> End']
copynode -7.442237138748169:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -3.7464819565066136:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member start_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.6922295317053795:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name char_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'copy-name', 'root -> End']
copynode -3.7464819565066136:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member end_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.7464819565066136:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member end_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.7658632174134254:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member start_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -4.984662117029075:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -7.0589920892962255:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member start_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member end_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> StatementExpression']
copynode -3.7464819565066136:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member start_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.826655983924866:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -7.188014449144248:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member chars_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> StatementExpression']
copynode -4.984662117029075:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member']
copynode -7.043069936335087:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name long_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name dimensions', 'name -> long_ter', 'copy-dimensions']
copynode -7.0589920892962255:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member start_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member end_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.080881156027317:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name int_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name dimensions', 'name -> int_ter', 'copy-dimensions']
copynode -4.591533146798611:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> ReferenceType']
copynode -7.349856795335654:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member start_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member end_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -8.014651082456112:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name Object_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name', 'name -> Object_ter', 'root -> End']
copynode -7.540811480546836:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member start_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member end_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -5.268271388078574:  root add ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.29247421171749:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member letters_ter ^ ^ ^ ^ operandr MemberReference prefix_operators !_ter ^ ^ member numbers_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.606971205736045:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member letters_ter ^ ^ ^ ^ operandr MemberReference prefix_operators !_ter ^ ^ member numbers_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.29247421171749:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member letters_ter ^ ^ ^ ^ operandr MemberReference prefix_operators !_ter ^ ^ member numbers_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> StatementExpression']
copynode -7.188014449144248:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member chars_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -4.984662117029075:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -7.545200289750937:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member chars_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -4.984662117029075:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -8.289150036871433:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member end_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -8.34167841821909:  root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member end_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
before@5 batch0 x: -8.341881809959887: root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member end_ter ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
after@5 batch0 x: -8.341881809959887: root modified ^ MemberReference-MemberReference member count_ter ^ ^ ^  member end_ter ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -1.4512742199003696:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator']
copynode -3.363591644912958:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator']
copynode -4.130210135132074:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator']
copynode -4.381894562393427:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator']
copynode -4.62765834107995:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator']
copynode -4.397797810001066:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -4.628477893769741:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> BasicType', 'copy-BasicType']
copynode -4.830052826553583:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator']
copynode -3.907332898641471:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -3.907332898641471:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -3.907332898641471:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.665381701255683:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.061107132583857:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator']
copynode -1.4512742199003696:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'copy-declarators']
copynode -5.5047316290438175:  root modified ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name', 'name -> boolean_ter']
copynode -1.4512742199003696:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'copy-declarators']
copynode -6.140861093997955:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.238942641764879:  root modified ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -6.149704278970603:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -6.376835288072471:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.653821290994529:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -3.907332898641471:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -3.907332898641471:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -4.628477893769741:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> BasicType', 'copy-BasicType']
copynode -6.911209644342307:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.073943734169006:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -3.907332898641471:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -4.397797810001066:  root add ^ StatementExpression expression Assignment expressionl MemberReference member start_ter ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -6.923810601234436:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -1.4512742199003696:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'copy-declarators']
copynode -4.628477893769741:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> BasicType', 'copy-BasicType']
copynode -4.381894562393427:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'copy-declarators']
copynode -5.5047316290438175:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name', 'copy-name']
copynode -3.363591644912958:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'copy-declarators']
copynode -3.907332898641471:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter']
copynode -7.297608971595764:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -7.794874490762595:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -5.5047316290438175:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name', 'name -> int_ter']
copynode -7.5984736099489965:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member start_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -7.880398334527854:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -7.448512138391379:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member end_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -4.397797810001066:  root add ^ StatementExpression expression Assignment expressionl MemberReference member start_ter ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -7.95683840662241:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name long_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name dimensions', 'name -> long_ter', 'copy-dimensions', 'root -> End']
copynode -7.74601847078884:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member end_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -5.5047316290438175:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name', 'copy-name']
copynode -7.984256900846958:  root modified ^ BasicType-BasicType name char_ter ^ ^ ^  name int_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-BasicType', 'BasicType -> name dimensions', 'name -> int_ter', 'copy-dimensions', 'root -> End']
copynode -7.7095270767458715:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member end_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -7.8162470474489965:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member start_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -4.130210135132074:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'copy-declarators']
before@6 batch0 x: -8.056900383497123: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member start_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member end_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
after@6 batch0 x: -8.056900383497123: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member start_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member end_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -1.4730144888162613:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -3.392350036650896:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -4.172803916037083:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -4.469453569501638:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -4.641558038070798:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -4.724587665958097:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -4.886895392090082:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -4.937499882245902:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -1.4730144888162613:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name']
copynode -5.310201527143363:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -4.87645561248064:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> BasicType', 'copy-BasicType', 'copy-declarators']
copynode -4.87645561248064:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> BasicType', 'copy-BasicType', 'copy-declarators']
copynode -5.621904136205558:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -6.116037096828222:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -6.2396791614592075:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'copy-declarators', 'root -> End']
copynode -6.280900780111551:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'copy-declarators', 'root -> End']
copynode -6.4134477116167545:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -5.897484572196845:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -6.256939325481653:  root modified ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name', 'name -> boolean_ter', 'declarators -> VariableDeclarator']
copynode -6.725095750356559:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -6.332796066999435:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -6.665241776558105:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -5.897484572196845:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression']
copynode -6.565756590629462:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -3.392350036650896:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name']
copynode -7.0783373531885445:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -1.4730144888162613:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'copy-VariableDeclarator']
copynode -6.895548187196255:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> BasicType', 'copy-BasicType', 'copy-declarators']
copynode -5.621904136205558:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference']
copynode -7.094373704458121:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -6.752882005239371:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -7.4027937091887:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'copy-declarators', 'root -> End']
copynode -7.51267883554101:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'copy-declarators', 'root -> End']
copynode -6.332796066999435:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal']
copynode -7.62728688493371:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'copy-declarators', 'root -> End']
copynode -7.517219517379999:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name', 'copy-name', 'declarators -> VariableDeclarator']
copynode -4.172803916037083:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name']
copynode -6.936795958841685:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -7.707157552242279:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.937499882245902:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -7.642991782689933:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference']
copynode -1.4730144888162613:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ dimensions ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name dimensions initializer']
copynode -7.8827864425838925:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.936795958841685:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> StatementExpression']
before@7 batch0 x: -8.013141559029464: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member start_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
after@7 batch0 x: -8.013141559029464: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member start_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -1.5196823999285698:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3']
copynode -3.440741803497076:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3']
copynode -4.224446754902601:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3']
copynode -4.526346854865551:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3']
copynode -4.681346012279391:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3']
copynode -4.751250118104508:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.944327209144831:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3']
copynode -5.079940842057113:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.154109373688698:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name', 'name -> loc3']
copynode -5.48268921818817:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.585951812565327:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> BasicType', 'copy-BasicType', 'copy-declarators', 'root -> End']
copynode -5.671824522316456:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> BasicType', 'copy-BasicType', 'copy-declarators', 'root -> End']
copynode -6.164206109941006:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3']
copynode -6.131933988595847:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.6491718627512455:  root modified ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name', 'name -> boolean_ter', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -6.43451351672411:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -6.9340190752991475:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.01660855486989:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name', 'name -> loc3']
copynode -6.966567367315292:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.0100539639242925:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.163593903183937:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'copy-VariableDeclarator', 'root -> End']
copynode -7.167870633304119:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> BasicType', 'copy-BasicType', 'copy-declarators', 'root -> End']
copynode -7.323736177349929:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.967847584339324:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -6.9927945449599065:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -7.5749296844005585:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value']
copynode -7.6811042204499245:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name', 'name -> loc3']
copynode -7.353275181318168:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.659041482955217:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name', 'copy-name', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -7.852796211838722:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ dimensions ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name dimensions initializer', 'name -> loc3']
copynode -7.249657632375602:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.849292875791434:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.249657632375602:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -7.800304533506278:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.913265037408564:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -6.967847584339324:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> StatementExpression']
before@8 batch0 x: -8.547710298153106: root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> StatementExpression']
after@8 batch0 x: -8.547710298153106: root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> StatementExpression']
copynode -1.5220495366957039:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator']
copynode -1.5220495366957039:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer']
copynode -1.5220495366957039:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator']
copynode -3.4439106334466487:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator']
copynode -1.5220495366957039:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Literal ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> Literal']
copynode -1.5220495366957039:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer LambdaExpression ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> LambdaExpression']
copynode -1.5220495366957039:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> BinaryOperation']
copynode -4.226699604419991:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator']
copynode -1.5220495366957039:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer_ter']
copynode -1.5220495366957039:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> MemberReference']
copynode -5.156453209929168:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name', 'name -> loc3', 'root -> End']
copynode -1.5220495366957039:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer TernaryExpression ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> TernaryExpression']
copynode -4.530261711217463:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator']
copynode -4.89171662935405:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal']
copynode -4.684541092021391:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator']
copynode -3.4439106334466487:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer']
copynode -4.947474991902709:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator']
copynode -1.5220495366957039:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> MethodInvocation']
copynode -3.4439106334466487:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator']
copynode -3.4439106334466487:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Literal ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> Literal']
copynode -4.89171662935405:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference']
copynode -4.226699604419991:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer']
copynode -3.4439106334466487:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer LambdaExpression ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> LambdaExpression']
copynode -5.09380699560279:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -3.4439106334466487:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer_ter']
copynode -6.712479826062918:  root modified ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name', 'name -> boolean_ter', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3']
copynode -4.226699604419991:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator']
copynode -4.530261711217463:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator']
copynode -3.4439106334466487:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> BinaryOperation']
copynode -6.1676259259693325:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator']
copynode -6.824206806719303:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value ArrayCreator ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'value -> ArrayCreator']
copynode -4.226699604419991:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Literal ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> Literal']
copynode -4.947474991902709:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer']
copynode -5.510847601632122:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.01978988177143:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name', 'name -> loc3', 'root -> End']
copynode -4.684541092021391:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer']
copynode -3.4439106334466487:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> MemberReference']
copynode -4.684541092021391:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator']
copynode -3.4439106334466487:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer TernaryExpression ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> TernaryExpression']
copynode -4.684541092021391:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Literal ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> Literal']
copynode -4.530261711217463:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer']
copynode -4.530261711217463:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Literal ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> Literal']
copynode -4.530261711217463:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer LambdaExpression ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> LambdaExpression']
copynode -4.947474991902709:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Literal ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> Literal']
copynode -6.48119229223812:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -4.226699604419991:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer_ter']
copynode -4.947474991902709:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator']
before@9 batch0 x: -7.563380038365722: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator']
after@9 batch0 x: -7.563380038365722: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator']
copynode -2.1837556266691536:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions']
copynode -2.1837556266691536:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type ^ dimensions ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer']
copynode -3.6672495508100837:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers']
copynode -3.9588984155561775:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type ^ arguments ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> type arguments']
copynode -4.2260328435804695:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> Literal', 'Literal -> value']
copynode -4.132951055886224:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions']
copynode -4.910153975477442:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer_ter', 'root -> End']
copynode -4.8573712015058845:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.163559784879908:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -4.811497559538111:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer LambdaExpression parameters ^ body ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> LambdaExpression', 'LambdaExpression -> parameters body']
copynode -4.8948031205218285:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions']
copynode -4.132951055886224:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type ^ dimensions ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer']
copynode -5.295797139493516:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value']
copynode -5.140014519682154:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> MemberReference', 'MemberReference -> member']
copynode -5.181258813478053:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions']
copynode -5.653880154015496:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers']
copynode -5.362017796142027:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions']
copynode -6.001443897606805:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> Literal', 'Literal -> value']
copynode -5.680726861581206:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions']
copynode -4.811497559538111:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer LambdaExpression body ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> LambdaExpression', 'LambdaExpression -> body']
copynode -4.8948031205218285:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type ^ dimensions ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer']
copynode -5.957025801064447:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type ^ arguments ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> type arguments']
copynode -6.272753729252145:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers']
copynode -5.181258813478053:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type ^ dimensions ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer']
copynode -6.240466863004258:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference', 'MemberReference -> member']
copynode -3.9588984155561775:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> type']
copynode -5.870028128614649:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.362017796142027:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type ^ dimensions ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer']
copynode -2.1837556266691536:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'copy-ArrayCreator']
copynode -6.673995291115716:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer_ter', 'root -> End']
copynode -2.1837556266691536:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'copy-ArrayCreator']
copynode -5.680726861581206:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type ^ dimensions ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer']
copynode -6.810111318947747:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.7253875869791955:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type ^ arguments ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> type arguments']
copynode -6.946851408109069:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers']
copynode -6.925115599064156:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> Literal', 'Literal -> value']
copynode -6.749534324742854:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type ^ arguments ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> type arguments']
copynode -3.9588984155561775:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator selectors ^ type ^ arguments ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> selectors type arguments']
copynode -6.540148054482415:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer LambdaExpression parameters ^ body ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> LambdaExpression', 'LambdaExpression -> parameters body']
copynode -7.09036932955496:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers']
copynode -7.170720135094598:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -6.7151429282967:  root modified ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'BasicType -> name', 'name -> boolean_ter', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator']
copynode -7.186461553676054:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> Literal', 'Literal -> value']
copynode -6.871300182770938:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions']
copynode -7.279505447484553:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers']
copynode -7.093593870522454:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> MemberReference', 'MemberReference -> member']
copynode -7.3717944184318185:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> Literal', 'Literal -> value']
before@10 batch0 x: -7.418346920050681: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Literal value ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> Literal', 'Literal -> value']
after@10 batch0 x: -7.418346920050681: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Literal value ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> Literal', 'Literal -> value']
copynode -2.581262787571177:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType ^ ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType']
copynode -3.3815023803617805:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType ^ ^ dimensions ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType']
copynode -4.179219862213358:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type BasicType ^ ^ arguments ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> BasicType']
copynode -3.6719311124179512:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal']
copynode -4.538167988182977:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType ^ ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType']
copynode -4.263965913793072:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -5.27938602748327:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType ^ ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType']
copynode -5.316288148285821:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType ^ ^ dimensions ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType']
copynode -5.167287663789466:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer TernaryExpression condition BinaryOperation ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation']
copynode -4.179219862213358:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type ReferenceType ^ ^ arguments ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType']
copynode -3.6719311124179512:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MemberReference']
copynode -5.630877600051463:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType ^ ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType']
copynode -3.6719311124179512:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers BinaryOperation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> BinaryOperation']
copynode -5.777797118527815:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType ^ ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType']
copynode -4.958246690919623:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -3.6719311124179512:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> End']
copynode -2.581262787571177:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type ReferenceType ^ ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> ReferenceType']
copynode -4.263965913793072:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -3.6719311124179512:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MethodInvocation']
copynode -6.066497599706054:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType ^ ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType']
copynode -6.114841057686135:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType ^ ^ dimensions ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType']
copynode -4.263965913793072:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Literal value false_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -4.263965913793072:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Literal value true_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -5.355734549550107:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -6.304236427880824:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType ^ ^ dimensions ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType']
copynode -4.958246690919623:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer BinaryOperation operator |_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> |_ter']
copynode -6.20395648968406:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type BasicType ^ ^ arguments ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> BasicType']
copynode -5.659273394616321:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal']
copynode -4.263965913793072:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> Literal', 'Literal -> value', 'value -> 2_ter']
copynode -6.524266765220091:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType ^ ^ dimensions ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType']
copynode -6.357574334135279:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type BasicType ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> type', 'type -> BasicType']
copynode -6.493472208967432:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.355734549550107:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -6.667793025961146:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'copy-ArrayCreator', 'root -> End']
copynode -3.3815023803617805:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type ReferenceType ^ ^ dimensions ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> ReferenceType']
copynode -5.167287663789466:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer TernaryExpression condition MemberReference ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MemberReference']
copynode -6.878057231893763:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'copy-ArrayCreator', 'root -> End']
copynode -3.6719311124179512:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers This ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> This']
copynode -6.9060208555310965:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType ^ ^ dimensions ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType']
copynode -6.049383578123525:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -5.355734549550107:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.277389419963583:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal']
copynode -5.234351804247126:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer LambdaExpression parameters MemberReference ^ ^ body ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> LambdaExpression', 'LambdaExpression -> parameters body', 'parameters -> MemberReference']
copynode -5.234351804247126:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer LambdaExpression parameters InferredFormalParameter ^ ^ body ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> LambdaExpression', 'LambdaExpression -> parameters body', 'parameters -> InferredFormalParameter']
copynode -6.943535937694833:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type BasicType ^ ^ arguments ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> BasicType']
copynode -6.970156789757311:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type BasicType ^ ^ arguments ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> BasicType']
copynode -3.6719311124179512:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Cast ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Cast']
copynode -6.979328026762232:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator selectors MethodInvocation ^ ^ type ^ arguments ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation']
before@11 batch0 x: -7.271632423391566: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator selectors MethodInvocation ^ ^ type ^ arguments ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation']
after@11 batch0 x: -7.271632423391566: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator selectors MethodInvocation ^ ^ type ^ arguments ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation']
copynode -2.6230521702673286:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType']
copynode -3.423225393285975:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType']
copynode -4.443487187614664:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type BasicType name char_ter ^ ^ ^ ^ arguments ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> BasicType', 'copy-BasicType']
copynode -4.514930093893781:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value']
copynode -5.182570406934246:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -2.6230521702673286:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType']
copynode -4.5783576492685825:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType']
copynode -5.321281253127381:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType']
copynode -5.668528879294172:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MemberReference', 'MemberReference -> member']
copynode -4.5783576492685825:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType']
copynode -5.638835625024512:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer TernaryExpression condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.998156870016828:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> End', 'root -> End']
copynode -2.6230521702673286:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType']
copynode -6.078320452710614:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> Literal', 'Literal -> value', 'value -> 1_ter', 'root -> End']
copynode -3.423225393285975:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ dimensions ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType']
copynode -6.1836480589117855:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Literal value false_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> Literal', 'Literal -> value', 'value -> false_ter', 'root -> End']
copynode -5.35633181896992:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType']
copynode -2.6230521702673286:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name ^ ^ ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'BasicType -> name']
copynode -6.156650396762416:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType']
copynode -6.296998092671856:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Literal value true_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> Literal', 'Literal -> value', 'value -> true_ter', 'root -> End']
copynode -6.307613335637143:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> false_ter', 'type -> =_ter']
copynode -5.855798227479681:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference']
copynode -5.816937652183697:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType']
copynode -6.55616290285252:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> Literal', 'Literal -> value', 'value -> 2_ter', 'root -> End']
copynode -5.727902734884992:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.654703222302487:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> true_ter', 'type -> =_ter']
copynode -5.670452729798853:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType']
copynode -6.500660547288135:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value']
copynode -6.629016985883936:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type BasicType name char_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> type', 'type -> BasicType', 'copy-BasicType']
copynode -5.35633181896992:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType']
copynode -3.423225393285975:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType']
copynode -6.419108850648627:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer BinaryOperation operator |_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> |_ter', 'operandl -> MemberReference']
copynode -6.966825542273:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -6.874042229028419:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer TernaryExpression condition MemberReference member ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MemberReference', 'MemberReference -> member']
copynode -4.5783576492685825:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType']
copynode -3.423225393285975:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name ^ ^ ^ dimensions ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'BasicType -> name']
copynode -7.026975594548276:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter']
copynode -6.106879135593772:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType']
copynode -7.12018304108642:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer LambdaExpression parameters MemberReference member ^ ^ ^ body ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> LambdaExpression', 'LambdaExpression -> parameters body', 'parameters -> MemberReference', 'MemberReference -> member']
copynode -6.106879135593772:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType']
copynode -4.514930093893781:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'copy-Literal']
copynode -7.112957132747397:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value']
copynode -6.563192420406267:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType']
copynode -7.2097320694010705:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type BasicType name char_ter ^ ^ ^ ^ arguments ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> BasicType', 'copy-BasicType']
copynode -5.670452729798853:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType']
copynode -6.343643774278462:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType']
before@12 batch0 x: -7.374957432039082: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions ^ initializer ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType']
after@12 batch0 x: -7.374957432039082: root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions ^ initializer ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType']
copynode -2.7995155507232994:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions']
copynode -2.7995155507232994:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation']
copynode -2.7995155507232994:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MemberReference']
copynode -3.601358061423525:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions']
copynode -2.7995155507232994:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions']
copynode -4.541172301163897:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type BasicType name char_ter ^ ^ ^ ^ arguments MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> BasicType', 'copy-BasicType', 'arguments -> MemberReference']
copynode -3.601358061423525:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation ^ ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation']
copynode -2.7995155507232994:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal']
copynode -3.601358061423525:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference ^ ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MemberReference']
copynode -4.697357112774625:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -3.601358061423525:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions']
copynode -2.7995155507232994:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> None_ter']
copynode -4.541172301163897:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type BasicType name char_ter ^ ^ ^ ^ arguments ArrayCreator ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> BasicType', 'copy-BasicType', 'arguments -> ArrayCreator']
copynode -3.601358061423525:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal ^ ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal']
copynode -2.7995155507232994:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions BinaryOperation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> BinaryOperation']
copynode -4.697357112774625:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -5.351626446237788:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ dimensions None_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions']
copynode -6.348899228265509:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.315238828858128:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> false_ter', 'type -> =_ter', 'root -> End']
copynode -3.601358061423525:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> None_ter']
copynode -4.541172301163897:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type BasicType name char_ter ^ ^ ^ ^ arguments Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> BasicType', 'copy-BasicType', 'arguments -> Literal']
copynode -4.697357112774625:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value false_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -6.661965353501728:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> true_ter', 'type -> =_ter', 'root -> End']
copynode -6.726234605303034:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type BasicType name char_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> type', 'type -> BasicType', 'copy-BasicType', 'root -> End']
copynode -5.457540600327775:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions']
copynode -4.697357112774625:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value true_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -6.909026069333777:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer BinaryOperation operator |_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> |_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.4494901422876865:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions']
copynode -4.697357112774625:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 2_ter']
copynode -2.7995155507232994:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions']
copynode -3.601358061423525:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions BinaryOperation ^ ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> BinaryOperation']
copynode -5.995449141832069:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.587311053881422:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -2.7995155507232994:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions']
copynode -7.032227297400823:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value', 'value -> null_ter', 'type -> =_ter', 'root -> End']
copynode -5.457540600327775:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation']
copynode -6.148940792074427:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions']
copynode -5.351626446237788:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ dimensions MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation']
copynode -5.457540600327775:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MemberReference']
before@13 batch0 x: -7.2487595963757485: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MemberReference']
after@13 batch0 x: -7.2487595963757485: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MemberReference']
copynode -3.96351153193973:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'root -> End']
copynode -4.707709019770846:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MemberReference', 'MemberReference -> member']
copynode -4.964282100787386:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'root -> End']
copynode -5.279465531697497:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type BasicType name char_ter ^ ^ ^ ^ arguments MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> BasicType', 'copy-BasicType', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.361187761416659:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value']
copynode -4.520012682070956:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.7470120245125145:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer']
copynode -5.537908082595095:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member ^ ^ ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MemberReference', 'MemberReference -> member']
copynode -4.7470120245125145:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer_ter']
copynode -5.753784959902987:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> None_ter', 'root -> End']
copynode -4.520012682070956:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.188083057990298:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value ^ ^ ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value']
copynode -5.338843708625063:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation qualifier ^ member ^ ^ ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.520012682070956:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.363068153848872:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ dimensions None_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'root -> End']
copynode -5.6764010733459145:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal']
copynode -5.7382935339119285:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ initializer ArrayInitializer ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer']
copynode -6.282784288516268:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.338843708625063:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation member ^ ^ ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.7382935339119285:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ initializer ArrayInitializer_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer_ter']
copynode -6.596229588380083:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type BasicType name char_ter ^ ^ ^ ^ arguments Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> BasicType', 'copy-BasicType', 'arguments -> Literal', 'Literal -> value']
copynode -6.746976940659806:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'root -> End']
copynode -6.990237904014066:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'root -> End']
copynode -5.893910204758868:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type BasicType name char_ter ^ ^ ^ ^ arguments ArrayCreator type ^ dimensions ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> BasicType', 'copy-BasicType', 'arguments -> ArrayCreator', 'ArrayCreator -> type dimensions']
copynode -7.054440324893221:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'root -> End']
copynode -5.338843708625063:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.893910204758868:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type BasicType name char_ter ^ ^ ^ ^ arguments ArrayCreator type ^ dimensions ^ initializer ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> BasicType', 'copy-BasicType', 'arguments -> ArrayCreator', 'ArrayCreator -> type dimensions initializer']
copynode -6.310308391461149:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 1_ter ^ ^ ^ Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> Literal']
copynode -7.090030019870028:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'root -> End']
copynode -5.893910204758868:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type BasicType name char_ter ^ ^ ^ ^ arguments ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> BasicType', 'copy-BasicType', 'arguments -> ArrayCreator', 'copy-ArrayCreator']
copynode -6.575240736594424:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> None_ter', 'initializer -> ArrayInitializer']
copynode -7.079849199624732:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -7.2487595963757485:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MemberReference', 'MemberReference -> member']
copynode -4.7470120245125145:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayCreator ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayCreator']
copynode -5.6764010733459145:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> End']
before@14 batch0 x: -7.404906207928434: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> End']
after@14 batch0 x: -7.404906207928434: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> End']
copynode -5.463260298362002:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers']
copynode -5.632175093283877:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer_ter', 'root -> End']
copynode -5.401587610831484:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -5.830647533526644:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.376662285765633:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -5.376662285765633:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -4.716650231508538:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.466408496489748:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ initializer ArrayInitializer initializers ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers']
copynode -6.4284123128745705:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value']
copynode -6.236031597247347:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.653805559268221:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ initializer ArrayInitializer_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer_ter', 'root -> End']
copynode -6.219462102046236:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -6.645462756743655:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation member unknown ^ ^ ^ ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.203637187136337:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 0_ter ^ ^ ^ ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.203637187136337:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 1_ter ^ ^ ^ ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -7.039323722710833:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type BasicType name char_ter ^ ^ ^ ^ arguments ArrayCreator type BasicType ^ ^ dimensions ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> BasicType', 'copy-BasicType', 'arguments -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType']
copynode -7.086443776497617:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 1_ter ^ ^ ^ Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> Literal', 'Literal -> value']
copynode -7.079181587090716:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type BasicType name char_ter ^ ^ ^ ^ arguments ArrayCreator type BasicType ^ ^ dimensions ^ initializer ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> BasicType', 'copy-BasicType', 'arguments -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType']
copynode -7.164989655604586:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> None_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers']
copynode -4.716650231508538:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -5.546960439300165:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member unknown ^ ^ ^ ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.235142694087699:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.716650231508538:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member end_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.716650231508538:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member end_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.6412938290741295:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -7.061604147544131:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -4.716650231508538:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member end_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MemberReference', 'MemberReference -> member', 'copy-member']
before@15 batch0 x: -7.398281796602532: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member end_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MemberReference', 'MemberReference -> member', 'copy-member']
after@15 batch0 x: -7.398281796602532: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member end_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.1625908666756:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -6.174478383501992:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 1_ter', 'root -> End']
copynode -6.23402384086512:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -6.416075213579461:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -5.466527075273916:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MemberReference']
copynode -6.5567349249031395:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.848794406047091:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation qualifier unknown ^ ^ member size_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown', 'member -> size_ter']
copynode -5.466527075273916:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MethodInvocation']
copynode -5.466527075273916:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal']
copynode -7.2349192935507745:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -6.489173038164154:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.3253829318564385:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member end_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -7.363423092989251:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member end_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -7.398281796602532:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member end_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -5.466527075273916:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> End']
copynode -5.466527075273916:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers BinaryOperation ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> BinaryOperation']
copynode -7.378349905600771:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions BinaryOperation operator +_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference']
copynode -7.017027561319992:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 0_ter ^ ^ ^ ^ initializer ArrayInitializer ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializer -> ArrayInitializer']
copynode -6.46974649769254:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ initializer ArrayInitializer initializers MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MemberReference']
copynode -7.035874132765457:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 1_ter ^ ^ ^ ^ initializer ArrayInitializer ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializer -> ArrayInitializer']
copynode -7.379055564990267:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -6.66458780108951:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation qualifier unknown ^ ^ member size_ter ^ ^ ^ ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown', 'member -> size_ter']
copynode -7.112196964910254:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ClassCreator type BasicType name char_ter ^ ^ ^ ^ arguments ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> BasicType', 'copy-BasicType', 'arguments -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType']
copynode -6.975905304541811:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation member unknown ^ ^ ^ ^ initializer ArrayInitializer ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'initializer -> ArrayInitializer']
copynode -6.975905304541811:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation member unknown ^ ^ ^ ^ initializer ArrayInitializer_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'initializer -> ArrayInitializer_ter']
before@16 batch0 x: -7.865655904402956: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation member unknown ^ ^ ^ ^ initializer ArrayInitializer_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'initializer -> ArrayInitializer_ter']
after@16 batch0 x: -7.865655904402956: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation member unknown ^ ^ ^ ^ initializer ArrayInitializer_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'initializer -> ArrayInitializer_ter']
copynode -6.729581446154043:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MemberReference', 'MemberReference -> member']
copynode -6.989309733500704:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation qualifier unknown ^ ^ member size_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown', 'member -> size_ter', 'root -> End']
copynode -6.963554983725771:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.18448790977709:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value']
copynode -7.591357798082754:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> End', 'root -> End']
copynode -7.724022690905258:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 0_ter ^ ^ ^ ^ initializer ArrayInitializer initializers ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers']
copynode -7.7140976244118065:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions BinaryOperation operator +_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> BasicType', 'copy-BasicType', 'dimensions -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.753731255186722:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 1_ter ^ ^ ^ ^ initializer ArrayInitializer initializers ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers']
copynode -7.731289890827611:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MemberReference member count_ter ^ ^ ^ ^ initializer ArrayInitializer initializers MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MemberReference', 'MemberReference -> member']
copynode -7.788258677115664:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ initializer ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.865655904402956:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation member unknown ^ ^ ^ ^ initializer ArrayInitializer_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'initializer -> ArrayInitializer_ter', 'root -> End']
copynode -7.858592992415652:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation member unknown ^ ^ ^ ^ initializer ArrayInitializer initializers ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers']
copynode -7.298841400304809:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal']
copynode -7.026490778429434:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.655311197740957:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.026490778429434:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.803376024356112:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation qualifier unknown ^ ^ member size_ter ^ ^ ^ ^ initializer ArrayInitializer ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown', 'member -> size_ter', 'initializer -> ArrayInitializer']
before@17 batch0 x: -8.656775837531313: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation qualifier unknown ^ ^ member size_ter ^ ^ ^ ^ initializer ArrayInitializer ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown', 'member -> size_ter', 'initializer -> ArrayInitializer']
after@17 batch0 x: -8.656775837531313: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation qualifier unknown ^ ^ member size_ter ^ ^ ^ ^ initializer ArrayInitializer ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown', 'member -> size_ter', 'initializer -> ArrayInitializer']
copynode -7.262211830122396:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -8.115921778837219:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value']
copynode -7.262211830122396:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -8.196024388773367:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -8.656775837531313:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation qualifier unknown ^ ^ member size_ter ^ ^ ^ ^ initializer ArrayInitializer initializers ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown', 'member -> size_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers']
copynode -6.764798977179453:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.249938339693472:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -7.729220289038494:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 0_ter ^ ^ ^ ^ initializer ArrayInitializer initializers MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MemberReference']
copynode -7.759331444976851:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 1_ter ^ ^ ^ ^ initializer ArrayInitializer initializers MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MemberReference']
copynode -8.548052281839773:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -7.86737875523977:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation member unknown ^ ^ ^ ^ initializer ArrayInitializer initializers MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MemberReference']
copynode -7.262211830122396:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 2_ter']
copynode -7.729220289038494:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 0_ter ^ ^ ^ ^ initializer ArrayInitializer initializers Literal ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal']
copynode -7.759331444976851:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 1_ter ^ ^ ^ ^ initializer ArrayInitializer initializers Literal ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal']
before@18 batch0 x: -9.340013365028426: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 1_ter ^ ^ ^ ^ initializer ArrayInitializer initializers Literal ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal']
after@18 batch0 x: -9.340013365028426: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 1_ter ^ ^ ^ ^ initializer ArrayInitializer initializers Literal ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal']
copynode -8.197270652512088:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -8.995926874922588:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 0_ter ^ ^ ^ ^ initializer ArrayInitializer initializers MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MemberReference', 'MemberReference -> member']
copynode -9.036502699134871:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 1_ter ^ ^ ^ ^ initializer ArrayInitializer initializers MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MemberReference', 'MemberReference -> member']
copynode -9.163002415327355:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation member unknown ^ ^ ^ ^ initializer ArrayInitializer initializers MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MemberReference', 'MemberReference -> member']
copynode -8.840058953268453:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers BinaryOperation operator +_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference']
copynode -8.129376143915579:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> MemberReference']
copynode -8.647177667124197:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -9.32790471916087:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 0_ter ^ ^ ^ ^ initializer ArrayInitializer initializers Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value']
copynode -9.340013365028426:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 1_ter ^ ^ ^ ^ initializer ArrayInitializer initializers Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value']
copynode -8.431181580526754:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 1_ter ^ ^ ^ MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> MemberReference']
copynode -8.129376143915579:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> End']
copynode -8.669740678509697:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation qualifier unknown ^ ^ member size_ter ^ ^ ^ ^ initializer ArrayInitializer initializers ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown', 'member -> size_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> End']
copynode -8.197270652512088:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -8.129376143915579:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal']
before@19 batch0 x: -9.846096248133108: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal']
after@19 batch0 x: -9.846096248133108: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal']
copynode -9.306484431726858:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> MemberReference', 'MemberReference -> member']
copynode -9.254067689878866:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers BinaryOperation operator +_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -9.311882287962362:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -9.644671828253195:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 1_ter ^ ^ ^ MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> MemberReference', 'MemberReference -> member']
copynode -9.761327952845022:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> End', 'root -> End']
copynode -9.791021110257134:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions MethodInvocation qualifier unknown ^ ^ member size_ter ^ ^ ^ ^ initializer ArrayInitializer initializers ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown', 'member -> size_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> End', 'root -> End']
copynode -8.973840257385746:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal']
copynode -9.846096248133108:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value']
copynode -9.372679247753695:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 0_ter ^ ^ ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -9.38560904818587:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 1_ter ^ ^ ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -8.973840257385746:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> End']
copynode -9.38560904818587:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 1_ter ^ ^ ^ ^ initializer ArrayInitializer initializers Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -9.372679247753695:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 0_ter ^ ^ ^ ^ initializer ArrayInitializer initializers Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -9.004390388028696:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 0_ter ^ ^ ^ ^ initializer ArrayInitializer initializers MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MemberReference', 'MemberReference -> member', 'start -> unknown']
before@20 batch0 x: -10.716769724385813: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 0_ter ^ ^ ^ ^ initializer ArrayInitializer initializers MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MemberReference', 'MemberReference -> member', 'start -> unknown']
after@20 batch0 x: -10.716769724385813: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 0_ter ^ ^ ^ ^ initializer ArrayInitializer initializers MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -9.854892870644107:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value']
copynode -10.47662546322681:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> End', 'root -> End']
copynode -9.890732713742182:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -9.890732713742182:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -9.328456084011123:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -10.245535387890413:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 0_ter ^ ^ ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> MemberReference']
copynode -10.288349169073626:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 1_ter ^ ^ ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> MemberReference']
copynode -9.66653064521961:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 1_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -9.340514340205118:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers BinaryOperation operator +_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -10.245535387890413:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 0_ter ^ ^ ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> End']
copynode -10.288349169073626:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 1_ter ^ ^ ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> End']
copynode -10.521181004820392:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 1_ter ^ ^ ^ ^ initializer ArrayInitializer initializers Literal value 1_ter ^ ^ ^ MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> MemberReference']
before@21 batch0 x: -11.73483635741286: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 1_ter ^ ^ ^ ^ initializer ArrayInitializer initializers Literal value 1_ter ^ ^ ^ MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> MemberReference']
after@21 batch0 x: -11.73483635741286: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 1_ter ^ ^ ^ ^ initializer ArrayInitializer initializers Literal value 1_ter ^ ^ ^ MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> MemberReference']
copynode -9.912410797784105:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -9.912410797784105:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -11.4272617243696:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 0_ter ^ ^ ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> MemberReference', 'MemberReference -> member']
copynode -11.475947039900348:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 1_ter ^ ^ ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> MemberReference', 'MemberReference -> member']
copynode -11.699881091015413:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 0_ter ^ ^ ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> End', 'root -> End']
copynode -10.678452440304682:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> MemberReference']
copynode -11.718436020193622:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 1_ter ^ ^ ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> End', 'root -> End']
copynode -11.73483635741286:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions Literal value 1_ter ^ ^ ^ ^ initializer ArrayInitializer initializers Literal value 1_ter ^ ^ ^ MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'dimensions -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> MemberReference', 'MemberReference -> member']
copynode -9.912410797784105:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 2_ter']
copynode -10.678452440304682:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> End']
copynode -11.124810167355463:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> MemberReference']
before@22 batch0 x: -12.192099996609613: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> MemberReference']
after@22 batch0 x: -12.192099996609613: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> MemberReference']
copynode -10.650428356835619:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal']
copynode -11.715265818638727:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> MemberReference', 'MemberReference -> member']
copynode -10.650428356835619:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> End']
copynode -12.090382286114618:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> End', 'root -> End']
copynode -12.192099996609613:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> MemberReference', 'MemberReference -> member']
copynode -10.650428356835619:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> MemberReference']
copynode -11.43090588063933:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> Literal']
copynode -11.43090588063933:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> End']
copynode -11.856729092309251:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 2_ter', 'initializers -> Literal']
before@23 batch0 x: -12.948483290383592: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ Literal ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 2_ter', 'initializers -> Literal']
after@23 batch0 x: -12.948483290383592: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ Literal ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 2_ter', 'initializers -> Literal']
copynode -11.692466678330675:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value']
copynode -11.950246753403917:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> End', 'root -> End']
copynode -12.338279785821214:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> MemberReference', 'MemberReference -> member']
copynode -12.48832649202086:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> Literal', 'Literal -> value']
copynode -12.701817931840196:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> End', 'root -> End']
copynode -12.948483290383592:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 2_ter', 'initializers -> Literal', 'Literal -> value']
copynode -11.732904904289171:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -12.209962111664936:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> MemberReference', 'MemberReference -> member', 'start -> unknown']
before@24 batch0 x: -13.976993185235187: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> MemberReference', 'MemberReference -> member', 'start -> unknown']
after@24 batch0 x: -13.976993185235187: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayCreator type BasicType name char_ter ^ ^ ^ ^ dimensions None_ter ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> BasicType', 'copy-BasicType', 'copy-dimensions', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -11.744090812513605:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -12.541898729512468:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -11.744090812513605:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -13.007958749542013:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 2_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -11.744090812513605:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 2_ter']
copynode -12.541898729512468:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter']
before@25 batch0 x: -14.048000814625993: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter']
after@25 batch0 x: -14.048000814625993: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -12.479948478052393:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal']
copynode -12.479948478052393:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> End']
copynode -13.24767160625197:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal']
copynode -13.261549370596185:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> Literal']
copynode -12.479948478052393:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> MemberReference']
copynode -13.24767160625197:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> End']
before@26 batch0 x: -14.57058751792647: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> End']
after@26 batch0 x: -14.57058751792647: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> End']
copynode -13.470607655355707:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value']
copynode -13.830079870531335:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> End', 'root -> End']
copynode -14.255373480031267:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value']
copynode -14.269848125288263:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> Literal', 'Literal -> value']
copynode -14.395700292894617:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> MemberReference', 'MemberReference -> member']
copynode -14.57058751792647:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> End', 'root -> End']
before@27 batch0 x: -14.57152058702195: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> End', 'root -> End']
after@27 batch0 x: -14.57152058702195: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> End', 'root -> End']
copynode -13.512359379092231:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -14.297860907623544:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -14.312791520962492:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -13.512359379092231:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter']
before@28 batch0 x: -15.058145759860054: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter']
after@28 batch0 x: -15.058145759860054: root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -14.235235451022163:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal']
copynode -14.235235451022163:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> End']
copynode -15.005428420612589:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal']
copynode -15.016143972286955:  root modified ^ LocalVariableDeclaration type BasicType name char_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer ArrayInitializer initializers Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType', 'copy-BasicType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc3', 'initializer -> ArrayInitializer', 'ArrayInitializer -> initializers', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 1_ter', 'initializers -> Literal', 'Literal -> value', 'value -> 0_ter', 'initializers -> Literal']
6 count_ter
6 count_ter
6 count_ter
method
7 
6 count_ter
6 count_ter
method
7 
method
7 
String  random 
String  randomAscii 
String  randomAlphabetic 
String  randomAlphanumeric 
String  randomNumeric 
String  random 
String  random 
String  random 
String  random 
String  random 
String  random 
method
7 
method
7 
stderr: Check out program version: Lang-11b........................................ OK
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Running ant (export.dir.src.classes)....................................... OK

  0%|          | 0/1 [00:00<?, ?it/s]/root/projects/Recoder-bwk/run.py:527: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  tmpdepth = np.array(tmpdepth)
/root/envs/recoder/lib/python3.7/site-packages/torch/nn/functional.py:1340: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
100%|██████████| 1/1 [00:16<00:00, 16.36s/it]100%|██████████| 1/1 [00:16<00:00, 16.36s/it]
