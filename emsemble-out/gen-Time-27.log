stdout: else_statement -> BlockStatement
using GPU
p
path org.joda.time.format.PeriodFormatterBuilder
toFormatter
Position(line=794, column=20)
FOUND IT!
[{'bugid': 'Time-27', 'treeroot': <Searchnode.Node object at 0x7f5acbc52250>, 'troot': <Searchnode.Node object at 0x7f5acbc52250>, 'oldcode': '                PeriodFormatter f = toFormatter(elementPairs.subList(2, size), notPrinter, notParser);', 'filepath': 'buggy/Time-27/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java', 'subroot': <Searchnode.Node object at 0x7f5acbc60710>, 'vardic': {'toFormatter_ter': 'meth0', 'elementPairs_ter': 'par0', 'notPrinter_ter': 'par1', 'notParser_ter': 'par2', 'size_ter': 'loc0', 'sep_ter': 'loc1', 'f_ter': 'loc2', 'comp_ter': 'loc3'}, 'typedic': {'elementPairs_ter': 'List', 'notPrinter_ter': 'boolean', 'notParser_ter': 'boolean', 'size_ter': 'int', 'sep_ter': 'Separator', 'f_ter': 'PeriodFormatter', 'comp_ter': 'Object'}, 'idss': 'Time-27', 'classname': 'org.joda.time.format.PeriodFormatterBuilder', 'precode': '/*\n *  Copyright 2001-2009 Stephen Colebourne\n *\n *  Licensed under the Apache License, Version 2.0 (the "License");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an "AS IS" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\npackage org.joda.time.format;\n\nimport java.io.IOException;\nimport java.io.Writer;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Locale;\nimport java.util.TreeSet;\n\nimport org.joda.time.DateTimeConstants;\nimport org.joda.time.DurationFieldType;\nimport org.joda.time.PeriodType;\nimport org.joda.time.ReadWritablePeriod;\nimport org.joda.time.ReadablePeriod;\n\n/**\n * Factory that creates complex instances of PeriodFormatter via method calls.\n * <p>\n * Period formatting is performed by the {@link PeriodFormatter} class.\n * Three classes provide factory methods to create formatters, and this is one.\n * The others are {@link PeriodFormat} and {@link ISOPeriodFormat}.\n * <p>\n * PeriodFormatterBuilder is used for constructing formatters which are then\n * used to print or parse. The formatters are built by appending specific fields\n * or other formatters to an instance of this builder.\n * <p>\n * For example, a formatter that prints years and months, like "15 years and 8 months",\n * can be constructed as follows:\n * <p>\n * <pre>\n * PeriodFormatter yearsAndMonths = new PeriodFormatterBuilder()\n *     .printZeroAlways()\n *     .appendYears()\n *     .appendSuffix(" year", " years")\n *     .appendSeparator(" and ")\n *     .printZeroRarely()\n *     .appendMonths()\n *     .appendSuffix(" month", " months")\n *     .toFormatter();\n * </pre>\n * <p>\n * PeriodFormatterBuilder itself is mutable and not thread-safe, but the\n * formatters that it builds are thread-safe and immutable.\n *\n * @author Brian S O\'Neill\n * @since 1.0\n * @see PeriodFormat\n */\npublic class PeriodFormatterBuilder {\n    private static final int PRINT_ZERO_RARELY_FIRST = 1;\n    private static final int PRINT_ZERO_RARELY_LAST = 2;\n    private static final int PRINT_ZERO_IF_SUPPORTED = 3;\n    private static final int PRINT_ZERO_ALWAYS = 4;\n    private static final int PRINT_ZERO_NEVER = 5;\n    \n    private static final int YEARS = 0;\n    private static final int MONTHS = 1;\n    private static final int WEEKS = 2;\n    private static final int DAYS = 3;\n    private static final int HOURS = 4;\n    private static final int MINUTES = 5;\n    private static final int SECONDS = 6;\n    private static final int MILLIS = 7;\n    private static final int SECONDS_MILLIS = 8;\n    private static final int SECONDS_OPTIONAL_MILLIS = 9;\n    private static final int MAX_FIELD = SECONDS_OPTIONAL_MILLIS;\n\n    private int iMinPrintedDigits;\n    private int iPrintZeroSetting;\n    private int iMaxParsedDigits;\n    private boolean iRejectSignedValues;\n\n    private PeriodFieldAffix iPrefix;\n\n    // List of Printers and Parsers used to build a final formatter.\n    private List<Object> iElementPairs;\n    /** Set to true if the formatter is not a printer. */\n    private boolean iNotPrinter;\n    /** Set to true if the formatter is not a parser. */\n    private boolean iNotParser;\n\n    // Last PeriodFormatter appended of each field type.\n    private FieldFormatter[] iFieldFormatters;\n\n    public PeriodFormatterBuilder() {\n        clear();\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Constructs a PeriodFormatter using all the appended elements.\n     * <p>\n     * This is the main method used by applications at the end of the build\n     * process to create a usable formatter.\n     * <p>\n     * Subsequent changes to this builder do not affect the returned formatter.\n     * <p>\n     * The returned formatter may not support both printing and parsing.\n     * The methods {@link PeriodFormatter#isPrinter()} and\n     * {@link PeriodFormatter#isParser()} will help you determine the state\n     * of the formatter.\n     * \n     * @return the newly created formatter\n     * @throws IllegalStateException if the builder can produce neither a printer nor a parser\n     */\n    public PeriodFormatter toFormatter() {\n        PeriodFormatter formatter = toFormatter(iElementPairs, iNotPrinter, iNotParser);\n        iFieldFormatters = (FieldFormatter[]) iFieldFormatters.clone();\n        return formatter;\n    }\n\n    /**\n     * Internal method to create a PeriodPrinter instance using all the\n     * appended elements.\n     * <p>\n     * Most applications will not use this method.\n     * If you want a printer in an application, call {@link #toFormatter()}\n     * and just use the printing API.\n     * <p>\n     * Subsequent changes to this builder do not affect the returned printer.\n     * \n     * @return the newly created printer, null if builder cannot create a printer\n     */\n    public PeriodPrinter toPrinter() {\n        if (iNotPrinter) {\n            return null;\n        }\n        return toFormatter().getPrinter();\n    }\n\n    /**\n     * Internal method to create a PeriodParser instance using all the\n     * appended elements.\n     * <p>\n     * Most applications will not use this method.\n     * If you want a printer in an application, call {@link #toFormatter()}\n     * and just use the printing API.\n     * <p>\n     * Subsequent changes to this builder do not affect the returned parser.\n     * \n     * @return the newly created parser, null if builder cannot create a parser\n     */\n    public PeriodParser toParser() {\n        if (iNotParser) {\n            return null;\n        }\n        return toFormatter().getParser();\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Clears out all the appended elements, allowing this builder to be reused.\n     */\n    public void clear() {\n        iMinPrintedDigits = 1;\n        iPrintZeroSetting = PRINT_ZERO_RARELY_LAST;\n        iMaxParsedDigits = 10;\n        iRejectSignedValues = false;\n        iPrefix = null;\n        if (iElementPairs == null) {\n            iElementPairs = new ArrayList<Object>();\n        } else {\n            iElementPairs.clear();\n        }\n        iNotPrinter = false;\n        iNotParser = false;\n        iFieldFormatters = new FieldFormatter[10];\n    }\n\n    /**\n     * Appends another formatter.\n     *\n     * @return this PeriodFormatterBuilder\n     */\n    public PeriodFormatterBuilder append(PeriodFormatter formatter) {\n        if (formatter == null) {\n            throw new IllegalArgumentException("No formatter supplied");\n        }\n        clearPrefix();\n        append0(formatter.getPrinter(), formatter.getParser());\n        return this;\n    }\n\n    /**\n     * Appends a printer parser pair.\n     * <p>\n     * Either the printer or the parser may be null, in which case the builder will\n     * be unable to produce a parser or printer repectively.\n     *\n     * @param printer  appends a printer to the builder, null if printing is not supported\n     * @param parser  appends a parser to the builder, null if parsing is not supported\n     * @return this PeriodFormatterBuilder\n     * @throws IllegalArgumentException if both the printer and parser are null\n     */\n    public PeriodFormatterBuilder append(PeriodPrinter printer, PeriodParser parser) {\n        if (printer == null && parser == null) {\n            throw new IllegalArgumentException("No printer or parser supplied");\n        }\n        clearPrefix();\n        append0(printer, parser);\n        return this;\n    }\n\n    /**\n     * Instructs the printer to emit specific text, and the parser to expect it.\n     * The parser is case-insensitive.\n     *\n     * @return this PeriodFormatterBuilder\n     * @throws IllegalArgumentException if text is null\n     */\n    public PeriodFormatterBuilder appendLiteral(String text) {\n        if (text == null) {\n            throw new IllegalArgumentException("Literal must not be null");\n        }\n        clearPrefix();\n        Literal literal = new Literal(text);\n        append0(literal, literal);\n        return this;\n    }\n\n    /**\n     * Set the minimum digits printed for the next and following appended\n     * fields. By default, the minimum digits printed is one. If the field value\n     * is zero, it is not printed unless a printZero rule is applied.\n     *\n     * @return this PeriodFormatterBuilder\n     */\n    public PeriodFormatterBuilder minimumPrintedDigits(int minDigits) {\n        iMinPrintedDigits = minDigits;\n        return this;\n    }\n\n    /**\n     * Set the maximum digits parsed for the next and following appended\n     * fields. By default, the maximum digits parsed is ten.\n     *\n     * @return this PeriodFormatterBuilder\n     */\n    public PeriodFormatterBuilder maximumParsedDigits(int maxDigits) {\n        iMaxParsedDigits = maxDigits;\n        return this;\n    }\n\n    /**\n     * Reject signed values when parsing the next and following appended fields.\n     *\n     * @return this PeriodFormatterBuilder\n     */\n    public PeriodFormatterBuilder rejectSignedValues(boolean v) {\n        iRejectSignedValues = v;\n        return this;\n    }\n\n    /**\n     * Never print zero values for the next and following appended fields,\n     * unless no fields would be printed. If no fields are printed, the printer\n     * forces the last "printZeroRarely" field to print a zero.\n     * <p>\n     * This field setting is the default.\n     *\n     * @return this PeriodFormatterBuilder\n     */\n    public PeriodFormatterBuilder printZeroRarelyLast() {\n        iPrintZeroSetting = PRINT_ZERO_RARELY_LAST;\n        return this;\n    }\n\n    /**\n     * Never print zero values for the next and following appended fields,\n     * unless no fields would be printed. If no fields are printed, the printer\n     * forces the first "printZeroRarely" field to print a zero.\n     *\n     * @return this PeriodFormatterBuilder\n     */\n    public PeriodFormatterBuilder printZeroRarelyFirst() {\n        iPrintZeroSetting = PRINT_ZERO_RARELY_FIRST;\n        return this;\n    }\n\n    /**\n     * Print zero values for the next and following appened fields only if the\n     * period supports it.\n     *\n     * @return this PeriodFormatterBuilder\n     */\n    public PeriodFormatterBuilder printZeroIfSupported() {\n        iPrintZeroSetting = PRINT_ZERO_IF_SUPPORTED;\n        return this;\n    }\n\n    /**\n     * Always print zero values for the next and following appended fields,\n     * even if the period doesn\'t support it. The parser requires values for\n     * fields that always print zero.\n     *\n     * @return this PeriodFormatterBuilder\n     */\n    public PeriodFormatterBuilder printZeroAlways() {\n        iPrintZeroSetting = PRINT_ZERO_ALWAYS;\n        return this;\n    }\n\n    /**\n     * Never print zero values for the next and following appended fields,\n     * unless no fields would be printed. If no fields are printed, the printer\n     * forces the last "printZeroRarely" field to print a zero.\n     * <p>\n     * This field setting is the default.\n     *\n     * @return this PeriodFormatterBuilder\n     */\n    public PeriodFormatterBuilder printZeroNever() {\n        iPrintZeroSetting = PRINT_ZERO_NEVER;\n        return this;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Append a field prefix which applies only to the next appended field. If\n     * the field is not printed, neither is the prefix.\n     *\n     * @param text text to print before field only if field is printed\n     * @return this PeriodFormatterBuilder\n     * @see #appendSuffix\n     */\n    public PeriodFormatterBuilder appendPrefix(String text) {\n        if (text == null) {\n            throw new IllegalArgumentException();\n        }\n        return appendPrefix(new SimpleAffix(text));\n    }\n\n    /**\n     * Append a field prefix which applies only to the next appended field. If\n     * the field is not printed, neither is the prefix.\n     * <p>\n     * During parsing, the singular and plural versions are accepted whether\n     * or not the actual value matches plurality.\n     *\n     * @param singularText text to print if field value is one\n     * @param pluralText text to print if field value is not one\n     * @return this PeriodFormatterBuilder\n     * @see #appendSuffix\n     */\n    public PeriodFormatterBuilder appendPrefix(String singularText,\n                                                 String pluralText) {\n        if (singularText == null || pluralText == null) {\n            throw new IllegalArgumentException();\n        }\n        return appendPrefix(new PluralAffix(singularText, pluralText));\n    }\n\n    /**\n     * Append a field prefix which applies only to the next appended field. If\n     * the field is not printed, neither is the prefix.\n     *\n     * @param prefix custom prefix\n     * @return this PeriodFormatterBuilder\n     * @see #appendSuffix\n     */\n    private PeriodFormatterBuilder appendPrefix(PeriodFieldAffix prefix) {\n        if (prefix == null) {\n            throw new IllegalArgumentException();\n        }\n        if (iPrefix != null) {\n            prefix = new CompositeAffix(iPrefix, prefix);\n        }\n        iPrefix = prefix;\n        return this;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Instruct the printer to emit an integer years field, if supported.\n     * <p>\n     * The number of printed and parsed digits can be controlled using\n     * {@link #minimumPrintedDigits(int)} and {@link #maximumParsedDigits(int)}.\n     *\n     * @return this PeriodFormatterBuilder\n     */\n    public PeriodFormatterBuilder appendYears() {\n        appendField(YEARS);\n        return this;\n    }\n\n    /**\n     * Instruct the printer to emit an integer months field, if supported.\n     * <p>\n     * The number of printed and parsed digits can be controlled using\n     * {@link #minimumPrintedDigits(int)} and {@link #maximumParsedDigits(int)}.\n     *\n     * @return this PeriodFormatterBuilder\n     */\n    public PeriodFormatterBuilder appendMonths() {\n        appendField(MONTHS);\n        return this;\n    }\n\n    /**\n     * Instruct the printer to emit an integer weeks field, if supported.\n     * <p>\n     * The number of printed and parsed digits can be controlled using\n     * {@link #minimumPrintedDigits(int)} and {@link #maximumParsedDigits(int)}.\n     *\n     * @return this PeriodFormatterBuilder\n     */\n    public PeriodFormatterBuilder appendWeeks() {\n        appendField(WEEKS);\n        return this;\n    }\n\n    /**\n     * Instruct the printer to emit an integer days field, if supported.\n     * <p>\n     * The number of printed and parsed digits can be controlled using\n     * {@link #minimumPrintedDigits(int)} and {@link #maximumParsedDigits(int)}.\n     *\n     * @return this PeriodFormatterBuilder\n     */\n    public PeriodFormatterBuilder appendDays() {\n        appendField(DAYS);\n        return this;\n    }\n\n    /**\n     * Instruct the printer to emit an integer hours field, if supported.\n     * <p>\n     * The number of printed and parsed digits can be controlled using\n     * {@link #minimumPrintedDigits(int)} and {@link #maximumParsedDigits(int)}.\n     *\n     * @return this PeriodFormatterBuilder\n     */\n    public PeriodFormatterBuilder appendHours() {\n        appendField(HOURS);\n        return this;\n    }\n\n    /**\n     * Instruct the printer to emit an integer minutes field, if supported.\n     * <p>\n     * The number of printed and parsed digits can be controlled using\n     * {@link #minimumPrintedDigits(int)} and {@link #maximumParsedDigits(int)}.\n     *\n     * @return this PeriodFormatterBuilder\n     */\n    public PeriodFormatterBuilder appendMinutes() {\n        appendField(MINUTES);\n        return this;\n    }\n\n    /**\n     * Instruct the printer to emit an integer seconds field, if supported.\n     * <p>\n     * The number of printed and parsed digits can be controlled using\n     * {@link #minimumPrintedDigits(int)} and {@link #maximumParsedDigits(int)}.\n     *\n     * @return this PeriodFormatterBuilder\n     */\n    public PeriodFormatterBuilder appendSeconds() {\n        appendField(SECONDS);\n        return this;\n    }\n\n    /**\n     * Instruct the printer to emit a combined seconds and millis field, if supported.\n     * The millis will overflow into the seconds if necessary.\n     * The millis are always output.\n     *\n     * @return this PeriodFormatterBuilder\n     */\n    public PeriodFormatterBuilder appendSecondsWithMillis() {\n        appendField(SECONDS_MILLIS);\n        return this;\n    }\n\n    /**\n     * Instruct the printer to emit a combined seconds and millis field, if supported.\n     * The millis will overflow into the seconds if necessary.\n     * The millis are only output if non-zero.\n     *\n     * @return this PeriodFormatterBuilder\n     */\n    public PeriodFormatterBuilder appendSecondsWithOptionalMillis() {\n        appendField(SECONDS_OPTIONAL_MILLIS);\n        return this;\n    }\n\n    /**\n     * Instruct the printer to emit an integer millis field, if supported.\n     * <p>\n     * The number of printed and parsed digits can be controlled using\n     * {@link #minimumPrintedDigits(int)} and {@link #maximumParsedDigits(int)}.\n     *\n     * @return this PeriodFormatterBuilder\n     */\n    public PeriodFormatterBuilder appendMillis() {\n        appendField(MILLIS);\n        return this;\n    }\n\n    /**\n     * Instruct the printer to emit an integer millis field, if supported.\n     * <p>\n     * The number of arsed digits can be controlled using {@link #maximumParsedDigits(int)}.\n     *\n     * @return this PeriodFormatterBuilder\n     */\n    public PeriodFormatterBuilder appendMillis3Digit() {\n        appendField(7, 3);\n        return this;\n    }\n\n    private void appendField(int type) {\n        appendField(type, iMinPrintedDigits);\n    }\n\n    private void appendField(int type, int minPrinted) {\n        FieldFormatter field = new FieldFormatter(minPrinted, iPrintZeroSetting,\n            iMaxParsedDigits, iRejectSignedValues, type, iFieldFormatters, iPrefix, null);\n        append0(field, field);\n        iFieldFormatters[type] = field;\n        iPrefix = null;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Append a field suffix which applies only to the last appended field. If\n     * the field is not printed, neither is the suffix.\n     *\n     * @param text text to print after field only if field is printed\n     * @return this PeriodFormatterBuilder\n     * @throws IllegalStateException if no field exists to append to\n     * @see #appendPrefix\n     */\n    public PeriodFormatterBuilder appendSuffix(String text) {\n        if (text == null) {\n            throw new IllegalArgumentException();\n        }\n        return appendSuffix(new SimpleAffix(text));\n    }\n\n    /**\n     * Append a field suffix which applies only to the last appended field. If\n     * the field is not printed, neither is the suffix.\n     * <p>\n     * During parsing, the singular and plural versions are accepted whether or\n     * not the actual value matches plurality.\n     *\n     * @param singularText text to print if field value is one\n     * @param pluralText text to print if field value is not one\n     * @return this PeriodFormatterBuilder\n     * @throws IllegalStateException if no field exists to append to\n     * @see #appendPrefix\n     */\n    public PeriodFormatterBuilder appendSuffix(String singularText,\n                                               String pluralText) {\n        if (singularText == null || pluralText == null) {\n            throw new IllegalArgumentException();\n        }\n        return appendSuffix(new PluralAffix(singularText, pluralText));\n    }\n\n    /**\n     * Append a field suffix which applies only to the last appended field. If\n     * the field is not printed, neither is the suffix.\n     *\n     * @param suffix custom suffix\n     * @return this PeriodFormatterBuilder\n     * @throws IllegalStateException if no field exists to append to\n     * @see #appendPrefix\n     */\n    private PeriodFormatterBuilder appendSuffix(PeriodFieldAffix suffix) {\n        final Object originalPrinter;\n        final Object originalParser;\n        if (iElementPairs.size() > 0) {\n            originalPrinter = iElementPairs.get(iElementPairs.size() - 2);\n            originalParser = iElementPairs.get(iElementPairs.size() - 1);\n        } else {\n            originalPrinter = null;\n            originalParser = null;\n        }\n\n        if (originalPrinter == null || originalParser == null ||\n                originalPrinter != originalParser ||\n                !(originalPrinter instanceof FieldFormatter)) {\n            throw new IllegalStateException("No field to apply suffix to");\n        }\n\n        clearPrefix();\n        FieldFormatter newField = new FieldFormatter((FieldFormatter) originalPrinter, suffix);\n        iElementPairs.set(iElementPairs.size() - 2, newField);\n        iElementPairs.set(iElementPairs.size() - 1, newField);\n        iFieldFormatters[newField.getFieldType()] = newField;\n        \n        return this;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Append a separator, which is output if fields are printed both before\n     * and after the separator.\n     * <p>\n     * For example, <code>builder.appendDays().appendSeparator(",").appendHours()</code>\n     * will only output the comma if both the days and hours fields are output.\n     * <p>\n     * The text will be parsed case-insensitively.\n     * <p>\n     * Note: appending a separator discontinues any further work on the latest\n     * appended field.\n     *\n     * @param text  the text to use as a separator\n     * @return this PeriodFormatterBuilder\n     * @throws IllegalStateException if this separator follows a previous one\n     */\n    public PeriodFormatterBuilder appendSeparator(String text) {\n        return appendSeparator(text, text, null, true, true);\n    }\n\n    /**\n     * Append a separator, which is output only if fields are printed after the separator.\n     * <p>\n     * For example,\n     * <code>builder.appendDays().appendSeparatorIfFieldsAfter(",").appendHours()</code>\n     * will only output the comma if the hours fields is output.\n     * <p>\n     * The text will be parsed case-insensitively.\n     * <p>\n     * Note: appending a separator discontinues any further work on the latest\n     * appended field.\n     *\n     * @param text  the text to use as a separator\n     * @return this PeriodFormatterBuilder\n     * @throws IllegalStateException if this separator follows a previous one\n     */\n    public PeriodFormatterBuilder appendSeparatorIfFieldsAfter(String text) {\n        return appendSeparator(text, text, null, false, true);\n    }\n\n    /**\n     * Append a separator, which is output only if fields are printed before the separator.\n     * <p>\n     * For example,\n     * <code>builder.appendDays().appendSeparatorIfFieldsBefore(",").appendHours()</code>\n     * will only output the comma if the days fields is output.\n     * <p>\n     * The text will be parsed case-insensitively.\n     * <p>\n     * Note: appending a separator discontinues any further work on the latest\n     * appended field.\n     *\n     * @param text  the text to use as a separator\n     * @return this PeriodFormatterBuilder\n     * @throws IllegalStateException if this separator follows a previous one\n     */\n    public PeriodFormatterBuilder appendSeparatorIfFieldsBefore(String text) {\n        return appendSeparator(text, text, null, true, false);\n    }\n\n    /**\n     * Append a separator, which is output if fields are printed both before\n     * and after the separator.\n     * <p>\n     * This method changes the separator depending on whether it is the last separator\n     * to be output.\n     * <p>\n     * For example, <code>builder.appendDays().appendSeparator(",", "&").appendHours().appendSeparator(",", "&").appendMinutes()</code>\n     * will output \'1,2&3\' if all three fields are output, \'1&2\' if two fields are output\n     * and \'1\' if just one field is output.\n     * <p>\n     * The text will be parsed case-insensitively.\n     * <p>\n     * Note: appending a separator discontinues any further work on the latest\n     * appended field.\n     *\n     * @param text  the text to use as a separator\n     * @param finalText  the text used used if this is the final separator to be printed\n     * @return this PeriodFormatterBuilder\n     * @throws IllegalStateException if this separator follows a previous one\n     */\n    public PeriodFormatterBuilder appendSeparator(String text, String finalText) {\n        return appendSeparator(text, finalText, null, true, true);\n    }\n\n    /**\n     * Append a separator, which is output if fields are printed both before\n     * and after the separator.\n     * <p>\n     * This method changes the separator depending on whether it is the last separator\n     * to be output.\n     * <p>\n     * For example, <code>builder.appendDays().appendSeparator(",", "&").appendHours().appendSeparator(",", "&").appendMinutes()</code>\n     * will output \'1,2&3\' if all three fields are output, \'1&2\' if two fields are output\n     * and \'1\' if just one field is output.\n     * <p>\n     * The text will be parsed case-insensitively.\n     * <p>\n     * Note: appending a separator discontinues any further work on the latest\n     * appended field.\n     *\n     * @param text  the text to use as a separator\n     * @param finalText  the text used used if this is the final separator to be printed\n     * @param variants  set of text values which are also acceptable when parsed\n     * @return this PeriodFormatterBuilder\n     * @throws IllegalStateException if this separator follows a previous one\n     */\n    public PeriodFormatterBuilder appendSeparator(String text, String finalText,\n                                                  String[] variants) {\n        return appendSeparator(text, finalText, variants, true, true);\n    }\n\n    private PeriodFormatterBuilder appendSeparator(String text, String finalText,\n                                                   String[] variants,\n                                                   boolean useBefore, boolean useAfter) {\n        if (text == null || finalText == null) {\n            throw new IllegalArgumentException();\n        }\n\n        clearPrefix();\n        \n        // optimise zero formatter case\n        List<Object> pairs = iElementPairs;\n        if (pairs.size() == 0) {\n            if (useAfter && useBefore == false) {\n                Separator separator = new Separator(\n                        text, finalText, variants,\n                        Literal.EMPTY, Literal.EMPTY, useBefore, useAfter);\n                append0(separator, separator);\n            }\n            return this;\n        }\n        \n        // find the last separator added\n        int i;\n        Separator lastSeparator = null;\n        for (i=pairs.size(); --i>=0; ) {\n            if (pairs.get(i) instanceof Separator) {\n                lastSeparator = (Separator) pairs.get(i);\n                pairs = pairs.subList(i + 1, pairs.size());\n                break;\n            }\n            i--;  // element pairs\n        }\n        \n        // merge formatters\n        if (lastSeparator != null && pairs.size() == 0) {\n            throw new IllegalStateException("Cannot have two adjacent separators");\n        } else {\n            Object[] comp = createComposite(pairs);\n            pairs.clear();\n            Separator separator = new Separator(\n                    text, finalText, variants,\n                    (PeriodPrinter) comp[0], (PeriodParser) comp[1],\n                    useBefore, useAfter);\n            pairs.add(separator);\n            pairs.add(separator);\n        }\n        \n        return this;\n    }\n\n    //-----------------------------------------------------------------------\n    private void clearPrefix() throws IllegalStateException {\n        if (iPrefix != null) {\n            throw new IllegalStateException("Prefix not followed by field");\n        }\n        iPrefix = null;\n    }\n\n    private PeriodFormatterBuilder append0(PeriodPrinter printer, PeriodParser parser) {\n        iElementPairs.add(printer);\n        iElementPairs.add(parser);\n        iNotPrinter |= (printer == null);\n        iNotParser |= (parser == null);\n        return this;\n    }\n\n    //-----------------------------------------------------------------------\n    private static PeriodFormatter toFormatter(List<Object> elementPairs, boolean notPrinter, boolean notParser) {\n        if (notPrinter && notParser) {\n            throw new IllegalStateException("Builder has created neither a printer nor a parser");\n        }\n        int size = elementPairs.size();\n        if (size >= 2 && elementPairs.get(0) instanceof Separator) {\n            Separator sep = (Separator) elementPairs.get(0);', 'aftercode': '                sep = sep.finish(f.getPrinter(), f.getParser());\n                return new PeriodFormatter(sep, sep);\n        }\n        Object[] comp = createComposite(elementPairs);\n        if (notPrinter) {\n            return new PeriodFormatter(null, (PeriodParser) comp[1]);\n        } else if (notParser) {\n            return new PeriodFormatter((PeriodPrinter) comp[0], null);\n        } else {\n            return new PeriodFormatter((PeriodPrinter) comp[0], (PeriodParser) comp[1]);\n        }\n    }\n\n    private static Object[] createComposite(List<Object> elementPairs) {\n        switch (elementPairs.size()) {\n            case 0:\n                return new Object[] {Literal.EMPTY, Literal.EMPTY};\n            case 1:\n                return new Object[] {elementPairs.get(0), elementPairs.get(1)};\n            default:\n                Composite comp = new Composite(elementPairs);\n                return new Object[] {comp, comp};\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Defines a formatted field\'s prefix or suffix text.\n     * This can be used for fields such as \'n hours\' or \'nH\' or \'Hour:n\'.\n     */\n    static interface PeriodFieldAffix {\n        int calculatePrintedLength(int value);\n        \n        void printTo(StringBuffer buf, int value);\n        \n        void printTo(Writer out, int value) throws IOException;\n        \n        /**\n         * @return new position after parsing affix, or ~position of failure\n         */\n        int parse(String periodStr, int position);\n\n        /**\n         * @return position where affix starts, or original ~position if not found\n         */\n        int scan(String periodStr, int position);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Implements an affix where the text does not vary by the amount.\n     */\n    static class SimpleAffix implements PeriodFieldAffix {\n        private final String iText;\n\n        SimpleAffix(String text) {\n            iText = text;\n        }\n\n        public int calculatePrintedLength(int value) {\n            return iText.length();\n        }\n\n        public void printTo(StringBuffer buf, int value) {\n            buf.append(iText);\n        }\n\n        public void printTo(Writer out, int value) throws IOException {\n            out.write(iText);\n        }\n\n        public int parse(String periodStr, int position) {\n            String text = iText;\n            int textLength = text.length();\n            if (periodStr.regionMatches(true, position, text, 0, textLength)) {\n                return position + textLength;\n            }\n            return ~position;\n        }\n\n        public int scan(String periodStr, final int position) {\n            String text = iText;\n            int textLength = text.length();\n            int sourceLength = periodStr.length();\n            search:\n            for (int pos = position; pos < sourceLength; pos++) {\n                if (periodStr.regionMatches(true, pos, text, 0, textLength)) {\n                    return pos;\n                }\n                // Only allow number characters to be skipped in search of suffix.\n                switch (periodStr.charAt(pos)) {\n                case \'0\': case \'1\': case \'2\': case \'3\': case \'4\':\n                case \'5\': case \'6\': case \'7\': case \'8\': case \'9\':\n                case \'.\': case \',\': case \'+\': case \'-\':\n                    break;\n                default:\n                    break search;\n                }\n            }\n            return ~position;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Implements an affix where the text varies by the amount of the field.\n     * Only singular (1) and plural (not 1) are supported.\n     */\n    static class PluralAffix implements PeriodFieldAffix {\n        private final String iSingularText;\n        private final String iPluralText;\n\n        PluralAffix(String singularText, String pluralText) {\n            iSingularText = singularText;\n            iPluralText = pluralText;\n        }\n\n        public int calculatePrintedLength(int value) {\n            return (value == 1 ? iSingularText : iPluralText).length();\n        }\n\n        public void printTo(StringBuffer buf, int value) {\n            buf.append(value == 1 ? iSingularText : iPluralText);\n        }\n\n        public void printTo(Writer out, int value) throws IOException {\n            out.write(value == 1 ? iSingularText : iPluralText);\n        }\n\n        public int parse(String periodStr, int position) {\n            String text1 = iPluralText;\n            String text2 = iSingularText; \n\n            if (text1.length() < text2.length()) {\n                // Swap in order to match longer one first.\n                String temp = text1;\n                text1 = text2;\n                text2 = temp;\n            }\n\n            if (periodStr.regionMatches\n                (true, position, text1, 0, text1.length())) {\n                return position + text1.length();\n            }\n            if (periodStr.regionMatches\n                (true, position, text2, 0, text2.length())) {\n                return position + text2.length();\n            }\n\n            return ~position;\n        }\n\n        public int scan(String periodStr, final int position) {\n            String text1 = iPluralText;\n            String text2 = iSingularText; \n\n            if (text1.length() < text2.length()) {\n                // Swap in order to match longer one first.\n                String temp = text1;\n                text1 = text2;\n                text2 = temp;\n            }\n\n            int textLength1 = text1.length();\n            int textLength2 = text2.length();\n\n            int sourceLength = periodStr.length();\n            for (int pos = position; pos < sourceLength; pos++) {\n                if (periodStr.regionMatches(true, pos, text1, 0, textLength1)) {\n                    return pos;\n                }\n                if (periodStr.regionMatches(true, pos, text2, 0, textLength2)) {\n                    return pos;\n                }\n            }\n            return ~position;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Builds a composite affix by merging two other affix implementations.\n     */\n    static class CompositeAffix implements PeriodFieldAffix {\n        private final PeriodFieldAffix iLeft;\n        private final PeriodFieldAffix iRight;\n\n        CompositeAffix(PeriodFieldAffix left, PeriodFieldAffix right) {\n            iLeft = left;\n            iRight = right;\n        }\n\n        public int calculatePrintedLength(int value) {\n            return iLeft.calculatePrintedLength(value)\n                + iRight.calculatePrintedLength(value);\n        }\n\n        public void printTo(StringBuffer buf, int value) {\n            iLeft.printTo(buf, value);\n            iRight.printTo(buf, value);\n        }\n\n        public void printTo(Writer out, int value) throws IOException {\n            iLeft.printTo(out, value);\n            iRight.printTo(out, value);\n        }\n\n        public int parse(String periodStr, int position) {\n            position = iLeft.parse(periodStr, position);\n            if (position >= 0) {\n                position = iRight.parse(periodStr, position);\n            }\n            return position;\n        }\n\n        public int scan(String periodStr, final int position) {\n            int pos = iLeft.scan(periodStr, position);\n            if (pos >= 0) {\n                return iRight.scan(periodStr, pos);\n            }\n            return ~position;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Formats the numeric value of a field, potentially with prefix/suffix.\n     */\n    static class FieldFormatter\n            implements PeriodPrinter, PeriodParser {\n        private final int iMinPrintedDigits;\n        private final int iPrintZeroSetting;\n        private final int iMaxParsedDigits;\n        private final boolean iRejectSignedValues;\n        \n        /** The index of the field type, 0=year, etc. */\n        private final int iFieldType;\n        /**\n         * The array of the latest formatter added for each type.\n         * This is shared between all the field formatters in a formatter.\n         */\n        private final FieldFormatter[] iFieldFormatters;\n        \n        private final PeriodFieldAffix iPrefix;\n        private final PeriodFieldAffix iSuffix;\n\n        FieldFormatter(int minPrintedDigits, int printZeroSetting,\n                       int maxParsedDigits, boolean rejectSignedValues,\n                       int fieldType, FieldFormatter[] fieldFormatters,\n                       PeriodFieldAffix prefix, PeriodFieldAffix suffix) {\n            iMinPrintedDigits = minPrintedDigits;\n            iPrintZeroSetting = printZeroSetting;\n            iMaxParsedDigits = maxParsedDigits;\n            iRejectSignedValues = rejectSignedValues;\n            iFieldType = fieldType;\n            iFieldFormatters = fieldFormatters;\n            iPrefix = prefix;\n            iSuffix = suffix;\n        }\n\n        FieldFormatter(FieldFormatter field, PeriodFieldAffix suffix) {\n            iMinPrintedDigits = field.iMinPrintedDigits;\n            iPrintZeroSetting = field.iPrintZeroSetting;\n            iMaxParsedDigits = field.iMaxParsedDigits;\n            iRejectSignedValues = field.iRejectSignedValues;\n            iFieldType = field.iFieldType;\n            iFieldFormatters = field.iFieldFormatters;\n            iPrefix = field.iPrefix;\n            if (field.iSuffix != null) {\n                suffix = new CompositeAffix(field.iSuffix, suffix);\n            }\n            iSuffix = suffix;\n        }\n\n        public int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale locale) {\n            if (stopAt <= 0) {\n                return 0;\n            }\n            if (iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) != Long.MAX_VALUE) {\n                return 1;\n            }\n            return 0;\n        }\n\n        public int calculatePrintedLength(ReadablePeriod period, Locale locale) {\n            long valueLong = getFieldValue(period);\n            if (valueLong == Long.MAX_VALUE) {\n                return 0;\n            }\n\n            int sum = Math.max(FormatUtils.calculateDigitCount(valueLong), iMinPrintedDigits);\n            if (iFieldType >= SECONDS_MILLIS) {\n                // valueLong contains the seconds and millis fields\n                // the minimum output is 0.000, which is 4 digits\n                sum = Math.max(sum, 4);\n                // plus one for the decimal point\n                sum++;\n                if (iFieldType == SECONDS_OPTIONAL_MILLIS &&\n                        (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0) {\n                    sum -= 4; // remove three digits and decimal point\n                }\n                // reset valueLong to refer to the seconds part for the prefic/suffix calculation\n                valueLong = valueLong / DateTimeConstants.MILLIS_PER_SECOND;\n            }\n            int value = (int) valueLong;\n\n            if (iPrefix != null) {\n                sum += iPrefix.calculatePrintedLength(value);\n            }\n            if (iSuffix != null) {\n                sum += iSuffix.calculatePrintedLength(value);\n            }\n\n            return sum;\n        }\n        \n        public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {\n            long valueLong = getFieldValue(period);\n            if (valueLong == Long.MAX_VALUE) {\n                return;\n            }\n            int value = (int) valueLong;\n            if (iFieldType >= SECONDS_MILLIS) {\n                value = (int) (valueLong / DateTimeConstants.MILLIS_PER_SECOND);\n            }\n\n            if (iPrefix != null) {\n                iPrefix.printTo(buf, value);\n            }\n            int minDigits = iMinPrintedDigits;\n            if (minDigits <= 1) {\n                FormatUtils.appendUnpaddedInteger(buf, value);\n            } else {\n                FormatUtils.appendPaddedInteger(buf, value, minDigits);\n            }\n            if (iFieldType >= SECONDS_MILLIS) {\n                int dp = (int) (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND);\n                if (iFieldType == SECONDS_MILLIS || dp > 0) {\n                    buf.append(\'.\');\n                    FormatUtils.appendPaddedInteger(buf, dp, 3);\n                }\n            }\n            if (iSuffix != null) {\n                iSuffix.printTo(buf, value);\n            }\n        }\n\n        public void printTo(Writer out, ReadablePeriod period, Locale locale) throws IOException {\n            long valueLong = getFieldValue(period);\n            if (valueLong == Long.MAX_VALUE) {\n                return;\n            }\n            int value = (int) valueLong;\n            if (iFieldType >= SECONDS_MILLIS) {\n                value = (int) (valueLong / DateTimeConstants.MILLIS_PER_SECOND);\n            }\n\n            if (iPrefix != null) {\n                iPrefix.printTo(out, value);\n            }\n            int minDigits = iMinPrintedDigits;\n            if (minDigits <= 1) {\n                FormatUtils.writeUnpaddedInteger(out, value);\n            } else {\n                FormatUtils.writePaddedInteger(out, value, minDigits);\n            }\n            if (iFieldType >= SECONDS_MILLIS) {\n                int dp = (int) (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND);\n                if (iFieldType == SECONDS_MILLIS || dp > 0) {\n                    out.write(\'.\');\n                    FormatUtils.writePaddedInteger(out, dp, 3);\n                }\n            }\n            if (iSuffix != null) {\n                iSuffix.printTo(out, value);\n            }\n        }\n\n        public int parseInto(\n                ReadWritablePeriod period, String text, \n                int position, Locale locale) {\n\n            boolean mustParse = (iPrintZeroSetting == PRINT_ZERO_ALWAYS);\n\n            // Shortcut test.\n            if (position >= text.length()) {\n                return mustParse ? ~position : position;\n            }\n\n            if (iPrefix != null) {\n                position = iPrefix.parse(text, position);\n                if (position >= 0) {\n                    // If prefix is found, then the parse must finish.\n                    mustParse = true;\n                } else {\n                    // Prefix not found, so bail.\n                    if (!mustParse) {\n                        // It\'s okay because parsing of this field is not\n                        // required. Don\'t return an error. Fields down the\n                        // chain can continue on, trying to parse.\n                        return ~position;\n                    }\n                    return position;\n                }\n            }\n\n            int suffixPos = -1;\n            if (iSuffix != null && !mustParse) {\n                // Pre-scan the suffix, to help determine if this field must be\n                // parsed.\n                suffixPos = iSuffix.scan(text, position);\n                if (suffixPos >= 0) {\n                    // If suffix is found, then parse must finish.\n                    mustParse = true;\n                } else {\n                    // Suffix not found, so bail.\n                    if (!mustParse) {\n                        // It\'s okay because parsing of this field is not\n                        // required. Don\'t return an error. Fields down the\n                        // chain can continue on, trying to parse.\n                        return ~suffixPos;\n                    }\n                    return suffixPos;\n                }\n            }\n\n            if (!mustParse && !isSupported(period.getPeriodType(), iFieldType)) {\n                // If parsing is not required and the field is not supported,\n                // exit gracefully so that another parser can continue on.\n                return position;\n            }\n\n            int limit;\n            if (suffixPos > 0) {\n                limit = Math.min(iMaxParsedDigits, suffixPos - position);\n            } else {\n                limit = Math.min(iMaxParsedDigits, text.length() - position);\n            }\n\n            // validate input number\n            int length = 0;\n            int fractPos = -1;\n            boolean hasDigits = false;\n            while (length < limit) {\n                char c = text.charAt(position + length);\n                // leading sign\n                if (length == 0 && (c == \'-\' || c == \'+\') && !iRejectSignedValues) {\n                    boolean negative = c == \'-\';\n\n                    // Next character must be a digit.\n                    if (length + 1 >= limit || \n                        (c = text.charAt(position + length + 1)) < \'0\' || c > \'9\')\n                    {\n                        break;\n                    }\n\n                    if (negative) {\n                        length++;\n                    } else {\n                        // Skip the \'+\' for parseInt to succeed.\n                        position++;\n                    }\n                    // Expand the limit to disregard the sign character.\n                    limit = Math.min(limit + 1, text.length() - position);\n                    continue;\n                }\n                // main number\n                if (c >= \'0\' && c <= \'9\') {\n                    hasDigits = true;\n                } else {\n                    if ((c == \'.\' || c == \',\')\n                         && (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS)) {\n                        if (fractPos >= 0) {\n                            // can\'t have two decimals\n                            break;\n                        }\n                        fractPos = position + length + 1;\n                        // Expand the limit to disregard the decimal point.\n                        limit = Math.min(limit + 1, text.length() - position);\n                    } else {\n                        break;\n                    }\n                }\n                length++;\n            }\n\n            if (!hasDigits) {\n                return ~position;\n            }\n\n            if (suffixPos >= 0 && position + length != suffixPos) {\n                // If there are additional non-digit characters before the\n                // suffix is reached, then assume that the suffix found belongs\n                // to a field not yet reached. Return original position so that\n                // another parser can continue on.\n                return position;\n            }\n\n            if (iFieldType != SECONDS_MILLIS && iFieldType != SECONDS_OPTIONAL_MILLIS) {\n                // Handle common case.\n                setFieldValue(period, iFieldType, parseInt(text, position, length));\n            } else if (fractPos < 0) {\n                setFieldValue(period, SECONDS, parseInt(text, position, length));\n                setFieldValue(period, MILLIS, 0);\n            } else {\n                int wholeValue = parseInt(text, position, fractPos - position - 1);\n                setFieldValue(period, SECONDS, wholeValue);\n\n                int fractLen = position + length - fractPos;\n                int fractValue;\n                if (fractLen <= 0) {\n                    fractValue = 0;\n                } else {\n                    if (fractLen >= 3) {\n                        fractValue = parseInt(text, fractPos, 3);\n                    } else {\n                        fractValue = parseInt(text, fractPos, fractLen);\n                        if (fractLen == 1) {\n                            fractValue *= 100;\n                        } else {\n                            fractValue *= 10;\n                        }\n                    }\n                    if (wholeValue < 0) {\n                        fractValue = -fractValue;\n                    }\n                }\n\n                setFieldValue(period, MILLIS, fractValue);\n            }\n                \n            position += length;\n\n            if (position >= 0 && iSuffix != null) {\n                position = iSuffix.parse(text, position);\n            }\n                \n            return position;\n        }\n\n        /**\n         * @param text text to parse\n         * @param position position in text\n         * @param length exact count of characters to parse\n         * @return parsed int value\n         */\n        private int parseInt(String text, int position, int length) {\n            if (length >= 10) {\n                // Since value may exceed max, use stock parser which checks for this.\n                return Integer.parseInt(text.substring(position, position + length));\n            }\n            if (length <= 0) {\n                return 0;\n            }\n            int value = text.charAt(position++);\n            length--;\n            boolean negative;\n            if (value == \'-\') {\n                if (--length < 0) {\n                    return 0;\n                }\n                negative = true;\n                value = text.charAt(position++);\n            } else {\n                negative = false;\n            }\n            value -= \'0\';\n            while (length-- > 0) {\n                value = ((value << 3) + (value << 1)) + text.charAt(position++) - \'0\';\n            }\n            return negative ? -value : value;\n        }\n\n        /**\n         * @return Long.MAX_VALUE if nothing to print, otherwise value\n         */\n        long getFieldValue(ReadablePeriod period) {\n            PeriodType type;\n            if (iPrintZeroSetting == PRINT_ZERO_ALWAYS) {\n                type = null; // Don\'t need to check if supported.\n            } else {\n                type = period.getPeriodType();\n            }\n            if (type != null && isSupported(type, iFieldType) == false) {\n                return Long.MAX_VALUE;\n            }\n\n            long value;\n\n            switch (iFieldType) {\n            default:\n                return Long.MAX_VALUE;\n            case YEARS:\n                value = period.get(DurationFieldType.years());\n                break;\n            case MONTHS:\n                value = period.get(DurationFieldType.months());\n                break;\n            case WEEKS:\n                value = period.get(DurationFieldType.weeks());\n                break;\n            case DAYS:\n                value = period.get(DurationFieldType.days());\n                break;\n            case HOURS:\n                value = period.get(DurationFieldType.hours());\n                break;\n            case MINUTES:\n                value = period.get(DurationFieldType.minutes());\n                break;\n            case SECONDS:\n                value = period.get(DurationFieldType.seconds());\n                break;\n            case MILLIS:\n                value = period.get(DurationFieldType.millis());\n                break;\n            case SECONDS_MILLIS: // drop through\n            case SECONDS_OPTIONAL_MILLIS:\n                int seconds = period.get(DurationFieldType.seconds());\n                int millis = period.get(DurationFieldType.millis());\n                value = (seconds * (long) DateTimeConstants.MILLIS_PER_SECOND) + millis;\n                break;\n            }\n\n            // determine if period is zero and this is the last field\n            if (value == 0) {\n                switch (iPrintZeroSetting) {\n                case PRINT_ZERO_NEVER:\n                    return Long.MAX_VALUE;\n                case PRINT_ZERO_RARELY_LAST:\n                    if (isZero(period) && iFieldFormatters[iFieldType] == this) {\n                        for (int i = iFieldType + 1; i <= MAX_FIELD; i++) {\n                            if (isSupported(type, i) && iFieldFormatters[i] != null) {\n                                return Long.MAX_VALUE;\n                            }\n                        }\n                    } else {\n                        return Long.MAX_VALUE;\n                    }\n                    break;\n                case PRINT_ZERO_RARELY_FIRST:\n                    if (isZero(period) && iFieldFormatters[iFieldType] == this) {\n                        int i = Math.min(iFieldType, 8);  // line split out for IBM JDK\n                        i--;                              // see bug 1660490\n                        for (; i >= 0 && i <= MAX_FIELD; i--) {\n                            if (isSupported(type, i) && iFieldFormatters[i] != null) {\n                                return Long.MAX_VALUE;\n                            }\n                        }\n                    } else {\n                        return Long.MAX_VALUE;\n                    }\n                    break;\n                }\n            }\n\n            return value;\n        }\n\n        boolean isZero(ReadablePeriod period) {\n            for (int i = 0, isize = period.size(); i < isize; i++) {\n                if (period.getValue(i) != 0) {\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        boolean isSupported(PeriodType type, int field) {\n            switch (field) {\n            default:\n                return false;\n            case YEARS:\n                return type.isSupported(DurationFieldType.years());\n            case MONTHS:\n                return type.isSupported(DurationFieldType.months());\n            case WEEKS:\n                return type.isSupported(DurationFieldType.weeks());\n            case DAYS:\n                return type.isSupported(DurationFieldType.days());\n            case HOURS:\n                return type.isSupported(DurationFieldType.hours());\n            case MINUTES:\n                return type.isSupported(DurationFieldType.minutes());\n            case SECONDS:\n                return type.isSupported(DurationFieldType.seconds());\n            case MILLIS:\n                return type.isSupported(DurationFieldType.millis());\n            case SECONDS_MILLIS: // drop through\n            case SECONDS_OPTIONAL_MILLIS:\n                return type.isSupported(DurationFieldType.seconds()) ||\n                       type.isSupported(DurationFieldType.millis());\n            }\n        }\n\n        void setFieldValue(ReadWritablePeriod period, int field, int value) {\n            switch (field) {\n            default:\n                break;\n            case YEARS:\n                period.setYears(value);\n                break;\n            case MONTHS:\n                period.setMonths(value);\n                break;\n            case WEEKS:\n                period.setWeeks(value);\n                break;\n            case DAYS:\n                period.setDays(value);\n                break;\n            case HOURS:\n                period.setHours(value);\n                break;\n            case MINUTES:\n                period.setMinutes(value);\n                break;\n            case SECONDS:\n                period.setSeconds(value);\n                break;\n            case MILLIS:\n                period.setMillis(value);\n                break;\n            }\n        }\n\n        int getFieldType() {\n            return iFieldType;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Handles a simple literal piece of text.\n     */\n    static class Literal\n            implements PeriodPrinter, PeriodParser {\n        static final Literal EMPTY = new Literal("");\n        private final String iText;\n\n        Literal(String text) {\n            iText = text;\n        }\n\n        public int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale locale) {\n            return 0;\n        }\n\n        public int calculatePrintedLength(ReadablePeriod period, Locale locale) {\n            return iText.length();\n        }\n\n        public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {\n            buf.append(iText);\n        }\n\n        public void printTo(Writer out, ReadablePeriod period, Locale locale) throws IOException {\n            out.write(iText);\n        }\n\n        public int parseInto(\n                ReadWritablePeriod period, String periodStr,\n                int position, Locale locale) {\n            if (periodStr.regionMatches(true, position, iText, 0, iText.length())) {\n                return position + iText.length();\n            }\n            return ~position;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Handles a separator, that splits the fields into multiple parts.\n     * For example, the \'T\' in the ISO8601 standard.\n     */\n    static class Separator\n            implements PeriodPrinter, PeriodParser {\n        private final String iText;\n        private final String iFinalText;\n        private final String[] iParsedForms;\n\n        private final boolean iUseBefore;\n        private final boolean iUseAfter;\n\n        private final PeriodPrinter iBeforePrinter;\n        private volatile PeriodPrinter iAfterPrinter;\n        private final PeriodParser iBeforeParser;\n        private volatile PeriodParser iAfterParser;\n\n        Separator(String text, String finalText, String[] variants,\n                PeriodPrinter beforePrinter, PeriodParser beforeParser,\n                boolean useBefore, boolean useAfter) {\n            iText = text;\n            iFinalText = finalText;\n\n            if ((finalText == null || text.equals(finalText)) &&\n                (variants == null || variants.length == 0)) {\n\n                iParsedForms = new String[] {text};\n            } else {\n                // Filter and reverse sort the parsed forms.\n                TreeSet<String> parsedSet = new TreeSet<String>(String.CASE_INSENSITIVE_ORDER);\n                parsedSet.add(text);\n                parsedSet.add(finalText);\n                if (variants != null) {\n                    for (int i=variants.length; --i>=0; ) {\n                        parsedSet.add(variants[i]);\n                    }\n                }\n                ArrayList<String> parsedList = new ArrayList<String>(parsedSet);\n                Collections.reverse(parsedList);\n                iParsedForms = parsedList.toArray(new String[parsedList.size()]);\n            }\n\n            iBeforePrinter = beforePrinter;\n            iBeforeParser = beforeParser;\n            iUseBefore = useBefore;\n            iUseAfter = useAfter;\n        }\n\n        public int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale locale) {\n            int sum = iBeforePrinter.countFieldsToPrint(period, stopAt, locale);\n            if (sum < stopAt) {\n                sum += iAfterPrinter.countFieldsToPrint(period, stopAt, locale);\n            }\n            return sum;\n        }\n\n        public int calculatePrintedLength(ReadablePeriod period, Locale locale) {\n            PeriodPrinter before = iBeforePrinter;\n            PeriodPrinter after = iAfterPrinter;\n            \n            int sum = before.calculatePrintedLength(period, locale)\n                    + after.calculatePrintedLength(period, locale);\n            \n            if (iUseBefore) {\n                if (before.countFieldsToPrint(period, 1, locale) > 0) {\n                    if (iUseAfter) {\n                        int afterCount = after.countFieldsToPrint(period, 2, locale);\n                        if (afterCount > 0) {\n                            sum += (afterCount > 1 ? iText : iFinalText).length();\n                        }\n                    } else {\n                        sum += iText.length();\n                    }\n                }\n            } else if (iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0) {\n                sum += iText.length();\n            }\n            \n            return sum;\n        }\n\n        public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {\n            PeriodPrinter before = iBeforePrinter;\n            PeriodPrinter after = iAfterPrinter;\n            \n            before.printTo(buf, period, locale);\n            if (iUseBefore) {\n                if (before.countFieldsToPrint(period, 1, locale) > 0) {\n                    if (iUseAfter) {\n                        int afterCount = after.countFieldsToPrint(period, 2, locale);\n                        if (afterCount > 0) {\n                            buf.append(afterCount > 1 ? iText : iFinalText);\n                        }\n                    } else {\n                        buf.append(iText);\n                    }\n                }\n            } else if (iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0) {\n                buf.append(iText);\n            }\n            after.printTo(buf, period, locale);\n        }\n\n        public void printTo(Writer out, ReadablePeriod period, Locale locale) throws IOException {\n            PeriodPrinter before = iBeforePrinter;\n            PeriodPrinter after = iAfterPrinter;\n            \n            before.printTo(out, period, locale);\n            if (iUseBefore) {\n                if (before.countFieldsToPrint(period, 1, locale) > 0) {\n                    if (iUseAfter) {\n                        int afterCount = after.countFieldsToPrint(period, 2, locale);\n                        if (afterCount > 0) {\n                            out.write(afterCount > 1 ? iText : iFinalText);\n                        }\n                    } else {\n                        out.write(iText);\n                    }\n                }\n            } else if (iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0) {\n                out.write(iText);\n            }\n            after.printTo(out, period, locale);\n        }\n\n        public int parseInto(\n                ReadWritablePeriod period, String periodStr,\n                int position, Locale locale) {\n            int oldPos = position;\n            position = iBeforeParser.parseInto(period, periodStr, position, locale);\n\n            if (position < 0) {\n                return position;\n            }\n\n            boolean found = false;\n            if (position > oldPos) {\n                // Consume this separator.\n                String[] parsedForms = iParsedForms;\n                int length = parsedForms.length;\n                for (int i=0; i < length; i++) {\n                    String parsedForm = parsedForms[i];\n                    if ((parsedForm == null || parsedForm.length() == 0) ||\n                        periodStr.regionMatches\n                        (true, position, parsedForm, 0, parsedForm.length())) {\n                        \n                        position += parsedForm.length();\n                        found = true;\n                        break;\n                    }\n                }\n            }\n\n            oldPos = position;\n            position = iAfterParser.parseInto(period, periodStr, position, locale);\n\n            if (position < 0) {\n                return position;\n            }\n\n            if (found && position == oldPos) {\n                // Separator should not have been supplied.\n                return ~oldPos;\n            }\n\n            if (position > oldPos && !found && !iUseBefore) {\n                // Separator was required.\n                return ~oldPos;\n            }\n\n            return position;\n        }\n\n        Separator finish(PeriodPrinter afterPrinter, PeriodParser afterParser) {\n            iAfterPrinter = afterPrinter;\n            iAfterParser = afterParser;\n            return this;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Composite implementation that merges other fields to create a full pattern.\n     */\n    static class Composite\n            implements PeriodPrinter, PeriodParser {\n        \n        private final PeriodPrinter[] iPrinters;\n        private final PeriodParser[] iParsers;\n\n        Composite(List<Object> elementPairs) {\n            List<Object> printerList = new ArrayList<Object>();\n            List<Object> parserList = new ArrayList<Object>();\n\n            decompose(elementPairs, printerList, parserList);\n\n            if (printerList.size() <= 0) {\n                iPrinters = null;\n            } else {\n                iPrinters = printerList.toArray(\n                        new PeriodPrinter[printerList.size()]);\n            }\n\n            if (parserList.size() <= 0) {\n                iParsers = null;\n            } else {\n                iParsers = parserList.toArray(\n                        new PeriodParser[parserList.size()]);\n            }\n        }\n\n        public int countFieldsToPrint(ReadablePeriod period, int stopAt, Locale locale) {\n            int sum = 0;\n            PeriodPrinter[] printers = iPrinters;\n            for (int i=printers.length; sum < stopAt && --i>=0; ) {\n                sum += printers[i].countFieldsToPrint(period, Integer.MAX_VALUE, locale);\n            }\n            return sum;\n        }\n\n        public int calculatePrintedLength(ReadablePeriod period, Locale locale) {\n            int sum = 0;\n            PeriodPrinter[] printers = iPrinters;\n            for (int i=printers.length; --i>=0; ) {\n                sum += printers[i].calculatePrintedLength(period, locale);\n            }\n            return sum;\n        }\n\n        public void printTo(StringBuffer buf, ReadablePeriod period, Locale locale) {\n            PeriodPrinter[] printers = iPrinters;\n            int len = printers.length;\n            for (int i=0; i<len; i++) {\n                printers[i].printTo(buf, period, locale);\n            }\n        }\n\n        public void printTo(Writer out, ReadablePeriod period, Locale locale) throws IOException {\n            PeriodPrinter[] printers = iPrinters;\n            int len = printers.length;\n            for (int i=0; i<len; i++) {\n                printers[i].printTo(out, period, locale);\n            }\n        }\n\n        public int parseInto(\n                ReadWritablePeriod period, String periodStr,\n                int position, Locale locale) {\n            PeriodParser[] parsers = iParsers;\n            if (parsers == null) {\n                throw new UnsupportedOperationException();\n            }\n\n            int len = parsers.length;\n            for (int i=0; i<len && position >= 0; i++) {\n                position = parsers[i].parseInto(period, periodStr, position, locale);\n            }\n            return position;\n        }\n\n        private void decompose(List<Object> elementPairs, List<Object> printerList, List<Object> parserList) {\n            int size = elementPairs.size();\n            for (int i=0; i<size; i+=2) {\n                Object element = elementPairs.get(i);\n                if (element instanceof PeriodPrinter) {\n                    if (element instanceof Composite) {\n                        addArrayToList(printerList, ((Composite) element).iPrinters);\n                    } else {\n                        printerList.add(element);\n                    }\n                }\n\n                element = elementPairs.get(i + 1);\n                if (element instanceof PeriodParser) {\n                    if (element instanceof Composite) {\n                        addArrayToList(parserList, ((Composite) element).iParsers);\n                    } else {\n                        parserList.add(element);\n                    }\n                }\n            }\n        }\n\n        private void addArrayToList(List<Object> list, Object[] array) {\n            if (array != null) {\n                for (int i=0; i<array.length; i++) {\n                    list.add(array[i]);\n                }\n            }\n        }\n    }\n\n}', 'tree': 'MethodDeclaration modifiers private_ter ^ static_ter ^ ^ return_type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ name meth0 ^ ^ parameters FormalParameter type ReferenceType name List_ter ^ ^ arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ ^ ^ name par0 ^ ^ ^ FormalParameter type BasicType name boolean_ter ^ ^ ^ ^ name par1 ^ ^ ^ FormalParameter type BasicType name boolean_ter ^ ^ ^ ^ name par2 ^ ^ ^ ^ body IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member par2 ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name IllegalStateException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator >=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator instanceof_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ operandr ReferenceType name Separator_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Separator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Separator_ter ^ ^ ^ ^ expression MethodInvocation qualifier par0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments MethodInvocation qualifier loc2 ^ ^ member getPrinter_ter ^ ^ ^ MethodInvocation qualifier loc2 ^ ^ member getParser_ter ^ ^ ^ ^ member finish_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ReturnStatement expression ClassCreator type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Object_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member createComposite_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition MemberReference member par1 ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression ClassCreator type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ arguments Literal value null_ter ^ ^ ^ Cast type ReferenceType name PeriodParser_ter ^ ^ ^ ^ expression MemberReference selectors ArraySelector index Literal value 1_ter ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition MemberReference member par2 ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression ClassCreator type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ arguments Cast type ReferenceType name PeriodPrinter_ter ^ ^ ^ ^ expression MemberReference selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ ^ Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements ReturnStatement expression ClassCreator type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ arguments Cast type ReferenceType name PeriodPrinter_ter ^ ^ ^ ^ expression MemberReference selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ ^ Cast type ReferenceType name PeriodParser_ter ^ ^ ^ ^ expression MemberReference selectors ArraySelector index Literal value 1_ter ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ', 'prob': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'mode': 0, 'line': 801, 'isa': False, 'fl_score': 1}]
before@0 batch0 x: 0: root ^  ; []
after@0 batch0 x: 0: root ^  ; []
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root parameters ^ ^ ; ['root -> parameters']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root member-member meth0 ^ ^  ^ ^ ; ['copy-member']
copynode 0:  root Literal-Literal value 2_ter ^ ^ ^  ^ ^ ; ['copy-Literal']
before@1 batch0 x: -12.723687171936035: root Literal-Literal value 2_ter ^ ^ ^  ^ ^  ; ['copy-Literal']
after@1 batch0 x: -12.723687171936035: root Literal-Literal value 2_ter ^ ^ ^  ^ ^  ; ['copy-Literal']
copynode -0.13639651238918304:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-Literal']
copynode -0.13639651238918304:  root modified ^ member-member meth0 ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -0.13639651238918304:  root modified ^ LocalVariableDeclaration ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration']
copynode -2.0634822845458984:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -0.13639651238918304:  root modified ^ member-member subList_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -0.13639651238918304:  root modified ^ qualifier-qualifier par0 ^ ^  ^ ^ ; ['root -> modified', 'copy-qualifier']
copynode -2.0634822845458984:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -0.13639651238918304:  root modified ^ MemberReference-MemberReference member par2 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.13639651238918304:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.13639651238918304:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -2.0634822845458984:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -2.0634822845458984:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -0.13639651238918304:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -2.0634822845458984:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -2.0634822845458984:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -2.0634822845458984:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -2.0634822845458984:  root add ^ WhileStatement ^ ^ ; ['root -> add', 'root -> WhileStatement']
copynode -0.13639651238918304:  root modified ^ control ^ ^ ; ['root -> modified', 'root -> control']
copynode -2.0634822845458984:  root add ^ Statement_ter ^ ^ ; ['root -> add', 'root -> Statement_ter']
copynode -2.0634822845458984:  root add ^ parameters ^ ^ ; ['root -> add', 'root -> parameters']
copynode -9.986000061035156:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -9.82125473022461:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -10.071704864501953:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -11.23646354675293:  root parameters FormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter']
copynode -11.418550491333008:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -9.82125473022461:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -12.512918472290039:  root member-member meth0 ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown']
copynode -12.723687171936035:  root Literal-Literal value 2_ter ^ ^ ^  value ^ ^ ^ ; ['copy-Literal', 'Literal -> value']
copynode -10.071704864501953:  root ReturnStatement expression ClassCreator type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -10.071704864501953:  root ReturnStatement expression ClassCreator type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ arguments Cast type ReferenceType name PeriodPrinter_ter ^ ^ ^ ^ expression MemberReference selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ ^ Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -10.071704864501953:  root ReturnStatement expression ClassCreator type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ arguments Literal value null_ter ^ ^ ^ Cast type ReferenceType name PeriodParser_ter ^ ^ ^ ^ expression MemberReference selectors ArraySelector index Literal value 1_ter ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -10.071704864501953:  root ReturnStatement expression ClassCreator type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ arguments Cast type ReferenceType name PeriodPrinter_ter ^ ^ ^ ^ expression MemberReference selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ ^ Cast type ReferenceType name PeriodParser_ter ^ ^ ^ ^ expression MemberReference selectors ArraySelector index Literal value 1_ter ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -11.23646354675293:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End']
copynode -11.418550491333008:  root StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments MethodInvocation qualifier loc2 ^ ^ member getPrinter_ter ^ ^ ^ MethodInvocation qualifier loc2 ^ ^ member getParser_ter ^ ^ ^ ^ member finish_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.23646354675293:  root parameters FormalParameter type ReferenceType name List_ter ^ ^ arguments TypeArgument type ReferenceType name Object_ter ^ ^ ^ ^ ^ ^ ^ ^ name par0 ^ ^ ^ FormalParameter type BasicType name boolean_ter ^ ^ ^ ^ name par1 ^ ^ ^ FormalParameter type BasicType name boolean_ter ^ ^ ^ ^ name par2 ^ ^ ^ ^ ^ ; ['root -> parameters', 'copy-parameters']
copynode -12.512918472290039:  root member-member meth0 ^ ^  meth0 ^ ^ ^ ; ['copy-member', 'member -> meth0']
copynode -12.512918472290039:  root member-member meth0 ^ ^  createComposite_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.23646354675293:  root parameters MemberReference ^ ^ ^ ; ['root -> parameters', 'parameters -> MemberReference']
copynode -9.82125473022461:  root return_type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'copy-return_type']
copynode -12.512918472290039:  root member-member meth0 ^ ^  get_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.512918472290039:  root member-member meth0 ^ ^  finish_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.723687171936035:  root Literal-Literal value 2_ter ^ ^ ^  prefix_operators ^ value ^ ^ ^ ; ['copy-Literal', 'Literal -> prefix_operators value']
copynode -12.512918472290039:  root member-member meth0 ^ ^  get_ter ^ ^ ^ ; ['copy-member', 'member -> get_ter']
copynode -11.23646354675293:  root parameters InferredFormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> InferredFormalParameter']
copynode -12.512918472290039:  root member-member meth0 ^ ^  add_ter ^ ^ ^ ; ['copy-member', 'member -> add_ter']
copynode -12.512918472290039:  root member-member meth0 ^ ^  debug_ter ^ ^ ^ ; ['copy-member', 'member -> debug_ter']
copynode -9.82125473022461:  root return_type par0 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -12.512918472290039:  root member-member meth0 ^ ^  get_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -9.82125473022461:  root return_type par1 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -12.512918472290039:  root member-member meth0 ^ ^  getName_ter ^ ^ ^ ; ['copy-member', 'member -> getName_ter']
copynode -9.82125473022461:  root return_type par2 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -12.723687171936035:  root Literal-Literal value 2_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -12.723687171936035:  root Literal-Literal value 2_ter ^ ^ ^  selectors ^ value ^ ^ ^ ; ['copy-Literal', 'Literal -> selectors value']
copynode -12.723687171936035:  root Literal-Literal value 2_ter ^ ^ ^  prefix_operators ^ selectors ^ value ^ ^ ^ ; ['copy-Literal', 'Literal -> prefix_operators selectors value']
copynode -12.723687171936035:  root Literal-Literal value 2_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -11.23646354675293:  root parameters loc1 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -10.071704864501953:  root ReturnStatement par2 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -10.071704864501953:  root ReturnStatement par1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -12.723687171936035:  root Literal-Literal value 2_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -12.723687171936035:  root Literal-Literal value 2_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -11.23646354675293:  root parameters Cast ^ ^ ^ ; ['root -> parameters', 'parameters -> Cast']
copynode -12.723687171936035:  root Literal-Literal value 2_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -9.986000061035156:  root IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member par2 ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name IllegalStateException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.723687171936035:  root Literal-Literal value 2_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -11.23646354675293:  root parameters loc0 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -11.23646354675293:  root parameters loc3 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -9.82125473022461:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -11.23646354675293:  root parameters par0 ^ ^ ^ ; ['root -> parameters', 'copy-FormalParameter']
copynode -9.986000061035156:  root IfStatement condition MemberReference member par2 ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression ClassCreator type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ arguments Cast type ReferenceType name PeriodPrinter_ter ^ ^ ^ ^ expression MemberReference selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ ^ Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements ReturnStatement expression ClassCreator type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ arguments Cast type ReferenceType name PeriodPrinter_ter ^ ^ ^ ^ expression MemberReference selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ ^ Cast type ReferenceType name PeriodParser_ter ^ ^ ^ ^ expression MemberReference selectors ArraySelector index Literal value 1_ter ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -9.986000061035156:  root IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator >=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator instanceof_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ operandr ReferenceType name Separator_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Separator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Separator_ter ^ ^ ^ ^ expression MethodInvocation qualifier par0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments MethodInvocation qualifier loc2 ^ ^ member getPrinter_ter ^ ^ ^ MethodInvocation qualifier loc2 ^ ^ member getParser_ter ^ ^ ^ ^ member finish_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ReturnStatement expression ClassCreator type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -10.071704864501953:  root ReturnStatement par0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -9.986000061035156:  root IfStatement condition MemberReference member par1 ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression ClassCreator type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ arguments Literal value null_ter ^ ^ ^ Cast type ReferenceType name PeriodParser_ter ^ ^ ^ ^ expression MemberReference selectors ArraySelector index Literal value 1_ter ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition MemberReference member par2 ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression ClassCreator type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ arguments Cast type ReferenceType name PeriodPrinter_ter ^ ^ ^ ^ expression MemberReference selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ ^ Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements ReturnStatement expression ClassCreator type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ arguments Cast type ReferenceType name PeriodPrinter_ter ^ ^ ^ ^ expression MemberReference selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ ^ Cast type ReferenceType name PeriodParser_ter ^ ^ ^ ^ expression MemberReference selectors ArraySelector index Literal value 1_ter ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -9.82125473022461:  root return_type loc0 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.82125473022461:  root return_type loc3 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.986000061035156:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -9.986000061035156:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -11.418550491333008:  root StatementExpression par0 ^ ^ ^ ; ['root -> StatementExpression', 'copy-FormalParameter']
copynode -9.82125473022461:  root return_type loc1 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.986000061035156:  root IfStatement par2 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -9.986000061035156:  root IfStatement par1 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -11.418550491333008:  root StatementExpression unknown ^ ^ ^ ; ['root -> StatementExpression', 'start -> unknown']
copynode -9.986000061035156:  root IfStatement par0 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -10.071704864501953:  root ReturnStatement unknown ^ ^ ^ ; ['root -> ReturnStatement', 'start -> unknown']
copynode -11.418550491333008:  root StatementExpression par1 ^ ^ ^ ; ['root -> StatementExpression', 'copy-FormalParameter']
copynode -11.418550491333008:  root StatementExpression par2 ^ ^ ^ ; ['root -> StatementExpression', 'copy-FormalParameter']
copynode -10.071704864501953:  root ReturnStatement loc1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.418550491333008:  root StatementExpression loc2 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -11.418550491333008:  root StatementExpression label ^ expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> label expression']
copynode -11.418550491333008:  root StatementExpression loc1 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -11.418550491333008:  root StatementExpression loc3 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
before@2 batch0 x: -31.9713191986084: root StatementExpression loc3 ^ ^ ^  ; ['root -> StatementExpression', 'copy-VariableDeclarator']
after@2 batch0 x: -31.9713191986084: root StatementExpression loc3 ^ ^ ^  ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -1.1912171691656113:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value']
copynode -1.5592990964651108:  root modified ^ member-member meth0 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -1.6218931525945663:  root modified ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -2.3878232538700104:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -2.642574891448021:  root modified ^ member-member subList_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -3.555620312690735:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -4.109876736998558:  root modified ^ MemberReference-MemberReference member par2 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -4.178048714995384:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -4.2578645795583725:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -3.176643952727318:  root modified ^ qualifier-qualifier par0 ^ ^  loc1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc1']
copynode -3.176643952727318:  root modified ^ qualifier-qualifier par0 ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par0']
copynode -3.176643952727318:  root modified ^ qualifier-qualifier par0 ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0']
copynode -3.176643952727318:  root modified ^ qualifier-qualifier par0 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown']
copynode -3.176643952727318:  root modified ^ qualifier-qualifier par0 ^ ^  par1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par1']
copynode -3.176643952727318:  root modified ^ qualifier-qualifier par0 ^ ^  loc2 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc2']
copynode -1.6218931525945663:  root modified ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -1.5592990964651108:  root modified ^ member-member meth0 ^ ^  createComposite_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -5.899223566055298:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -2.642574891448021:  root modified ^ member-member subList_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -1.5592990964651108:  root modified ^ member-member meth0 ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -2.642574891448021:  root modified ^ member-member subList_ter ^ ^  getPrinter_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.176643952727318:  root modified ^ qualifier-qualifier par0 ^ ^  loc3 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc3']
copynode -6.484285354614258:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -6.689455136656761:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -1.1912171691656113:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  prefix_operators ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value']
copynode -2.642574891448021:  root modified ^ member-member subList_ter ^ ^  getParser_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.5592990964651108:  root modified ^ member-member meth0 ^ ^  finish_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.5592990964651108:  root modified ^ member-member meth0 ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.555620312690735:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments MethodInvocation qualifier loc2 ^ ^ member getPrinter_ter ^ ^ ^ MethodInvocation qualifier loc2 ^ ^ member getParser_ter ^ ^ ^ ^ member finish_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -7.208244323730469:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -1.5592990964651108:  root modified ^ member-member meth0 ^ ^  e_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> e_ter']
copynode -2.642574891448021:  root modified ^ member-member subList_ter ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> par0']
copynode -4.109876736998558:  root modified ^ MemberReference-MemberReference member par2 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -2.642574891448021:  root modified ^ member-member subList_ter ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.5592990964651108:  root modified ^ member-member meth0 ^ ^  debug_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> debug_ter']
copynode -1.5592990964651108:  root modified ^ member-member meth0 ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> par0']
copynode -4.178048714995384:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -4.2578645795583725:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -3.176643952727318:  root modified ^ qualifier-qualifier par0 ^ ^  par2 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par2']
copynode -7.9803924560546875:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -2.642574891448021:  root modified ^ member-member subList_ter ^ ^  getName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> getName_ter']
copynode -1.5592990964651108:  root modified ^ member-member meth0 ^ ^  add_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> add_ter']
copynode -8.097068786621094:  root add ^ WhileStatement condition ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -5.899223566055298:  root add ^ ReturnStatement expression ClassCreator type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -3.176643952727318:  root modified ^ qualifier-qualifier par0 ^ ^  loc4 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc4']
copynode -2.642574891448021:  root modified ^ member-member subList_ter ^ ^  debug_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> debug_ter']
copynode -2.642574891448021:  root modified ^ member-member subList_ter ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> get_ter']
copynode -1.1912171691656113:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -2.642574891448021:  root modified ^ member-member subList_ter ^ ^  e_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> e_ter']
copynode -5.899223566055298:  root add ^ ReturnStatement expression ClassCreator type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ arguments Cast type ReferenceType name PeriodPrinter_ter ^ ^ ^ ^ expression MemberReference selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ ^ Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -5.899223566055298:  root add ^ ReturnStatement expression ClassCreator type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ arguments Literal value null_ter ^ ^ ^ Cast type ReferenceType name PeriodParser_ter ^ ^ ^ ^ expression MemberReference selectors ArraySelector index Literal value 1_ter ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -1.1912171691656113:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  selectors ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> selectors value']
copynode -5.899223566055298:  root add ^ ReturnStatement expression ClassCreator type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ arguments Cast type ReferenceType name PeriodPrinter_ter ^ ^ ^ ^ expression MemberReference selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ ^ Cast type ReferenceType name PeriodParser_ter ^ ^ ^ ^ expression MemberReference selectors ArraySelector index Literal value 1_ter ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -8.769270047545433:  root modified ^ control EnhancedForControl ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl']
copynode -1.5592990964651108:  root modified ^ member-member meth0 ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> get_ter']
copynode -3.176643952727318:  root modified ^ qualifier-qualifier par0 ^ ^  loc5 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc5']
copynode -4.109876736998558:  root modified ^ MemberReference-MemberReference member par2 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -1.6218931525945663:  root modified ^ LocalVariableDeclaration type ReferenceType name Separator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Separator_ter ^ ^ ^ ^ expression MethodInvocation qualifier par0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -1.1912171691656113:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -1.6218931525945663:  root modified ^ LocalVariableDeclaration type ReferenceType name Object_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member createComposite_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -6.484285354614258:  root add ^ LocalVariableDeclaration type ReferenceType name Separator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Separator_ter ^ ^ ^ ^ expression MethodInvocation qualifier par0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -4.178048714995384:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -1.1912171691656113:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -1.6218931525945663:  root modified ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -7.973575592041016:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -9.334409713745117:  root add ^ Statement_ter ^ ^ ; ['root -> add', 'root -> Statement_ter', 'root -> End']
copynode -1.1912171691656113:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -9.372688293457031:  root add ^ parameters FormalParameter ^ ^ ^ ; ['root -> add', 'root -> parameters', 'parameters -> FormalParameter']
copynode -6.484285354614258:  root add ^ LocalVariableDeclaration type ReferenceType name Object_ter ^ ^ dimensions None_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member createComposite_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -1.1912171691656113:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -4.2578645795583725:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -1.6218931525945663:  root modified ^ LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -6.484285354614258:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -1.1912171691656113:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  prefix_operators ^ selectors ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators selectors value']
copynode -4.109876736998558:  root modified ^ MemberReference-MemberReference member par2 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -4.178048714995384:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -1.1912171691656113:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -4.2578645795583725:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -9.986606006626971:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -9.986606006626971:  root IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -7.973575592041016:  root add ^ control par2 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter']
copynode -4.109876736998558:  root modified ^ MemberReference-MemberReference member par2 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -7.973575592041016:  root add ^ control par1 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter']
copynode -4.178048714995384:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -10.28122666478157:  root ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -7.973575592041016:  root add ^ control par0 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter']
copynode -10.042092591524124:  root return_type ReferenceType name Object_ter ^ ^ dimensions None_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -10.28122666478157:  root ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -11.444490557536483:  root StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -6.689455136656761:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments MethodInvocation qualifier loc2 ^ ^ member getPrinter_ter ^ ^ ^ MethodInvocation qualifier loc2 ^ ^ member getParser_ter ^ ^ ^ ^ member finish_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.484285354614258:  root add ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -7.208244323730469:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -1.6218931525945663:  root modified ^ LocalVariableDeclaration modifiers ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators']
copynode -4.2578645795583725:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -10.042092591524124:  root return_type ReferenceType name Separator_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -1.6218931525945663:  root modified ^ LocalVariableDeclaration par0 ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-FormalParameter']
copynode -11.333448849618435:  root parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -9.372688293457031:  root add ^ parameters ^ ^ ; ['root -> add', 'root -> parameters', 'parameters -> End']
copynode -9.986606006626971:  root IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
before@3 batch0 x: -12.335691814427264: root IfStatement condition MemberReference ^ ^ ^ ^  ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
after@3 batch0 x: -12.335691814427264: root IfStatement condition MemberReference ^ ^ ^ ^  ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -1.6011755540966988:  root modified ^ member-member meth0 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -1.634895189665258:  root modified ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -1.1992243025451899:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 1_ter']
copynode -1.1992243025451899:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 2_ter']
copynode -1.1992243025451899:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 0_ter']
copynode -2.758521094918251:  root modified ^ member-member subList_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -2.388237651612144:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -2.388237651612144:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -3.5824914667755365:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -4.332772120833397:  root modified ^ qualifier-qualifier par0 ^ ^  loc1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc1', 'root -> End']
copynode -4.159611061215401:  root modified ^ MemberReference-MemberReference member par2 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -4.227977190166712:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -4.297337029129267:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -4.998841151595116:  root modified ^ qualifier-qualifier par0 ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par0', 'root -> End']
copynode -2.388237651612144:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -5.1640041917562485:  root modified ^ qualifier-qualifier par0 ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0', 'root -> End']
copynode -3.5824914667755365:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -5.2022827714681625:  root modified ^ qualifier-qualifier par0 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -5.363524302840233:  root modified ^ qualifier-qualifier par0 ^ ^  par1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par1', 'root -> End']
copynode -1.1992243025451899:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value false_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> false_ter']
copynode -5.955836161971092:  root modified ^ qualifier-qualifier par0 ^ ^  loc2 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc2', 'root -> End']
copynode -4.159611061215401:  root modified ^ MemberReference-MemberReference member par2 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.297337029129267:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.227977190166712:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.273753270506859:  root modified ^ member-member meth0 ^ ^  createComposite_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.250198110938072:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter']
copynode -6.409304723143578:  root modified ^ member-member subList_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
copynode -6.476549252867699:  root modified ^ member-member meth0 ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
copynode -6.606889829039574:  root modified ^ member-member subList_ter ^ ^  getPrinter_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.660023555159569:  root modified ^ qualifier-qualifier par0 ^ ^  loc3 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc3', 'root -> End']
copynode -6.670848593115807:  root add ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -6.709933027625084:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  prefix_operators -_ter ^ ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter']
copynode -4.297337029129267:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.293440133333206:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -4.159611061215401:  root modified ^ MemberReference-MemberReference member par2 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -4.227977190166712:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.896902188658714:  root modified ^ member-member subList_ter ^ ^  getParser_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.696002037264407:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -6.957310780882835:  root modified ^ member-member meth0 ^ ^  finish_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -4.159611061215401:  root modified ^ MemberReference-MemberReference member par2 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.159611061215401:  root modified ^ MemberReference-MemberReference member par2 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -7.047902211546898:  root modified ^ member-member meth0 ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -4.227977190166712:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -2.388237651612144:  root add ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -2.388237651612144:  root add ^ IfStatement condition MemberReference member par2 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -3.5824914667755365:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -4.227977190166712:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -1.1992243025451899:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value true_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> true_ter']
copynode -4.297337029129267:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -2.388237651612144:  root add ^ IfStatement condition MemberReference member par1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.216418623924255:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments MethodInvocation qualifier loc2 ^ ^ member getPrinter_ter ^ ^ ^ MethodInvocation qualifier loc2 ^ ^ member getParser_ter ^ ^ ^ ^ member finish_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.315334424376488:  root modified ^ member-member meth0 ^ ^  e_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> e_ter', 'root -> End']
copynode -4.297337029129267:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -7.390896901488304:  root modified ^ member-member subList_ter ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> par0', 'root -> End']
copynode -7.409807309508324:  root modified ^ member-member subList_ter ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -7.410099133849144:  root modified ^ member-member meth0 ^ ^  debug_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> debug_ter', 'root -> End']
copynode -7.461279019713402:  root modified ^ member-member meth0 ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> par0', 'root -> End']
copynode -4.159611061215401:  root modified ^ MemberReference-MemberReference member par2 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.227977190166712:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -2.388237651612144:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member par2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -1.1992243025451899:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -4.297337029129267:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -1.1992243025451899:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.934929475188255:  root modified ^ qualifier-qualifier par0 ^ ^  par2 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par2', 'root -> End']
copynode -2.388237651612144:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator >=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator instanceof_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ operandr ReferenceType name Separator_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.402500495314598:  root modified ^ MemberReference-MemberReference member par2 ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -8.072457417845726:  root modified ^ member-member subList_ter ^ ^  getName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> getName_ter', 'root -> End']
copynode -2.388237651612144:  root add ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -7.467406615614891:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -8.096315488219261:  root modified ^ member-member meth0 ^ ^  add_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> add_ter', 'root -> End']
copynode -8.10861587524414:  root add ^ ReturnStatement expression ClassCreator type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -4.159611061215401:  root modified ^ MemberReference-MemberReference member par2 ^ ^ ^  member par2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -8.186190709471703:  root modified ^ qualifier-qualifier par0 ^ ^  loc4 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc4', 'root -> End']
copynode -6.293440133333206:  root add ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -4.227977190166712:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member par2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -8.301962956786156:  root modified ^ member-member subList_ter ^ ^  debug_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> debug_ter', 'root -> End']
copynode -6.696002037264407:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -8.370730504393578:  root modified ^ member-member subList_ter ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> get_ter', 'root -> End']
copynode -8.378514513373375:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal', 'root -> End']
copynode -8.398141011595726:  root modified ^ member-member subList_ter ^ ^  e_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> e_ter', 'root -> End']
copynode -2.388237651612144:  root add ^ IfStatement condition Cast ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast']
copynode -8.413572311401367:  root add ^ ReturnStatement expression ClassCreator type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ arguments Cast type ReferenceType name PeriodPrinter_ter ^ ^ ^ ^ expression MemberReference selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ ^ Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.293440133333206:  root add ^ ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -4.297337029129267:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member par2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -4.297337029129267:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -6.293440133333206:  root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -1.1992243025451899:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value This ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> This']
copynode -8.536933898925781:  root add ^ ReturnStatement expression ClassCreator type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ arguments Literal value null_ter ^ ^ ^ Cast type ReferenceType name PeriodParser_ter ^ ^ ^ ^ expression MemberReference selectors ArraySelector index Literal value 1_ter ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.728624925017357:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -8.036619056016207:  root add ^ AssertStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation']
copynode -8.691921472549438:  root add ^ ReturnStatement expression ClassCreator type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ arguments Cast type ReferenceType name PeriodPrinter_ter ^ ^ ^ ^ expression MemberReference selectors ArraySelector index Literal value 0_ter ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ ^ Cast type ReferenceType name PeriodParser_ter ^ ^ ^ ^ expression MemberReference selectors ArraySelector index Literal value 1_ter ^ ^ ^ ^ ^ ^ member loc3 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -8.783442783169448:  root modified ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -3.5824914667755365:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -8.828047379851341:  root modified ^ member-member meth0 ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> get_ter', 'root -> End']
copynode -4.159611061215401:  root modified ^ MemberReference-MemberReference member par2 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -8.854577168822289:  root modified ^ qualifier-qualifier par0 ^ ^  loc5 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc5', 'root -> End']
copynode -4.227977190166712:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -8.105067447759211:  root add ^ WhileStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation']
before@4 batch0 x: -8.936495856381953: root add ^ WhileStatement condition BinaryOperation ^ ^ ^ ^  ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation']
after@4 batch0 x: -8.936495856381953: root add ^ WhileStatement condition BinaryOperation ^ ^ ^ ^  ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation']
copynode -1.6351683950633742:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -2.1221866104751825:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 1_ter', 'root -> End']
copynode -2.329111048951745:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 2_ter', 'root -> End']
copynode -2.535642573609948:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -3.0446380341309123:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.3933357560890727:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.8605405185371637:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.688516929745674:  root modified ^ MemberReference-MemberReference member par2 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -4.75726917758584:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -4.867471907287836:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -3.3933357560890727:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.8605405185371637:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.172308037057519:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -3.3933357560890727:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -5.010763582016807:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -5.816417524591088:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value false_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> false_ter', 'root -> End']
copynode -3.3933357560890727:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -6.018799260258675:  root modified ^ MemberReference-MemberReference member par2 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -6.052364561706781:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -6.092682156711817:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -3.3933357560890727:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.010763582016807:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -3.3933357560890727:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -6.386234804987907:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> ReferenceType']
copynode -3.8605405185371637:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -1.6351683950633742:  root modified ^ LocalVariableDeclaration type ReferenceType name ^ arguments ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments']
copynode -6.7417452074587345:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2', 'root -> End']
copynode -6.786679655313492:  root add ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -6.735790517181158:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter', 'value -> 1_ter']
copynode -6.841087892651558:  root modified ^ MemberReference-MemberReference member par2 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2', 'root -> End']
copynode -6.893739853054285:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2', 'root -> End']
copynode -6.97544701397419:  root modified ^ MemberReference-MemberReference member par2 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -6.910858676768839:  root modified ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -3.3933357560890727:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -3.8605405185371637:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.0452330857515335:  root modified ^ MemberReference-MemberReference member par2 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -7.048647079616785:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -3.0446380341309123:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.109325561672449:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -7.14319402910769:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value true_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> true_ter', 'root -> End']
copynode -7.191257689148188:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -3.3933357560890727:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -1.6351683950633742:  root modified ^ LocalVariableDeclaration type ReferenceType name ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name']
copynode -7.075327094818931:  root add ^ IfStatement condition MemberReference member par2 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.379831526428461:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -3.3933357560890727:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member']
copynode -3.0446380341309123:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ operandr ReferenceType name Separator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.051826652314048:  root add ^ IfStatement condition This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors']
copynode -7.611732795834541:  root modified ^ MemberReference-MemberReference member par2 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -7.301422294403892:  root add ^ IfStatement condition MemberReference member par1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.69248429313302:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -7.7158392164856195:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> <string>_ter', 'root -> End']
copynode -7.786638472229242:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -7.09044105745852:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -3.3933357560890727:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -6.685409165918827:  root add ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -7.907749006524682:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -7.09044105745852:  root add ^ StatementExpression expression MemberReference selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> selectors member']
copynode -5.010763582016807:  root add ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.692604240204673:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr MemberReference member par2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -5.010763582016807:  root add ^ IfStatement condition MemberReference selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> selectors member']
copynode -8.157215431332588:  root modified ^ MemberReference-MemberReference member par2 ^ ^ ^  member par2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2', 'root -> End']
copynode -8.217720184475183:  root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member par2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2', 'root -> End']
copynode -6.685409165918827:  root add ^ LocalVariableDeclaration type ReferenceType name Separator_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -8.365141422487795:  root modified ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -7.997829612519126:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator >=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator instanceof_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ operandr ReferenceType name Separator_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -8.482422325760126:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member par2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2', 'root -> End']
before@5 batch0 x: -8.482728800183395: root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member par2 ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2', 'root -> End']
after@5 batch0 x: -8.482728800183395: root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member par2 ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2', 'root -> End']
copynode -1.6485366114065982:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator']
copynode -3.07660794648109:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -3.07660794648109:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -4.5165546629577875:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1']
copynode -4.436011966492515:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1']
copynode -5.432952579285484:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -3.07660794648109:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -4.940576251770835:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
copynode -5.172988536302:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -4.953028568997979:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -4.436011966492515:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -3.07660794648109:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -5.172988536302:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -5.980556186463218:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -3.07660794648109:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -3.07660794648109:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -6.319019016053062:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -6.3866902285662945:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -5.495057817723136:  root add ^ IfStatement condition MemberReference member loc1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -4.436011966492515:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -4.940576251770835:  root add ^ IfStatement condition MethodInvocation qualifier par1 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1']
copynode -5.495057817723136:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.3895787093788385:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
copynode -6.798406559973955:  root modified ^ Literal-Literal value 2_ter ^ ^ ^  prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter', 'value -> 1_ter', 'root -> End']
copynode -3.07660794648109:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter']
copynode -6.726776442548726:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ arguments ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name']
copynode -4.436011966492515:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -3.07660794648109:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter']
copynode -4.953028568997979:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -4.940576251770835:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -6.976327017880976:  root modified ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -6.977346118714195:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.014685520902276:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.5165546629577875:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -4.5165546629577875:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -4.436011966492515:  root add ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2']
copynode -7.209777530457359:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter']
copynode -6.385121997620445:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc1']
copynode -4.953028568997979:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.7922416045330465:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.0538219177979045:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -4.940576251770835:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -7.210501036664937:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name']
copynode -7.4100870454567485:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter']
copynode -4.953028568997979:  root add ^ StatementExpression expression MethodInvocation arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -4.953028568997979:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -6.304195102478843:  root add ^ IfStatement condition MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -1.6485366114065982:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -4.940576251770835:  root add ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2']
copynode -4.436011966492515:  root add ^ IfStatement condition MethodInvocation qualifier par1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par1']
copynode -4.5165546629577875:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2']
copynode -7.482232418085914:  root add ^ IfStatement condition This selectors MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -7.445686694409233:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ operandr ReferenceType name Separator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
before@6 batch0 x: -7.692817896371707: root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member unknown ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
after@6 batch0 x: -7.692817896371707: root modified ^ MemberReference-MemberReference member par1 ^ ^ ^  member unknown ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -1.6520375914988108:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -3.9352968374150805:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -4.408088568772655:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -3.9352968374150805:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -5.826450476422906:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.470918659295421:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -5.759743567730766:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown']
copynode -4.8101503644138575:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> MemberReference']
copynode -5.971692802850157:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -5.793296041432768:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation']
copynode -5.889335397805553:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -6.393632882129168:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -6.092374567117076:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -6.017413858498912:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -4.8101503644138575:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> Literal']
copynode -4.8101503644138575:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> MethodInvocation']
copynode -5.321644481446128:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> MemberReference']
copynode -5.435646699217614:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'qualifier -> loc1']
copynode -4.408088568772655:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -6.640097554947715:  root add ^ IfStatement condition MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown']
copynode -6.7870007250458:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown']
copynode -5.321644481446128:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'copy-arguments']
copynode -5.983791509352159:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc1 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc1']
copynode -5.858179863716941:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.435646699217614:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.946818241849542:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -7.044751508161426:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -4.8101503644138575:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'copy-arguments']
copynode -6.872497324075084:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference']
copynode -6.969904836441856:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -5.470918659295421:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -6.849614862527233:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference']
copynode -7.247376949992031:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -7.237105259671807:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -5.321644481446128:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> MethodInvocation']
copynode -5.889335397805553:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MethodInvocation']
copynode -6.861273906251881:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ arguments TypeArgument ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument']
copynode -3.9352968374150805:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
copynode -6.738460894848686:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -6.328329976822715:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.466827627446037:  root add ^ IfStatement condition MemberReference member loc1 ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> ReturnStatement']
copynode -5.983791509352159:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par1 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par1']
copynode -7.236386951233726:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc1', 'selectors -> MethodInvocation']
copynode -5.858179863716941:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -5.435646699217614:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'qualifier -> par0']
copynode -7.439028630033135:  root add ^ StatementExpression expression MethodInvocation arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -6.092374567117076:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MethodInvocation']
copynode -6.466827627446037:  root add ^ IfStatement condition MemberReference member loc1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -5.435646699217614:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'qualifier -> loc0']
copynode -7.489210065628868:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.328329976822715:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member loc1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc1']
copynode -7.408867008110974:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name', 'copy-declarators']
copynode -7.402514394547325:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
before@7 batch0 x: -7.5697102809208445: root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
after@7 batch0 x: -7.5697102809208445: root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -1.6542225198936649:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2']
copynode -4.173760388221126:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.562724668707233:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.9249256292241625:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.018987039104104:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.270243380393367:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.400723376165843:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators', 'root -> End']
copynode -6.478957925166469:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.5428975615650415:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> Literal', 'Literal -> value']
copynode -6.525172416295391:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.6153073871391825:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.862523363903165:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.842000586912036:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'root -> End']
copynode -5.94237254204927:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'root -> ReturnStatement']
copynode -6.0527715110220015:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.971272286202293:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.852646771993022:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.023622388485819:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -7.028335491195321:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -5.94237254204927:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'root -> End']
copynode -7.107694987382274:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.023622388485819:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.862026985909324:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'copy-arguments', 'start -> unknown']
copynode -5.862523363903165:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.852646771993022:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.219162795867305:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.966980555735063:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc1', 'start -> unknown']
copynode -7.277789948508143:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -6.613734582439065:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.796950940217357:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.862523363903165:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.0527715110220015:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.486169474199414:  root add ^ StatementExpression expression MethodInvocation arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -7.539744979760144:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name', 'copy-declarators', 'root -> End']
copynode -7.433659967209678:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc1', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.415138760290574:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par1', 'start -> unknown']
copynode -7.401535328652244:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -7.340438327810261:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ arguments TypeArgument pattern_type ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> pattern_type']
copynode -5.852646771993022:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.099607923999429:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'copy-arguments', 'start -> unknown']
copynode -7.5140401685494:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member loc1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc1', 'root -> End']
copynode -6.832095932390075:  root add ^ IfStatement condition MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'root -> End']
copynode -6.832095932390075:  root add ^ IfStatement condition MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'root -> ReturnStatement']
copynode -6.973617838171776:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown', 'arguments -> MemberReference']
copynode -6.7156622870243154:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc1 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'qualifier -> loc1', 'arguments -> MemberReference']
copynode -5.94237254204927:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'root -> StatementExpression']
copynode -5.94237254204927:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'root -> ContinueStatement_ter']
copynode -6.7156622870243154:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc1 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'qualifier -> loc1', 'copy-arguments']
copynode -7.1372739637154154:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
before@8 batch0 x: -8.123008247639518: root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
after@8 batch0 x: -8.123008247639518: root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -1.658491982438136:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation']
copynode -4.19789765792666:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -1.658491982438136:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer Cast ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> Cast']
copynode -4.576210625644308:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -4.19789765792666:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.19789765792666:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -4.19789765792666:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.576210625644308:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -1.658491982438136:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer ClassCreator ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> ClassCreator']
copynode -4.576210625644308:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.19789765792666:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -1.658491982438136:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer This ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> This']
copynode -1.658491982438136:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer TernaryExpression ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> TernaryExpression']
copynode -1.658491982438136:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> BinaryOperation']
copynode -4.576210625644308:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.300242847006302:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -4.576210625644308:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.020392757083755:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.020392757083755:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -7.059486622456461:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'value -> MethodInvocation']
copynode -6.5138155074673705:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.1094788406044245:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -7.17245506728068:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation']
copynode -6.611656371678691:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -1.658491982438136:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MemberReference']
copynode -7.452957038010936:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr']
copynode -7.023326579655986:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr']
copynode -6.8642151821404696:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> End']
copynode -6.1094788406044245:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.129009859811049:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -7.2484178633312695:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc1', 'start -> unknown', 'root -> End']
copynode -7.753838650009129:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ arguments TypeArgument pattern_type ?_ter ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> pattern_type', 'pattern_type -> ?_ter']
copynode -6.559853484854102:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.800943652167916:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -7.248198375280481:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.726445246662479:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.1094788406044245:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.953620956686791:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.98760495724855:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
before@9 batch0 x: -8.011558752681594: root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
after@9 batch0 x: -8.011558752681594: root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -1.7214120312710293:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -1.7214120312710293:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.253513707139064:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer Cast type ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> Cast', 'Cast -> type expression']
copynode -5.301176317210775:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr']
copynode -4.955088958318811:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr']
copynode -5.925719723280054:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr']
copynode -6.380152113910299:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr']
copynode -6.607596768357325:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer ClassCreator type ^ arguments ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> ClassCreator', 'ClassCreator -> type arguments']
copynode -4.955088958318811:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'operandr -> Literal']
copynode -6.708475483872462:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -1.7214120312710293:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.747347249009181:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.701882733323146:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer This selectors ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> This', 'This -> selectors']
copynode -1.7214120312710293:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.633615620608907:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr']
copynode -4.955088958318811:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'operandr -> MemberReference']
copynode -6.328736767347436:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -6.853971846576314:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'copy-operandr']
copynode -6.365415081556421:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr']
copynode -6.927519209857564:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -6.987280827190261:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -7.076882343913894:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -6.660895809705835:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'copy-operandr']
copynode -4.955088958318811:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr MemberReference member par2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr']
copynode -7.499709500290919:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MemberReference', 'MemberReference -> member']
copynode -7.373728159989696:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -7.201310286298394:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> End']
copynode -5.925719723280054:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -1.7214120312710293:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.676028536632657:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc1 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> End', 'start -> unknown']
copynode -1.7214120312710293:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.616159800614696:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'root -> End']
copynode -5.925719723280054:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -5.301176317210775:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr MemberReference member par2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr']
copynode -7.747199015866499:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr ReferenceType ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'operandr -> ReferenceType']
copynode -6.328736767347436:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal']
copynode -7.779082159569953:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ arguments TypeArgument pattern_type ?_ter ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> pattern_type', 'pattern_type -> ?_ter', 'arguments -> End']
before@10 batch0 x: -8.036313275864813: root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ arguments TypeArgument pattern_type ?_ter ^ ^ ^ ^ ^ ^ declarators ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> pattern_type', 'pattern_type -> ?_ter', 'arguments -> End']
after@10 batch0 x: -8.036313275864813: root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ arguments TypeArgument pattern_type ?_ter ^ ^ ^ ^ ^ ^ declarators ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> pattern_type', 'pattern_type -> ?_ter', 'arguments -> End']
copynode -1.8237901686807163:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -1.8237901686807163:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -4.306877700902987:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -5.297890434332658:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer Cast type ReferenceType ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType']
copynode -4.306877700902987:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.500948451634031:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr', 'root -> End']
copynode -5.600232407625299:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr', 'root -> ReturnStatement']
copynode -1.8237901686807163:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -6.640381632663775:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer ClassCreator type ReferenceType ^ ^ arguments ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType']
copynode -6.640830621297937:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'operandr -> Literal', 'Literal -> value']
copynode -6.582972251053434:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> End']
copynode -6.794608442403842:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -4.306877700902987:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier par1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par1']
copynode -1.8237901686807163:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -1.8237901686807163:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.841078363533597:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> End']
copynode -5.600232407625299:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr', 'root -> End']
copynode -6.9514328094082884:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.581680461938959:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'copy-operandr', 'root -> ReturnStatement']
copynode -7.048859931703191:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'copy-operandr', 'root -> End']
copynode -6.712762784503866:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer TernaryExpression condition MethodInvocation ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MethodInvocation']
copynode -7.218386676337104:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.243183892394882:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.768696574785281:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer This selectors MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -7.118333496327978:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'root -> End']
copynode -6.745703069784213:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'member -> meth0']
copynode -1.8237901686807163:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -1.8237901686807163:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.600232407625299:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr', 'root -> ContinueStatement_ter']
copynode -7.577592257584911:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.973352477129083:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'root -> ReturnStatement']
copynode -7.627614006574731:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -6.768696574785281:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer This selectors MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> This', 'This -> selectors', 'selectors -> MethodInvocation']
copynode -7.0622747989255:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> ReturnStatement']
copynode -7.748248426534701:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -7.727947821840644:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc1 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.745703069784213:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
before@11 batch0 x: -7.880268391396385: root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member loc1 ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc1', 'root -> End']
after@11 batch0 x: -7.880268391396385: root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member loc1 ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc1', 'root -> End']
copynode -2.1769665836472996:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.1867990254540928:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.876373259641696:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference']
copynode -5.299220024666283:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer Cast type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -3.1867990254540928:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.876373259641696:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation']
copynode -3.1867990254540928:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.1867990254540928:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.553527800657321:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -6.4473515509744175:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value']
copynode -6.640704563178588:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer ClassCreator type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ arguments ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -6.689582232560497:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -2.1769665836472996:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.553527800657321:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -6.232610926206689:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -6.928261375345755:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'member -> meth0']
copynode -6.9819913863320835:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'member -> meth0']
copynode -7.300784556486178:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -7.372031180479098:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'member -> meth0', 'root -> End']
copynode -5.553527800657321:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -6.834253160574008:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier par1 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par1', 'arguments -> MemberReference']
copynode -7.244777810119558:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer TernaryExpression condition MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.553527800657321:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -7.605467125948053:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr', 'root -> ContinueStatement_ter', 'root -> End']
copynode -3.1867990254540928:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.800948111631442:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -7.676176514651161:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.511818504252005:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'member -> meth0']
before@12 batch0 x: -7.880268391396385: root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member loc1 ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc1', 'root -> End']
after@12 batch0 x: -7.880268391396385: root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member loc1 ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc1', 'root -> End']
copynode -2.1863600297947414:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -2.1863600297947414:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -2.1863600297947414:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -3.425778677978087:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference']
copynode -3.425778677978087:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -3.425778677978087:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MethodInvocation']
copynode -5.44822504959302:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.425778677978087:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal']
copynode -5.51908871444175:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer Cast type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ expression MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation']
copynode -2.1863600297947414:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -2.1863600297947414:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -5.879820799746085:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -6.35174843511777:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> meth0']
copynode -5.988657085516024:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.110634779848624:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -2.1863600297947414:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.120570397295523:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference']
copynode -7.051669685461093:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.134108921804:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'member -> meth0', 'root -> End']
copynode -6.467847317748237:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -2.1863600297947414:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -7.230069881596137:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'member -> meth0', 'root -> End']
copynode -7.125554546888452:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.854915980424266:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement']
copynode -7.466291277029086:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier par1 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par1', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.80388051859336:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer ClassCreator type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ arguments MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference']
copynode -6.965151703276206:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -6.120570397295523:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -6.80388051859336:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer ClassCreator type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ arguments MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation']
copynode -7.433621852018405:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.592711417295504:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> meth0']
before@13 batch0 x: -7.748589840630302: root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
after@13 batch0 x: -7.748589840630302: root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -3.2181465908070095:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference']
copynode -3.31643429241376:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference']
copynode -4.1128022580523975:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.6322319789906032:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference']
copynode -3.2181465908070095:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation']
copynode -3.31643429241376:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation']
copynode -3.6322319789906032:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation']
copynode -5.135753443755675:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'member -> meth0']
copynode -5.553832819976378:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value']
copynode -3.31643429241376:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -3.2181465908070095:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -3.6322319789906032:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -5.556496813020203:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer Cast type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.653779415704776:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference']
copynode -5.276918342628051:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.690989880182315:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference']
copynode -6.434564208902884:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> meth0', 'root -> End']
copynode -5.461246772960294:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.635983383574057:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.556496813020203:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer Cast type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.2181465908070095:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal']
copynode -3.31643429241376:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> Literal']
copynode -5.690989880182315:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par2 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MethodInvocation']
copynode -5.653779415704776:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MethodInvocation']
copynode -6.166250353970099:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference']
copynode -3.6322319789906032:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal']
copynode -5.461246772960294:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -7.034331536211539:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.276918342628051:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.461246772960294:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.445025651075412:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference']
copynode -5.135753443755675:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown']
copynode -5.276918342628051:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.310012579138856:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -6.861560015298892:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference']
before@14 batch0 x: -7.461347925062: root modified ^ member-member meth0 ^ ^  par0 ^ ^ ^  ; ['root -> modified', 'copy-member', 'member -> par0', 'root -> End']
after@14 batch0 x: -7.461347925062: root modified ^ member-member meth0 ^ ^  par0 ^ ^ ^  ; ['root -> modified', 'copy-member', 'member -> par0', 'root -> End']
copynode -3.767105190374423:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.8905337139149196:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.256962148763705:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.393713264085818:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.490808753587771:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.773300556757022:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.34927869430976:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -4.130044488527346:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.130044488527346:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -4.130044488527346:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -5.776216654398013:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'member -> meth0']
copynode -4.490808753587771:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.805778770067263:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'member -> meth0']
copynode -4.130044488527346:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.14004690857837:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer Cast type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -4.393713264085818:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.985477952577639:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'member -> meth0']
copynode -6.2440178080578335:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.773300556757022:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.37071963987546:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par2 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.574258502863813:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.8018515392323025:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value']
copynode -6.8164142652531154:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> Literal', 'Literal -> value']
copynode -4.490808753587771:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.902232474007178:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.992237596132327:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value']
copynode -6.69610090466449:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer Cast type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -4.130044488527346:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.447793050960172:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference']
copynode -4.393713264085818:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.204675702669192:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.256132772483397:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference']
copynode -7.245341589965392:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.574258502863813:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -6.825093893625308:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par2 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.331957040645648:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
before@15 batch0 x: -7.409947986365296: root modified ^ member-member subList_ter ^ ^  get_ter ^ ^ ^  ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
after@15 batch0 x: -7.409947986365296: root modified ^ member-member subList_ter ^ ^  get_ter ^ ^ ^  ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -3.783182090439368:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -3.9108940626611:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -3.783182090439368:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -3.9108940626611:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -4.2799728701938875:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -4.2799728701938875:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.792384295084048:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference']
copynode -5.966851262666751:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -5.350345639802981:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference']
copynode -6.01766195736127:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -4.792384295084048:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -6.164851738431025:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -4.792384295084048:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal']
copynode -4.2799728701938875:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.570880798914004:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference']
copynode -5.062836496450473:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference']
copynode -5.062836496450473:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -5.062836496450473:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal']
copynode -3.783182090439368:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.735050229646731:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference']
copynode -5.263879088975955:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference']
copynode -3.9108940626611:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.263879088975955:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -5.263879088975955:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal']
copynode -3.783182090439368:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.9108940626611:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.020311383821536:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference']
copynode -3.783182090439368:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.149086742021609:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -3.9108940626611:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.0152893348713405:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -4.2799728701938875:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.792384295084048:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MethodInvocation']
copynode -3.783182090439368:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -4.2799728701938875:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -3.9108940626611:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.459009941958357:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> MemberReference']
copynode -5.350345639802981:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation']
copynode -7.117144449672196:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer Cast type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.269731751002837:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -7.14646433229791:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.394135026552249:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -5.062836496450473:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MethodInvocation']
copynode -4.2799728701938875:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3']
before@16 batch0 x: -7.269944235216826: root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
after@16 batch0 x: -7.269944235216826: root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -4.826793935440946:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -4.712527578987647:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference']
copynode -5.885250715829898:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.995078271545935:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference']
copynode -6.016620068170596:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.712527578987647:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -4.712527578987647:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MethodInvocation']
copynode -6.094841627695132:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'member -> meth0']
copynode -4.826793935440946:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference']
copynode -6.222527174570132:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value']
copynode -6.245435742952395:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.454672653519083:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -6.270896045782138:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.296599475957919:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'member -> meth0']
copynode -4.995078271545935:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation']
copynode -6.4022246285458095:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value']
copynode -5.280927803658415:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference']
copynode -4.826793935440946:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MethodInvocation']
copynode -4.712527578987647:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> Literal']
copynode -5.280927803658415:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -6.485366849519778:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.482860593416262:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.826793935440946:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> Literal']
copynode -4.995078271545935:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -6.493881373025943:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'member -> meth0']
copynode -6.579381970979739:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value']
copynode -6.606337754346896:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.280927803658415:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation']
copynode -5.832680542313028:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -4.995078271545935:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal']
copynode -5.454672653519083:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference']
copynode -5.280927803658415:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par1 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal']
copynode -7.082904633425642:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.832680542313028:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference']
copynode -5.454672653519083:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> Literal']
copynode -6.2329089234699495:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -5.454672653519083:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MethodInvocation']
copynode -6.593013232864905:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference']
copynode -6.476512378372718:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference']
copynode -5.832680542313028:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member loc0 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> Literal']
copynode -6.2329089234699495:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference']
before@17 batch0 x: -7.591443617187906: root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference']
after@17 batch0 x: -7.591443617187906: root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference']
copynode -5.862947767891455:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.859883215569425:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0']
copynode -5.999690717377234:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.2191682740231045:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -6.109608000435401:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0']
copynode -6.25244417443173:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.427292747714091:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -6.29269929631846:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0']
copynode -6.4882921244134195:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.509413069405127:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> Literal', 'Literal -> value']
copynode -5.910992361896206:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -6.544486072205473:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> Literal', 'Literal -> value']
copynode -6.624068094708491:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -6.5188612009515055:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'member -> meth0']
copynode -6.556676453270484:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'member -> meth0']
copynode -6.053857462771703:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -6.19648773066001:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.304758163460065:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -6.912570542015601:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value']
copynode -6.443317121185828:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.882305939041544:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'member -> meth0']
copynode -7.022721726738382:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.501942422532011:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.077664640091825:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par1 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value']
copynode -7.143563110672403:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.279855152883101:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -7.218947965942789:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> Literal', 'Literal -> value']
copynode -6.628779033489991:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -7.231124360405374:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'member -> meth0']
copynode -6.260846136428881:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.520022938319016:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -7.406817740120459:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.859280970238615:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.910992361896206:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -7.458496516861487:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.448047729500104:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.567722995125223:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member loc0 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> Literal', 'Literal -> value']
copynode -7.591443617187906:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.19648773066001:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.627404442348052:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.5239301270921715:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
before@18 batch0 x: -7.85054832167225: root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
after@18 batch0 x: -7.85054832167225: root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -5.9949987645377405:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -6.239501899399329:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -6.436937693797518:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -6.65185399010079:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -6.686473420180846:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -6.57354775845306:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -6.696548478968907:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -6.0393734446843155:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -6.75000769487815:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -7.004769910417963:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -6.94123009062605:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -5.909350851841737:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -6.988757437386084:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -7.09148773207562:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -6.529936775856186:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -7.369821507774759:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -7.252067825116683:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -7.306794205971528:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -6.301021196239162:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -7.41856021649437:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -7.447705176018644:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -6.56197136110859:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.374629138328601:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -6.601666793518234:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.496479489200283:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -5.909350851841737:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member par3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3']
copynode -7.525493474968243:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -7.75116561941104:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -7.195486668788362:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -7.85054832167225:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -5.909350851841737:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.95683412096696:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.56197136110859:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter']
copynode -7.430089051194955:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -6.301021196239162:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member par3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3']
copynode -6.601666793518234:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter']
copynode -7.501369172998238:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -6.0393734446843155:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3']
before@19 batch0 x: -8.14973978913622: root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3']
after@19 batch0 x: -8.14973978913622: root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3']
copynode -6.774966620199848:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0']
copynode -6.865662427910138:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0']
copynode -6.930694150098134:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -6.96459931723075:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'member -> meth0']
copynode -7.087073954113293:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0']
copynode -7.130975703068543:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -7.225712424435187:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'member -> meth0']
copynode -7.281692307733465:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'member -> meth0']
copynode -7.368924603157211:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -7.401087066449691:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0']
copynode -7.536322333209682:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -7.521892870136071:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0']
copynode -7.553073222108651:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0']
copynode -7.65403440251248:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'member -> meth0']
copynode -7.667057512619067:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'member -> meth0']
copynode -7.720453970425297:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'member -> meth0']
copynode -7.782800654240418:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member par3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End']
copynode -7.6547297782381065:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -7.688205942802597:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -7.784346940286923:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'member -> meth0']
copynode -7.980479959689546:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -7.971084988035727:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'member -> meth0']
copynode -7.98280377156334:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0']
copynode -8.03109929925995:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -8.109986044757534:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member par3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End']
copynode -8.14973978913622:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End']
copynode -8.134308273263741:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -8.103397960134316:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -8.095542723604012:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End']
copynode -8.119232401542831:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End']
copynode -8.053770823695231:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
before@20 batch0 x: -8.422820551611949: root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
after@20 batch0 x: -8.422820551611949: root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -6.93165037810104:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -7.019654082425404:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -7.099159097590018:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -7.078396247990895:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0']
copynode -7.251733707555104:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -7.363488769449759:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -7.26056441135006:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0']
copynode -7.4217346723307855:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -7.563247343816329:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -7.499651491933037:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0']
copynode -7.670522773929406:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -7.722006479569245:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -7.796286922239233:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -7.651627652638126:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0']
copynode -7.833547650196124:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -7.877070181362797:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -7.956338124640752:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -7.896051915653516:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member par3 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End', 'member -> meth0']
copynode -7.94935014314251:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'member -> meth0']
copynode -7.949666098051239:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'member -> meth0']
copynode -8.1439796446939:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -8.148674140044022:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value 2_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member subList_ter ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -8.109023634635378:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0']
copynode -8.19452200300293:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'member -> meth0']
copynode -8.209836244874168:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member par3 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End', 'member -> meth0']
copynode -8.278528781898785:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par3 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End', 'member -> meth0']
copynode -8.296386609144974:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0']
copynode -8.296230474777985:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0']
copynode -8.338406140275765:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'member -> meth0']
copynode -8.341215819411445:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'member -> meth0']
copynode -8.422820551611949:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'member -> meth0']
before@21 batch0 x: -8.57275211653905: root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'member -> meth0']
after@21 batch0 x: -8.57275211653905: root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'member -> meth0']
copynode -7.2247990242321976:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -7.409716019697953:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -7.650150403671432:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -7.804747097485233:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -8.04352051235037:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member par3 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -8.092881391115952:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -8.096686855249573:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -8.259369928680826:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par1 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -8.321955228515435:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -8.361918330483604:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ MemberReference member par3 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -8.421664836176205:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ MemberReference member par3 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par3', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -8.431109706230927:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -8.43447853095131:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -8.494491169520188:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -8.49940551846521:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member par2 ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End', 'member -> meth0', 'root -> End']
copynode -8.57275211653905:  root modified ^ LocalVariableDeclaration type ReferenceType name PeriodFormatter_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc2', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'member -> meth0', 'root -> End']
method
except
method
elementPairs_ter {'elementPairs_ter': 'List', 'notPrinter_ter': 'boolean', 'notParser_ter': 'boolean', 'size_ter': 'int', 'sep_ter': 'Separator', 'f_ter': 'PeriodFormatter', 'comp_ter': 'Object'}
7 List
6 notParser_ter
6 notPrinter_ter
6 size_ter
method
7 
6 notParser_ter
6 size_ter
6 notPrinter_ter
method
7 
6 size_ter
6 notParser_ter
method
sep_ter {'elementPairs_ter': 'List', 'notPrinter_ter': 'boolean', 'notParser_ter': 'boolean', 'size_ter': 'int', 'sep_ter': 'Separator', 'f_ter': 'PeriodFormatter', 'comp_ter': 'Object'}
7 Separator
6 notPrinter_ter
6 notParser_ter
6 notParser_ter
6 notPrinter_ter
method
7 
PeriodFormatter  toFormatter 
PeriodPrinter  toPrinter 
PeriodParser  toParser 
None  clear 
PeriodFormatterBuilder  append 
PeriodFormatterBuilder  append 
PeriodFormatterBuilder  appendLiteral 
PeriodFormatterBuilder  minimumPrintedDigits 
PeriodFormatterBuilder  maximumParsedDigits 
PeriodFormatterBuilder  rejectSignedValues 
PeriodFormatterBuilder  printZeroRarelyLast 
PeriodFormatterBuilder  printZeroRarelyFirst 
PeriodFormatterBuilder  printZeroIfSupported 
PeriodFormatterBuilder  printZeroAlways 
PeriodFormatterBuilder  printZeroNever 
PeriodFormatterBuilder  appendPrefix 
PeriodFormatterBuilder  appendPrefix 
PeriodFormatterBuilder  appendPrefix 
PeriodFormatterBuilder  appendYears 
PeriodFormatterBuilder  appendMonths 
PeriodFormatterBuilder  appendWeeks 
PeriodFormatterBuilder  appendDays 
PeriodFormatterBuilder  appendHours 
PeriodFormatterBuilder  appendMinutes 
PeriodFormatterBuilder  appendSeconds 
PeriodFormatterBuilder  appendSecondsWithMillis 
PeriodFormatterBuilder  appendSecondsWithOptionalMillis 
PeriodFormatterBuilder  appendMillis 
PeriodFormatterBuilder  appendMillis3Digit 
None  appendField 
None  appendField 
PeriodFormatterBuilder  appendSuffix 
PeriodFormatterBuilder  appendSuffix 
PeriodFormatterBuilder  appendSuffix 
PeriodFormatterBuilder  appendSeparator 
PeriodFormatterBuilder  appendSeparatorIfFieldsAfter 
PeriodFormatterBuilder  appendSeparatorIfFieldsBefore 
PeriodFormatterBuilder  appendSeparator 
PeriodFormatterBuilder  appendSeparator 
PeriodFormatterBuilder  appendSeparator 
None  clearPrefix 
PeriodFormatterBuilder  append0 
PeriodFormatter  toFormatter 
Object  createComposite 
method
7 
PeriodFormatter  toFormatter 
PeriodPrinter  toPrinter 
PeriodParser  toParser 
None  clear 
PeriodFormatterBuilder  append 
PeriodFormatterBuilder  append 
PeriodFormatterBuilder  appendLiteral 
PeriodFormatterBuilder  minimumPrintedDigits 
PeriodFormatterBuilder  maximumParsedDigits 
PeriodFormatterBuilder  rejectSignedValues 
PeriodFormatterBuilder  printZeroRarelyLast 
PeriodFormatterBuilder  printZeroRarelyFirst 
PeriodFormatterBuilder  printZeroIfSupported 
PeriodFormatterBuilder  printZeroAlways 
PeriodFormatterBuilder  printZeroNever 
PeriodFormatterBuilder  appendPrefix 
PeriodFormatterBuilder  appendPrefix 
PeriodFormatterBuilder  appendPrefix 
PeriodFormatterBuilder  appendYears 
PeriodFormatterBuilder  appendMonths 
PeriodFormatterBuilder  appendWeeks 
PeriodFormatterBuilder  appendDays 
PeriodFormatterBuilder  appendHours 
PeriodFormatterBuilder  appendMinutes 
PeriodFormatterBuilder  appendSeconds 
PeriodFormatterBuilder  appendSecondsWithMillis 
PeriodFormatterBuilder  appendSecondsWithOptionalMillis 
PeriodFormatterBuilder  appendMillis 
PeriodFormatterBuilder  appendMillis3Digit 
None  appendField 
None  appendField 
PeriodFormatterBuilder  appendSuffix 
PeriodFormatterBuilder  appendSuffix 
PeriodFormatterBuilder  appendSuffix 
PeriodFormatterBuilder  appendSeparator 
PeriodFormatterBuilder  appendSeparatorIfFieldsAfter 
PeriodFormatterBuilder  appendSeparatorIfFieldsBefore 
PeriodFormatterBuilder  appendSeparator 
PeriodFormatterBuilder  appendSeparator 
PeriodFormatterBuilder  appendSeparator 
None  clearPrefix 
PeriodFormatterBuilder  append0 
PeriodFormatter  toFormatter 
Object  createComposite 
method
sep_ter {'elementPairs_ter': 'List', 'notPrinter_ter': 'boolean', 'notParser_ter': 'boolean', 'size_ter': 'int', 'sep_ter': 'Separator', 'f_ter': 'PeriodFormatter', 'comp_ter': 'Object'}
7 Separator
stderr: Check out e0559c50 to /root/projects/Recoder-bwk/buggy/Time-27............. OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Run post-checkout hook..................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff e0559c50:d090b642..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Time-27b........................................ OK
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Running ant (export.dir.src.classes)....................................... OK

  0%|          | 0/1 [00:00<?, ?it/s]/root/projects/Recoder-bwk/run.py:527: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  tmpdepth = np.array(tmpdepth)
/root/envs/recoder/lib/python3.7/site-packages/torch/nn/functional.py:1340: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
100%|██████████| 1/1 [00:19<00:00, 19.25s/it]100%|██████████| 1/1 [00:19<00:00, 19.25s/it]
