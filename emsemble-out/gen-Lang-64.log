stdout: else_statement -> BlockStatement
using GPU
p
path org.apache.commons.lang.enums.ValuedEnum
compareTo
Position(line=182, column=12)
FOUND IT!
[{'bugid': 'Lang-64', 'treeroot': <Searchnode.Node object at 0x7ff3c3c62290>, 'troot': <Searchnode.Node object at 0x7ff3c3c62290>, 'oldcode': '        return iValue - ((ValuedEnum) other).iValue;', 'filepath': 'buggy/Lang-64/src/java/org/apache/commons/lang/enums/ValuedEnum.java', 'subroot': <Searchnode.Node object at 0x7ff3c3c62dd0>, 'vardic': {'compareTo_ter': 'meth0', 'other_ter': 'par0'}, 'typedic': {'other_ter': 'Object'}, 'idss': 'Lang-64', 'classname': 'org.apache.commons.lang.enums.ValuedEnum', 'precode': '/*\n * Copyright 2002-2006 The Apache Software Foundation.\n * \n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.lang.enums;\n\nimport java.lang.reflect.InvocationTargetException;\nimport java.lang.reflect.Method;\nimport java.util.Iterator;\nimport java.util.List;\n\nimport org.apache.commons.lang.ClassUtils;\n\n/**\n * <p>Abstract superclass for type-safe enums with integer values suitable\n * for use in <code>switch</code> statements.</p>\n *\n * <p><em>NOTE:</em>Due to the way in which Java ClassLoaders work, comparing\n * <code>Enum</code> objects should always be done using the equals() method,\n * not <code>==</code>. The equals() method will try <code>==</code> first so\n * in most cases the effect is the same.</p>\n *\n * <p>To use this class, it must be subclassed. For example:</p>\n *\n * <pre>\n * public final class JavaVersionEnum extends ValuedEnum {\n *   //standard enums for version of JVM\n *   public static final int  JAVA1_0_VALUE  = 100;\n *   public static final int  JAVA1_1_VALUE  = 110;\n *   public static final int  JAVA1_2_VALUE  = 120;\n *   public static final int  JAVA1_3_VALUE  = 130;\n *   public static final JavaVersionEnum  JAVA1_0  = new JavaVersionEnum( "Java 1.0", JAVA1_0_VALUE );\n *   public static final JavaVersionEnum  JAVA1_1  = new JavaVersionEnum( "Java 1.1", JAVA1_1_VALUE );\n *   public static final JavaVersionEnum  JAVA1_2  = new JavaVersionEnum( "Java 1.2", JAVA1_2_VALUE );\n *   public static final JavaVersionEnum  JAVA1_3  = new JavaVersionEnum( "Java 1.3", JAVA1_3_VALUE );\n *\n *   private JavaVersionEnum(String name, int value) {\n *     super( name, value );\n *   }\n * \n *   public static JavaVersionEnum getEnum(String javaVersion) {\n *     return (JavaVersionEnum) getEnum(JavaVersionEnum.class, javaVersion);\n *   }\n * \n *   public static JavaVersionEnum getEnum(int javaVersion) {\n *     return (JavaVersionEnum) getEnum(JavaVersionEnum.class, javaVersion);\n *   }\n * \n *   public static Map getEnumMap() {\n *     return getEnumMap(JavaVersionEnum.class);\n *   }\n * \n *   public static List getEnumList() {\n *     return getEnumList(JavaVersionEnum.class);\n *   }\n * \n *   public static Iterator iterator() {\n *     return iterator(JavaVersionEnum.class);\n *   }\n * }\n * </pre>\n *\n * <p><em>NOTE:</em>These are declared <code>final</code>, so compilers may \n * inline the code. Ensure you recompile everything when using final. </p>\n *\n * <p>The above class could then be used as follows:</p>\n *\n * <pre>\n * public void doSomething(JavaVersion ver) {\n *   switch (ver.getValue()) {\n *     case JAVA1_0_VALUE:\n *       // ...\n *       break;\n *     case JAVA1_1_VALUE:\n *       // ...\n *       break;\n *     //...\n *   }\n * }\n * </pre>\n *\n * <p>As shown, each enum has a name and a value. These can be accessed using\n * <code>getName</code> and <code>getValue</code>.</p>\n *\n * <p>The <code>getEnum</code> and <code>iterator</code> methods are recommended.\n * Unfortunately, Java restrictions require these to be coded as shown in each subclass.\n * An alternative choice is to use the {@link EnumUtils} class.</p>\n *\n * @author Apache Avalon project\n * @author Stephen Colebourne\n * @since 2.1 (class existed in enum package from v1.0)\n * @version $Id$\n */\npublic abstract class ValuedEnum extends Enum {\n    \n    /**\n     * Required for serialization support.\n     * \n     * @see java.io.Serializable\n     */\n    private static final long serialVersionUID = -7129650521543789085L;\n    \n    /**\n     * The value contained in enum.\n     */\n    private final int iValue;\n\n    /**\n     * Constructor for enum item.\n     *\n     * @param name  the name of enum item\n     * @param value  the value of enum item\n     */\n    protected ValuedEnum(String name, int value) {\n        super(name);\n        iValue = value;\n    }\n\n    /**\n     * <p>Gets an <code>Enum</code> object by class and value.</p>\n     *\n     * <p>This method loops through the list of <code>Enum</code>,\n     * thus if there are many <code>Enum</code>s this will be\n     * slow.</p>\n     * \n     * @param enumClass  the class of the <code>Enum</code> to get\n     * @param value  the value of the <code>Enum</code> to get\n     * @return the enum object, or null if the enum does not exist\n     * @throws IllegalArgumentException if the enum class is <code>null</code>\n     */\n    protected static Enum getEnum(Class enumClass, int value) {\n        if (enumClass == null) {\n            throw new IllegalArgumentException("The Enum Class must not be null");\n        }\n        List list = Enum.getEnumList(enumClass);\n        for (Iterator it = list.iterator(); it.hasNext();) {\n            ValuedEnum enumeration = (ValuedEnum) it.next();\n            if (enumeration.getValue() == value) {\n                return enumeration;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * <p>Get value of enum item.</p>\n     *\n     * @return the enum item\'s value.\n     */\n    public final int getValue() {\n        return iValue;\n    }\n\n    /**\n     * <p>Tests for order.</p>\n     *\n     * <p>The default ordering is numeric by value, but this\n     * can be overridden by subclasses.</p>\n     *\n     * <p>NOTE: From v2.2 the enums must be of the same type.\n     * If the parameter is in a different class loader than this instance,\n     * reflection is used to compare the values.</p>\n     *\n     * @see java.lang.Comparable#compareTo(Object)\n     * @param other  the other object to compare to\n     * @return -ve if this is less than the other object, +ve if greater than,\n     *  <code>0</code> of equal\n     * @throws ClassCastException if other is not an <code>Enum</code>\n     * @throws NullPointerException if other is <code>null</code>\n     */\n    public int compareTo(Object other) {', 'aftercode': '    }\n\n    /**\n     * <p>Use reflection to return an objects value.</p>\n     *\n     * @param other  the object to determine the value for\n     * @return the value\n     */\n            // ignore - should never happen\n            // ignore - should never happen\n            // ignore - should never happen\n\n    /**\n     * <p>Human readable description of this <code>Enum</code> item.</p>\n     *\n     * @return String in the form <code>type[name=value]</code>, for example:\n     *  <code>JavaVersion[Java 1.0=100]</code>. Note that the package name is\n     *  stripped from the type name.\n     */\n    public String toString() {\n        if (iToString == null) {\n            String shortName = ClassUtils.getShortClassName(getEnumClass());\n            iToString = shortName + "[" + getName() + "=" + getValue() + "]";\n        }\n        return iToString;\n    }\n}', 'tree': 'MethodDeclaration modifiers public_ter ^ ^ return_type BasicType name int_ter ^ ^ ^ ^ name meth0 ^ ^ parameters FormalParameter type ReferenceType name Object_ter ^ ^ ^ ^ name par0 ^ ^ ^ ^ body ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member iValue_ter ^ ^ ^ ^ operandr Cast type ReferenceType name ValuedEnum_ter ^ ^ ^ ^ expression MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ', 'prob': [2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'mode': 0, 'line': 183, 'isa': False, 'fl_score': 1}]
before@0 batch0 x: 0: root ^  ; []
after@0 batch0 x: 0: root ^  ; []
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root MemberReference-MemberReference member iValue_ter ^ ^ ^  ^ ^ ; ['copy-MemberReference']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root operator-operator -_ter ^ ^  ^ ^ ; ['copy-operator']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root parameters ^ ^ ; ['root -> parameters']
before@1 batch0 x: -13.711191177368164: root parameters ^ ^  ; ['root -> parameters']
after@1 batch0 x: -13.711191177368164: root parameters ^ ^  ; ['root -> parameters']
copynode -0.035298291593790054:  root modified ^ ReturnStatement ^ ^ ; ['root -> modified', 'root -> ReturnStatement']
copynode -0.035298291593790054:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.035298291593790054:  root modified ^ operator-operator -_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-operator']
copynode -3.3639535903930664:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -3.3639535903930664:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -0.035298291593790054:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -3.3639535903930664:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -3.3639535903930664:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -0.035298291593790054:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -3.3639535903930664:  root add ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  ^ ^ ; ['root -> add', 'copy-MemberReference']
copynode -3.3639535903930664:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -3.3639535903930664:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -3.3639535903930664:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -3.3639535903930664:  root add ^ WhileStatement ^ ^ ; ['root -> add', 'root -> WhileStatement']
copynode -11.254427909851074:  root MemberReference-MemberReference member iValue_ter ^ ^ ^  member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member']
copynode -0.035298291593790054:  root modified ^ ReturnStatement_ter ^ ^ ; ['root -> modified', 'root -> ReturnStatement_ter']
copynode -11.851653099060059:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -3.3639535903930664:  root add ^ operator-operator -_ter ^ ^  ^ ^ ; ['root -> add', 'copy-operator']
copynode -12.182499885559082:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -0.035298291593790054:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -12.486977577209473:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -0.035298291593790054:  root modified ^ add ^ ^ ; ['root -> modified', 'root -> add']
copynode -0.035298291593790054:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -12.572314262390137:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -0.035298291593790054:  root modified ^ ContinueStatement_ter ^ ^ ; ['root -> modified', 'root -> ContinueStatement_ter']
copynode -12.258766174316406:  root operator-operator -_ter ^ ^  -_ter ^ ^ ^ ; ['copy-operator', 'operator -> -_ter']
copynode -13.711191177368164:  root parameters FormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter']
copynode -12.258766174316406:  root operator-operator -_ter ^ ^  +_ter ^ ^ ^ ; ['copy-operator', 'operator -> +_ter']
copynode -12.572314262390137:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -11.254427909851074:  root MemberReference-MemberReference member iValue_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier member']
copynode -12.258766174316406:  root operator-operator -_ter ^ ^  /_ter ^ ^ ^ ; ['copy-operator', 'operator -> /_ter']
copynode -12.258766174316406:  root operator-operator -_ter ^ ^  *_ter ^ ^ ^ ; ['copy-operator', 'operator -> *_ter']
copynode -12.258766174316406:  root operator-operator -_ter ^ ^  %_ter ^ ^ ^ ; ['copy-operator', 'operator -> %_ter']
copynode -12.258766174316406:  root operator-operator -_ter ^ ^  <=_ter ^ ^ ^ ; ['copy-operator', 'operator -> <=_ter']
copynode -12.258766174316406:  root operator-operator -_ter ^ ^  >=_ter ^ ^ ^ ; ['copy-operator', 'operator -> >=_ter']
copynode -12.258766174316406:  root operator-operator -_ter ^ ^  ==_ter ^ ^ ^ ; ['copy-operator', 'operator -> ==_ter']
copynode -12.258766174316406:  root operator-operator -_ter ^ ^  >>_ter ^ ^ ^ ; ['copy-operator', 'operator -> >>_ter']
copynode -12.258766174316406:  root operator-operator -_ter ^ ^  &_ter ^ ^ ^ ; ['copy-operator', 'operator -> &_ter']
copynode -13.711191177368164:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End']
copynode -11.254427909851074:  root MemberReference-MemberReference member iValue_ter ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -12.572314262390137:  root return_type BasicType name int_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'copy-return_type']
copynode -11.254427909851074:  root MemberReference-MemberReference member iValue_ter ^ ^ ^  selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> selectors member']
copynode -13.711191177368164:  root parameters MemberReference ^ ^ ^ ; ['root -> parameters', 'parameters -> MemberReference']
copynode -11.254427909851074:  root MemberReference-MemberReference member iValue_ter ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -13.711191177368164:  root parameters InferredFormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> InferredFormalParameter']
copynode -13.711191177368164:  root parameters FormalParameter type ReferenceType name Object_ter ^ ^ ^ ^ name par0 ^ ^ ^ ^ ^ ; ['root -> parameters', 'copy-parameters']
copynode -11.851653099060059:  root ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member iValue_ter ^ ^ ^ ^ operandr Cast type ReferenceType name ValuedEnum_ter ^ ^ ^ ^ expression MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -12.572314262390137:  root return_type par0 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -11.254427909851074:  root MemberReference-MemberReference member iValue_ter ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -12.486977577209473:  root StatementExpression par0 ^ ^ ^ ; ['root -> StatementExpression', 'copy-FormalParameter']
copynode -11.254427909851074:  root MemberReference-MemberReference member iValue_ter ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -11.254427909851074:  root MemberReference-MemberReference member iValue_ter ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -11.851653099060059:  root ReturnStatement par0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -11.254427909851074:  root MemberReference-MemberReference member iValue_ter ^ ^ ^  prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier selectors member']
copynode -12.182499885559082:  root IfStatement par0 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -12.182499885559082:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -13.711191177368164:  root parameters Cast ^ ^ ^ ; ['root -> parameters', 'parameters -> Cast']
copynode -11.254427909851074:  root MemberReference-MemberReference member iValue_ter ^ ^ ^  postfix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators selectors member']
copynode -13.711191177368164:  root parameters par0 ^ ^ ^ ; ['root -> parameters', 'copy-FormalParameter']
copynode -12.182499885559082:  root IfStatement condition ^ then_statement ^ else_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement else_statement']
copynode -12.182499885559082:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -12.486977577209473:  root StatementExpression unknown ^ ^ ^ ; ['root -> StatementExpression', 'start -> unknown']
copynode -12.572314262390137:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -11.851653099060059:  root ReturnStatement unknown ^ ^ ^ ; ['root -> ReturnStatement', 'start -> unknown']
copynode -12.486977577209473:  root StatementExpression label ^ expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> label expression']
copynode -13.711191177368164:  root parameters unknown ^ ^ ^ ; ['root -> parameters', 'start -> unknown']
before@2 batch0 x: -33.813825607299805: root parameters unknown ^ ^ ^  ; ['root -> parameters', 'start -> unknown']
after@2 batch0 x: -33.813825607299805: root parameters unknown ^ ^ ^  ; ['root -> parameters', 'start -> unknown']
copynode -0.41748929396271706:  root modified ^ ReturnStatement expression ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -1.3446860946714878:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -3.1701545156538486:  root modified ^ operator-operator -_ter ^ ^  -_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> -_ter']
copynode -3.7985979318618774:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -4.436669111251831:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -1.3446860946714878:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -3.1701545156538486:  root modified ^ operator-operator -_ter ^ ^  +_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> +_ter']
copynode -5.6393031515181065:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -3.1701545156538486:  root modified ^ operator-operator -_ter ^ ^  /_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> /_ter']
copynode -3.1701545156538486:  root modified ^ operator-operator -_ter ^ ^  *_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> *_ter']
copynode -3.1701545156538486:  root modified ^ operator-operator -_ter ^ ^  %_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> %_ter']
copynode -3.1701545156538486:  root modified ^ operator-operator -_ter ^ ^  <=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <=_ter']
copynode -3.1701545156538486:  root modified ^ operator-operator -_ter ^ ^  >=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >=_ter']
copynode -3.1701545156538486:  root modified ^ operator-operator -_ter ^ ^  ==_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ==_ter']
copynode -1.3446860946714878:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -3.1701545156538486:  root modified ^ operator-operator -_ter ^ ^  >>_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >>_ter']
copynode -3.1701545156538486:  root modified ^ operator-operator -_ter ^ ^  &_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> &_ter']
copynode -8.648180484771729:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -1.3446860946714878:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -1.3446860946714878:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -5.6393031515181065:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -9.978254795074463:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -10.061377469450235:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -10.455077171325684:  root add ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  member ^ ^ ^ ; ['root -> add', 'copy-MemberReference', 'MemberReference -> member']
copynode -10.620329856872559:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -10.702349185943604:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -10.80263614654541:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -0.41748929396271706:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member iValue_ter ^ ^ ^ ^ operandr Cast type ReferenceType name ValuedEnum_ter ^ ^ ^ ^ expression MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -11.096850395202637:  root add ^ WhileStatement condition ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -5.6393031515181065:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -5.6393031515181065:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -11.298880033195019:  root MemberReference-MemberReference member iValue_ter ^ ^ ^  member par0 ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -11.741734448820353:  root modified ^ ReturnStatement_ter ^ ReturnStatement ^ ^ ; ['root -> modified', 'root -> ReturnStatement_ter', 'root -> ReturnStatement']
copynode -5.6393031515181065:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -11.852060460543726:  root ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -11.298880033195019:  root MemberReference-MemberReference member iValue_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -12.182726289625862:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -12.565970364958048:  root modified ^ add ^ ReturnStatement ^ ^ ; ['root -> modified', 'root -> add', 'root -> ReturnStatement']
copynode -11.970481872558594:  root add ^ operator-operator -_ter ^ ^  -_ter ^ ^ ^ ; ['root -> add', 'copy-operator', 'operator -> -_ter']
copynode -12.773722592741251:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -12.827498380094767:  root modified ^ ContinueStatement_ter ^ ReturnStatement ^ ^ ; ['root -> modified', 'root -> ContinueStatement_ter', 'root -> ReturnStatement']
copynode -12.487781370757148:  root StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -12.9187530875206:  root operator-operator -_ter ^ ^  -_ter ^ ^ ReturnStatement ^ ^ ; ['copy-operator', 'operator -> -_ter', 'root -> ReturnStatement']
copynode -10.455077171325684:  root add ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> add', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -1.3446860946714878:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -1.3446860946714878:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -12.773731008172035:  root return_type ReferenceType name ^ arguments ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name arguments']
copynode -1.3446860946714878:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -11.970481872558594:  root add ^ operator-operator -_ter ^ ^  +_ter ^ ^ ^ ; ['root -> add', 'copy-operator', 'operator -> +_ter']
copynode -12.182726289625862:  root IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -12.487781370757148:  root StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -1.3446860946714878:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  postfix_operators ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators selectors member']
copynode -12.773731008172035:  root return_type ReferenceType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name']
copynode -10.702349185943604:  root add ^ control ForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl']
copynode -13.741411227732897:  root parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -10.80263614654541:  root add ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -14.251816272735596:  root operator-operator -_ter ^ ^  +_ter ^ ^ ^ ; ['copy-operator', 'operator -> +_ter', 'root -> End']
copynode -11.852060460543726:  root ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -14.341548800468445:  root return_type BasicType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'BasicType -> name']
copynode -11.298880033195019:  root MemberReference-MemberReference member iValue_ter ^ ^ ^  member iValue_ter ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -12.182726289625862:  root IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -9.978254795074463:  root add ^ ReturnStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement']
copynode -0.41748929396271706:  root modified ^ ReturnStatement par0 ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-FormalParameter']
copynode -11.852060460543726:  root ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -11.970481872558594:  root add ^ operator-operator -_ter ^ ^  <=_ter ^ ^ ^ ; ['root -> add', 'copy-operator', 'operator -> <=_ter']
copynode -11.852060460543726:  root ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -11.970481872558594:  root add ^ operator-operator -_ter ^ ^  /_ter ^ ^ ^ ; ['root -> add', 'copy-operator', 'operator -> /_ter']
copynode -12.773731008172035:  root return_type ReferenceType name Object_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -9.978254795074463:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -14.420410633087158:  root MemberReference-MemberReference member iValue_ter ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -11.741734448820353:  root modified ^ ReturnStatement_ter ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'root -> ReturnStatement_ter', 'copy-MemberReference']
copynode -11.970481872558594:  root add ^ operator-operator -_ter ^ ^  >=_ter ^ ^ ^ ; ['root -> add', 'copy-operator', 'operator -> >=_ter']
copynode -12.9187530875206:  root operator-operator -_ter ^ ^  -_ter ^ ^ ^ ; ['copy-operator', 'operator -> -_ter', 'root -> End']
copynode -13.741411227732897:  root parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -15.138420581817627:  root operator-operator -_ter ^ ^  /_ter ^ ^ ^ ; ['copy-operator', 'operator -> /_ter', 'root -> End']
copynode -1.3446860946714878:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier selectors member']
copynode -11.970481872558594:  root add ^ operator-operator -_ter ^ ^  *_ter ^ ^ ^ ; ['root -> add', 'copy-operator', 'operator -> *_ter']
copynode -10.702349185943604:  root add ^ control par0 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter']
copynode -11.970481872558594:  root add ^ operator-operator -_ter ^ ^  ==_ter ^ ^ ^ ; ['root -> add', 'copy-operator', 'operator -> ==_ter']
copynode -12.487781370757148:  root StatementExpression expression This ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -11.852060460543726:  root ReturnStatement expression TernaryExpression ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression']
copynode -15.467844486236572:  root operator-operator -_ter ^ ^  *_ter ^ ^ ^ ; ['copy-operator', 'operator -> *_ter', 'root -> End']
copynode -15.486584186553955:  root operator-operator -_ter ^ ^  %_ter ^ ^ ^ ; ['copy-operator', 'operator -> %_ter', 'root -> End']
copynode -12.487781370757148:  root StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -14.420410633087158:  root MemberReference-MemberReference member iValue_ter ^ ^ ^  qualifier par0 ^ ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -12.773731008172035:  root return_type ReferenceType name ValuedEnum_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -4.436669111251831:  root add ^ StatementExpression par0 ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-FormalParameter']
copynode -11.970481872558594:  root add ^ operator-operator -_ter ^ ^  %_ter ^ ^ ^ ; ['root -> add', 'copy-operator', 'operator -> %_ter']
copynode -15.722748279571533:  root operator-operator -_ter ^ ^  ==_ter ^ ^ ^ ; ['copy-operator', 'operator -> ==_ter', 'root -> End']
copynode -12.487781370757148:  root StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -15.818239688873291:  root operator-operator -_ter ^ ^  >>_ter ^ ^ ^ ; ['copy-operator', 'operator -> >>_ter', 'root -> End']
copynode -12.827498380094767:  root modified ^ ContinueStatement_ter ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'root -> ContinueStatement_ter', 'copy-MemberReference']
copynode -12.9187530875206:  root operator-operator -_ter ^ ^  -_ter ^ ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  ^ ^ ; ['copy-operator', 'operator -> -_ter', 'copy-MemberReference']
copynode -15.6111319065094:  root operator-operator -_ter ^ ^  >=_ter ^ ^ ReturnStatement ^ ^ ; ['copy-operator', 'operator -> >=_ter', 'root -> ReturnStatement']
copynode -12.182726289625862:  root IfStatement condition This ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -12.565970364958048:  root modified ^ add ^ ^ ; ['root -> modified', 'root -> add', 'root -> End']
copynode -15.56516695022583:  root operator-operator -_ter ^ ^  <=_ter ^ ^ ReturnStatement ^ ^ ; ['copy-operator', 'operator -> <=_ter', 'root -> ReturnStatement']
copynode -9.978254795074463:  root add ^ ReturnStatement_ter ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement']
before@3 batch0 x: -16.106648445129395: root add ^ ReturnStatement_ter ^ ReturnStatement ^ ^  ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement']
after@3 batch0 x: -16.106648445129395: root add ^ ReturnStatement_ter ^ ReturnStatement ^ ^  ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement']
copynode -0.417645589550375:  root modified ^ ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -1.3813563995063305:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -0.417645589550375:  root modified ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -3.5545721985399723:  root modified ^ operator-operator -_ter ^ ^  -_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> -_ter', 'root -> End']
copynode -1.3813563995063305:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.7987558966415236:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -0.417645589550375:  root modified ^ ReturnStatement expression TernaryExpression ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression']
copynode -4.728777948766947:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -4.4373348782537505:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -5.2006177343428135:  root modified ^ operator-operator -_ter ^ ^  +_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> +_ter', 'root -> End']
copynode -0.417645589550375:  root modified ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -3.7987558966415236:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -3.7987558966415236:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -4.4373348782537505:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -6.0694627203047276:  root modified ^ operator-operator -_ter ^ ^  /_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> /_ter', 'root -> End']
copynode -0.417645589550375:  root modified ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -5.670190775766969:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.518698874861002:  root modified ^ operator-operator -_ter ^ ^  *_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> *_ter', 'root -> End']
copynode -1.3813563995063305:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.875682059675455:  root modified ^ operator-operator -_ter ^ ^  %_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> %_ter', 'root -> End']
copynode -0.417645589550375:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member iValue_ter ^ ^ ^ ^ operandr Cast type ReferenceType name ValuedEnum_ter ^ ^ ^ ^ expression MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'copy-expression']
copynode -5.670190775766969:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.215424481779337:  root modified ^ operator-operator -_ter ^ ^  <=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <=_ter', 'root -> End']
copynode -5.670190775766969:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member iValue_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -0.417645589550375:  root modified ^ ReturnStatement expression This ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This']
copynode -4.4373348782537505:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -7.502900067716837:  root modified ^ operator-operator -_ter ^ ^  >=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >=_ter', 'root -> End']
copynode -4.4373348782537505:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -4.4373348782537505:  root add ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -1.3813563995063305:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  member meth0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> meth0']
copynode -7.836600724607706:  root modified ^ operator-operator -_ter ^ ^  ==_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ==_ter', 'root -> End']
copynode -4.728777948766947:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  qualifier par0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -0.417645589550375:  root modified ^ ReturnStatement expression Cast ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Cast']
copynode -8.111883226782084:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  selectors ArraySelector ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector']
copynode -8.279450837522745:  root modified ^ operator-operator -_ter ^ ^  >>_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >>_ter', 'root -> End']
copynode -8.444767896085978:  root modified ^ operator-operator -_ter ^ ^  &_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> &_ter', 'root -> End']
copynode -0.417645589550375:  root modified ^ ReturnStatement expression ClassCreator ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator']
copynode -1.3813563995063305:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  member e_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> e_ter']
copynode -1.3813563995063305:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -3.7987558966415236:  root add ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -1.3813563995063305:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  member par2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -3.7987558966415236:  root add ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -4.4373348782537505:  root add ^ StatementExpression expression Cast ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast']
copynode -1.3813563995063305:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  member length_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> length_ter']
copynode -9.047391954809427:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  prefix_operators -_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter']
copynode -1.3813563995063305:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  member size_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> size_ter']
copynode -9.283886972814798:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  postfix_operators ++_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -5.670190775766969:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -8.648637756938115:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -9.405170384794474:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier par0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -0.417645589550375:  root modified ^ ReturnStatement expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Assignment']
copynode -8.648637756938115:  root add ^ ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -1.3813563995063305:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  member iValue_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.4373348782537505:  root add ^ StatementExpression expression SuperConstructorInvocation_ter ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperConstructorInvocation_ter']
copynode -10.061678339348873:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -4.4373348782537505:  root add ^ StatementExpression expression SuperConstructorInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperConstructorInvocation']
copynode -4.4373348782537505:  root add ^ StatementExpression expression BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> BinaryOperation']
copynode -9.047391954809427:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  prefix_operators !_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -4.4373348782537505:  root add ^ StatementExpression expression ClassCreator ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> ClassCreator']
copynode -8.648637756938115:  root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -3.7987558966415236:  root add ^ IfStatement condition Cast ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast']
copynode -10.767794236540794:  root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -9.405170384794474:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -10.623184997821227:  root add ^ AssertStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation']
copynode -10.840814966708422:  root add ^ LocalVariableDeclaration type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType']
copynode -10.519368655979633:  root add ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> add', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -11.051997426897287:  root modified ^ ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member iValue_ter ^ ^ ^ ^ operandr Cast type ReferenceType name ValuedEnum_ter ^ ^ ^ ^ expression MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -8.648637756938115:  root add ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -11.097986091044731:  root add ^ WhileStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation']
copynode -5.670190775766969:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -10.519368655979633:  root add ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> add', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -9.283886972814798:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  postfix_operators --_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> --_ter']
copynode -11.421724263578653:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators -_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter']
copynode -11.755285792052746:  root MemberReference-MemberReference member iValue_ter ^ ^ ^  member par0 ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -4.728777948766947:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  qualifier par1 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -11.800195585936308:  root modified ^ ReturnStatement_ter ^ ReturnStatement expression ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -11.64931482449174:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  postfix_operators ++_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -3.7987558966415236:  root add ^ IfStatement condition TernaryExpression ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> TernaryExpression']
copynode -12.146064275002573:  root ReturnStatement expression BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.670190775766969:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -12.13240808621049:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  selectors ArraySelector ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector']
copynode -10.061678339348873:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -5.670190775766969:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member meth0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> meth0']
copynode -3.7987558966415236:  root add ^ IfStatement condition ClassReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> ClassReference']
copynode -12.450542978942394:  root MemberReference-MemberReference member iValue_ter ^ ^ ^  member unknown ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -5.670190775766969:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -12.574863370056846:  root IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -8.111883226782084:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  selectors MethodInvocation ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> MethodInvocation']
copynode -12.623422250151634:  root modified ^ add ^ ReturnStatement expression ^ ^ ^ ; ['root -> modified', 'root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -10.840814966708422:  root add ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -8.648637756938115:  root add ^ ReturnStatement expression TernaryExpression ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression']
copynode -12.714800238609314:  root add ^ operator-operator -_ter ^ ^  -_ter ^ ^ ^ ; ['root -> add', 'copy-operator', 'operator -> -_ter', 'root -> End']
copynode -4.728777948766947:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  qualifier loc0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -4.728777948766947:  root modified ^ MemberReference-MemberReference member iValue_ter ^ ^ ^  qualifier LOG_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> LOG_ter']
copynode -5.670190775766969:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -3.5545721985399723:  root modified ^ operator-operator -_ter ^ ^  -_ter ^ ^ StatementExpression ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> -_ter', 'root -> StatementExpression']
copynode -12.89195265993476:  root modified ^ ContinueStatement_ter ^ ReturnStatement expression ^ ^ ^ ; ['root -> modified', 'root -> ContinueStatement_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression']
before@4 batch0 x: -12.892094767506933: root modified ^ ContinueStatement_ter ^ ReturnStatement expression ^ ^ ^  ; ['root -> modified', 'root -> ContinueStatement_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression']
stderr: Check out program version: Lang-64b........................................ OK
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Running ant (export.dir.src.classes)....................................... OK

  0%|          | 0/1 [00:00<?, ?it/s]/root/projects/Recoder-bwk/run.py:527: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  tmpdepth = np.array(tmpdepth)
/root/envs/recoder/lib/python3.7/site-packages/torch/nn/functional.py:1340: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
  0%|          | 0/1 [00:04<?, ?it/s]
Traceback (most recent call last):
  File "testDefect4j.py", line 638, in <module>
    ans = solveone(data, model)
  File "/root/projects/Recoder-bwk/run.py", line 1100, in solveone
    ans = BeamSearch((x[0], x[1], None, None, None, None, None, None, x[2], x[3]), dev_set, model, 100, args.batch_size, indexs)
  File "/root/projects/Recoder-bwk/run.py", line 541, in BeamSearch
    result = model(gVar(tmpnl), gVar(tmpnlad), gVar(tmprule), gVar(tmpruleparent), gVar(tmprulechild), gVar(tmpAd), gVar(tmptreepath), gVar(tmpnl8), gVar(tmpnl9), tmpf, tmpc, tmpindex, tmpchar, tmpindex2, rulead, antimasks, None, "test")
  File "/root/envs/recoder/lib/python3.7/site-packages/torch/nn/modules/module.py", line 541, in __call__
    result = self.forward(*input, **kwargs)
  File "/root/projects/Recoder-bwk/Model.py", line 172, in forward
    genP1, _ = self.copy2(rulenoter.unsqueeze(0), decode)
  File "/root/envs/recoder/lib/python3.7/site-packages/torch/nn/modules/module.py", line 541, in __call__
    result = self.forward(*input, **kwargs)
  File "/root/projects/Recoder-bwk/Model.py", line 79, in forward
    genP = self.LinearRes(F.tanh(sourceLinear.unsqueeze(1) + targetLinear.unsqueeze(2))).squeeze(-1)
  File "/root/envs/recoder/lib/python3.7/site-packages/torch/nn/functional.py", line 1341, in tanh
    return input.tanh()
RuntimeError: CUDA out of memory. Tried to allocate 1.81 GiB (GPU 0; 23.65 GiB total capacity; 2.65 GiB already allocated; 881.31 MiB free; 3.71 GiB cached)
