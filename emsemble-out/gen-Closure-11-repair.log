stdout: IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((n.getJSType() != null)){


condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member hasChildren_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.hasChildren())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isFromExterns_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isFromExterns())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member hasOneChild_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.hasOneChild())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member hasMoreThanOneChild_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.hasMoreThanOneChild())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isQualifiedName_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isQualifiedName())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isUnscopedQualifiedName_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isUnscopedQualifiedName())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isVarArgs_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isVarArgs())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isOptionalArg_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isOptionalArg())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isSyntheticBlock_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isSyntheticBlock())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member wasEmptyNode_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.wasEmptyNode())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isOnlyModifiesThisCall_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isOnlyModifiesThisCall())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isNoSideEffectsCall_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isNoSideEffectsCall())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isLocalResultCall_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isLocalResultCall())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isQuotedString_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isQuotedString())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAdd_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isAdd())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAnd_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isAnd())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isArrayLit_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isArrayLit())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isAssign())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssignAdd_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isAssignAdd())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isBlock_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isBlock())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isBreak_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isBreak())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isCall_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isCall())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isCase_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isCase())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isCatch_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isCatch())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isComma_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isComma())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isContinue_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isContinue())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isDebugger_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isDebugger())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isDec_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isDec())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isDefaultCase_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isDefaultCase())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isDelProp_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isDelProp())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isDo_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isDo())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isEmpty_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isEmpty())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isExprResult_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isExprResult())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isFalse_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isFalse())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isFor_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isFor())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isFunction_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isFunction())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isGetterDef_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isGetterDef())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isGetElem_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isGetElem())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isGetProp_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isGetProp())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isHook_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isHook())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isIf_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isIf())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isIn_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isIn())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isInc_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isInc())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isInstanceOf_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isInstanceOf())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isLabel_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isLabel())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isLabelName_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isLabelName())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isName_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isName())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isNE_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isNE())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isNew_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isNew())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isNot_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isNot())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isNull_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isNull())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isNumber_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isNumber())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isObjectLit_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isObjectLit())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isOr_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isOr())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isParamList_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isParamList())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isRegExp_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isRegExp())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isReturn_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isReturn())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isScript_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isScript())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isSetterDef_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isSetterDef())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isString_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isString())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isStringKey_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isStringKey())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isSwitch_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isSwitch())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isThis_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isThis())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isThrow_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isThrow())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isTrue_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isTrue())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isTry_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isTry())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isTypeOf_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isTypeOf())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isVar_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isVar())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isVoid_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isVoid())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isWhile_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isWhile())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isWith_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isWith())){

IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ 
if(parent.isAssign()){


condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member getString_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.getString())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.getName())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getString_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ 
if(((n.getString() != null) && parent.isAssign())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getName_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ 
if(((n.getName() != null) && parent.isAssign())){

ReturnStatement_ter ^ 
if (true) { return;
 }

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() == null) && parent.isAssign())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isAssign())){

StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member property_ter ^ ^ ^ MemberReference qualifier TypeValidator_ter ^ ^ member ILLEGAL_PROPERTY_ACCESS_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ 
report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, "null", "null");

IfStatement condition MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ ^ 
if(n.getJSType()){


condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member getLastChild_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.getLastChild())){

condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) || parent.isAssign())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.getFirstChild())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier property_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && property.isAssign())){

StatementExpression expression MethodInvocation arguments MemberReference member childType_ter ^ ^ ^ MethodInvocation qualifier property_ter ^ ^ member getString_ter ^ ^ ^ MemberReference member t_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member checkPropertyAccess_ter ^ ^ ^ ^ ^ 
checkPropertyAccess(childType, property.getString(), t, n);

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier t_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && t.isAssign())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member getJSType_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.getJSType())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier property_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ 
if(((property.getJSType() != null) && parent.isAssign())){

IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isAssign())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && (n.getJSType() != null))){


condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getLastChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ 
if(((n.getLastChild() != null) && parent.isAssign())){

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((n.getJSType() != null)){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member toString_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.toString())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier t_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ 
if(((t.getJSType() != null) && parent.isAssign())){

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getFirstChild_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ 
if(((n.getFirstChild() != null) && parent.isAssign())){

IfStatement condition MethodInvocation qualifier n_ter ^ ^ member hasChildren_ter ^ ^ ^ ^ ^ 
if(n.hasChildren()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isFromExterns_ter ^ ^ ^ ^ ^ 
if(n.isFromExterns()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member hasOneChild_ter ^ ^ ^ ^ ^ 
if(n.hasOneChild()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member hasMoreThanOneChild_ter ^ ^ ^ ^ ^ 
if(n.hasMoreThanOneChild()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isQualifiedName_ter ^ ^ ^ ^ ^ 
if(n.isQualifiedName()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isUnscopedQualifiedName_ter ^ ^ ^ ^ ^ 
if(n.isUnscopedQualifiedName()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isVarArgs_ter ^ ^ ^ ^ ^ 
if(n.isVarArgs()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isOptionalArg_ter ^ ^ ^ ^ ^ 
if(n.isOptionalArg()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isSyntheticBlock_ter ^ ^ ^ ^ ^ 
if(n.isSyntheticBlock()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member wasEmptyNode_ter ^ ^ ^ ^ ^ 
if(n.wasEmptyNode()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isOnlyModifiesThisCall_ter ^ ^ ^ ^ ^ 
if(n.isOnlyModifiesThisCall()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isNoSideEffectsCall_ter ^ ^ ^ ^ ^ 
if(n.isNoSideEffectsCall()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isLocalResultCall_ter ^ ^ ^ ^ ^ 
if(n.isLocalResultCall()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isQuotedString_ter ^ ^ ^ ^ ^ 
if(n.isQuotedString()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isAdd_ter ^ ^ ^ ^ ^ 
if(n.isAdd()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isAnd_ter ^ ^ ^ ^ ^ 
if(n.isAnd()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isArrayLit_ter ^ ^ ^ ^ ^ 
if(n.isArrayLit()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ 
if(n.isAssign()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isAssignAdd_ter ^ ^ ^ ^ ^ 
if(n.isAssignAdd()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isBlock_ter ^ ^ ^ ^ ^ 
if(n.isBlock()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isBreak_ter ^ ^ ^ ^ ^ 
if(n.isBreak()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isCall_ter ^ ^ ^ ^ ^ 
if(n.isCall()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isCase_ter ^ ^ ^ ^ ^ 
if(n.isCase()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isCatch_ter ^ ^ ^ ^ ^ 
if(n.isCatch()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isComma_ter ^ ^ ^ ^ ^ 
if(n.isComma()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isContinue_ter ^ ^ ^ ^ ^ 
if(n.isContinue()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isDebugger_ter ^ ^ ^ ^ ^ 
if(n.isDebugger()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isDec_ter ^ ^ ^ ^ ^ 
if(n.isDec()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isDefaultCase_ter ^ ^ ^ ^ ^ 
if(n.isDefaultCase()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isDelProp_ter ^ ^ ^ ^ ^ 
if(n.isDelProp()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isDo_ter ^ ^ ^ ^ ^ 
if(n.isDo()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isEmpty_ter ^ ^ ^ ^ ^ 
if(n.isEmpty()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isExprResult_ter ^ ^ ^ ^ ^ 
if(n.isExprResult()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isFalse_ter ^ ^ ^ ^ ^ 
if(n.isFalse()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isFor_ter ^ ^ ^ ^ ^ 
if(n.isFor()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isFunction_ter ^ ^ ^ ^ ^ 
if(n.isFunction()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isGetterDef_ter ^ ^ ^ ^ ^ 
if(n.isGetterDef()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isGetElem_ter ^ ^ ^ ^ ^ 
if(n.isGetElem()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isGetProp_ter ^ ^ ^ ^ ^ 
if(n.isGetProp()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isHook_ter ^ ^ ^ ^ ^ 
if(n.isHook()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isIf_ter ^ ^ ^ ^ ^ 
if(n.isIf()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isIn_ter ^ ^ ^ ^ ^ 
if(n.isIn()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isInc_ter ^ ^ ^ ^ ^ 
if(n.isInc()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isInstanceOf_ter ^ ^ ^ ^ ^ 
if(n.isInstanceOf()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isLabel_ter ^ ^ ^ ^ ^ 
if(n.isLabel()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isLabelName_ter ^ ^ ^ ^ ^ 
if(n.isLabelName()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isName_ter ^ ^ ^ ^ ^ 
if(n.isName()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isNE_ter ^ ^ ^ ^ ^ 
if(n.isNE()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isNew_ter ^ ^ ^ ^ ^ 
if(n.isNew()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isNot_ter ^ ^ ^ ^ ^ 
if(n.isNot()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isNull_ter ^ ^ ^ ^ ^ 
if(n.isNull()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isNumber_ter ^ ^ ^ ^ ^ 
if(n.isNumber()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isObjectLit_ter ^ ^ ^ ^ ^ 
if(n.isObjectLit()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isOr_ter ^ ^ ^ ^ ^ 
if(n.isOr()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isParamList_ter ^ ^ ^ ^ ^ 
if(n.isParamList()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isRegExp_ter ^ ^ ^ ^ ^ 
if(n.isRegExp()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isReturn_ter ^ ^ ^ ^ ^ 
if(n.isReturn()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isScript_ter ^ ^ ^ ^ ^ 
if(n.isScript()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isSetterDef_ter ^ ^ ^ ^ ^ 
if(n.isSetterDef()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isString_ter ^ ^ ^ ^ ^ 
if(n.isString()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isStringKey_ter ^ ^ ^ ^ ^ 
if(n.isStringKey()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isSwitch_ter ^ ^ ^ ^ ^ 
if(n.isSwitch()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isThis_ter ^ ^ ^ ^ ^ 
if(n.isThis()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isThrow_ter ^ ^ ^ ^ ^ 
if(n.isThrow()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isTrue_ter ^ ^ ^ ^ ^ 
if(n.isTrue()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isTry_ter ^ ^ ^ ^ ^ 
if(n.isTry()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isTypeOf_ter ^ ^ ^ ^ ^ 
if(n.isTypeOf()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isVar_ter ^ ^ ^ ^ ^ 
if(n.isVar()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isVoid_ter ^ ^ ^ ^ ^ 
if(n.isVoid()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isWhile_ter ^ ^ ^ ^ ^ 
if(n.isWhile()){


IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isWith_ter ^ ^ ^ ^ ^ 
if(n.isWith()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member hasChildren_ter ^ ^ ^ ^ ^ 
if(parent.hasChildren()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isFromExterns_ter ^ ^ ^ ^ ^ 
if(parent.isFromExterns()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member hasOneChild_ter ^ ^ ^ ^ ^ 
if(parent.hasOneChild()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member hasMoreThanOneChild_ter ^ ^ ^ ^ ^ 
if(parent.hasMoreThanOneChild()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isQualifiedName_ter ^ ^ ^ ^ ^ 
if(parent.isQualifiedName()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isUnscopedQualifiedName_ter ^ ^ ^ ^ ^ 
if(parent.isUnscopedQualifiedName()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isVarArgs_ter ^ ^ ^ ^ ^ 
if(parent.isVarArgs()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isOptionalArg_ter ^ ^ ^ ^ ^ 
if(parent.isOptionalArg()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isSyntheticBlock_ter ^ ^ ^ ^ ^ 
if(parent.isSyntheticBlock()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member wasEmptyNode_ter ^ ^ ^ ^ ^ 
if(parent.wasEmptyNode()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isOnlyModifiesThisCall_ter ^ ^ ^ ^ ^ 
if(parent.isOnlyModifiesThisCall()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isNoSideEffectsCall_ter ^ ^ ^ ^ ^ 
if(parent.isNoSideEffectsCall()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isLocalResultCall_ter ^ ^ ^ ^ ^ 
if(parent.isLocalResultCall()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isQuotedString_ter ^ ^ ^ ^ ^ 
if(parent.isQuotedString()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isAdd_ter ^ ^ ^ ^ ^ 
if(parent.isAdd()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isAnd_ter ^ ^ ^ ^ ^ 
if(parent.isAnd()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isArrayLit_ter ^ ^ ^ ^ ^ 
if(parent.isArrayLit()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isAssignAdd_ter ^ ^ ^ ^ ^ 
if(parent.isAssignAdd()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isBlock_ter ^ ^ ^ ^ ^ 
if(parent.isBlock()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isBreak_ter ^ ^ ^ ^ ^ 
if(parent.isBreak()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isCall_ter ^ ^ ^ ^ ^ 
if(parent.isCall()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isCase_ter ^ ^ ^ ^ ^ 
if(parent.isCase()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isCatch_ter ^ ^ ^ ^ ^ 
if(parent.isCatch()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isComma_ter ^ ^ ^ ^ ^ 
if(parent.isComma()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isContinue_ter ^ ^ ^ ^ ^ 
if(parent.isContinue()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isDebugger_ter ^ ^ ^ ^ ^ 
if(parent.isDebugger()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isDec_ter ^ ^ ^ ^ ^ 
if(parent.isDec()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isDefaultCase_ter ^ ^ ^ ^ ^ 
if(parent.isDefaultCase()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isDelProp_ter ^ ^ ^ ^ ^ 
if(parent.isDelProp()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isDo_ter ^ ^ ^ ^ ^ 
if(parent.isDo()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isEmpty_ter ^ ^ ^ ^ ^ 
if(parent.isEmpty()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isExprResult_ter ^ ^ ^ ^ ^ 
if(parent.isExprResult()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isFalse_ter ^ ^ ^ ^ ^ 
if(parent.isFalse()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isFor_ter ^ ^ ^ ^ ^ 
if(parent.isFor()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isFunction_ter ^ ^ ^ ^ ^ 
if(parent.isFunction()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isGetterDef_ter ^ ^ ^ ^ ^ 
if(parent.isGetterDef()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isGetElem_ter ^ ^ ^ ^ ^ 
if(parent.isGetElem()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isGetProp_ter ^ ^ ^ ^ ^ 
if(parent.isGetProp()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isHook_ter ^ ^ ^ ^ ^ 
if(parent.isHook()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isIf_ter ^ ^ ^ ^ ^ 
if(parent.isIf()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isIn_ter ^ ^ ^ ^ ^ 
if(parent.isIn()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isInc_ter ^ ^ ^ ^ ^ 
if(parent.isInc()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isInstanceOf_ter ^ ^ ^ ^ ^ 
if(parent.isInstanceOf()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isLabel_ter ^ ^ ^ ^ ^ 
if(parent.isLabel()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isLabelName_ter ^ ^ ^ ^ ^ 
if(parent.isLabelName()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isName_ter ^ ^ ^ ^ ^ 
if(parent.isName()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isNE_ter ^ ^ ^ ^ ^ 
if(parent.isNE()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isNew_ter ^ ^ ^ ^ ^ 
if(parent.isNew()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isNot_ter ^ ^ ^ ^ ^ 
if(parent.isNot()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isNull_ter ^ ^ ^ ^ ^ 
if(parent.isNull()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isNumber_ter ^ ^ ^ ^ ^ 
if(parent.isNumber()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isObjectLit_ter ^ ^ ^ ^ ^ 
if(parent.isObjectLit()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isOr_ter ^ ^ ^ ^ ^ 
if(parent.isOr()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isParamList_ter ^ ^ ^ ^ ^ 
if(parent.isParamList()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isRegExp_ter ^ ^ ^ ^ ^ 
if(parent.isRegExp()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isReturn_ter ^ ^ ^ ^ ^ 
if(parent.isReturn()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isScript_ter ^ ^ ^ ^ ^ 
if(parent.isScript()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isSetterDef_ter ^ ^ ^ ^ ^ 
if(parent.isSetterDef()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isString_ter ^ ^ ^ ^ ^ 
if(parent.isString()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isStringKey_ter ^ ^ ^ ^ ^ 
if(parent.isStringKey()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isSwitch_ter ^ ^ ^ ^ ^ 
if(parent.isSwitch()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isThis_ter ^ ^ ^ ^ ^ 
if(parent.isThis()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isThrow_ter ^ ^ ^ ^ ^ 
if(parent.isThrow()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isTrue_ter ^ ^ ^ ^ ^ 
if(parent.isTrue()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isTry_ter ^ ^ ^ ^ ^ 
if(parent.isTry()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isTypeOf_ter ^ ^ ^ ^ ^ 
if(parent.isTypeOf()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isVar_ter ^ ^ ^ ^ ^ 
if(parent.isVar()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isVoid_ter ^ ^ ^ ^ ^ 
if(parent.isVoid()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isWhile_ter ^ ^ ^ ^ ^ 
if(parent.isWhile()){


IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isWith_ter ^ ^ ^ ^ ^ 
if(parent.isWith()){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && (n.getJSType() != null))){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member hasChildren_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.hasChildren())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isFromExterns_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isFromExterns())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member hasOneChild_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.hasOneChild())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member hasMoreThanOneChild_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.hasMoreThanOneChild())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isQualifiedName_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isQualifiedName())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isUnscopedQualifiedName_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isUnscopedQualifiedName())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isVarArgs_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isVarArgs())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isOptionalArg_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isOptionalArg())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isSyntheticBlock_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isSyntheticBlock())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member wasEmptyNode_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.wasEmptyNode())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isOnlyModifiesThisCall_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isOnlyModifiesThisCall())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isNoSideEffectsCall_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isNoSideEffectsCall())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isLocalResultCall_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isLocalResultCall())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isQuotedString_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isQuotedString())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isAdd_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isAdd())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isAnd_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isAnd())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isArrayLit_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isArrayLit())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isAssign())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isAssignAdd_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isAssignAdd())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isBlock_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isBlock())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isBreak_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isBreak())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isCall_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isCall())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isCase_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isCase())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isCatch_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isCatch())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isComma_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isComma())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isContinue_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isContinue())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isDebugger_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isDebugger())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isDec_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isDec())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isDefaultCase_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isDefaultCase())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isDelProp_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isDelProp())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isDo_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isDo())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isEmpty_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isEmpty())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isExprResult_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isExprResult())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isFalse_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isFalse())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isFor_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isFor())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isFunction_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isFunction())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isGetterDef_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isGetterDef())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isGetElem_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isGetElem())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isGetProp_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isGetProp())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isHook_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isHook())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isIf_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isIf())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isIn_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isIn())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isInc_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isInc())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isInstanceOf_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isInstanceOf())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isLabel_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isLabel())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isLabelName_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isLabelName())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isName_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isName())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isNE_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isNE())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isNew_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isNew())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isNot_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isNot())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isNull_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isNull())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isNumber_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isNumber())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isObjectLit_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isObjectLit())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isOr_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isOr())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isParamList_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isParamList())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isRegExp_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isRegExp())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isReturn_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isReturn())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isScript_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isScript())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isSetterDef_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isSetterDef())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isString_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isString())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isStringKey_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isStringKey())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isSwitch_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isSwitch())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isThis_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isThis())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isThrow_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isThrow())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isTrue_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isTrue())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isTry_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isTry())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isTypeOf_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isTypeOf())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isVar_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isVar())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isVoid_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isVoid())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isWhile_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isWhile())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isWith_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && n.isWith())){


condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member isAssign_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ 
if(((n.isAssign() != null) && parent.isAssign())){

IfStatement condition MethodInvocation qualifier validator_ter ^ ^ arguments MemberReference member t_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ MemberReference member childType_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ MethodInvocation arguments MemberReference member OBJECT_TYPE_ter ^ ^ ^ ^ member getNativeType_ter ^ ^ ^ ^ member expectNotNullOrUndefined_ter ^ ^ ^ ^ ^ 
if(validator.expectNotNullOrUndefined(t, n, childType, "null", getNativeType(OBJECT_TYPE))){


StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member ensureTyped_ter ^ ^ ^ ^ ^ 
ensureTyped(t, n);

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member visitGetProp_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.visitGetProp())){

IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && ((n.getJSType() != null) && parent.isAssign()))){


condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member toString_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ 
if(((n.toString() != null) && parent.isAssign())){

IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member hasChildren_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.hasChildren())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isFromExterns_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isFromExterns())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member hasOneChild_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.hasOneChild())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member hasMoreThanOneChild_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.hasMoreThanOneChild())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isQualifiedName_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isQualifiedName())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isUnscopedQualifiedName_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isUnscopedQualifiedName())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isVarArgs_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isVarArgs())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isOptionalArg_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isOptionalArg())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isSyntheticBlock_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isSyntheticBlock())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member wasEmptyNode_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.wasEmptyNode())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isOnlyModifiesThisCall_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isOnlyModifiesThisCall())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isNoSideEffectsCall_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isNoSideEffectsCall())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isLocalResultCall_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isLocalResultCall())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isQuotedString_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isQuotedString())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAdd_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isAdd())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAnd_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isAnd())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isArrayLit_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isArrayLit())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isAssign())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssignAdd_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isAssignAdd())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isBlock_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isBlock())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isBreak_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isBreak())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isCall_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isCall())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isCase_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isCase())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isCatch_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isCatch())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isComma_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isComma())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isContinue_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isContinue())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isDebugger_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isDebugger())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isDec_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isDec())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isDefaultCase_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isDefaultCase())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isDelProp_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isDelProp())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isDo_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isDo())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isEmpty_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isEmpty())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isExprResult_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isExprResult())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isFalse_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isFalse())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isFor_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isFor())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isFunction_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isFunction())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isGetterDef_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isGetterDef())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isGetElem_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isGetElem())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isGetProp_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isGetProp())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isHook_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isHook())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isIf_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isIf())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isIn_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isIn())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isInc_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isInc())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isInstanceOf_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isInstanceOf())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isLabel_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isLabel())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isLabelName_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isLabelName())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isName_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isName())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isNE_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isNE())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isNew_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isNew())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isNot_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isNot())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isNull_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isNull())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isNumber_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isNumber())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isObjectLit_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isObjectLit())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isOr_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isOr())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isParamList_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isParamList())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isRegExp_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isRegExp())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isReturn_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isReturn())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isScript_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isScript())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isSetterDef_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isSetterDef())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isString_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isString())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isStringKey_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isStringKey())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isSwitch_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isSwitch())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isThis_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isThis())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isThrow_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isThrow())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isTrue_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isTrue())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isTry_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isTry())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isTypeOf_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isTypeOf())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isVar_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isVar())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isVoid_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isVoid())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isWhile_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isWhile())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isWith_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isWith())){


condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member ILLEGAL_PROPERTY_ACCESS_ter ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.ILLEGAL_PROPERTY_ACCESS())){

IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member hasChildren_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.hasChildren())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isFromExterns_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isFromExterns())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member hasOneChild_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.hasOneChild())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member hasMoreThanOneChild_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.hasMoreThanOneChild())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isQualifiedName_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isQualifiedName())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isUnscopedQualifiedName_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isUnscopedQualifiedName())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isVarArgs_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isVarArgs())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isOptionalArg_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isOptionalArg())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isSyntheticBlock_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isSyntheticBlock())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member wasEmptyNode_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.wasEmptyNode())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isOnlyModifiesThisCall_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isOnlyModifiesThisCall())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isNoSideEffectsCall_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isNoSideEffectsCall())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isLocalResultCall_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isLocalResultCall())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isQuotedString_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isQuotedString())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAdd_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isAdd())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAnd_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isAnd())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isArrayLit_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isArrayLit())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssignAdd_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isAssignAdd())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isBlock_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isBlock())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isBreak_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isBreak())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isCall_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isCall())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isCase_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isCase())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isCatch_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isCatch())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isComma_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isComma())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isContinue_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isContinue())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isDebugger_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isDebugger())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isDec_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isDec())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isDefaultCase_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isDefaultCase())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isDelProp_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isDelProp())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isDo_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isDo())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isEmpty_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isEmpty())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isExprResult_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isExprResult())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isFalse_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isFalse())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isFor_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isFor())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isFunction_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isFunction())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isGetterDef_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isGetterDef())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isGetElem_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isGetElem())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isGetProp_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isGetProp())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isHook_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isHook())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isIf_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isIf())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isIn_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isIn())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isInc_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isInc())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isInstanceOf_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isInstanceOf())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isLabel_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isLabel())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isLabelName_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isLabelName())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isName_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isName())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isNE_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isNE())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isNew_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isNew())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isNot_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isNot())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isNull_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isNull())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isNumber_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isNumber())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isObjectLit_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isObjectLit())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isOr_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isOr())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isParamList_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isParamList())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isRegExp_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isRegExp())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isReturn_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isReturn())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isScript_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isScript())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isSetterDef_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isSetterDef())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isString_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isString())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isStringKey_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isStringKey())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isSwitch_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isSwitch())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isThis_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isThis())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isThrow_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isThrow())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isTrue_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isTrue())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isTry_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isTry())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isTypeOf_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isTypeOf())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isVar_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isVar())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isVoid_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isVoid())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isWhile_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isWhile())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isWith_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && parent.isWith())){


BreakStatement_ter ^ 
break;

condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier parent_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ 
if(((parent.getJSType() != null) && parent.isAssign())){

IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member hasChildren_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.hasChildren())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isFromExterns_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isFromExterns())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member hasOneChild_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.hasOneChild())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member hasMoreThanOneChild_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.hasMoreThanOneChild())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isQualifiedName_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isQualifiedName())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isUnscopedQualifiedName_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isUnscopedQualifiedName())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isVarArgs_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isVarArgs())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isOptionalArg_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isOptionalArg())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isSyntheticBlock_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isSyntheticBlock())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member wasEmptyNode_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.wasEmptyNode())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isOnlyModifiesThisCall_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isOnlyModifiesThisCall())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isNoSideEffectsCall_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isNoSideEffectsCall())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isLocalResultCall_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isLocalResultCall())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isQuotedString_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isQuotedString())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isAdd_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isAdd())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isAnd_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isAnd())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isArrayLit_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isArrayLit())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isAssign())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isAssignAdd_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isAssignAdd())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isBlock_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isBlock())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isBreak_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isBreak())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isCall_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isCall())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isCase_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isCase())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isCatch_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isCatch())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isComma_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isComma())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isContinue_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isContinue())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isDebugger_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isDebugger())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isDec_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isDec())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isDefaultCase_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isDefaultCase())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isDelProp_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isDelProp())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isDo_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isDo())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isEmpty_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isEmpty())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isExprResult_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isExprResult())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isFalse_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isFalse())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isFor_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isFor())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isFunction_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isFunction())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isGetterDef_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isGetterDef())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isGetElem_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isGetElem())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isGetProp_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isGetProp())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isHook_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isHook())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isIf_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isIf())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isIn_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isIn())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isInc_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isInc())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isInstanceOf_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isInstanceOf())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isLabel_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isLabel())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isLabelName_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isLabelName())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isName_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isName())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isNE_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isNE())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isNew_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isNew())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isNot_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isNot())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isNull_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isNull())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isNumber_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isNumber())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isObjectLit_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isObjectLit())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isOr_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isOr())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isParamList_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isParamList())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isRegExp_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isRegExp())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isReturn_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isReturn())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isScript_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isScript())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isSetterDef_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isSetterDef())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isString_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isString())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isStringKey_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isStringKey())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isSwitch_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isSwitch())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isThis_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isThis())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isThrow_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isThrow())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isTrue_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isTrue())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isTry_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isTry())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isTypeOf_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isTypeOf())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isVar_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isVar())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isVoid_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isVoid())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isWhile_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isWhile())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier n_ter ^ ^ member isWith_ter ^ ^ ^ ^ ^ ^ ^ 
if((((n.getJSType() != null) && parent.isAssign()) && n.isWith())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member hasChildren_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.hasChildren())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isFromExterns_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isFromExterns())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member hasOneChild_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.hasOneChild())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member hasMoreThanOneChild_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.hasMoreThanOneChild())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isQualifiedName_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isQualifiedName())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isUnscopedQualifiedName_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isUnscopedQualifiedName())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isVarArgs_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isVarArgs())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isOptionalArg_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isOptionalArg())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isSyntheticBlock_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isSyntheticBlock())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member wasEmptyNode_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.wasEmptyNode())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isOnlyModifiesThisCall_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isOnlyModifiesThisCall())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isNoSideEffectsCall_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isNoSideEffectsCall())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isLocalResultCall_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isLocalResultCall())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isQuotedString_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isQuotedString())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isAdd_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isAdd())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isAnd_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isAnd())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isArrayLit_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isArrayLit())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isAssign())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isAssignAdd_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isAssignAdd())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isBlock_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isBlock())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isBreak_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isBreak())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isCall_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isCall())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isCase_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isCase())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isCatch_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isCatch())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isComma_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isComma())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isContinue_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isContinue())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isDebugger_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isDebugger())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isDec_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isDec())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isDefaultCase_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isDefaultCase())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isDelProp_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isDelProp())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isDo_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isDo())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isEmpty_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isEmpty())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isExprResult_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isExprResult())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isFalse_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isFalse())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isFor_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isFor())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isFunction_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isFunction())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isGetterDef_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isGetterDef())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isGetElem_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isGetElem())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isGetProp_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isGetProp())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isHook_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isHook())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isIf_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isIf())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isIn_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isIn())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isInc_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isInc())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isInstanceOf_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isInstanceOf())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isLabel_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isLabel())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isLabelName_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isLabelName())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isName_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isName())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isNE_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isNE())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isNew_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isNew())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isNot_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isNot())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isNull_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isNull())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isNumber_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isNumber())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isObjectLit_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isObjectLit())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isOr_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isOr())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isParamList_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isParamList())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isRegExp_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isRegExp())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isReturn_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isReturn())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isScript_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isScript())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isSetterDef_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isSetterDef())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isString_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isString())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isStringKey_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isStringKey())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isSwitch_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isSwitch())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isThis_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isThis())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isThrow_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isThrow())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isTrue_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isTrue())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isTry_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isTry())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isTypeOf_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isTypeOf())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isVar_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isVar())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isVoid_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isVoid())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isWhile_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isWhile())){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier n_ter ^ ^ member isWith_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && !n.isWith())){



ContinueStatement_ter ^ 
continue;

StatementExpression expression MethodInvocation arguments MemberReference member childType_ter ^ ^ ^ MethodInvocation qualifier property_ter ^ ^ member getString_ter ^ ^ ^ MemberReference member t_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member checkPropertyAccess_ter ^ ^ ^ ^ ^ 
checkPropertyAccess(childType, property.getString(), t, n);

StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member property_ter ^ ^ ^ MemberReference qualifier TypeValidator_ter ^ ^ member ILLEGAL_PROPERTY_ACCESS_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ 
report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, "null", "null");

ReturnStatement_ter ^ 
return;

StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member ensureTyped_ter ^ ^ ^ ^ ^ 
ensureTyped(t, n);

ReturnStatement_ter ^ 
if (true) { return;
 }

StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member property_ter ^ ^ ^ MemberReference qualifier TypeValidator_ter ^ ^ member ILLEGAL_PROPERTY_ACCESS_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ 
report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, "null", "null");

StatementExpression expression MethodInvocation arguments MemberReference member childType_ter ^ ^ ^ MethodInvocation qualifier property_ter ^ ^ member getString_ter ^ ^ ^ MemberReference member t_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member checkPropertyAccess_ter ^ ^ ^ ^ ^ 
checkPropertyAccess(childType, property.getString(), t, n);

BreakStatement_ter ^ 
break;

StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member ensureTyped_ter ^ ^ ^ ^ ^ 
ensureTyped(t, n);

Statement_ter ^ 
1 Statement_ter
ReturnStatement expression MemberReference member OBJECT_TYPE_ter ^ ^ ^ ^ ^ 
return OBJECT_TYPE;
IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((n.getJSType() != null)){

BreakStatement_ter ^ 
break;

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((n.getJSType() != null)){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ ^ 
if(((n.getJSType() != null) && parent.isAssign())){

StatementExpression expression MethodInvocation arguments MemberReference member childType_ter ^ ^ ^ MethodInvocation qualifier property_ter ^ ^ member getString_ter ^ ^ ^ MemberReference member t_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member checkPropertyAccess_ter ^ ^ ^ ^ ^ 
StatementExpression expression MethodInvocation arguments MemberReference member childType_ter ^ ^ ^ MethodInvocation qualifier property_ter ^ ^ member getString_ter ^ ^ ^ MemberReference member t_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member checkPropertyAccess_ter ^ ^ ^ ^ ^ 
checkPropertyAccess(childType, property.getString(), t, n);
checkPropertyAccess(childType, property.getString(), t, n);

StatementExpression expression MethodInvocation qualifier objNode_ter ^ ^ member detachChildren_ter ^ ^ ^ ^ ^ 
objNode.detachChildren();

StatementExpression expression MethodInvocation qualifier objNode_ter ^ ^ member setQuotedString_ter ^ ^ ^ ^ ^ 
objNode.setQuotedString();

ReturnStatement expression MemberReference member objNode_ter ^ ^ ^ ^ ^ 
return objNode;
ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ 
return null;
StatementExpression expression MethodInvocation qualifier childType_ter ^ ^ member clearResolved_ter ^ ^ ^ ^ ^ 
childType.clearResolved();

StatementExpression expression MethodInvocation qualifier t_ter ^ ^ member popScope_ter ^ ^ ^ ^ ^ 
t.popScope();

StatementExpression expression MethodInvocation qualifier n_ter ^ ^ member detachChildren_ter ^ ^ ^ ^ ^ 
n.detachChildren();

StatementExpression expression MethodInvocation qualifier n_ter ^ ^ member setQuotedString_ter ^ ^ ^ ^ ^ 
n.setQuotedString();

ReturnStatement expression MemberReference member t_ter ^ ^ ^ ^ ^ 
return t;
StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member doPercentTypedAccounting_ter ^ ^ ^ ^ ^ 
doPercentTypedAccounting(t, n);

StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member visitAssign_ter ^ ^ ^ ^ ^ 
visitAssign(t, n);

StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member visitGetElem_ter ^ ^ ^ ^ ^ 
visitGetElem(t, n);

StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member visitVar_ter ^ ^ ^ ^ ^ 
visitVar(t, n);

StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member visitNew_ter ^ ^ ^ ^ ^ 
visitNew(t, n);

StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member visitFunction_ter ^ ^ ^ ^ ^ 
visitFunction(t, n);

StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member visitCall_ter ^ ^ ^ ^ ^ 
visitCall(t, n);

StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member visitReturn_ter ^ ^ ^ ^ ^ 
visitReturn(t, n);

StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member property_ter ^ ^ ^ MemberReference qualifier TypeValidator_ter ^ ^ member ILLEGAL_PROPERTY_ACCESS_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ 
StatementExpression expression MethodInvocation arguments MemberReference member childType_ter ^ ^ ^ MethodInvocation qualifier property_ter ^ ^ member getString_ter ^ ^ ^ MemberReference member t_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member checkPropertyAccess_ter ^ ^ ^ ^ ^ 
report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, "null", "null");
checkPropertyAccess(childType, property.getString(), t, n);

IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ 
if(parent.isAssign()){


ReturnStatement expression MemberReference member childType_ter ^ ^ ^ ^ ^ 
return childType;
StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member ensureTyped_ter ^ ^ ^ ^ ^ 
StatementExpression expression MethodInvocation arguments MemberReference member childType_ter ^ ^ ^ MethodInvocation qualifier property_ter ^ ^ member getString_ter ^ ^ ^ MemberReference member t_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member checkPropertyAccess_ter ^ ^ ^ ^ ^ 
ensureTyped(t, n);
checkPropertyAccess(childType, property.getString(), t, n);

StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member property_ter ^ ^ ^ MemberReference qualifier TypeValidator_ter ^ ^ member ILLEGAL_PROPERTY_ACCESS_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ 
StatementExpression expression MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member property_ter ^ ^ ^ MemberReference qualifier TypeValidator_ter ^ ^ member ILLEGAL_PROPERTY_ACCESS_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member report_ter ^ ^ ^ ^ ^ 
report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, "null", "null");
report(t, property, TypeValidator.ILLEGAL_PROPERTY_ACCESS, "null", "null");

IfStatement condition MethodInvocation qualifier n_ter ^ ^ member getJSType_ter ^ ^ ^ ^ ^ 
if(n.getJSType()){

IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ 
if(parent.isAssign()){

stderr: 