stdout: else_statement -> BlockStatement
using GPU
p
path com.google.javascript.jscomp.CodeConsumer
addNumber
Position(line=240, column=3)
FOUND IT!
[{'bugid': 'Closure-38', 'treeroot': <Searchnode.Node object at 0x7f1beeb02810>, 'troot': <Searchnode.Node object at 0x7f1beeb02810>, 'oldcode': "    if (x < 0 && prev == '-') {", 'filepath': 'buggy/Closure-38/src/com/google/javascript/jscomp/CodeConsumer.java', 'subroot': <Searchnode.Node object at 0x7f1beeaf9310>, 'vardic': {'addNumber_ter': 'meth0', 'x_ter': 'par0', 'prev_ter': 'loc0', 'negativeZero_ter': 'loc1', 'value_ter': 'loc2', 'mantissa_ter': 'loc3', 'exp_ter': 'loc4'}, 'typedic': {'x_ter': 'double', 'prev_ter': 'char', 'negativeZero_ter': 'boolean', 'value_ter': 'long', 'mantissa_ter': 'long', 'exp_ter': 'int'}, 'idss': 'Closure-38', 'classname': 'com.google.javascript.jscomp.CodeConsumer', 'precode': '/*\n * Copyright 2004 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.javascript.jscomp;\n\nimport com.google.javascript.rhino.Node;\n\n\n/**\n * Abstracted consumer of the CodeGenerator output.\n *\n * @see CodeGenerator\n * @see CodePrinter\n * @see InlineCostEstimator\n */\nabstract class CodeConsumer {\n  boolean statementNeedsEnded = false;\n  boolean statementStarted = false;\n  boolean sawFunction = false;\n\n  /**\n   * Starts the source mapping for the given\n   * node at the current position.\n   */\n  void startSourceMapping(Node node) {\n  }\n\n  /**\n   * Finishes the source mapping for the given\n   * node at the current position.\n   */\n  void endSourceMapping(Node node) {\n  }\n\n  /**\n   * Provides a means of interrupting the CodeGenerator. Derived classes should\n   * return false to stop further processing.\n   */\n  boolean continueProcessing() {\n    return true;\n  }\n\n  /**\n   * Retrieve the last character of the last string sent to append.\n   */\n  abstract char getLastChar();\n\n  void addIdentifier(String identifier) {\n    add(identifier);\n  }\n\n  /**\n   * Appends a string to the code, keeping track of the current line length.\n   *\n   * NOTE: the string must be a complete token--partial strings or\n   * partial regexes will run the risk of being split across lines.\n   *\n   * Do not directly append newlines with this method. Instead use\n   * {@link #startNewLine}.\n   */\n  abstract void append(String str);\n\n  void appendBlockStart() {\n    append("{");\n  }\n\n  void appendBlockEnd() {\n    append("}");\n  }\n\n  void startNewLine() {\n  }\n\n  void maybeLineBreak() {\n    maybeCutLine();\n  }\n\n  void maybeCutLine() {\n  }\n\n  void endLine() {\n  }\n\n  void notePreferredLineBreak() {\n  }\n\n  void beginBlock() {\n    if (statementNeedsEnded) {\n      append(";");\n      maybeLineBreak();\n    }\n    appendBlockStart();\n\n    endLine();\n    statementNeedsEnded = false;\n  }\n\n  void endBlock() {\n    endBlock(false);\n  }\n\n  void endBlock(boolean shouldEndLine) {\n    appendBlockEnd();\n    if (shouldEndLine) {\n      endLine();\n    }\n    statementNeedsEnded = false;\n  }\n\n  void listSeparator() {\n    add(",");\n    maybeLineBreak();\n  }\n\n  /**\n   * Indicates the end of a statement and a \';\' may need to be added.\n   * But we don\'t add it now, in case we\'re at the end of a block (in which\n   * case we don\'t have to add the \';\').\n   * See maybeEndStatement()\n   */\n  void endStatement() {\n    endStatement(false);\n  }\n\n  void endStatement(boolean needSemiColon) {\n    if (needSemiColon) {\n      append(";");\n      maybeLineBreak();\n      statementNeedsEnded = false;\n    } else if (statementStarted) {\n      statementNeedsEnded = true;\n    }\n  }\n\n  /**\n   * This is to be called when we\'re in a statement. If the prev statement\n   * needs to be ended, add a \';\'.\n   */\n  void maybeEndStatement() {\n    // Add a \';\' if we need to.\n    if (statementNeedsEnded) {\n      append(";");\n      maybeLineBreak();\n      endLine();\n      statementNeedsEnded = false;\n    }\n    statementStarted = true;\n  }\n\n  void endFunction() {\n    endFunction(false);\n  }\n\n  void endFunction(boolean statementContext) {\n    sawFunction = true;\n    if (statementContext) {\n      endLine();\n    }\n  }\n\n  void beginCaseBody() {\n    append(":");\n  }\n\n  void endCaseBody() {\n  }\n\n  void add(String newcode) {\n    maybeEndStatement();\n\n    if (newcode.length() == 0) {\n      return;\n    }\n\n    char c = newcode.charAt(0);\n    if ((isWordChar(c) || c == \'\\\\\') &&\n        isWordChar(getLastChar())) {\n      // need space to separate. This is not pretty printing.\n      // For example: "return foo;"\n      append(" ");\n    } else if (c == \'/\' && getLastChar() == \'/\') {\n      // Do not allow a forward slash to appear after a DIV.\n      // For example,\n      // REGEXP DIV REGEXP\n      // is valid and should print like\n      // / // / /\n      append(" ");\n    }\n\n    append(newcode);\n  }\n\n  void appendOp(String op, boolean binOp) {\n    append(op);\n  }\n\n  void addOp(String op, boolean binOp) {\n    maybeEndStatement();\n\n    char first = op.charAt(0);\n    char prev = getLastChar();\n\n    if ((first == \'+\' || first == \'-\') && prev == first) {\n      // This is not pretty printing. This is to prevent misparsing of\n      // things like "x + ++y" or "x++ + ++y"\n      append(" ");\n    } else if (Character.isLetter(first) &&\n               isWordChar(prev)) {\n      // Make sure there is a space after e.g. instanceof , typeof\n      append(" ");\n    } else if (prev == \'-\' && first == \'>\') {\n      // Make sure that we don\'t emit -->\n      append(" ");\n    }\n\n    // Allow formating around the operator.\n    appendOp(op, binOp);\n\n    // Line breaking after an operator is always safe. Line breaking before an\n    // operator on the other hand is not. We only line break after a bin op\n    // because it looks strange.\n    if (binOp) {\n      maybeCutLine();\n    }\n  }\n\n  void addNumber(double x) {\n    // This is not pretty printing. This is to prevent misparsing of x- -4 as\n    // x--4 (which is a syntax error).\n    char prev = getLastChar();\n    boolean negativeZero = isNegativeZero(x);', 'aftercode': '      add(" ");\n    }\n\n    if ((long) x == x && !negativeZero) {\n      long value = (long) x;\n      long mantissa = value;\n      int exp = 0;\n      if (Math.abs(x) >= 100) {\n        while (mantissa / 10 * Math.pow(10, exp + 1) == value) {\n          mantissa /= 10;\n          exp++;\n        }\n      }\n      if (exp > 2) {\n        add(Long.toString(mantissa) + "E" + Integer.toString(exp));\n      } else {\n        add(Long.toString(value));\n      }\n    } else {\n      add(String.valueOf(x));\n    }\n  }\n\n  static boolean isNegativeZero(double x) {\n    return x == 0.0 && Math.copySign(1, x) == -1.0;\n  }\n\n  static boolean isWordChar(char ch) {\n    return (ch == \'_\' ||\n            ch == \'$\' ||\n            Character.isLetterOrDigit(ch));\n  }\n\n  /**\n   * If the body of a for loop or the then clause of an if statement has\n   * a single statement, should it be wrapped in a block?  Doing so can\n   * help when pretty-printing the code, and permits putting a debugging\n   * breakpoint on the statement inside the condition.\n   *\n   * @return {@boolean true} if such expressions should be wrapped\n   */\n  boolean shouldPreserveExtraBlocks() {\n    return false;\n  }\n\n  /**\n   * @return Whether the a line break can be added after the specified BLOCK.\n   */\n  boolean breakAfterBlockFor(Node n, boolean statementContext) {\n    return statementContext;\n  }\n\n  /** Called when we\'re at the end of a file. */\n  void endFile() {}\n}', 'tree': 'MethodDeclaration name meth0 ^ ^ parameters FormalParameter type BasicType name double_ter ^ ^ ^ ^ name par0 ^ ^ ^ ^ body LocalVariableDeclaration type BasicType name char_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation member getLastChar_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member isNegativeZero_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr MemberReference prefix_operators !_ter ^ ^ member loc1 ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member abs_ter ^ ^ ^ ^ operandr Literal value 100_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements WhileStatement condition BinaryOperation operator ==_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 10_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Math_ter ^ ^ arguments Literal value 10_ter ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ body BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value Literal value 10_ter ^ ^ ^ ^ type /=_ter ^ ^ ^ ^ ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member loc4 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier Long_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MethodInvocation qualifier Long_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MethodInvocation qualifier String_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ', 'prob': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'mode': 0, 'line': 245, 'isa': False, 'fl_score': 1}]
before@0 batch0 x: 0: root ^  ; []
after@0 batch0 x: 0: root ^  ; []
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root operator-operator ==_ter ^ ^  ^ ^ ; ['copy-operator']
copynode 0:  root operator-operator &&_ter ^ ^  ^ ^ ; ['copy-operator']
copynode 0:  root operator-operator <_ter ^ ^  ^ ^ ; ['copy-operator']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root MemberReference-MemberReference member loc0 ^ ^ ^  ^ ^ ; ['copy-MemberReference']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
before@1 batch0 x: -11.836105346679688: root ReturnStatement ^ ^  ; ['root -> ReturnStatement']
after@1 batch0 x: -11.836105346679688: root ReturnStatement ^ ^  ; ['root -> ReturnStatement']
copynode -0.027394670993089676:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -0.027394670993089676:  root modified ^ operator-operator ==_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-operator']
copynode -0.027394670993089676:  root modified ^ operator-operator &&_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-operator']
copynode -0.027394670993089676:  root modified ^ operator-operator <_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-operator']
copynode -0.027394670993089676:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.027394670993089676:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -3.622260570526123:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -3.622260570526123:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -0.027394670993089676:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -0.027394670993089676:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-Literal']
copynode -0.027394670993089676:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-Literal']
copynode -0.027394670993089676:  root modified ^ control ^ ^ ; ['root -> modified', 'root -> control']
copynode -3.622260570526123:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -3.622260570526123:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -3.622260570526123:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -3.622260570526123:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -10.001803398132324:  root operator-operator ==_ter ^ ^  >=_ter ^ ^ ^ ; ['copy-operator', 'operator -> >=_ter']
copynode -10.718521118164062:  root operator-operator &&_ter ^ ^  &&_ter ^ ^ ^ ; ['copy-operator', 'operator -> &&_ter']
copynode -3.622260570526123:  root add ^ WhileStatement ^ ^ ; ['root -> add', 'root -> WhileStatement']
copynode -3.622260570526123:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -10.001803398132324:  root operator-operator ==_ter ^ ^  <=_ter ^ ^ ^ ; ['copy-operator', 'operator -> <=_ter']
copynode -3.622260570526123:  root add ^ operator-operator ==_ter ^ ^  ^ ^ ; ['root -> add', 'copy-operator']
copynode -11.144715309143066:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -3.622260570526123:  root add ^ operator-operator &&_ter ^ ^  ^ ^ ; ['root -> add', 'copy-operator']
copynode -11.552369117736816:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -10.785053253173828:  root operator-operator <_ter ^ ^  <=_ter ^ ^ ^ ; ['copy-operator', 'operator -> <=_ter']
copynode -11.78132438659668:  root MemberReference-MemberReference member loc0 ^ ^ ^  member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member']
copynode -11.836105346679688:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -10.718521118164062:  root operator-operator &&_ter ^ ^  ||_ter ^ ^ ^ ; ['copy-operator', 'operator -> ||_ter']
copynode -10.001803398132324:  root operator-operator ==_ter ^ ^  >_ter ^ ^ ^ ; ['copy-operator', 'operator -> >_ter']
copynode -10.785053253173828:  root operator-operator <_ter ^ ^  >=_ter ^ ^ ^ ; ['copy-operator', 'operator -> >=_ter']
copynode -10.001803398132324:  root operator-operator ==_ter ^ ^  ==_ter ^ ^ ^ ; ['copy-operator', 'operator -> ==_ter']
copynode -11.144715309143066:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -10.785053253173828:  root operator-operator <_ter ^ ^  >_ter ^ ^ ^ ; ['copy-operator', 'operator -> >_ter']
copynode -10.001803398132324:  root operator-operator ==_ter ^ ^  <_ter ^ ^ ^ ; ['copy-operator', 'operator -> <_ter']
copynode -10.001803398132324:  root operator-operator ==_ter ^ ^  !=_ter ^ ^ ^ ; ['copy-operator', 'operator -> !=_ter']
copynode -10.785053253173828:  root operator-operator <_ter ^ ^  <_ter ^ ^ ^ ; ['copy-operator', 'operator -> <_ter']
copynode -10.001803398132324:  root operator-operator ==_ter ^ ^  -_ter ^ ^ ^ ; ['copy-operator', 'operator -> -_ter']
copynode -10.785053253173828:  root operator-operator <_ter ^ ^  -_ter ^ ^ ^ ; ['copy-operator', 'operator -> -_ter']
copynode -10.785053253173828:  root operator-operator <_ter ^ ^  ==_ter ^ ^ ^ ; ['copy-operator', 'operator -> ==_ter']
copynode -10.001803398132324:  root operator-operator ==_ter ^ ^  >>_ter ^ ^ ^ ; ['copy-operator', 'operator -> >>_ter']
copynode -10.001803398132324:  root operator-operator ==_ter ^ ^  +_ter ^ ^ ^ ; ['copy-operator', 'operator -> +_ter']
copynode -11.78132438659668:  root MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -10.001803398132324:  root operator-operator ==_ter ^ ^  >>>_ter ^ ^ ^ ; ['copy-operator', 'operator -> >>>_ter']
copynode -10.785053253173828:  root operator-operator <_ter ^ ^  !=_ter ^ ^ ^ ; ['copy-operator', 'operator -> !=_ter']
copynode -10.785053253173828:  root operator-operator <_ter ^ ^  +_ter ^ ^ ^ ; ['copy-operator', 'operator -> +_ter']
copynode -11.78132438659668:  root MemberReference-MemberReference member loc0 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier member']
copynode -10.785053253173828:  root operator-operator <_ter ^ ^  *_ter ^ ^ ^ ; ['copy-operator', 'operator -> *_ter']
copynode -10.785053253173828:  root operator-operator <_ter ^ ^  >>_ter ^ ^ ^ ; ['copy-operator', 'operator -> >>_ter']
copynode -11.78132438659668:  root MemberReference-MemberReference member loc0 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -10.718521118164062:  root operator-operator &&_ter ^ ^  !=_ter ^ ^ ^ ; ['copy-operator', 'operator -> !=_ter']
copynode -10.718521118164062:  root operator-operator &&_ter ^ ^  ==_ter ^ ^ ^ ; ['copy-operator', 'operator -> ==_ter']
copynode -11.78132438659668:  root MemberReference-MemberReference member loc0 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> selectors member']
copynode -11.836105346679688:  root ReturnStatement par0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -10.718521118164062:  root operator-operator &&_ter ^ ^  |_ter ^ ^ ^ ; ['copy-operator', 'operator -> |_ter']
copynode -10.718521118164062:  root operator-operator &&_ter ^ ^  +_ter ^ ^ ^ ; ['copy-operator', 'operator -> +_ter']
copynode -10.718521118164062:  root operator-operator &&_ter ^ ^  <_ter ^ ^ ^ ; ['copy-operator', 'operator -> <_ter']
copynode -11.552369117736816:  root IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.552369117736816:  root IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member abs_ter ^ ^ ^ ^ operandr Literal value 100_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements WhileStatement condition BinaryOperation operator ==_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 10_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Math_ter ^ ^ arguments Literal value 10_ter ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ body BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value Literal value 10_ter ^ ^ ^ ^ type /=_ter ^ ^ ^ ^ ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member loc4 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -10.718521118164062:  root operator-operator &&_ter ^ ^  >_ter ^ ^ ^ ; ['copy-operator', 'operator -> >_ter']
copynode -10.718521118164062:  root operator-operator &&_ter ^ ^  &_ter ^ ^ ^ ; ['copy-operator', 'operator -> &_ter']
copynode -11.78132438659668:  root MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -10.718521118164062:  root operator-operator &&_ter ^ ^  instanceof_ter ^ ^ ^ ; ['copy-operator', 'operator -> instanceof_ter']
copynode -11.552369117736816:  root IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr MemberReference prefix_operators !_ter ^ ^ member loc1 ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member abs_ter ^ ^ ^ ^ operandr Literal value 100_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements WhileStatement condition BinaryOperation operator ==_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 10_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Math_ter ^ ^ arguments Literal value 10_ter ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ body BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value Literal value 10_ter ^ ^ ^ ^ type /=_ter ^ ^ ^ ^ ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member loc4 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier Long_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MethodInvocation qualifier Long_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MethodInvocation qualifier String_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.552369117736816:  root IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier Long_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MethodInvocation qualifier Long_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.144715309143066:  root return_type par0 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -11.78132438659668:  root MemberReference-MemberReference member loc0 ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -11.78132438659668:  root MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -11.552369117736816:  root IfStatement par0 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -11.78132438659668:  root MemberReference-MemberReference member loc0 ^ ^ ^  postfix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators selectors member']
copynode -11.78132438659668:  root MemberReference-MemberReference member loc0 ^ ^ ^  postfix_operators ^ qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators qualifier member']
copynode -11.552369117736816:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -11.552369117736816:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -11.144715309143066:  root return_type loc2 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.144715309143066:  root return_type loc0 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.144715309143066:  root return_type loc3 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.144715309143066:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -11.552369117736816:  root IfStatement condition ^ then_statement ^ else_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement else_statement']
copynode -11.144715309143066:  root return_type loc4 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.144715309143066:  root return_type loc1 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.836105346679688:  root ReturnStatement loc2 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.836105346679688:  root ReturnStatement loc3 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.836105346679688:  root ReturnStatement loc4 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.836105346679688:  root ReturnStatement loc0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.836105346679688:  root ReturnStatement loc1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.836105346679688:  root ReturnStatement unknown ^ ^ ^ ; ['root -> ReturnStatement', 'start -> unknown']
copynode -11.552369117736816:  root IfStatement loc2 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
before@2 batch0 x: -32.795037269592285: root IfStatement loc2 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
after@2 batch0 x: -32.795037269592285: root IfStatement loc2 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -0.7548700757324696:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -1.6482893414795399:  root modified ^ operator-operator ==_ter ^ ^  >=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >=_ter']
copynode -2.1040073819458485:  root modified ^ operator-operator &&_ter ^ ^  ||_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ||_ter']
copynode -2.1040073819458485:  root modified ^ operator-operator &&_ter ^ ^  &&_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> &&_ter']
copynode -1.6482893414795399:  root modified ^ operator-operator ==_ter ^ ^  <=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <=_ter']
copynode -2.9872771687805653:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -2.2800377793610096:  root modified ^ operator-operator <_ter ^ ^  >=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >=_ter']
copynode -2.2800377793610096:  root modified ^ operator-operator <_ter ^ ^  <=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <=_ter']
copynode -3.5565191693603992:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -1.6482893414795399:  root modified ^ operator-operator ==_ter ^ ^  >_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >_ter']
copynode -1.6482893414795399:  root modified ^ operator-operator ==_ter ^ ^  ==_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ==_ter']
copynode -4.079956620931625:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -2.2800377793610096:  root modified ^ operator-operator <_ter ^ ^  >_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >_ter']
copynode -4.667505860328674:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -1.6482893414795399:  root modified ^ operator-operator ==_ter ^ ^  <_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <_ter']
copynode -2.2800377793610096:  root modified ^ operator-operator <_ter ^ ^  ==_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ==_ter']
copynode -1.6482893414795399:  root modified ^ operator-operator ==_ter ^ ^  !=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> !=_ter']
copynode -2.2800377793610096:  root modified ^ operator-operator <_ter ^ ^  <_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <_ter']
copynode -1.6482893414795399:  root modified ^ operator-operator ==_ter ^ ^  -_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> -_ter']
copynode -2.2800377793610096:  root modified ^ operator-operator <_ter ^ ^  -_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> -_ter']
copynode -2.2800377793610096:  root modified ^ operator-operator <_ter ^ ^  !=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> !=_ter']
copynode -6.051768202334642:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -1.6482893414795399:  root modified ^ operator-operator ==_ter ^ ^  >>_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >>_ter']
copynode -2.9872771687805653:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -6.165240187197924:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value']
copynode -2.9872771687805653:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -1.6482893414795399:  root modified ^ operator-operator ==_ter ^ ^  >>>_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >>>_ter']
copynode -1.6482893414795399:  root modified ^ operator-operator ==_ter ^ ^  +_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> +_ter']
copynode -2.9872771687805653:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -2.2800377793610096:  root modified ^ operator-operator <_ter ^ ^  >>_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >>_ter']
copynode -3.5565191693603992:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -6.546730894595385:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value']
copynode -3.5565191693603992:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -4.667505860328674:  root add ^ StatementExpression expression MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.2800377793610096:  root modified ^ operator-operator <_ter ^ ^  +_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> +_ter']
copynode -3.5565191693603992:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -2.2800377793610096:  root modified ^ operator-operator <_ter ^ ^  >>>_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >>>_ter']
copynode -2.9872771687805653:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -8.231457132846117:  root modified ^ control EnhancedForControl ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl']
copynode -4.667505860328674:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value Literal value 10_ter ^ ^ ^ ^ type /=_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.165240187197924:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  prefix_operators ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value']
copynode -4.667505860328674:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member loc4 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.667505860328674:  root add ^ StatementExpression expression MethodInvocation arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier Long_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.667505860328674:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier Long_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.5565191693603992:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -4.667505860328674:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier String_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.546730894595385:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  prefix_operators ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value']
copynode -8.928350925445557:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -2.1040073819458485:  root modified ^ operator-operator &&_ter ^ ^  !=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> !=_ter']
copynode -6.051768202334642:  root modified ^ StatementExpression expression MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.165240187197924:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value 10_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -6.165240187197924:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  selectors ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> selectors value']
copynode -6.546730894595385:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value 10_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -2.1040073819458485:  root modified ^ operator-operator &&_ter ^ ^  |_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> |_ter']
copynode -6.165240187197924:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value 10_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -9.878990650177002:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -9.861557483673096:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -2.1040073819458485:  root modified ^ operator-operator &&_ter ^ ^  ==_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ==_ter']
copynode -6.165240187197924:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value 10_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -0.7548700757324696:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'copy-IfStatement']
copynode -6.546730894595385:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  selectors ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> selectors value']
copynode -6.165240187197924:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -2.1040073819458485:  root modified ^ operator-operator &&_ter ^ ^  +_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> +_ter']
copynode -6.165240187197924:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value 100_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -6.546730894595385:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value 10_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -0.7548700757324696:  root modified ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member abs_ter ^ ^ ^ ^ operandr Literal value 100_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements WhileStatement condition BinaryOperation operator ==_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 10_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Math_ter ^ ^ arguments Literal value 10_ter ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ body BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value Literal value 10_ter ^ ^ ^ ^ type /=_ter ^ ^ ^ ^ ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member loc4 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'copy-IfStatement']
copynode -6.546730894595385:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value 10_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -6.165240187197924:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  prefix_operators ^ selectors ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators selectors value']
copynode -6.165240187197924:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -6.546730894595385:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value 100_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -6.051768202334642:  root modified ^ StatementExpression expression MethodInvocation arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier Long_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.546730894595385:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -6.546730894595385:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  prefix_operators ^ selectors ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators selectors value']
copynode -6.051768202334642:  root modified ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier Long_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.546730894595385:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -6.051768202334642:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value Literal value 10_ter ^ ^ ^ ^ type /=_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.051768202334642:  root modified ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member loc4 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.051768202334642:  root modified ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier String_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.9872771687805653:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -10.672668933868408:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -11.096453189849854:  root add ^ WhileStatement condition ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -2.1040073819458485:  root modified ^ operator-operator &&_ter ^ ^  <_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <_ter']
copynode -0.7548700757324696:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr MemberReference prefix_operators !_ter ^ ^ member loc1 ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member abs_ter ^ ^ ^ ^ operandr Literal value 100_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements WhileStatement condition BinaryOperation operator ==_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 10_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Math_ter ^ ^ arguments Literal value 10_ter ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ body BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value Literal value 10_ter ^ ^ ^ ^ type /=_ter ^ ^ ^ ^ ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member loc4 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier Long_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MethodInvocation qualifier Long_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MethodInvocation qualifier String_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'copy-IfStatement']
copynode -11.260849475860596:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -11.084810048341751:  root operator-operator &&_ter ^ ^  &&_ter ^ ^ StatementExpression ^ ^ ; ['copy-operator', 'operator -> &&_ter', 'root -> StatementExpression']
copynode -2.1040073819458485:  root modified ^ operator-operator &&_ter ^ ^  &_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> &_ter']
copynode -3.5565191693603992:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -0.7548700757324696:  root modified ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier Long_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MethodInvocation qualifier Long_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'copy-IfStatement']
copynode -11.003275036811829:  root operator-operator ==_ter ^ ^  >=_ter ^ ^ StatementExpression ^ ^ ; ['copy-operator', 'operator -> >=_ter', 'root -> StatementExpression']
copynode -11.55379080446437:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -11.878242634236813:  root ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -2.9872771687805653:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -2.9872771687805653:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -11.551329612731934:  root add ^ operator-operator &&_ter ^ ^  ||_ter ^ ^ ^ ; ['root -> add', 'copy-operator', 'operator -> ||_ter']
copynode -11.384185791015625:  root operator-operator ==_ter ^ ^  <=_ter ^ ^ ^ ; ['copy-operator', 'operator -> <=_ter', 'root -> End']
copynode -11.551329612731934:  root add ^ operator-operator &&_ter ^ ^  &&_ter ^ ^ ^ ; ['root -> add', 'copy-operator', 'operator -> &&_ter']
copynode -11.003275036811829:  root operator-operator ==_ter ^ ^  >=_ter ^ ^ ReturnStatement_ter ^ ^ ; ['copy-operator', 'operator -> >=_ter', 'root -> ReturnStatement_ter']
copynode -11.856710448861122:  root MemberReference-MemberReference member loc0 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -4.079956620931625:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
before@3 batch0 x: -12.382694810628891: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
after@3 batch0 x: -12.382694810628891: root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -0.7555384074803442:  root modified ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -2.460325498133898:  root modified ^ operator-operator ==_ter ^ ^  >=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >=_ter', 'root -> End']
copynode -2.7639507241547108:  root modified ^ operator-operator &&_ter ^ ^  ||_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ||_ter', 'root -> End']
copynode -2.839346367865801:  root modified ^ operator-operator &&_ter ^ ^  &&_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> &&_ter', 'root -> End']
copynode -3.0473864264786243:  root modified ^ operator-operator ==_ter ^ ^  <=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <=_ter', 'root -> End']
copynode -3.11352850869298:  root modified ^ operator-operator <_ter ^ ^  >=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >=_ter', 'root -> End']
copynode -3.065972786396742:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -3.5360311456024647:  root modified ^ operator-operator <_ter ^ ^  <=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <=_ter', 'root -> End']
copynode -3.981556076556444:  root modified ^ operator-operator ==_ter ^ ^  >_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >_ter', 'root -> End']
copynode -3.98866118863225:  root modified ^ operator-operator ==_ter ^ ^  ==_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ==_ter', 'root -> End']
copynode -3.6380172111094:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -4.58400859311223:  root modified ^ operator-operator <_ter ^ ^  >_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >_ter', 'root -> End']
copynode -4.08140809321776:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -4.866424698382616:  root modified ^ operator-operator ==_ter ^ ^  <_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <_ter', 'root -> End']
copynode -5.1265975423157215:  root modified ^ operator-operator <_ter ^ ^  ==_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ==_ter', 'root -> End']
copynode -4.851963043212891:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -5.156860489398241:  root modified ^ operator-operator ==_ter ^ ^  !=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> !=_ter', 'root -> End']
copynode -0.7555384074803442:  root modified ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -3.065972786396742:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.225177187472582:  root modified ^ operator-operator <_ter ^ ^  <_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <_ter', 'root -> End']
copynode -3.065972786396742:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.600019592791796:  root modified ^ operator-operator ==_ter ^ ^  -_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> -_ter', 'root -> End']
copynode -4.08140809321776:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -4.08140809321776:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -3.6380172111094:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.6380172111094:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -0.7555384074803442:  root modified ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -6.087199587374926:  root modified ^ operator-operator <_ter ^ ^  -_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> -_ter', 'root -> End']
copynode -6.124156374484301:  root modified ^ operator-operator <_ter ^ ^  !=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> !=_ter', 'root -> End']
copynode -3.065972786396742:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.139588188380003:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -6.428487915545702:  root modified ^ operator-operator ==_ter ^ ^  >>_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >>_ter', 'root -> End']
copynode -4.851963043212891:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -3.6380172111094:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.544707912951708:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators -_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter']
copynode -3.065972786396742:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.981598038226366:  root modified ^ operator-operator ==_ter ^ ^  >>>_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >>>_ter', 'root -> End']
copynode -7.012333054095507:  root modified ^ operator-operator ==_ter ^ ^  +_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> +_ter', 'root -> End']
copynode -7.07949199154973:  root modified ^ operator-operator <_ter ^ ^  >>_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >>_ter', 'root -> End']
copynode -6.765199203044176:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 0_ter']
copynode -0.7555384074803442:  root modified ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member abs_ter ^ ^ ^ ^ operandr Literal value 100_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.105983395129442:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators -_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter']
copynode -3.6380172111094:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -7.365122199058533:  root add ^ StatementExpression expression MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.805390972644091:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  postfix_operators ++_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'copy-postfix_operators']
copynode -7.152074653655291:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 0_ter']
copynode -7.068229336291552:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -7.65317477658391:  root modified ^ operator-operator <_ter ^ ^  +_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> +_ter', 'root -> End']
copynode -7.824044603854418:  root modified ^ operator-operator <_ter ^ ^  >>>_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >>>_ter', 'root -> End']
copynode -0.7555384074803442:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr MemberReference prefix_operators !_ter ^ ^ member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -3.065972786396742:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -4.851963043212891:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -7.250362057238817:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  postfix_operators ++_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'copy-postfix_operators']
copynode -7.685632366687059:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -8.275305181741714:  root modified ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -6.805390972644091:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  postfix_operators ++_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -2.460325498133898:  root modified ^ operator-operator ==_ter ^ ^  >=_ter ^ ^ StatementExpression ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >=_ter', 'root -> StatementExpression']
copynode -8.119468349963427:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  selectors ArraySelector ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector']
copynode -8.396415371447802:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  prefix_operators -_ter ^ ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter']
copynode -3.6380172111094:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -8.395887732505798:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value Literal value 10_ter ^ ^ ^ ^ type /=_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -0.7555384074803442:  root modified ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -8.500904440879822:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member loc4 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -8.528900504112244:  root add ^ StatementExpression expression MethodInvocation arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier Long_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.250362057238817:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  postfix_operators ++_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -6.139588188380003:  root modified ^ StatementExpression expression BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> BinaryOperation']
copynode -6.765199203044176:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 1_ter']
copynode -8.717651963233948:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier Long_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -8.785040020942688:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier String_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.765199203044176:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 2_ter']
copynode -8.861255545169115:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  prefix_operators -_ter ^ ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter']
copynode -6.544707912951708:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ~_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ~_ter']
copynode -3.0473864264786243:  root modified ^ operator-operator ==_ter ^ ^  <=_ter ^ ^ StatementExpression ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <=_ter', 'root -> StatementExpression']
copynode -6.805390972644091:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  postfix_operators --_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> --_ter']
copynode -4.08140809321776:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member abs_ter ^ ^ ^ ^ operandr Literal value 100_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -8.73481335118413:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  selectors ArraySelector ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector']
copynode -7.068229336291552:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  qualifier loc1 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc1']
copynode -7.152074653655291:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 1_ter']
copynode -3.11352850869298:  root modified ^ operator-operator <_ter ^ ^  >=_ter ^ ^ StatementExpression ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >=_ter', 'root -> StatementExpression']
copynode -6.544707912951708:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators !_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -9.150185246020555:  root modified ^ operator-operator &&_ter ^ ^  !=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> !=_ter', 'root -> End']
copynode -3.065972786396742:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -3.065972786396742:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.152074653655291:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 2_ter']
copynode -9.288735050708055:  root modified ^ StatementExpression expression MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.250362057238817:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  postfix_operators --_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> --_ter']
copynode -4.08140809321776:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr MemberReference prefix_operators !_ter ^ ^ member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.105983395129442:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators ~_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ~_ter']
copynode -3.5360311456024647:  root modified ^ operator-operator <_ter ^ ^  <=_ter ^ ^ StatementExpression ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <=_ter', 'root -> StatementExpression']
copynode -9.524761337786913:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value 10_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal', 'root -> End']
copynode -7.685632366687059:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier loc1 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc1']
copynode -4.08140809321776:  root add ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -0.7555384074803442:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 10_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Math_ter ^ ^ arguments Literal value 10_ter ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -3.6380172111094:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.105983395129442:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators !_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -3.6380172111094:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -9.778515953570604:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value 10_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal', 'root -> End']
copynode -9.838278908282518:  root modified ^ operator-operator &&_ter ^ ^  |_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> |_ter', 'root -> End']
copynode -6.544707912951708:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ++_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ++_ter']
before@4 batch0 x: -9.862632174044847: root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ++_ter ^ ^ member ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ++_ter']
after@4 batch0 x: -9.862632174044847: root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ++_ter ^ ^ member ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ++_ter']
copynode -0.7756970019545406:  root modified ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -0.7756970019545406:  root modified ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -0.7756970019545406:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.4408982507884502:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -4.007029477506876:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -4.6035608747042716:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.217669945210218:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -5.304148893803358:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -0.7756970019545406:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.14389231801033:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.82765868678689:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -5.842955622822046:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -5.191243592416868:  root modified ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.165362577885389:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -5.795314142946154:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -6.445562481880188:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -5.14389231801033:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.191243592416868:  root modified ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.061812821542844:  root modified ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -6.269905220717192:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.795314142946154:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -6.818741831928492:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -6.833024483174086:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2', 'root -> End']
copynode -5.14389231801033:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.061812821542844:  root modified ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -7.1553156562149525:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -7.304209653055295:  root modified ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member abs_ter ^ ^ ^ ^ operandr Literal value 100_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -5.681266258005053:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.681266258005053:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.41145995631814:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2', 'root -> End']
copynode -4.6035608747042716:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.269905220717192:  root modified ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -0.7756970019545406:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.541846621781588:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -4.6035608747042716:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -0.7756970019545406:  root modified ^ IfStatement condition BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 10_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Math_ter ^ ^ arguments Literal value 10_ter ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.14389231801033:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.191243592416868:  root modified ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.681266258005053:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.681266258005053:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.681266258005053:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member']
copynode -7.89885801426135:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr MemberReference prefix_operators !_ter ^ ^ member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -5.191243592416868:  root modified ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.908540230244398:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -6.827973831444979:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators -_ter ^ ^ member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> loc0']
copynode -6.827973831444979:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators -_ter ^ ^ member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> loc1']
copynode -7.458442825824022:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  postfix_operators ++_ter ^ ^ member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'copy-postfix_operators', 'member -> loc1']
copynode -6.827973831444979:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators -_ter ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> par0']
copynode -7.993734359741211:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -4.6035608747042716:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -0.7756970019545406:  root modified ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier Long_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -0.7756970019545406:  root modified ^ IfStatement condition BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 10_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.681266258005053:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -7.38432751968503:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators -_ter ^ ^ member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> loc1']
copynode -4.6035608747042716:  root add ^ IfStatement condition BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 10_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Math_ter ^ ^ arguments Literal value 10_ter ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -8.471062693744898:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -8.431539490818977:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter', 'value -> 1_ter']
copynode -8.002516586333513:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  postfix_operators ++_ter ^ ^ member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'copy-postfix_operators', 'member -> loc1']
copynode -7.38432751968503:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators -_ter ^ ^ member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> loc0']
copynode -8.586302701150998:  root modified ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.561276365071535:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  qualifier unknown ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown', 'member -> par0']
copynode -8.386393804103136:  root modified ^ operator-operator ==_ter ^ ^  >=_ter ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >=_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -5.681266258005053:  root add ^ IfStatement condition MethodInvocation member getLastChar_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -8.733444470912218:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 1_ter', 'root -> End']
copynode -7.38432751968503:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators -_ter ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> par0']
copynode -8.401861745864153:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  selectors ArraySelector index ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index']
copynode -5.191243592416868:  root modified ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -5.191243592416868:  root modified ^ IfStatement condition MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -4.6035608747042716:  root add ^ IfStatement condition BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 10_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -8.880172986537218:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 2_ter', 'root -> End']
copynode -7.458442825824022:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  postfix_operators ++_ter ^ ^ member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'copy-postfix_operators', 'member -> loc0']
before@5 batch0 x: -8.94289051182568: root add ^ ReturnStatement_ter ^ ^  ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
after@5 batch0 x: -8.94289051182568: root add ^ ReturnStatement_ter ^ ^  ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -1.5166765542235225:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -1.9821219535078853:  root modified ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -2.3244280905928463:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -1.5166765542235225:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -5.644652614137158:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -4.821459720376879:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -4.821459720376879:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -4.821459720376879:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -6.067454281961545:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.823298901319504:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.359577725175768:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.7641759612597525:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -5.823298901319504:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.621468845522031:  root modified ^ IfStatement condition MemberReference member par0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.4542967127636075:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -7.043296161806211:  root modified ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -7.039468318223953:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.821459720376879:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -6.7168774120509624:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -4.821459720376879:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -6.4542967127636075:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -4.821459720376879:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -6.578164163744077:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -7.530614146729931:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -7.68221260025166:  root modified ^ IfStatement condition BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 10_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Math_ter ^ ^ arguments Literal value 10_ter ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -7.450027892831713:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.578164163744077:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -7.831526700174436:  root modified ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.898335407022387:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -6.552823573350906:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -7.938744533807039:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators -_ter ^ ^ member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> loc0', 'root -> End']
copynode -7.880110690835863:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.9491796381771564:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators -_ter ^ ^ member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> loc1', 'root -> End']
copynode -7.605030486825854:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.067454281961545:  root modified ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -8.02076180651784:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  postfix_operators ++_ter ^ ^ member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'copy-postfix_operators', 'member -> loc1', 'root -> End']
copynode -6.552823573350906:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1']
copynode -6.621468845522031:  root modified ^ IfStatement condition MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -8.132350195199251:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators -_ter ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> par0', 'root -> End']
copynode -4.821459720376879:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter']
copynode -8.240456828614697:  root modified ^ IfStatement condition BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier Long_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.359577725175768:  root add ^ IfStatement condition MemberReference member loc1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -8.298526057740673:  root modified ^ IfStatement condition BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 10_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -8.32388229155913:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter']
copynode -7.40296263480559:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -8.406378377228975:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators -_ter ^ ^ member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> loc1', 'root -> End']
copynode -7.51905108615756:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -7.33092791819945:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -8.143782928586006:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'copy-postfix_operators']
copynode -8.493359480053186:  root modified ^ Literal-Literal value 0_ter ^ ^ ^  prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter', 'value -> 1_ter', 'root -> End']
copynode -8.518277067691088:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  postfix_operators ++_ter ^ ^ member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'copy-postfix_operators', 'member -> loc1', 'root -> End']
copynode -8.541592229157686:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators -_ter ^ ^ member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> loc0', 'root -> End']
copynode -8.14655918860808:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference member par0 ^ ^ ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -7.40296263480559:  root add ^ IfStatement condition MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -1.5166765542235225:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -8.64962463453412:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  qualifier unknown ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown', 'member -> par0', 'root -> End']
copynode -7.51905108615756:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
before@6 batch0 x: -8.665565978735685: root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
after@6 batch0 x: -8.665565978735685: root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -1.5538267211522907:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -1.5538267211522907:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -4.9425844044890255:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -4.9425844044890255:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl']
copynode -6.150617549661547:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -6.334381172899157:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -1.5538267211522907:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -1.5538267211522907:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference']
copynode -6.672464340925217:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -6.817100077867508:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.4686413505114615:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -6.962468925630674:  root modified ^ IfStatement condition MemberReference member par0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -6.970659379847348:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -7.126987047493458:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -6.775431147310883:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.705153445247561:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -7.155740688089281:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -7.050665167858824:  root modified ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member par0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> par0']
copynode -7.279619167093188:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -7.448655728017911:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -6.597942176973447:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -7.421770045999438:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -7.831331673776731:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.860980970552191:  root modified ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -7.901628795545548:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.705153445247561:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression']
copynode -8.102262321626768:  root modified ^ IfStatement condition MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -6.597942176973447:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -6.705153445247561:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -8.226856181863695:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference']
copynode -8.4289222471416:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.268409203737974:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -8.346554110292345:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -7.050665167858824:  root modified ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc0']
copynode -8.57875163340941:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.775431147310883:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member loc1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc1']
copynode -7.401915733702481:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal']
copynode -7.94191330531612:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
before@7 batch0 x: -8.686373053584248: root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
after@7 batch0 x: -8.686373053584248: root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -1.999941082438454:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.617984683951363:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -1.999941082438454:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -2.617984683951363:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'copy-operandr']
copynode -2.617984683951363:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation']
copynode -5.391818830510601:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.996346959611401:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -5.391818830510601:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.344980145338923:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.466499263886362:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -2.617984683951363:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MemberReference']
copynode -6.824427008628845:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -6.72967186733149:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.38840218866244:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.407504645874724:  root modified ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member par0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> par0', 'root -> End']
copynode -6.849047134164721:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.4976823278702796:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.726652534445748:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.566441159462556:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -7.580881301080808:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.84845132753253:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.193903079722077:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -6.999190335161984:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -7.84738634317182:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.84845132753253:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.849047134164721:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.996346959611401:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'copy-operandr']
copynode -6.999190335161984:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -8.37125692749396:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement_ter', 'root -> End']
copynode -8.10268888855353:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -8.441757807973772:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -8.463181804865599:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.83937660837546:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.726652534445748:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.996346959611401:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> MethodInvocation']
copynode -8.559737710049376:  root modified ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc0', 'root -> End']
copynode -8.449971191585064:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
before@8 batch0 x: -8.583872877061367: root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
after@8 batch0 x: -8.583872877061367: root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -2.5194616036023945:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -2.855522276600823:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.9083388166036457:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -2.9083388166036457:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -2.5194616036023945:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -4.966504724463448:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'copy-operandr', 'root -> End']
copynode -2.9083388166036457:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation']
copynode -5.019231946906075:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.910319396993145:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -2.9083388166036457:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MemberReference']
copynode -2.855522276600823:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.233488240977749:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.019231946906075:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.855522276600823:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.301751443883404:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -6.868521572789177:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.353430253919214:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -2.855522276600823:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.647608192404732:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.475176555570215:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.301751443883404:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -2.5194616036023945:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -6.353430253919214:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.647608192404732:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -6.475176555570215:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.5917020288761705:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.39688373496756:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -5.019231946906075:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -5.019231946906075:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -5.019231946906075:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.019231946906075:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.655668329447508:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -7.505825920496136:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -7.926806902280077:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -5.910319396993145:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -8.252129086991772:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'copy-operandr', 'root -> End']
copynode -7.930791925638914:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> End']
copynode -7.5369670109357685:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
before@9 batch0 x: -8.407257514831144: root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators -_ter ^ ^ member loc1 ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> loc1', 'root -> End']
after@9 batch0 x: -8.407257514831144: root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators -_ter ^ ^ member loc1 ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> loc1', 'root -> End']
copynode -2.6424128354992718:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -2.6424128354992718:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -3.4401456431951374:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.246784837683663:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'root -> End']
copynode -2.9527902842964977:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -2.9527902842964977:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -2.9527902842964977:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -2.9527902842964977:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -2.9527902842964977:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -4.776146622141823:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -2.9527902842964977:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -2.9527902842964977:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter']
copynode -4.776146622141823:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl']
copynode -2.9527902842964977:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter']
copynode -5.141683609923348:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.303593041142449:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.0266710163559765:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -6.627945305546746:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -5.141683609923348:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.4401456431951374:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.801317306002602:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.0266710163559765:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -3.4401456431951374:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.284351618727669:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.872535297414288:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.399704010924324:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.284351618727669:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -7.174404741963372:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -5.801317306002602:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -7.226393254240975:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.4865750761236995:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'root -> End']
copynode -2.6424128354992718:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference']
copynode -7.262798053678125:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'operandr -> Literal']
copynode -3.4401456431951374:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.141683609923348:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.141683609923348:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.4401456431951374:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member abs_ter ^ ^ ^ ^ operandr Literal value 100_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.643726976355538:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -7.105551821645349:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'operandr -> Literal']
copynode -7.524851294001564:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -7.082241298398003:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> BinaryOperation']
copynode -7.082241298398003:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr']
copynode -3.4401456431951374:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier Long_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Integer_ter ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member toString_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.4401456431951374:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 10_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Math_ter ^ ^ arguments Literal value 10_ter ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.696303963428363:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -2.6424128354992718:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -3.4401456431951374:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
before@10 batch0 x: -7.927856595953926: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
after@10 batch0 x: -7.927856595953926: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.217323357006535:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.51808207645081:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -3.217323357006535:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.63989339931868:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -4.386081600328907:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -4.7798936606850475:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -4.776388073107228:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -3.63989339931868:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -4.965940261026844:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -3.63989339931868:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -5.232839608332142:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -3.51808207645081:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'copy-operandr']
copynode -3.51808207645081:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation']
copynode -3.63989339931868:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -5.4984605552162975:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -5.3531930760946125:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.647978218039498:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -5.582153105875477:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference']
copynode -3.63989339931868:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter']
copynode -5.3531930760946125:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.7798936606850475:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -5.968406462809071:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference']
copynode -3.63989339931868:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter']
copynode -3.63989339931868:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -4.386081600328907:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> BinaryOperation']
copynode -6.786075981101021:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.8680758194532245:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.921249778708443:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -4.776388073107228:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> BinaryOperation']
copynode -5.4984605552162975:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl']
copynode -6.139644356211647:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.602483475347981:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.386081600328907:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -7.116877229651436:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -4.965940261026844:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> BinaryOperation']
copynode -6.901523971697316:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -4.776388073107228:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MethodInvocation']
copynode -7.210348220309243:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -3.63989339931868:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -3.51808207645081:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MemberReference']
copynode -7.356959508499131:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -4.386081600328907:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
copynode -4.386081600328907:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
copynode -4.965940261026844:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MethodInvocation']
copynode -6.602483475347981:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.638717325171456:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -7.572708280524239:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -7.526607686420903:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -3.217323357006535:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.554254395421594:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'operandr -> Literal', 'Literal -> value']
before@11 batch0 x: -7.625421447213739: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'operandr -> Literal', 'Literal -> value']
after@11 batch0 x: -7.625421447213739: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'operandr -> Literal', 'Literal -> value']
copynode -3.812742138048634:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.760811740299687:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -4.82485201372765:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.143764847656712:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -4.143764847656712:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -4.71365831955336:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -5.255547070642933:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -3.760811740299687:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -5.436489367624745:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.603494519134983:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.420941458782181:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -5.086375260492787:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.5314723120536655:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -5.086375260492787:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.92279234691523:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.049443566938862:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.709586249431595:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -5.897838623961434:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.689495498081669:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'copy-operandr', 'copy-operandr']
copynode -6.440113270422444:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.689495498081669:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'copy-operandr', 'operandr -> BinaryOperation']
copynode -6.190053092082962:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference']
copynode -6.298365616938099:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -5.801311934133992:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.704120570560917:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.812742138048634:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.801311934133992:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.812742138048634:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.760811740299687:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -6.8821541897486895:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.646277533611283:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -4.143764847656712:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation']
copynode -6.575577841838822:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference']
copynode -6.2829827384557575:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -6.2829827384557575:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -5.704120570560917:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.71365831955336:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> BinaryOperation']
copynode -6.680788183351979:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.760811740299687:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -7.112400265177712:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.2754245640244335:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -7.207198584219441:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.048062348505482:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -5.086375260492787:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.71365831955336:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -7.145303094526753:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.897838623961434:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
before@12 batch0 x: -7.567016211571172: root modified ^ IfStatement condition MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
after@12 batch0 x: -7.567016211571172: root modified ^ IfStatement condition MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -4.131835872074589:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -4.131835872074589:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -4.837025252869353:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.9472755135502666:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -4.863548690220341:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.124508069595322:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.97866784944199:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'copy-operandr']
copynode -5.270384674658999:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.45050880103372:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.615977805806324:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.9472755135502666:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -5.785638348897919:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -3.9472755135502666:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -3.9472755135502666:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -5.313190394779667:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -5.955582605442032:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.97866784944199:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'operandr -> BinaryOperation']
copynode -6.126122968038544:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.313190394779667:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl']
copynode -6.06294057960622:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.396818393608555:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -6.035217666765675:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -3.9472755135502666:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter']
copynode -6.602167324861512:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.467064494034275:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.454112394480035:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.614541793009266:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.944211626192555:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -6.180612148484215:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -6.716343784471974:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -6.777832651278004:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -3.9472755135502666:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter']
copynode -6.819147044559941:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -6.989843802293763:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.180612148484215:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -3.9472755135502666:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.270384674658999:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.9220127544831485:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -6.774552369257435:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -6.053190039237961:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -7.021278174361214:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.125103262020275:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.123111659428105:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -4.837025252869353:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.45050880103372:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.035217666765675:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -7.068446429213509:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'copy-operandr']
before@13 batch0 x: -7.543651767424308: root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value 0_ter ^ ^ ^ ^  ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
after@13 batch0 x: -7.543651767424308: root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value 0_ter ^ ^ ^ ^  ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -4.971656495472416:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -4.778388136764988:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.0025285424198955:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -5.139649348100647:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.505110973259434:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -4.778388136764988:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.974421662976965:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -5.09716940834187:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -5.806949013611302:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -5.801430424442515:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.77969324006699:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -6.012745732208714:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.884126061340794:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -6.170356625458226:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -5.573500370373949:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -5.951122814556584:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.692735312273726:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -5.752065640641376:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -4.974421662976965:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr']
copynode -5.9726176464464515:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.974421662976965:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr']
copynode -6.142245901515707:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.09716940834187:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -6.49085714831017:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.8678447843994945:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'root -> End']
copynode -6.931398743530735:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'root -> End']
copynode -5.951122814556584:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.139649348100647:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.994500750442967:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.595483178040013:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference']
copynode -5.09716940834187:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -5.9726176464464515:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.32358066434972:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -5.09716940834187:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -6.617703230818734:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.971656495472416:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation']
copynode -7.010711492737755:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -4.974421662976965:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -6.832544589182362:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -6.83743137284182:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.115195818943903:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown']
copynode -7.055909508606419:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -7.42776515497826:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.971656495472416:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'copy-operandr']
copynode -6.9916948021855205:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference']
copynode -5.752065640641376:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -7.292141494108364:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -6.142245901515707:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
before@14 batch0 x: -7.487233566585928: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'root -> End']
after@14 batch0 x: -7.487233566585928: root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'root -> End']
copynode -5.2135105521883816:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.345347994705662:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.247775310417637:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.875683231046423:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.054490918060765:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.459460215410218:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -6.259947651764378:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.342734390636906:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.043555864831433:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -6.40820906101726:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.398332336684689:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.799315804382786:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -6.537447212031111:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -5.799315804382786:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -6.681793136289343:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> End']
copynode -6.676453155232593:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.706861419370398:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> End']
copynode -6.421609872719273:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -6.1108285987284034:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -6.7659393639769405:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -5.247775310417637:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -7.04722043289803:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.1858767091762275:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.0096103807445616:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.261051112553105:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -5.459460215410218:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr']
copynode -5.459460215410218:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr']
copynode -7.257648797472939:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.28383676498197:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -7.3772869787644595:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.69403370260261:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -6.7093853482510895:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -7.460853928467259:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.247775310417637:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -7.078132400056347:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -7.471329313470051:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -5.459460215410218:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -7.213559875031933:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -6.973871046444401:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -7.44348650588654:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.473675039364025:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown']
copynode -6.421609872719273:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -6.987650708993897:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -7.317957402905449:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -6.973871046444401:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
before@15 batch0 x: -7.798050099750981: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
after@15 batch0 x: -7.798050099750981: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -5.360239562345669:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.291892358800396:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.263597266515717:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.070290926611051:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.365417251130566:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.724563056370243:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -6.5204211415257305:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.724563056370243:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -5.291892358800396:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -5.901957653230056:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.962961157551035:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.9974235685076565:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.431484339525923:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.279716294026002:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.5606902779545635:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.2483768032398075:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> End']
copynode -6.654332631966099:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'copy-operandr']
copynode -7.2816906736698:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> End']
copynode -5.360239562345669:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.473089443286881:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.360076259588823:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.901957653230056:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -7.381946166744456:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.360076259588823:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.291892358800396:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -7.423657549312338:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -5.291892358800396:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -7.493977287551388:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.279716294026002:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.654332631966099:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'operandr -> BinaryOperation']
copynode -7.480391973396763:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -6.946816259762272:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -5.901957653230056:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.238704496761784:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -7.650999763747677:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.609121041139588:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -7.717397642089054:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -7.059009069344029:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -7.6989155353512615:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.79557748301886:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.209689554525539:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.3586446770932525:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
before@16 batch0 x: -7.914212180068716: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
after@16 batch0 x: -7.914212180068716: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.182371446629986:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -5.688738730503246:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -6.404233390232548:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.688738730503246:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -6.940126083558425:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -6.382718303939328:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.874117204686627:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -6.350448731100187:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -6.752965265652165:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -7.171825108816847:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -7.235555941006169:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -7.37282159156166:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -6.287952914601192:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.287952914601192:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.260893458267674:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'copy-operandr', 'copy-operandr']
copynode -6.636250549694523:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -5.688738730503246:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr']
copynode -7.016896001761779:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.35986946686171:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -6.404233390232548:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.625344894593582:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -7.6128292174544185:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.350448731100187:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -7.668181055923924:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.451872179051861:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -7.422512361546978:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -7.5947919429745525:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.688738730503246:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr']
copynode -7.207669418072328:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -7.912254151655361:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -7.914212180068716:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -6.287952914601192:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.989371126284823:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.623835021397099:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.3698095788713545:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -7.410846303915605:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -6.382718303939328:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.724409037968144:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.636250549694523:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
before@17 batch0 x: -8.17078142776154: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
after@17 batch0 x: -8.17078142776154: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -6.422326588770375:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.771457579685375:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.799009111477062:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -7.0403292120900005:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.136999610578641:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -6.797412568470463:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -7.16675048484467:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.455942764645442:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -7.465778961544856:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -7.493271747371182:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -7.590552123030648:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.696173194563016:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.5697373419534415:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'copy-operandr']
copynode -7.545295053860173:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -7.782193908235058:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.792786368867382:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.9068288614507765:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.627724112709984:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.981817856198177:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -8.008976286044344:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -6.996198931476101:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -7.889790442539379:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'copy-operandr']
copynode -7.703275235136971:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -8.10468853614293:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -8.111078452086076:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.797412568470463:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -6.996198931476101:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -8.17078142776154:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -8.021812999388203:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -7.6040493787731975:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -8.120841735741124:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -7.569994561141357:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
before@18 batch0 x: -8.562899820273742: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
after@18 batch0 x: -8.562899820273742: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -6.434384475229308:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.052987116156146:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.1723000628408045:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.841504373354837:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -6.841504373354837:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.2005872370209545:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -7.736513417912647:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -6.804560859454796:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.797280663391575:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -8.052715089870617:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -8.025311151286587:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.602929434506223:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.804560859454796:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -7.2403555603232235:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -8.347465405007824:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -8.337780872127041:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -7.1723000628408045:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -8.562899820273742:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -7.731365222251043:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.797547733178362:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.434384475229308:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.809580135857686:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.434384475229308:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.804560859454796:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -8.277884417911991:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -7.2005872370209545:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -7.969832809409127:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
before@19 batch0 x: -8.851155074080452: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
after@19 batch0 x: -8.851155074080452: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -7.492058299249038:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr']
copynode -7.526991941733286:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-operandr']
copynode -6.886226991889998:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -7.667035200400278:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr']
copynode -7.741330940974876:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -6.886226991889998:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -7.7195115925278515:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -8.122377236140892:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr']
copynode -7.482978212414309:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -8.180155047914013:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -8.060267423978075:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.482978212414309:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -7.81059675081633:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -8.611232299124822:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -8.57570131844841:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-operandr']
copynode -8.588014967506751:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -8.851155074080452:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -8.792865474475548:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr']
copynode -8.06156866881065:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -7.7195115925278515:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -8.364888336276636:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.81059675081633:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.886226991889998:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr']
copynode -8.364888336276636:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -8.792881363769993:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
before@20 batch0 x: -9.18025323166512: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
after@20 batch0 x: -9.18025323166512: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.694100983208045:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr', 'root -> End']
copynode -7.7262317321728915:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-operandr', 'root -> End']
copynode -7.773317615268752:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.836897098226473:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr', 'root -> End']
copynode -7.859299530042335:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -8.040464739082381:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -8.260784570826218:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr', 'root -> End']
copynode -8.283731090603396:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -8.439281770726666:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -8.102004343410954:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -8.700021373806521:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -8.748254362260923:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -8.807778782909736:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-operandr', 'root -> End']
copynode -8.927218590630218:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> End']
copynode -8.687053000321612:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -8.963170877425:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -8.908867781748995:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -8.830421469872817:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr']
copynode -9.05196263990365:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr']
copynode -9.146309952018782:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'copy-operandr']
copynode -9.164524879073724:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-operandr']
copynode -9.18025323166512:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -8.102004343410954:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -9.038381898542866:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -8.746149169048294:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
before@21 batch0 x: -9.779758797725663: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
after@21 batch0 x: -9.779758797725663: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -8.304653187049553:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -8.062327333493158:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -8.062327333493158:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.820878739235923:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.447371702408418:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -8.990552698960528:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -8.470444375416264:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -9.226707629626617:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr', 'root -> End']
copynode -7.820878739235923:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -7.820878739235923:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -9.401338036870584:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr', 'root -> End']
copynode -9.54582917294465:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-operandr', 'root -> End']
copynode -9.507096270797774:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'copy-operandr', 'copy-operandr']
copynode -8.304653187049553:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -8.749268698273227:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -9.779758797725663:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -9.034210433950648:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation']
before@22 batch0 x: -9.871924033155665: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation']
after@22 batch0 x: -9.871924033155665: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation']
copynode -8.600750346435234:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr']
copynode -8.721765109105036:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-operandr']
copynode -8.884445543168113:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -8.869006641907617:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr']
copynode -9.085898810764775:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -9.228723997948691:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr']
copynode -9.329326982377097:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr']
copynode -9.704339588759467:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -8.973522763466462:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -9.79093639808707:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -9.745678444160149:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-operandr']
copynode -8.600750346435234:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation']
copynode -8.721765109105036:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'operandr -> BinaryOperation']
before@23 batch0 x: -10.156600662274286: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'operandr -> BinaryOperation']
after@23 batch0 x: -10.156600662274286: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'operandr -> BinaryOperation']
copynode -8.90250410581939:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr', 'copy-operandr']
copynode -9.05276817898266:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-operandr', 'copy-operandr']
copynode -9.107904980657622:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'copy-operandr']
copynode -9.147374876542017:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr', 'copy-operandr']
copynode -9.480859036324546:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr', 'copy-operandr']
copynode -9.428136402508244:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -9.572720194933936:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'copy-operandr']
copynode -9.74099389812909:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -10.02672246354632:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'copy-operandr']
copynode -10.1089248850476:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-operandr', 'copy-operandr']
copynode -10.115847606910393:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -10.156600662274286:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
before@24 batch0 x: -10.584269382758066: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
after@24 batch0 x: -10.584269382758066: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -9.044410009635612:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -9.194749989314005:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -9.258936355588958:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -9.27552590589039:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -9.628654206870124:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -9.720873023150489:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -10.182021382031962:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -10.26172283734195:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -9.67315956368111:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -9.765639934455976:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -9.765639934455976:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -9.765639934455976:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc1']
before@25 batch0 x: -11.128554854309186: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc1']
after@25 batch0 x: -11.128554854309186: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -10.29541333927773:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -10.858235630905256:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -10.29541333927773:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -11.128554854309186:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr']
before@26 batch0 x: -11.912795576965436: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr']
after@26 batch0 x: -11.912795576965436: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr']
copynode -10.655609572073445:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -11.627180848037824:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'copy-operandr']
copynode -10.655609572073445:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -11.912795576965436:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr', 'copy-operandr']
before@27 batch0 x: -12.266865167533979: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr', 'copy-operandr']
after@27 batch0 x: -12.266865167533979: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr', 'copy-operandr']
copynode -11.095366412540898:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -11.99479979625903:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'copy-operandr', 'copy-operandr']
copynode -12.266865167533979:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr', 'copy-operandr', 'copy-operandr']
copynode -11.095366412540898:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
before@28 batch0 x: -12.590161019703373: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
after@28 batch0 x: -12.590161019703373: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -11.694498950382695:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -12.160063002025709:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -12.426706436788663:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'copy-operandr', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -11.694498950382695:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
6 prev_ter
6 x_ter
6 prev_ter
6 prev_ter
6 x_ter
6 x_ter
6 prev_ter
6 x_ter
6 prev_ter
method
7 
None  startSourceMapping 
None  endSourceMapping 
boolean  continueProcessing 
char  getLastChar 
None  addIdentifier 
None  append 
None  appendBlockStart 
None  appendBlockEnd 
None  startNewLine 
None  maybeLineBreak 
None  maybeCutLine 
None  endLine 
None  notePreferredLineBreak 
None  beginBlock 
None  endBlock 
None  endBlock 
None  listSeparator 
None  endStatement 
None  endStatement 
None  maybeEndStatement 
None  endFunction 
None  endFunction 
None  beginCaseBody 
None  endCaseBody 
None  add 
None  appendOp 
None  addOp 
None  addNumber 
boolean  isNegativeZero 
boolean  isWordChar 
boolean  shouldPreserveExtraBlocks 
boolean  breakAfterBlockFor 
None  endFile 
method
7 
None  startSourceMapping 
None  endSourceMapping 
boolean  continueProcessing 
char  getLastChar 
None  addIdentifier 
None  append 
None  appendBlockStart 
None  appendBlockEnd 
None  startNewLine 
None  maybeLineBreak 
None  maybeCutLine 
None  endLine 
None  notePreferredLineBreak 
None  beginBlock 
None  endBlock 
None  endBlock 
None  listSeparator 
None  endStatement 
None  endStatement 
None  maybeEndStatement 
None  endFunction 
None  endFunction 
None  beginCaseBody 
None  endCaseBody 
None  add 
None  appendOp 
None  addOp 
None  addNumber 
boolean  isNegativeZero 
boolean  isWordChar 
boolean  shouldPreserveExtraBlocks 
boolean  breakAfterBlockFor 
None  endFile 
method
7 
6 x_ter
stderr: Check out program version: Closure-38b..................................... OK
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Running ant (export.dir.src.classes)....................................... OK

  0%|          | 0/1 [00:00<?, ?it/s]/root/projects/Recoder-bwk/run.py:527: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  tmpdepth = np.array(tmpdepth)
/root/envs/recoder/lib/python3.7/site-packages/torch/nn/functional.py:1340: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
100%|██████████| 1/1 [00:22<00:00, 22.37s/it]100%|██████████| 1/1 [00:22<00:00, 22.37s/it]
