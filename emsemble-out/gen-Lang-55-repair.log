stdout: StatementExpression expression MethodInvocation qualifier System_ter ^ ^ member currentTimeMillis_ter ^ ^ ^ ^ ^ 
System.currentTimeMillis();

StatementExpression expression Assignment expressionl MemberReference member stopTime_ter ^ ^ ^ ^ value MethodInvocation qualifier System_ter ^ ^ member currentTimeMillis_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
stopTime = System.currentTimeMillis();

StatementExpression expression Assignment expressionl MemberReference member stopTime_ter ^ ^ ^ ^ value MethodInvocation qualifier System_ter ^ ^ member stop_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
stopTime = System.stop();

ReturnStatement_ter ^ 
if (true) { return;
 }

StatementExpression expression Assignment expressionl MemberReference member stopTime_ter ^ ^ ^ ^ value MethodInvocation qualifier System_ter ^ ^ arguments This_ter ^ ^ member currentTimeMillis_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
stopTime = System.currentTimeMillis(this);

StatementExpression expression MethodInvocation member start_ter ^ ^ ^ ^ ^ 
start();

StatementExpression expression MethodInvocation member stop_ter ^ ^ ^ ^ ^ 
stop();

StatementExpression expression MethodInvocation member reset_ter ^ ^ ^ ^ ^ 
reset();

StatementExpression expression MethodInvocation member split_ter ^ ^ ^ ^ ^ 
split();

StatementExpression expression MethodInvocation member unsplit_ter ^ ^ ^ ^ ^ 
unsplit();

StatementExpression expression MethodInvocation member suspend_ter ^ ^ ^ ^ ^ 
suspend();

StatementExpression expression MethodInvocation member resume_ter ^ ^ ^ ^ ^ 
resume();

StatementExpression expression Assignment expressionl MemberReference member stopTime_ter ^ ^ ^ ^ value MethodInvocation member currentTimeMillis_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
stopTime = currentTimeMillis();

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member runningState_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member STATE_SUSPENDED_ter ^ ^ ^ ^ ^ ^ ^ 
if((this.runningState != STATE_SUSPENDED)){

StatementExpression expression MethodInvocation qualifier System_ter ^ ^ member start_ter ^ ^ ^ ^ ^ 
System.start();

StatementExpression expression MethodInvocation qualifier System_ter ^ ^ member stop_ter ^ ^ ^ ^ ^ 
System.stop();

StatementExpression expression MethodInvocation qualifier System_ter ^ ^ member reset_ter ^ ^ ^ ^ ^ 
System.reset();

StatementExpression expression MethodInvocation qualifier System_ter ^ ^ member split_ter ^ ^ ^ ^ ^ 
System.split();

StatementExpression expression MethodInvocation qualifier System_ter ^ ^ member unsplit_ter ^ ^ ^ ^ ^ 
System.unsplit();

StatementExpression expression MethodInvocation qualifier System_ter ^ ^ member suspend_ter ^ ^ ^ ^ ^ 
System.suspend();

StatementExpression expression MethodInvocation qualifier System_ter ^ ^ member resume_ter ^ ^ ^ ^ ^ 
System.resume();

StatementExpression expression Assignment expressionl MemberReference member startTime_ter ^ ^ ^ ^ value MethodInvocation qualifier System_ter ^ ^ member currentTimeMillis_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
startTime = System.currentTimeMillis();

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member runningState_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member STATE_RUNNING_ter ^ ^ ^ ^ ^ ^ ^ 
if((this.runningState != STATE_RUNNING)){

StatementExpression expression This selectors MethodInvocation member start_ter ^ ^ ^ ^ ^ ^ ^ 
this.start();

StatementExpression expression This selectors MethodInvocation member stop_ter ^ ^ ^ ^ ^ ^ ^ 
this.stop();

StatementExpression expression This selectors MethodInvocation member reset_ter ^ ^ ^ ^ ^ ^ ^ 
this.reset();

StatementExpression expression This selectors MethodInvocation member split_ter ^ ^ ^ ^ ^ ^ ^ 
this.split();

StatementExpression expression This selectors MethodInvocation member unsplit_ter ^ ^ ^ ^ ^ ^ ^ 
this.unsplit();

StatementExpression expression This selectors MethodInvocation member suspend_ter ^ ^ ^ ^ ^ ^ ^ 
this.suspend();

StatementExpression expression This selectors MethodInvocation member resume_ter ^ ^ ^ ^ ^ ^ ^ 
this.resume();

IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member runningState_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member STATE_RUNNING_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member runningState_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member STATE_SUSPENDED_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((this.runningState != STATE_RUNNING) && (this.runningState != STATE_SUSPENDED))){

StatementExpression expression This selectors MethodInvocation member currentTimeMillis_ter ^ ^ ^ ^ ^ ^ ^ 
this.currentTimeMillis();

StatementExpression expression This selectors MemberReference member stopTime_ter ^ ^ ^ MethodInvocation member currentTimeMillis_ter ^ ^ ^ ^ ^ ^ ^ 
this.stopTime.currentTimeMillis();

StatementExpression expression Assignment expressionl MemberReference member stopTime_ter ^ ^ ^ ^ value MemberReference member stopTime_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
stopTime = stopTime;

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member stopTime_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((stopTime != null)){

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member runningState_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((this.runningState != null)){

StatementExpression expression SuperMethodInvocation member stop_ter ^ ^ ^ ^ ^ 
super.stop();

StatementExpression expression MethodInvocation member currentTimeMillis_ter ^ ^ ^ ^ ^ 
currentTimeMillis();

StatementExpression expression Assignment expressionl MemberReference member stopTime_ter ^ ^ ^ ^ value Literal value null_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
stopTime = null;

StatementExpression expression Assignment expressionl MemberReference member stopTime_ter ^ ^ ^ ^ value MethodInvocation qualifier System_ter ^ ^ arguments This selectors MemberReference member runningState_ter ^ ^ ^ ^ ^ ^ member currentTimeMillis_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
stopTime = System.currentTimeMillis(this.runningState);

StatementExpression expression Assignment expressionl MemberReference member stopTime_ter ^ ^ ^ ^ value Literal value false_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
stopTime = false;


StatementExpression expression Assignment expressionl MemberReference member stopTime_ter ^ ^ ^ ^ value MethodInvocation qualifier System_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member currentTimeMillis_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
stopTime = System.currentTimeMillis("null");

StatementExpression expression Assignment expressionl This selectors MemberReference member stopTime_ter ^ ^ ^ ^ ^ ^ value MethodInvocation qualifier System_ter ^ ^ member currentTimeMillis_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.stopTime = System.currentTimeMillis();

StatementExpression expression Assignment expressionl MemberReference member stopTime_ter ^ ^ ^ ^ value Literal value true_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
stopTime = true;

IfStatement condition MethodInvocation qualifier System_ter ^ ^ member currentTimeMillis_ter ^ ^ ^ ^ ^ 
if(System.currentTimeMillis()){

StatementExpression expression Assignment expressionl MemberReference member stopTime_ter ^ ^ ^ ^ value MethodInvocation qualifier System_ter ^ ^ member start_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
stopTime = System.start();

StatementExpression expression Assignment expressionl MemberReference member stopTime_ter ^ ^ ^ ^ value MethodInvocation qualifier System_ter ^ ^ member stop_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
stopTime = System.stop();

StatementExpression expression Assignment expressionl MemberReference member stopTime_ter ^ ^ ^ ^ value MethodInvocation qualifier System_ter ^ ^ member reset_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
stopTime = System.reset();

StatementExpression expression Assignment expressionl MemberReference member stopTime_ter ^ ^ ^ ^ value MethodInvocation qualifier System_ter ^ ^ member split_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
stopTime = System.split();

StatementExpression expression Assignment expressionl MemberReference member stopTime_ter ^ ^ ^ ^ value MethodInvocation qualifier System_ter ^ ^ member unsplit_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
stopTime = System.unsplit();

StatementExpression expression Assignment expressionl MemberReference member stopTime_ter ^ ^ ^ ^ value MethodInvocation qualifier System_ter ^ ^ member suspend_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
stopTime = System.suspend();

StatementExpression expression Assignment expressionl MemberReference member stopTime_ter ^ ^ ^ ^ value MethodInvocation qualifier System_ter ^ ^ member resume_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
stopTime = System.resume();

StatementExpression expression Assignment expressionl This selectors MemberReference member runningState_ter ^ ^ ^ ^ ^ ^ value MemberReference member STATE_STOPPED_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
this.runningState = STATE_STOPPED;

StatementExpression expression Assignment expressionl MemberReference member stopTime_ter ^ ^ ^ ^ value MethodInvocation qualifier System_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member currentTimeMillis_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ 
stopTime = System.currentTimeMillis(0);

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl This selectors MemberReference member stopTime_ter ^ ^ ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((this.stopTime != null)){

stderr: 