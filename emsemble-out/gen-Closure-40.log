stdout: else_statement -> BlockStatement
using GPU
p
path com.google.javascript.jscomp.NameAnalyzer
visit
Position(line=596, column=12)
FOUND IT!
[{'bugid': 'Closure-40', 'treeroot': <Searchnode.Node object at 0x7f5725535110>, 'troot': <Searchnode.Node object at 0x7f572e4f8ed0>, 'oldcode': '          JsName name = getName(ns.name, false);', 'filepath': 'buggy/Closure-40/src/com/google/javascript/jscomp/NameAnalyzer.java', 'subroot': <Searchnode.Node object at 0x7f57254e7750>, 'vardic': {'visit_ter': 'meth0', 'nameNode_ter': 'loc2', 'ns_ter': 'loc3', 'name_ter': 'loc4'}, 'typedic': {'nameNode_ter': 'Node', 'ns_ter': 'NameInformation', 'name_ter': 'JsName'}, 'idss': 'Closure-40', 'classname': 'com.google.javascript.jscomp.NameAnalyzer', 'precode': '/*\n * Copyright 2006 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.javascript.jscomp;\n\nimport com.google.common.base.Preconditions;\nimport com.google.common.base.Predicate;\nimport com.google.common.collect.ImmutableSet;\nimport com.google.common.collect.Lists;\nimport com.google.common.collect.Maps;\nimport com.google.common.collect.Sets;\nimport com.google.javascript.jscomp.CodingConvention.SubclassRelationship;\nimport com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallback.CopySideEffectSubexpressions;\nimport com.google.javascript.jscomp.GatherSideEffectSubexpressionsCallback.SideEffectAccumulator;\nimport com.google.javascript.jscomp.NodeTraversal.AbstractPostOrderCallback;\nimport com.google.javascript.jscomp.NodeTraversal.Callback;\nimport com.google.javascript.jscomp.Scope.Var;\nimport com.google.javascript.jscomp.graph.DiGraph;\nimport com.google.javascript.jscomp.graph.FixedPointGraphTraversal;\nimport com.google.javascript.jscomp.graph.LinkedDirectedGraph;\nimport com.google.javascript.jscomp.graph.DiGraph.DiGraphEdge;\nimport com.google.javascript.jscomp.graph.FixedPointGraphTraversal.EdgeCallback;\nimport com.google.javascript.rhino.IR;\nimport com.google.javascript.rhino.Node;\nimport com.google.javascript.rhino.Token;\n\nimport java.util.Collections;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\n\n/**\n * This pass identifies all global names, simple (e.g. <code>a</code>) or\n * qualified (e.g. <code>a.b.c</code>), and the dependencies between them, then\n * removes code associated with unreferenced names. It starts by assuming that\n * only externally accessible names (e.g. <code>window</code>) are referenced,\n * then iteratively marks additional names as referenced (e.g. <code>Foo</code>\n * in <code>window[\'foo\'] = new Foo();</code>). This makes it possible to\n * eliminate code containing circular references.\n *\n * <p>Qualified names can be defined using dotted or object literal syntax\n * (<code>a.b.c = x;</code> or <code>a.b = {c: x};</code>, respectively).\n *\n * <p>Removal of prototype classes is currently all or nothing. In other words,\n * prototype properties and methods are never individually removed.\n *\n * <p>Optionally generates pretty HTML output of data so that it is easy to\n * analyze dependencies.\n *\n * <p>Only operates on names defined in the global scope, but it would be easy\n * to extend the pass to names defined in local scopes.\n *\n * TODO(nicksantos): In the initial implementation of this pass, it was\n * important to understand namespaced names (e.g., that a.b is distinct from\n * a.b.c). Now that this pass comes after CollapseProperties, this is no longer\n * necessary. For now, I\'ve changed so that {@code refernceParentNames}\n * creates a two-way reference between a.b and a.b.c, so that they\'re\n * effectively the same name. When someone has the time, we should completely\n * rip out all the logic that understands namespaces.\n *\n */\nfinal class NameAnalyzer implements CompilerPass {\n\n  /** Reference to the JS compiler */\n  private final AbstractCompiler compiler;\n\n  /** Map of all JS names found */\n  private final Map<String, JsName> allNames = Maps.newTreeMap();\n\n  /** Reference dependency graph */\n  private DiGraph<JsName, RefType> referenceGraph =\n      LinkedDirectedGraph.createWithoutAnnotations();\n\n  /**\n   * Map of name scopes - all children of the Node key have a dependency on the\n   * name value.\n   *\n   * If scopes.get(node).equals(name) && node2 is a child of node, then node2\n   * will not get executed unless name is referenced via a get operation\n   */\n  private final Map<Node, NameInformation> scopes = Maps.newHashMap();\n\n  /** Used to parse prototype names */\n  private static final String PROTOTYPE_SUBSTRING = ".prototype.";\n\n  private static final int PROTOTYPE_SUBSTRING_LEN =\n      PROTOTYPE_SUBSTRING.length();\n\n  private static final int PROTOTYPE_SUFFIX_LEN = ".prototype".length();\n\n  /** Window root */\n  private static final String WINDOW = "window";\n\n  /** Function class name */\n  private static final String FUNCTION = "Function";\n\n  /** All of these refer to global scope. These can be moved to config */\n  static final Set<String> DEFAULT_GLOBAL_NAMES = ImmutableSet.of(\n      "window", "goog.global");\n\n  /** Whether to remove unreferenced variables in main pass */\n  private final boolean removeUnreferenced;\n\n  /** Names that refer to the global scope */\n  private final Set<String> globalNames;\n\n  /** Ast change helper */\n  private final AstChangeProxy changeProxy;\n\n  /** Names that are externally defined */\n  private final Set<String> externalNames = Sets.newHashSet();\n\n  /** Name declarations or assignments, in post-order traversal order */\n  private final List<RefNode> refNodes = Lists.newArrayList();\n\n  /**\n   * When multiple names in the global scope point to the same object, we\n   * call them aliases. Store a map from each alias name to the alias set.\n   */\n  private final Map<String, AliasSet> aliases = Maps.newHashMap();\n\n  /**\n   * All the aliases in a program form a graph, where each global name is\n   * a node in the graph, and two names are connected if one directly aliases\n   * the other.\n   *\n   * An {@code AliasSet} represents a connected component in that graph. We do\n   * not explicitly track the graph--we just track the connected components.\n   */\n  private static class AliasSet {\n    Set<String> names = Sets.newHashSet();\n\n    // Every alias set starts with exactly 2 names.\n    AliasSet(String name1, String name2) {\n      names.add(name1);\n      names.add(name2);\n    }\n  }\n\n  /**\n   * Relationship between the two names.\n   * Currently only two different reference types exists:\n   * goog.inherits class relations and all other references.\n   */\n  private static enum RefType {\n    REGULAR,\n    INHERITANCE,\n  }\n\n  /**\n   * Callback that propagates reference information.\n   */\n  private static class ReferencePropagationCallback\n      implements EdgeCallback<JsName, RefType> {\n    @Override\n    public boolean traverseEdge(JsName from,\n                                RefType callSite,\n                                JsName to) {\n      if (from.referenced && !to.referenced) {\n        to.referenced = true;\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Class to hold information that can be determined from a node tree about a\n   * given name\n   */\n  private static class NameInformation {\n    /** Fully qualified name */\n    String name;\n\n    /** Whether the name is guaranteed to be externally referenceable */\n    boolean isExternallyReferenceable = false;\n\n    /** Whether this name is a prototype function */\n    boolean isPrototype = false;\n\n    /** Name of the prototype class, i.e. "a" if name is "a.prototype.b" */\n    String prototypeClass = null;\n\n    /** Local name of prototype property i.e. "b" if name is "a.prototype.b" */\n    String prototypeProperty = null;\n\n    /** Name of the super class of name */\n    String superclass = null;\n\n    /** Whether this is a call that only affects the class definition */\n    boolean onlyAffectsClassDef = false;\n  }\n\n  /**\n   * Struct to hold information about a fully qualified JS name\n   */\n  private static class JsName implements Comparable<JsName> {\n    /** Fully qualified name */\n    String name;\n\n    /** Name of prototype functions attached to this name */\n    List<String> prototypeNames = Lists.newArrayList();\n\n    /** Whether this is an externally defined name */\n    boolean externallyDefined = false;\n\n    /** Whether this node is referenced */\n    boolean referenced = false;\n\n    /** Whether the name has descendants that are written to. */\n    boolean hasWrittenDescendants = false;\n\n    /** Whether the name is used in a instanceof check */\n    boolean hasInstanceOfReference = false;\n\n    /**\n     * Output the node as a string\n     *\n     * @return Node as a string\n     */\n    @Override\n    public String toString() {\n      StringBuilder out = new StringBuilder();\n      out.append(name);\n\n      if (prototypeNames.size() > 0) {\n        out.append(" (CLASS)\\n");\n        out.append(" - FUNCTIONS: ");\n        Iterator<String> pIter = prototypeNames.iterator();\n        while (pIter.hasNext()) {\n          out.append(pIter.next());\n          if (pIter.hasNext()) {\n            out.append(", ");\n          }\n        }\n      }\n\n      return out.toString();\n    }\n\n    @Override\n    public int compareTo(JsName rhs) {\n      return this.name.compareTo(rhs.name);\n    }\n  }\n\n  /**\n   * Interface to get information about and remove unreferenced names.\n   */\n  interface RefNode {\n    JsName name();\n    void remove();\n  }\n\n  /**\n   * Class for nodes that reference a fully-qualified JS name. Fully qualified\n   * names are of form A or A.B (A.B.C, etc.). References can get the value or\n   * set the value of the JS name.\n   */\n  private class JsNameRefNode implements RefNode {\n    /** JsName node for this reference */\n    JsName name;\n\n    /**\n     * Top GETPROP or NAME or STRING [objlit key] node defining the name of\n     * this node\n     */\n    @SuppressWarnings("unused")\n    Node node;\n\n    /**\n     * Parent node of the name access\n     * (ASSIGN, VAR, FUNCTION, OBJECTLIT, or CALL)\n     */\n    Node parent;\n\n\n    /**\n     * Create a node that refers to a name\n     *\n     * @param name The name\n     * @param node The top node representing the name (GETPROP, NAME, STRING)\n     */\n    JsNameRefNode(JsName name, Node node) {\n      this.name = name;\n      this.node = node;\n      this.parent = node.getParent();\n    }\n\n    @Override\n    public JsName name() {\n      return name;\n    }\n\n    @Override\n    public void remove() {\n      // Setters have VAR, FUNCTION, or ASSIGN parent nodes. CALL parent\n      // nodes are global refs, and are handled later in this function.\n      Node containingNode = parent.getParent();\n      switch (parent.getType()) {\n        case Token.VAR:\n          Preconditions.checkState(parent.hasOneChild());\n          replaceWithRhs(containingNode, parent);\n          break;\n        case Token.FUNCTION:\n          replaceWithRhs(containingNode, parent);\n          break;\n        case Token.ASSIGN:\n          if (containingNode.isExprResult()) {\n            replaceWithRhs(containingNode.getParent(), containingNode);\n          } else {\n            replaceWithRhs(containingNode, parent);\n          }\n          break;\n        case Token.OBJECTLIT:\n          // TODO(nicksantos): Come up with a way to remove this.\n          // If we remove object lit keys, then we will need to also\n          // create dependency scopes for them.\n          break;\n      }\n    }\n  }\n\n\n  /**\n   * Class for nodes that set prototype properties or methods.\n   */\n  private class PrototypeSetNode extends JsNameRefNode {\n    /**\n     * Create a set node from the name & setter node\n     *\n     * @param name The name\n     * @param parent Parent node that assigns the expression (an ASSIGN)\n     */\n    PrototypeSetNode(JsName name, Node parent) {\n      super(name, parent.getFirstChild());\n\n      Preconditions.checkState(parent.isAssign());\n    }\n\n    @Override public void remove() {\n      Node gramps = parent.getParent();\n      if (gramps.isExprResult()) {\n        // name.prototype.foo = function() { ... };\n        changeProxy.removeChild(gramps.getParent(), gramps);\n      } else {\n        // ... name.prototype.foo = function() { ... } ...\n        changeProxy.replaceWith(gramps, parent,\n                                parent.getLastChild().cloneTree());\n      }\n    }\n  }\n\n  /**\n   * Base class for special reference nodes.\n   */\n  private abstract class SpecialReferenceNode implements RefNode {\n    /** JsName node for the function */\n    JsName name;\n\n    /** The CALL node */\n    Node node;\n\n    /** The parent of {@code node} */\n    Node parent;\n\n    /** The parent of {@code parent} */\n    Node gramps;\n\n    /**\n     * Create a special reference node.\n     *\n     * @param name The name\n     * @param node The CALL node\n     * @param parent The parent of {@code node}\n     * @param gramps The parent of {@code parent}\n     */\n    SpecialReferenceNode(JsName name, Node node, Node parent,\n        Node gramps) {\n      this.name = name;\n      this.node = node;\n      this.parent = parent;\n      this.gramps = gramps;\n    }\n\n    @Override\n    public JsName name() {\n      return name;\n    }\n  }\n\n\n\n  /**\n   * Class for nodes that are function calls that may change a function\'s\n   * prototype\n   */\n  private class ClassDefiningFunctionNode extends SpecialReferenceNode {\n    /**\n     * Create a class defining function node from the name & setter node\n     *\n     * @param name The name\n     * @param node The CALL node\n     * @param parent The parent of {@code node}\n     * @param gramps The parent of {@code parent}\n     */\n    ClassDefiningFunctionNode(JsName name, Node node, Node parent,\n        Node gramps) {\n      super(name, node, parent, gramps);\n      Preconditions.checkState(node.isCall());\n    }\n\n    @Override\n    public void remove() {\n      Preconditions.checkState(node.isCall());\n      if (parent.isExprResult()) {\n        changeProxy.removeChild(gramps, parent);\n      } else {\n        changeProxy.replaceWith(parent, node, IR.voidNode(IR.number(0)));\n      }\n    }\n  }\n\n\n\n  /**\n   * Class for nodes that check instanceof\n   */\n  private class InstanceOfCheckNode extends SpecialReferenceNode {\n    /**\n     * Create an instanceof node from the name and parent node\n     *\n     * @param name The name\n     * @param node The qualified name node\n     * @param parent The parent of {@code node}, this should be an instanceof\n     *     node.\n     * @param gramps The parent of {@code parent}.\n     */\n    InstanceOfCheckNode(JsName name, Node node, Node parent, Node gramps) {\n      super(name, node, parent, gramps);\n      Preconditions.checkState(node.isQualifiedName());\n      Preconditions.checkState(parent.isInstanceOf());\n    }\n\n    @Override\n    public void remove() {\n      changeProxy.replaceWith(gramps, parent, IR.falseNode());\n    }\n  }\n\n  /**\n   * Walk through externs and mark nodes as externally declared if declared\n   */\n  private class ProcessExternals extends AbstractPostOrderCallback {\n    @Override\n    public void visit(NodeTraversal t, Node n, Node parent) {\n      NameInformation ns = null;\n      if (NodeUtil.isVarDeclaration(n)) {\n        ns = createNameInformation(t, n, parent);\n      } else if (NodeUtil.isFunctionDeclaration(n)) {\n        ns = createNameInformation(t, n.getFirstChild(), n);\n      }\n      if (ns != null) {\n        JsName jsName = getName(ns.name, true);\n        jsName.externallyDefined = true;\n        externalNames.add(ns.name);\n      }\n    }\n  }\n\n  /**\n   * <p>Identifies all dependency scopes.\n   *\n   * <p>A dependency scope is a relationship between a node tree and a name that\n   * implies that the node tree will not execute (and thus can be eliminated) if\n   * the name is never referenced.\n   *\n   * <p>The entire parse tree is ultimately in a dependency scope relationship\n   * with <code>window</code> (or an equivalent name for the global scope), but\n   * the goal here is to find finer-grained relationships. This callback creates\n   * dependency scopes for every assignment statement, variable declaration, and\n   * function call in the global scope.\n   *\n   * <p>Note that dependency scope node trees aren\'t necessarily disjoint.\n   * In the following code snippet, for example, the function definition\n   * forms a dependency scope with the name <code>f</code> and the assignment\n   * inside the function forms a dependency scope with the name <code>x</code>.\n   * <pre>\n   * var x; function f() { x = 1; }\n   * </pre>\n   */\n  private class FindDependencyScopes extends AbstractPostOrderCallback {\n    @Override\n    public void visit(NodeTraversal t, Node n, Node parent) {\n      if (!t.inGlobalScope()) {\n        return;\n      }\n\n      if (n.isAssign()) {\n        Node nameNode = n.getFirstChild();\n        NameInformation ns = createNameInformation(t, nameNode, n);\n        if (ns != null) {\n          if (parent.isFor() && !NodeUtil.isForIn(parent)) {\n            // Patch for assignments that appear in the init,\n            // condition or iteration part of a FOR loop.  Without\n            // this change, all 3 of those parts try to claim the for\n            // loop as their dependency scope.  The last assignment in\n            // those three fields wins, which can result in incorrect\n            // reference edges between referenced and assigned variables.\n            //\n            // TODO(user) revisit the dependency scope calculation\n            // logic.\n            if (parent.getFirstChild().getNext() != n) {\n              recordDepScope(n, ns);\n            } else {\n              recordDepScope(nameNode, ns);\n            }\n          } else {\n            recordDepScope(n, ns);\n          }\n        }\n      } else if (NodeUtil.isVarDeclaration(n)) {\n        NameInformation ns = createNameInformation(t, n, parent);\n        recordDepScope(n, ns);\n      } else if (NodeUtil.isFunctionDeclaration(n)) {\n        NameInformation ns = createNameInformation(t, n.getFirstChild(), n);\n        recordDepScope(n, ns);\n      } else if (NodeUtil.isExprCall(n)) {\n        Node callNode = n.getFirstChild();\n        Node nameNode = callNode.getFirstChild();\n        NameInformation ns = createNameInformation(t, nameNode, callNode);\n        if (ns != null && ns.onlyAffectsClassDef) {\n          recordDepScope(n, ns);\n        }\n      }\n    }\n\n    /**\n     * Defines a dependency scope.\n     */\n    private void recordDepScope(Node node, NameInformation name) {\n      scopes.put(node, name);\n    }\n  }\n\n  /**\n   * Create JsName objects for variable and function declarations in\n   * the global scope before computing name references.  In javascript\n   * it is legal to refer to variable and function names before the\n   * actual declaration.\n   */\n  private class HoistVariableAndFunctionDeclarations\n      extends NodeTraversal.AbstractShallowCallback {\n\n    @Override\n    public void visit(NodeTraversal t, Node n, Node parent) {\n      if (NodeUtil.isVarDeclaration(n)) {\n        NameInformation ns = createNameInformation(t, n, parent);\n        Preconditions.checkNotNull(ns, "NameInformation is null");\n        createName(ns.name);\n      } else if (NodeUtil.isFunctionDeclaration(n)) {\n        Node nameNode = n.getFirstChild();\n        NameInformation ns = createNameInformation(t, nameNode, n);\n        Preconditions.checkNotNull(ns, "NameInformation is null");\n        createName(nameNode.getString());\n      }\n    }\n  }\n\n  /**\n   * Identifies all declarations of global names and setter statements\n   * affecting global symbols (assignments to global names).\n   *\n   * All declarations and setters must be gathered in a single\n   * traversal and stored in traversal order so "removeUnreferenced"\n   * can perform modifications in traversal order.\n   */\n  private class FindDeclarationsAndSetters extends AbstractPostOrderCallback {\n\n    @Override\n    public void visit(NodeTraversal t, Node n, Node parent) {\n\n      // Record global variable and function declarations\n      if (t.inGlobalScope()) {\n        if (NodeUtil.isVarDeclaration(n)) {\n          NameInformation ns = createNameInformation(t, n, parent);\n          Preconditions.checkNotNull(ns);\n          recordSet(ns.name, n);\n        } else if (NodeUtil.isFunctionDeclaration(n)) {\n          Node nameNode = n.getFirstChild();\n          NameInformation ns = createNameInformation(t, nameNode, n);\n          if (ns != null) {\n            JsName nameInfo = getName(nameNode.getString(), true);\n            recordSet(nameInfo.name, nameNode);\n          }\n        } else if (NodeUtil.isObjectLitKey(n, parent)) {\n          NameInformation ns = createNameInformation(t, n, parent);\n          if (ns != null) {\n            recordSet(ns.name, n);\n          }\n        }\n      }\n\n      // Record assignments and call sites\n      if (n.isAssign()) {\n        Node nameNode = n.getFirstChild();\n\n        NameInformation ns = createNameInformation(t, nameNode, n);\n        if (ns != null) {\n          if (ns.isPrototype) {\n            recordPrototypeSet(ns.prototypeClass, ns.prototypeProperty, n);\n          } else {\n            recordSet(ns.name, nameNode);\n          }\n        }\n      } else if (n.isCall()) {\n        Node nameNode = n.getFirstChild();\n        NameInformation ns = createNameInformation(t, nameNode, n);\n        if (ns != null && ns.onlyAffectsClassDef) {', 'aftercode': '          if (name != null) {\n          refNodes.add(new ClassDefiningFunctionNode(\n              name, n, parent, parent.getParent()));\n          }\n        }\n      }\n    }\n\n    /**\n     * Records the assignment of a value to a global name.\n     *\n     * @param name Fully qualified name\n     * @param node The top node representing the name (GETPROP, NAME, or STRING\n     * [objlit key])\n     */\n    private void recordSet(String name, Node node) {\n      JsName jsn = getName(name, true);\n      JsNameRefNode nameRefNode = new JsNameRefNode(jsn, node);\n      refNodes.add(nameRefNode);\n\n      // Now, look at all parent names and record that their properties have\n      // been written to.\n      if (node.isGetElem()) {\n        recordWriteOnProperties(name);\n      } else if (name.indexOf(\'.\') != -1) {\n        recordWriteOnProperties(name.substring(0, name.lastIndexOf(\'.\')));\n      }\n    }\n\n    /**\n     * Records the assignment to a prototype property of a global name,\n     * if possible.\n     *\n     * @param className The name of the class.\n     * @param prototypeProperty The name of the prototype property.\n     * @param node The top node representing the name (GETPROP)\n     */\n    private void recordPrototypeSet(String className, String prototypeProperty,\n        Node node) {\n      JsName name = getName(className, true);\n      name.prototypeNames.add(prototypeProperty);\n      refNodes.add(new PrototypeSetNode(name, node));\n      recordWriteOnProperties(className);\n    }\n\n    /**\n     * Record that the properties of this name have been written to.\n     */\n    private void recordWriteOnProperties(String parentName) {\n      do {\n        JsName parent = getName(parentName, true);\n        if (parent.hasWrittenDescendants) {\n          // If we already recorded this name, then all its parents must\n          // also be recorded. short-circuit this loop.\n          return;\n        } else {\n          parent.hasWrittenDescendants = true;\n        }\n\n        if (parentName.indexOf(\'.\') == -1) {\n          return;\n        }\n        parentName = parentName.substring(0, parentName.lastIndexOf(\'.\'));\n      } while(true);\n    }\n  }\n\n  private static final Predicate<Node> NON_LOCAL_RESULT_PREDICATE =\n      new Predicate<Node>() {\n        @Override\n        public boolean apply(Node input) {\n          if (input.isCall()) {\n            return false;\n          }\n          // TODO(johnlenz): handle NEW calls that record their \'this\'\n          // in global scope and effectly return an alias.\n          // Other non-local references are handled by this pass.\n          return true;\n        }\n      };\n\n  /**\n   * <p>Identifies all references between global names.\n   *\n   * <p>A reference from a name <code>f</code> to a name <code>g</code> means\n   * that if the name <code>f</code> must be defined, then the name\n   * <code>g</code> must also be defined. This would be the case if, for\n   * example, <code>f</code> were a function that called <code>g</code>.\n   */\n  private class FindReferences implements Callback {\n    Set<Node> nodesToKeep;\n    FindReferences() {\n      nodesToKeep = Sets.newHashSet();\n    }\n\n    private void addAllChildren(Node n) {\n      nodesToKeep.add(n);\n      for (Node child = n.getFirstChild();\n           child != null;\n           child = child.getNext()) {\n        addAllChildren(child);\n      }\n    }\n\n    private void addSimplifiedChildren(Node n) {\n      NodeTraversal.traverse(\n          compiler, n,\n          new GatherSideEffectSubexpressionsCallback(\n              compiler, new NodeAccumulator()));\n    }\n\n    private void addSimplifiedExpression(Node n, Node parent) {\n      if (parent.isVar()) {\n        Node value = n.getFirstChild();\n        if (value != null) {\n          addSimplifiedChildren(value);\n        }\n      } else if (n.isAssign() &&\n          (parent.isExprResult() ||\n           parent.isFor() ||\n           parent.isReturn())) {\n        for (Node child : n.children()) {\n          addSimplifiedChildren(child);\n        }\n      } else if (n.isCall() &&\n                 parent.isExprResult()) {\n        addSimplifiedChildren(n);\n      } else {\n        addAllChildren(n);\n      }\n    }\n\n    @Override\n    public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {\n      if (parent == null) {\n        return true;\n      }\n\n      // Gather the list of nodes that either have side effects, are\n      // arguments to function calls with side effects or are used in\n      // control structure predicates.  These names are always\n      // referenced when the enclosing function is called.\n      if (n.isFor()) {\n        if (!NodeUtil.isForIn(n)) {\n          Node decl = n.getFirstChild();\n          Node pred = decl.getNext();\n          Node step = pred.getNext();\n          addSimplifiedExpression(decl, n);\n          addSimplifiedExpression(pred, n);\n          addSimplifiedExpression(step, n);\n        } else { // n.getChildCount() == 3\n          Node decl = n.getFirstChild();\n          Node iter = decl.getNext();\n          addAllChildren(decl);\n          addAllChildren(iter);\n        }\n      }\n\n      if (parent.isVar() ||\n          parent.isExprResult() ||\n          parent.isReturn() ||\n          parent.isThrow()) {\n        addSimplifiedExpression(n, parent);\n      }\n\n      if ((parent.isIf() ||\n           parent.isWhile() ||\n           parent.isWith() ||\n           parent.isSwitch() ||\n           parent.isCase()) &&\n          parent.getFirstChild() == n) {\n        addAllChildren(n);\n      }\n\n      if (parent.isDo() && parent.getLastChild() == n) {\n        addAllChildren(n);\n      }\n\n      return true;\n    }\n\n    @Override\n    public void visit(NodeTraversal t, Node n, Node parent) {\n      if (!(n.isName() ||\n            NodeUtil.isGet(n) && !parent.isGetProp())) {\n        // This is not a simple or qualified name.\n        return;\n      }\n\n      NameInformation nameInfo = createNameInformation(t, n, parent);\n      if (nameInfo == null) {\n        // The name is not a global name\n        return;\n      }\n\n      if (nameInfo.onlyAffectsClassDef) {\n        if (nameInfo.superclass != null) {\n          recordReference(\n              nameInfo.name, nameInfo.superclass, RefType.INHERITANCE);\n        }\n\n        // Make sure that we record a reference to the function that does\n        // the inheritance, so that the inherits() function itself does\n        // not get stripped.\n        String nodeName = n.getQualifiedName();\n        if (nodeName != null) {\n          recordReference(\n              nameInfo.name, nodeName, RefType.REGULAR);\n        }\n\n        return;\n      }\n\n      if (parent.isInstanceOf() &&\n          parent.getLastChild() == n &&\n          // Don\'t cover GETELEMs with a global root node.\n          n.isQualifiedName()) {\n        JsName checkedClass = getName(nameInfo.name, true);\n        refNodes.add(\n            new InstanceOfCheckNode(\n                checkedClass, n, parent, parent.getParent()));\n        checkedClass.hasInstanceOfReference = true;\n        return;\n      }\n\n      // Determine which name might be potentially referring to this one by\n      // looking up the nearest enclosing dependency scope. It\'s unnecessary to\n      // determine all enclosing dependency scopes because this callback should\n      // create a chain of references between them.\n      NameInformation referring = getDependencyScope(n);\n      String referringName = "";\n      if (referring != null) {\n        referringName = referring.isPrototype\n                      ? referring.prototypeClass\n                      : referring.name;\n      }\n\n      String name = nameInfo.name;\n\n      // A value whose result is the return value of a function call\n      // can be an alias to global object.\n      // Here we add a alias to the general "global" object\n      // to act as a placeholder for the actual (unnamed) value.\n      if (maybeHiddenAlias(name, n)) {\n        recordAlias(name, WINDOW);\n      }\n\n      // An externally referenceable name must always be defined, so we add a\n      // reference to it from the global scope (a.k.a. window).\n      if (nameInfo.isExternallyReferenceable) {\n        recordReference(WINDOW, name, RefType.REGULAR);\n        maybeRecordAlias(name, parent, referring, referringName);\n        return;\n      }\n\n      // An assignment implies a reference from the enclosing dependency scope.\n      // For example, foo references bar in: function foo() {bar=5}.\n      if (NodeUtil.isVarOrSimpleAssignLhs(n, parent)) {\n        if (referring != null) {\n          recordReference(referringName, name, RefType.REGULAR);\n        }\n        return;\n      }\n\n      if (nodesToKeep.contains(n)) {\n        NameInformation functionScope = getEnclosingFunctionDependencyScope(t);\n        if (functionScope != null) {\n          recordReference(functionScope.name, name, RefType.REGULAR);\n        } else {\n          recordReference(WINDOW, name, RefType.REGULAR);\n        }\n      } else if (referring != null) {\n        if (!maybeRecordAlias(name, parent, referring, referringName)) {\n          RefType depType = referring.onlyAffectsClassDef ?\n              RefType.INHERITANCE : RefType.REGULAR;\n          recordReference(referringName, name, depType);\n        }\n      } else {\n        // No named dependency scope found.  Unfortunately that might\n        // mean that the expression is a child of an function expression\n        // or assignment with a complex lhs.  In those cases,\n        // protect this node by creating a reference to WINDOW.\n        for (Node ancestor : n.getAncestors()) {\n          if (NodeUtil.isAssignmentOp(ancestor) ||\n              ancestor.isFunction()) {\n            recordReference(WINDOW, name, RefType.REGULAR);\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * A value whose result is the return value of a function call\n     * can be an alias to global object. The dependency on the call target will\n     * prevent the removal of the function and its dependent values, but won\'t\n     * prevent the alias\' removal.\n     */\n    private boolean maybeHiddenAlias(String name, Node n) {\n      Node parent = n.getParent();\n      if (NodeUtil.isVarOrSimpleAssignLhs(n, parent)) {\n        Node rhs = (parent.isVar())\n            ? n.getFirstChild() : parent.getLastChild();\n        return (rhs != null && !NodeUtil.evaluatesToLocalValue(\n            rhs, NON_LOCAL_RESULT_PREDICATE));\n      }\n      return false;\n    }\n\n    /**\n     * @return Whether the alias was recorded.\n     */\n    private boolean maybeRecordAlias(\n        String name, Node parent,\n        NameInformation referring, String referringName) {\n      if ((parent.isName() ||\n          parent.isAssign()) &&\n          referring != null &&\n          scopes.get(parent) == referring) {\n        recordAlias(referringName, name);\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Helper class that gathers the list of nodes that would be left\n     * behind after simplification.\n     */\n    private class NodeAccumulator\n        implements SideEffectAccumulator {\n\n      @Override\n      public boolean classDefiningCallsHaveSideEffects() {\n        return false;\n      }\n\n      @Override\n      public void keepSubTree(Node original) {\n        addAllChildren(original);\n      }\n\n      @Override\n      public void keepSimplifiedShortCircuitExpression(Node original) {\n        Node condition = original.getFirstChild();\n        Node thenBranch = condition.getNext();\n        addAllChildren(condition);\n        addSimplifiedChildren(thenBranch);\n      }\n\n      @Override\n      public void keepSimplifiedHookExpression(Node hook,\n                                               boolean thenHasSideEffects,\n                                               boolean elseHasSideEffects) {\n        Node condition = hook.getFirstChild();\n        Node thenBranch = condition.getNext();\n        Node elseBranch = thenBranch.getNext();\n        addAllChildren(condition);\n        if (thenHasSideEffects) {\n          addSimplifiedChildren(thenBranch);\n        }\n        if (elseHasSideEffects) {\n          addSimplifiedChildren(elseBranch);\n        }\n      }\n    }\n  }\n\n  private class RemoveListener implements AstChangeProxy.ChangeListener {\n    @Override\n    public void nodeRemoved(Node n) {\n      compiler.reportCodeChange();\n    }\n  }\n\n  /**\n   * Creates a name analyzer, with option to remove unreferenced variables when\n   * calling process().\n   *\n   * The analyzer make a best guess at whether functions affect global scope\n   * based on usage (no assignment of return value means that a function has\n   * side effects).\n   *\n   * @param compiler The AbstractCompiler\n   * @param removeUnreferenced If true, remove unreferenced variables during\n   *        process()\n   */\n  NameAnalyzer(AbstractCompiler compiler, boolean removeUnreferenced) {\n    this.compiler = compiler;\n    this.removeUnreferenced = removeUnreferenced;\n    this.globalNames = DEFAULT_GLOBAL_NAMES;\n    this.changeProxy = new AstChangeProxy();\n  }\n\n  @Override\n  public void process(Node externs, Node root) {\n    NodeTraversal.traverse(compiler, externs, new ProcessExternals());\n    NodeTraversal.traverse(compiler, root, new FindDependencyScopes());\n    NodeTraversal.traverse(\n        compiler, root, new HoistVariableAndFunctionDeclarations());\n    NodeTraversal.traverse(compiler, root, new FindDeclarationsAndSetters());\n    NodeTraversal.traverse(compiler, root, new FindReferences());\n\n    // Create bi-directional references between parent names and their\n    // descendents. This may create new names.\n    referenceParentNames();\n\n    // If we modify the property of an alias, make sure that modification\n    // gets reflected in the original object.\n    referenceAliases();\n\n    calculateReferences();\n\n    if (removeUnreferenced) {\n      removeUnreferenced();\n    }\n  }\n\n  /**\n   * Records an alias of one name to another name.\n   */\n  private void recordAlias(String fromName, String toName) {\n    recordReference(fromName, toName, RefType.REGULAR);\n\n    // We need to add an edge to the alias graph. The alias graph is expressed\n    // implicitly as a set of connected components, called AliasSets.\n    //\n    // There are three possibilities:\n    // 1) Neither name is part of a connected component. Create a new one.\n    // 2) Exactly one name is part of a connected component. Merge the new\n    //    name into the component.\n    // 3) The two names are already part of connected components. Merge\n    //    those components together.\n    AliasSet toNameAliasSet = aliases.get(toName);\n    AliasSet fromNameAliasSet = aliases.get(fromName);\n    AliasSet resultSet = null;\n    if (toNameAliasSet == null && fromNameAliasSet == null) {\n      resultSet = new AliasSet(toName, fromName);\n    } else if (toNameAliasSet != null && fromNameAliasSet != null) {\n      resultSet = toNameAliasSet;\n      resultSet.names.addAll(fromNameAliasSet.names);\n      for (String name : fromNameAliasSet.names) {\n        aliases.put(name, resultSet);\n      }\n    } else if (toNameAliasSet != null) {\n      resultSet = toNameAliasSet;\n      resultSet.names.add(fromName);\n    } else {\n      resultSet = fromNameAliasSet;\n      resultSet.names.add(toName);\n    }\n    aliases.put(fromName, resultSet);\n    aliases.put(toName, resultSet);\n  }\n\n  /**\n   * Records a reference from one name to another name.\n   */\n  private void recordReference(String fromName, String toName,\n                               RefType depType) {\n    if (fromName.equals(toName)) {\n      // Don\'t bother recording self-references.\n      return;\n    }\n\n    JsName from = getName(fromName, true);\n    JsName to = getName(toName, true);\n    referenceGraph.createNode(from);\n    referenceGraph.createNode(to);\n    if (!referenceGraph.isConnectedInDirection(from, depType, to)) {\n      referenceGraph.connect(from, depType, to);\n    }\n  }\n\n  /**\n   * Removes all unreferenced variables.\n   */\n  void removeUnreferenced() {\n    RemoveListener listener = new RemoveListener();\n    changeProxy.registerListener(listener);\n\n    for (RefNode refNode : refNodes) {\n      JsName name = refNode.name();\n      if (!name.referenced && !name.externallyDefined) {\n        refNode.remove();\n      }\n    }\n\n    changeProxy.unregisterListener(listener);\n  }\n\n  /**\n   * Generates an HTML report\n   *\n   * @return The report\n   */\n  String getHtmlReport() {\n    StringBuilder sb = new StringBuilder();\n    sb.append("<html><body><style type=\\"text/css\\">"\n        + "body, td, p {font-family: Arial; font-size: 83%} "\n        + "ul {margin-top:2px; margin-left:0px; padding-left:1em;} "\n        + "li {margin-top:3px; margin-left:24px; padding-left:0px;"\n        + "padding-bottom: 4px}</style>");\n    sb.append("OVERALL STATS<ul>");\n    appendListItem(sb, "Total Names: " + countOf(TriState.BOTH, TriState.BOTH));\n    appendListItem(sb, "Total Classes: "\n        + countOf(TriState.TRUE, TriState.BOTH));\n    appendListItem(sb, "Total Static Functions: "\n        + countOf(TriState.FALSE, TriState.BOTH));\n    appendListItem(sb, "Referenced Names: "\n        + countOf(TriState.BOTH, TriState.TRUE));\n    appendListItem(sb, "Referenced Classes: "\n        + countOf(TriState.TRUE, TriState.TRUE));\n    appendListItem(sb, "Referenced Functions: "\n        + countOf(TriState.FALSE, TriState.TRUE));\n    sb.append("</ul>");\n\n    sb.append("ALL NAMES<ul>\\n");\n    for (JsName node : allNames.values()) {\n      sb.append("<li>" + nameAnchor(node.name) + "<ul>");\n      if (node.prototypeNames.size() > 0) {\n        sb.append("<li>PROTOTYPES: ");\n        Iterator<String> protoIter = node.prototypeNames.iterator();\n        while (protoIter.hasNext()) {\n          sb.append(protoIter.next());\n          if (protoIter.hasNext()) {\n            sb.append(", ");\n          }\n        }\n      }\n\n      if (referenceGraph.hasNode(node)) {\n        List<DiGraphEdge<JsName, RefType>> refersTo =\n            referenceGraph.getOutEdges(node);\n        if (refersTo.size() > 0) {\n          sb.append("<li>REFERS TO: ");\n          Iterator<DiGraphEdge<JsName, RefType>> toIter = refersTo.iterator();\n          while (toIter.hasNext()) {\n            sb.append(nameLink(toIter.next().getDestination().getValue().name));\n            if (toIter.hasNext()) {\n              sb.append(", ");\n            }\n          }\n        }\n\n        List<DiGraphEdge<JsName, RefType>> referencedBy =\n            referenceGraph.getInEdges(node);\n        if (referencedBy.size() > 0) {\n          sb.append("<li>REFERENCED BY: ");\n          Iterator<DiGraphEdge<JsName, RefType>> fromIter = refersTo.iterator();\n          while (fromIter.hasNext()) {\n            sb.append(\n                nameLink(fromIter.next().getDestination().getValue().name));\n            if (fromIter.hasNext()) {\n              sb.append(", ");\n            }\n          }\n        }\n      }\n      sb.append("</li>");\n      sb.append("</ul></li>");\n    }\n    sb.append("</ul>");\n    sb.append("</body></html>");\n\n    return sb.toString();\n  }\n\n  private void appendListItem(StringBuilder sb, String text) {\n    sb.append("<li>" + text + "</li>\\n");\n  }\n\n  private String nameLink(String name) {\n    return "<a href=\\"#" + name + "\\">" + name + "</a>";\n  }\n\n  private String nameAnchor(String name) {\n    return "<a name=\\"" + name + "\\">" + name + "</a>";\n  }\n\n  /**\n   * Looks up a {@link JsName} by name, optionally creating one if it doesn\'t\n   * already exist.\n   *\n   * @param name A fully qualified name\n   * @param canCreate Whether to create the object if necessary\n   * @return The {@code JsName} object, or null if one can\'t be found and\n   *   can\'t be created.\n   */\n  private JsName getName(String name, boolean canCreate) {\n    if (canCreate) {\n      createName(name);\n    }\n    return allNames.get(name);\n  }\n\n  /**\n   * Creates a {@link JsName} for the given name if it doesn\'t already\n   * exist.\n   *\n   * @param name A fully qualified name\n   */\n  private void createName(String name) {\n    JsName jsn = allNames.get(name);\n    if (jsn == null) {\n      jsn = new JsName();\n      jsn.name = name;\n      allNames.put(name, jsn);\n    }\n  }\n\n  /**\n   * The NameAnalyzer algorithm works best when all objects have a canonical\n   * name in the global scope. When multiple names in the global scope\n   * point to the same object, things start to break down.\n   *\n   * For example, if we have\n   * <code>\n   * var a = {};\n   * var b = a;\n   * a.foo = 3;\n   * alert(b.foo);\n   * </code>\n   * then a.foo and b.foo are the same name, even though NameAnalyzer doesn\'t\n   * represent them as such.\n   *\n   * To handle this case, we look at all the aliases in the program.\n   * If descendant properties of that alias are assigned, then we create a\n   * directional reference from the original name to the alias. For example,\n   * in this case, the assign to {@code a.foo} triggers a reference from\n   * {@code b} to {@code a}, but NOT from a to b.\n   *\n   * Similarly, "instanceof" checks do not prevent the removal\n   * of a unaliased name but an instanceof check on an alias can only be removed\n   * if the other aliases are also removed, so we add a connection here.\n   */\n  private void referenceAliases() {\n    for (Map.Entry<String, AliasSet> entry : aliases.entrySet()) {\n      JsName name = getName(entry.getKey(), false);\n      if (name.hasWrittenDescendants || name.hasInstanceOfReference) {\n        for (String alias : entry.getValue().names) {\n          recordReference(alias, entry.getKey(), RefType.REGULAR);\n        }\n      }\n    }\n  }\n\n  /**\n   * Adds mutual references between all known global names and their parent\n   * names. (e.g. between <code>a.b.c</code> and <code>a.b</code>).\n   */\n  private void referenceParentNames() {\n    // Duplicate set of nodes to process so we don\'t modify set we are\n    // currently iterating over\n    Set<JsName> allNamesCopy = Sets.newHashSet(allNames.values());\n\n    for (JsName name : allNamesCopy) {\n      String curName = name.name;\n      JsName curJsName = name;\n      while (curName.indexOf(\'.\') != -1) {\n        String parentName = curName.substring(0, curName.lastIndexOf(\'.\'));\n        if (!globalNames.contains(parentName)) {\n\n          JsName parentJsName = getName(parentName, true);\n\n          recordReference(curJsName.name, parentJsName.name, RefType.REGULAR);\n          recordReference(parentJsName.name, curJsName.name, RefType.REGULAR);\n\n          curJsName = parentJsName;\n        }\n        curName = parentName;\n      }\n    }\n  }\n\n  /**\n   * Creates name information for the current node during a traversal.\n   *\n   * @param t The node traversal\n   * @param n The current node\n   * @param parent The parent of n\n   * @return The name information, or null if the name is irrelevant to this\n   *     pass\n   */\n  private NameInformation createNameInformation(NodeTraversal t, Node n,\n      Node parent) {\n    // Build the full name and find its root node by iterating down through all\n    // GETPROP/GETELEM nodes.\n    String name = "";\n    Node rootNameNode = n;\n    boolean bNameWasShortened = false;\n    while (true) {\n      if (NodeUtil.isGet(rootNameNode)) {\n        Node prop = rootNameNode.getLastChild();\n        if (rootNameNode.isGetProp()) {\n          name = "." + prop.getString() + name;\n        } else {\n          // We consider the name to be "a.b" in a.b[\'c\'] or a.b[x].d.\n          bNameWasShortened = true;\n          name = "";\n        }\n        rootNameNode = rootNameNode.getFirstChild();\n      } else if (NodeUtil.isObjectLitKey(\n          rootNameNode, rootNameNode.getParent())) {\n        name = "." + rootNameNode.getString() + name;\n\n        // Check if this is an object literal assigned to something.\n        Node objLit = rootNameNode.getParent();\n        Node objLitParent = objLit.getParent();\n        if (objLitParent.isAssign()) {\n          // This must be the right side of the assign.\n          rootNameNode = objLitParent.getFirstChild();\n        } else if (objLitParent.isName()) {\n          // This must be a VAR initialization.\n          rootNameNode = objLitParent;\n        } else if (objLitParent.isString()) {\n          // This must be a object literal key initialization.\n          rootNameNode = objLitParent;\n        } else {\n          return null;\n        }\n      } else {\n        break;\n      }\n    }\n\n    // Check whether this is a class-defining call. Classes may only be defined\n    // in the global scope.\n    if (parent.isCall() && t.inGlobalScope()) {\n      CodingConvention convention = compiler.getCodingConvention();\n      SubclassRelationship classes = convention.getClassesDefinedByCall(parent);\n      if (classes != null) {\n        NameInformation nameInfo = new NameInformation();\n        nameInfo.name = classes.subclassName;\n        nameInfo.onlyAffectsClassDef = true;\n        nameInfo.superclass = classes.superclassName;\n        return nameInfo;\n      }\n\n      String singletonGetterClass =\n          convention.getSingletonGetterClassName(parent);\n      if (singletonGetterClass != null) {\n        NameInformation nameInfo = new NameInformation();\n        nameInfo.name = singletonGetterClass;\n        nameInfo.onlyAffectsClassDef = true;\n        return nameInfo;\n      }\n    }\n\n    switch (rootNameNode.getType()) {\n      case Token.NAME:\n        // Check whether this is an assignment to a prototype property\n        // of an object defined in the global scope.\n        if (!bNameWasShortened &&\n            n.isGetProp() &&\n            parent.isAssign() &&\n            "prototype".equals(n.getLastChild().getString())) {\n          if (createNameInformation(t, n.getFirstChild(), n) != null) {\n            name = rootNameNode.getString() + name;\n            name = name.substring(0, name.length() - PROTOTYPE_SUFFIX_LEN);\n            NameInformation nameInfo = new NameInformation();\n            nameInfo.name = name;\n            return nameInfo;\n          } else {\n            return null;\n          }\n        }\n        return createNameInformation(\n            rootNameNode.getString() + name, t.getScope(), rootNameNode);\n      case Token.THIS:\n        if (t.inGlobalScope()) {\n          NameInformation nameInfo = new NameInformation();\n          if (name.indexOf(\'.\') == 0) {\n            nameInfo.name = name.substring(1);  // strip leading "."\n          } else {\n            nameInfo.name = name;\n          }\n          nameInfo.isExternallyReferenceable = true;\n          return nameInfo;\n        }\n        return null;\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * Creates name information for a particular qualified name that occurs in a\n   * particular scope.\n   *\n   * @param name A qualified name (e.g. "x" or "a.b.c")\n   * @param scope The scope in which {@code name} occurs\n   * @param rootNameNode The NAME node for the first token of {@code name}\n   * @return The name information, or null if the name is irrelevant to this\n   *     pass\n   */\n  private NameInformation createNameInformation(\n      String name, Scope scope, Node rootNameNode) {\n    // Check the scope. Currently we\'re only looking at globally scoped vars.\n    String rootName = rootNameNode.getString();\n    Var v = scope.getVar(rootName);\n    boolean isExtern = (v == null && externalNames.contains(rootName));\n    boolean isGlobalRef = (v != null && v.isGlobal()) || isExtern ||\n        rootName.equals(WINDOW);\n    if (!isGlobalRef) {\n      return null;\n    }\n\n    NameInformation nameInfo = new NameInformation();\n\n    // If a prototype property or method, fill in prototype information.\n    int idx = name.indexOf(PROTOTYPE_SUBSTRING);\n    if (idx != -1) {\n      nameInfo.isPrototype = true;\n      nameInfo.prototypeClass = name.substring(0, idx);\n      nameInfo.prototypeProperty = name.substring(\n          idx + PROTOTYPE_SUBSTRING_LEN);\n    }\n\n    nameInfo.name = name;\n    nameInfo.isExternallyReferenceable =\n        isExtern || isExternallyReferenceable(scope, name);\n    return nameInfo;\n  }\n\n  /**\n   * Checks whether a name can be referenced outside of the compiled code.\n   * These names will be the root of dependency trees.\n   *\n   * @param scope The current variable scope\n   * @param name The name\n   * @return True if can be referenced outside\n   */\n  private boolean isExternallyReferenceable(Scope scope, String name) {\n    if (compiler.getCodingConvention().isExported(name)) {\n      return true;\n    }\n    if (scope.isLocal()) {\n      return false;\n    }\n    for (String s : globalNames) {\n      if (name.startsWith(s)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the nearest enclosing dependency scope, or null if there isn\'t one.\n   */\n  private NameInformation getDependencyScope(Node n) {\n    for (Node node : n.getAncestors()) {\n      NameInformation ref = scopes.get(node);\n      if (ref != null) {\n        return ref;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Get dependency scope defined by the enclosing function, or null.\n   * If enclosing function is a function expression, determine scope based on\n   * its parent if the parent node is a variable declaration or\n   * assignment.\n   */\n  private NameInformation getEnclosingFunctionDependencyScope(NodeTraversal t) {\n    Node function = t.getEnclosingFunction();\n    if (function == null) {\n      return null;\n    }\n\n    NameInformation ref = scopes.get(function);\n    if (ref != null) {\n      return ref;\n    }\n\n    // Function expression.  try to get a name from the parent var\n    // declaration or assignment.\n    Node parent = function.getParent();\n    if (parent != null) {\n      // Account for functions defined in the form:\n      //   var a = cond ? function a() {} : function b() {};\n      while (parent.isHook()) {\n        parent = parent.getParent();\n      }\n\n      if (parent.isName()) {\n        return scopes.get(parent);\n      }\n\n      if (parent.isAssign()) {\n        return scopes.get(parent);\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Propagate "referenced" property down the graph.\n   */\n  private void calculateReferences() {\n    JsName window = getName(WINDOW, true);\n    window.referenced = true;\n    JsName function = getName(FUNCTION, true);\n    function.referenced = true;\n\n    // Propagate "referenced" property to a fixed point.\n    FixedPointGraphTraversal.newTraversal(new ReferencePropagationCallback())\n        .computeFixedPoint(referenceGraph);\n  }\n\n\n  /**\n   * Enum for saying a value can be true, false, or either (cleaner than using a\n   * Boolean with null)\n   */\n  private enum TriState {\n    /** If value is true */\n    TRUE,\n    /** If value is false */\n    FALSE,\n    /** If value can be true or false */\n    BOTH\n  }\n\n  /**\n   * Gets the count of nodes matching the criteria\n   *\n   * @param isClass Whether the node is a class\n   * @param referenced Whether the node is referenced\n   * @return Number of matches\n   */\n  private int countOf(TriState isClass, TriState referenced) {\n    int count = 0;\n    for (JsName name : allNames.values()) {\n\n      boolean nodeIsClass = name.prototypeNames.size() > 0;\n\n      boolean classMatch = isClass == TriState.BOTH\n          || (nodeIsClass && isClass == TriState.TRUE)\n          || (!nodeIsClass && isClass == TriState.FALSE);\n\n      boolean referenceMatch = referenced == TriState.BOTH\n          || (name.referenced && referenced == TriState.TRUE)\n          || (!name.referenced && referenced == TriState.FALSE);\n\n      if (classMatch && referenceMatch && !name.externallyDefined) {\n        count++;\n      }\n    }\n    return count;\n  }\n\n\n  /**\n   * Extract a list of replacement nodes to use.\n   */\n  private List<Node> getSideEffectNodes(Node n) {\n    List<Node> subexpressions = Lists.newArrayList();\n    NodeTraversal.traverse(\n        compiler, n,\n        new GatherSideEffectSubexpressionsCallback(\n            compiler,\n            new CopySideEffectSubexpressions(compiler, subexpressions)));\n\n    List<Node> replacements =\n        Lists.newArrayListWithExpectedSize(subexpressions.size());\n    for (Node subexpression : subexpressions) {\n      replacements.add(NodeUtil.newExpr(subexpression));\n    }\n    return replacements;\n  }\n\n  /**\n   * Replace n with a simpler expression, while preserving program\n   * behavior.\n   *\n   * If the n\'s value is used, replace it with its rhs; otherwise\n   * replace it with the subexpressions that have side effects.\n   */\n  private void replaceWithRhs(Node parent, Node n) {\n    if (valueConsumedByParent(n, parent)) {\n      // parent reads from n directly; replace it with n\'s rhs + lhs\n      // subexpressions with side effects.\n      List<Node> replacements = getRhsSubexpressions(n);\n      List<Node> newReplacements = Lists.newArrayList();\n      for (int i = 0; i < replacements.size() - 1; i++) {\n        newReplacements.addAll(getSideEffectNodes(replacements.get(i)));\n      }\n      Node valueExpr = replacements.get(replacements.size() - 1);\n      valueExpr.detachFromParent();\n      newReplacements.add(valueExpr);\n      changeProxy.replaceWith(\n          parent, n, collapseReplacements(newReplacements));\n    } else if (n.isAssign() && !parent.isFor()) {\n      // assignment appears in a RHS expression.  we have already\n      // considered names in the assignment\'s RHS as being referenced;\n      // replace the assignment with its RHS.\n      // TODO(user) make the pass smarter about these cases and/or run\n      // this pass and RemoveConstantExpressions together in a loop.\n      Node replacement = n.getLastChild();\n      replacement.detachFromParent();\n      changeProxy.replaceWith(parent, n, replacement);\n    } else {\n      replaceTopLevelExpressionWithRhs(parent, n);\n    }\n  }\n\n  /**\n   * Simplify a toplevel expression, while preserving program\n   * behavior.\n   */\n  private void replaceTopLevelExpressionWithRhs(Node parent, Node n) {\n    // validate inputs\n    switch (parent.getType()) {\n      case Token.BLOCK:\n      case Token.SCRIPT:\n      case Token.FOR:\n      case Token.LABEL:\n        break;\n      default:\n        throw new IllegalArgumentException(\n            "Unsupported parent node type in replaceWithRhs " +\n            Token.name(parent.getType()));\n    }\n\n    switch (n.getType()) {\n      case Token.EXPR_RESULT:\n      case Token.FUNCTION:\n      case Token.VAR:\n        break;\n      case Token.ASSIGN:\n        Preconditions.checkArgument(parent.isFor(),\n            "Unsupported assignment in replaceWithRhs. parent: %s", Token.name(parent.getType()));\n        break;\n      default:\n        throw new IllegalArgumentException(\n            "Unsupported node type in replaceWithRhs " +\n            Token.name(n.getType()));\n    }\n\n    // gather replacements\n    List<Node> replacements = Lists.newArrayList();\n    for (Node rhs : getRhsSubexpressions(n)) {\n      replacements.addAll(getSideEffectNodes(rhs));\n    }\n\n    if (parent.isFor()) {\n      // tweak replacements array s.t. it is a single expression node.\n      if (replacements.isEmpty()) {\n        replacements.add(IR.empty());\n      } else {\n        Node expr = collapseReplacements(replacements);\n        replacements.clear();\n        replacements.add(expr);\n      }\n    }\n\n    changeProxy.replaceWith(parent, n, replacements);\n  }\n\n  /**\n   * Determine if the parent reads the value of a child expression\n   * directly.  This is true children used in predicates, RETURN\n   * statements and, rhs of variable declarations and assignments.\n   *\n   * In the case of:\n   * if (a) b else c\n   *\n   * This method returns true for "a", and false for "b" and "c": the\n   * IF expression does something special based on "a"\'s value.  "b"\n   * and "c" are effectivelly outputs.  Same logic applies to FOR,\n   * WHILE and DO loop predicates.  AND/OR/HOOK expressions are\n   * syntactic sugar for IF statements; therefore this method returns\n   * true for the predicate and false otherwise.\n   */\n  private boolean valueConsumedByParent(Node n, Node parent) {\n    if (NodeUtil.isAssignmentOp(parent)) {\n      return parent.getLastChild() == n;\n    }\n\n    switch (parent.getType()) {\n      case Token.NAME:\n      case Token.RETURN:\n        return true;\n      case Token.AND:\n      case Token.OR:\n      case Token.HOOK:\n        return parent.getFirstChild() == n;\n      case Token.FOR:\n        return parent.getFirstChild().getNext() == n;\n      case Token.IF:\n      case Token.WHILE:\n        return parent.getFirstChild() == n;\n      case Token.DO:\n        return parent.getLastChild() == n;\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Merge a list of nodes into a single expression.  The value of the\n   * new expression is determined by the last expression in the list.\n   */\n  private Node collapseReplacements(List<Node> replacements) {\n    Node expr = null;\n    for (Node rep : replacements) {\n      if (rep.isExprResult()) {\n        rep = rep.getFirstChild();\n        rep.detachFromParent();\n      }\n\n      if (expr == null) {\n        expr = rep;\n      } else {\n        expr = IR.comma(expr, rep);\n      }\n    }\n\n    return expr;\n  }\n\n  /**\n   * Extract a list of subexpressions that act as right hand sides.\n   */\n  private List<Node> getRhsSubexpressions(Node n) {\n    switch (n.getType()) {\n      case Token.EXPR_RESULT:\n        // process body\n        return getRhsSubexpressions(n.getFirstChild());\n      case Token.FUNCTION:\n        // function nodes have no rhs\n        return Collections.emptyList();\n      case Token.NAME:\n        {\n          // parent is a var node.  rhs is first child\n          Node rhs = n.getFirstChild();\n          if (rhs != null) {\n            return Lists.newArrayList(rhs);\n          } else {\n            return Collections.emptyList();\n          }\n        }\n      case Token.ASSIGN:\n        {\n          // add lhs and rhs expressions - lhs may be a complex expression\n          Node lhs = n.getFirstChild();\n          Node rhs = lhs.getNext();\n          return Lists.newArrayList(lhs, rhs);\n        }\n      case Token.VAR:\n        {\n          // recurse on all children\n          List<Node> nodes = Lists.newArrayList();\n          for (Node child : n.children()) {\n            nodes.addAll(getRhsSubexpressions(child));\n          }\n          return nodes;\n        }\n      default:\n        throw new IllegalArgumentException("AstChangeProxy::getRhs " + n);\n    }\n  }\n}', 'tree': 'body IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isAssign_ter ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier n_ter ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member createNameInformation_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition MemberReference qualifier loc3 ^ ^ member isPrototype_ter ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member prototypeClass_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member prototypeProperty_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member recordPrototypeSet_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member recordSet_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isCall_ter ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier n_ter ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member createNameInformation_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier refNodes_ter ^ ^ arguments ClassCreator type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference member n_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MethodInvocation qualifier parent_ter ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ', 'prob': [0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'mode': 0, 'line': 635, 'isa': False, 'fl_score': 1}]
before@0 batch0 x: 0: root ^  ; []
after@0 batch0 x: 0: root ^  ; []
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root Literal-Literal value false_ter ^ ^ ^  ^ ^ ; ['copy-Literal']
copynode 0:  root member-member getName_ter ^ ^  ^ ^ ; ['copy-member']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  ^ ^ ; ['copy-MemberReference']
before@1 batch0 x: -12.138826370239258: root MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  ^ ^  ; ['copy-MemberReference']
after@1 batch0 x: -12.138826370239258: root MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  ^ ^  ; ['copy-MemberReference']
copynode -0.11443393677473068:  root modified ^ Literal-Literal value false_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-Literal']
copynode -0.11443393677473068:  root modified ^ LocalVariableDeclaration ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration']
copynode -0.11443393677473068:  root modified ^ member-member getName_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -0.11443393677473068:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -2.2268760204315186:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -2.2268760204315186:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -2.2268760204315186:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -0.11443393677473068:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -2.2268760204315186:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -0.11443393677473068:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -2.2268760204315186:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter']
copynode -2.2268760204315186:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -2.2268760204315186:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -2.2268760204315186:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter']
copynode -2.2268760204315186:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -0.11443393677473068:  root modified ^ control ^ ^ ; ['root -> modified', 'root -> control']
copynode -2.2268760204315186:  root add ^ Statement_ter ^ ^ ; ['root -> add', 'root -> Statement_ter']
copynode -0.11443393677473068:  root modified ^ parameters ^ ^ ; ['root -> modified', 'root -> parameters']
copynode -0.11443393677473068:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -0.11443393677473068:  root modified ^ member-member loc4 ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -10.892182350158691:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -11.114768028259277:  root Literal-Literal value false_ter ^ ^ ^  value ^ ^ ^ ; ['copy-Literal', 'Literal -> value']
copynode -11.09774112701416:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -11.271506309509277:  root member-member getName_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown']
copynode -10.910069465637207:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -11.778731346130371:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -12.138826370239258:  root MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member']
copynode -12.138826370239258:  root MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier member']
copynode -11.271506309509277:  root member-member getName_ter ^ ^  createNameInformation_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -10.910069465637207:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -11.778731346130371:  root StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member prototypeClass_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member prototypeProperty_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member recordPrototypeSet_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.778731346130371:  root StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member recordSet_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.271506309509277:  root member-member getName_ter ^ ^  meth0 ^ ^ ^ ; ['copy-member', 'member -> meth0']
copynode -11.778731346130371:  root StatementExpression expression MethodInvocation qualifier refNodes_ter ^ ^ arguments ClassCreator type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference member n_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MethodInvocation qualifier parent_ter ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.271506309509277:  root member-member getName_ter ^ ^  getName_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.271506309509277:  root member-member getName_ter ^ ^  get_ter ^ ^ ^ ; ['copy-member', 'member -> get_ter']
copynode -11.271506309509277:  root member-member getName_ter ^ ^  isCall_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.271506309509277:  root member-member getName_ter ^ ^  add_ter ^ ^ ^ ; ['copy-member', 'member -> add_ter']
copynode -11.271506309509277:  root member-member getName_ter ^ ^  recordPrototypeSet_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.271506309509277:  root member-member getName_ter ^ ^  createNameInformation_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.114768028259277:  root Literal-Literal value false_ter ^ ^ ^  prefix_operators ^ value ^ ^ ^ ; ['copy-Literal', 'Literal -> prefix_operators value']
copynode -11.271506309509277:  root member-member getName_ter ^ ^  recordSet_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.138826370239258:  root MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -12.138826370239258:  root MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> selectors member']
copynode -11.114768028259277:  root Literal-Literal value false_ter ^ ^ ^  selectors ^ value ^ ^ ^ ; ['copy-Literal', 'Literal -> selectors value']
copynode -11.114768028259277:  root Literal-Literal value false_ter ^ ^ ^  value false_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -11.114768028259277:  root Literal-Literal value false_ter ^ ^ ^  prefix_operators ^ selectors ^ value ^ ^ ^ ; ['copy-Literal', 'Literal -> prefix_operators selectors value']
copynode -12.138826370239258:  root MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -11.114768028259277:  root Literal-Literal value false_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -12.138826370239258:  root MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -12.138826370239258:  root MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -11.114768028259277:  root Literal-Literal value false_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -10.892182350158691:  root IfStatement condition MemberReference qualifier loc3 ^ ^ member isPrototype_ter ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member prototypeClass_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member prototypeProperty_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member recordPrototypeSet_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member recordSet_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.114768028259277:  root Literal-Literal value false_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -10.892182350158691:  root IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier refNodes_ter ^ ^ arguments ClassCreator type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference member n_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MethodInvocation qualifier parent_ter ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -10.892182350158691:  root IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isCall_ter ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier n_ter ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member createNameInformation_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier refNodes_ter ^ ^ arguments ClassCreator type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference member n_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MethodInvocation qualifier parent_ter ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -10.892182350158691:  root IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier refNodes_ter ^ ^ arguments ClassCreator type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference member n_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MethodInvocation qualifier parent_ter ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -10.892182350158691:  root IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition MemberReference qualifier loc3 ^ ^ member isPrototype_ter ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member prototypeClass_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member prototypeProperty_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member recordPrototypeSet_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member recordSet_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.138826370239258:  root MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -10.892182350158691:  root IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isAssign_ter ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier n_ter ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member createNameInformation_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition MemberReference qualifier loc3 ^ ^ member isPrototype_ter ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member prototypeClass_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member prototypeProperty_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member recordPrototypeSet_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member recordSet_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ else_statement IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isCall_ter ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier n_ter ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member createNameInformation_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier refNodes_ter ^ ^ arguments ClassCreator type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference member n_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MethodInvocation qualifier parent_ter ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -10.892182350158691:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -11.778731346130371:  root StatementExpression unknown ^ ^ ^ ; ['root -> StatementExpression', 'start -> unknown']
copynode -11.09774112701416:  root ReturnStatement loc2 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -12.138826370239258:  root MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier selectors member']
copynode -11.09774112701416:  root ReturnStatement loc3 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -10.910069465637207:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -10.892182350158691:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -11.09774112701416:  root ReturnStatement loc3 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.09774112701416:  root ReturnStatement loc2 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.09774112701416:  root ReturnStatement loc4 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -10.892182350158691:  root IfStatement condition ^ then_statement ^ else_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement else_statement']
copynode -12.138826370239258:  root MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  postfix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators selectors member']
copynode -10.910069465637207:  root return_type loc2 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.09774112701416:  root ReturnStatement unknown ^ ^ ^ ; ['root -> ReturnStatement', 'start -> unknown']
copynode -11.114768028259277:  root Literal-Literal value false_ter ^ ^ ^  loc4 ^ ^ ^ ; ['copy-Literal', 'copy-VariableDeclarator']
copynode -11.114768028259277:  root Literal-Literal value false_ter ^ ^ ^  loc3 ^ ^ ^ ; ['copy-Literal', 'copy-VariableDeclarator']
copynode -10.910069465637207:  root return_type loc2 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.910069465637207:  root return_type loc3 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.910069465637207:  root return_type loc3 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.910069465637207:  root return_type loc4 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -11.778731346130371:  root StatementExpression label ^ expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> label expression']
copynode -11.778731346130371:  root StatementExpression loc2 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -11.778731346130371:  root StatementExpression loc3 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -11.778731346130371:  root StatementExpression loc4 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -11.778731346130371:  root StatementExpression loc3 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
before@2 batch0 x: -32.10702610015869: root StatementExpression loc3 ^ ^ ^  ; ['root -> StatementExpression', 'copy-VariableDeclarator']
after@2 batch0 x: -32.10702610015869: root StatementExpression loc3 ^ ^ ^  ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -0.8978767916560173:  root modified ^ Literal-Literal value false_ter ^ ^ ^  value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value']
copynode -1.5951325222849846:  root modified ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -1.6217136904597282:  root modified ^ member-member getName_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -2.6520256400108337:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -2.537020854651928:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -2.537020854651928:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -3.5075420141220093:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -1.6217136904597282:  root modified ^ member-member getName_ter ^ ^  createNameInformation_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -5.331667423248291:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -5.589723281562328:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -1.6217136904597282:  root modified ^ member-member getName_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -1.6217136904597282:  root modified ^ member-member getName_ter ^ ^  recordPrototypeSet_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.5075420141220093:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member prototypeClass_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member prototypeProperty_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member recordPrototypeSet_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.6217136904597282:  root modified ^ member-member getName_ter ^ ^  isCall_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.5075420141220093:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member recordSet_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.5075420141220093:  root add ^ StatementExpression expression MethodInvocation qualifier refNodes_ter ^ ^ arguments ClassCreator type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference member n_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MethodInvocation qualifier parent_ter ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.6217136904597282:  root modified ^ member-member getName_ter ^ ^  createNameInformation_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -0.8978767916560173:  root modified ^ Literal-Literal value false_ter ^ ^ ^  prefix_operators ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value']
copynode -1.6217136904597282:  root modified ^ member-member getName_ter ^ ^  recordSet_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.5951325222849846:  root modified ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -1.6217136904597282:  root modified ^ member-member getName_ter ^ ^  isAssign_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.6217136904597282:  root modified ^ member-member getName_ter ^ ^  getName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.6217136904597282:  root modified ^ member-member getName_ter ^ ^  debug_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> debug_ter']
copynode -7.902803659439087:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> End']
copynode -7.435732126235962:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -0.8978767916560173:  root modified ^ Literal-Literal value false_ter ^ ^ ^  selectors ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> selectors value']
copynode -1.5951325222849846:  root modified ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member createNameInformation_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -1.5951325222849846:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier n_ter ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -1.5951325222849846:  root modified ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member createNameInformation_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -2.537020854651928:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -8.109543085098267:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -8.626175165176392:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> End']
copynode -8.634193658828735:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -8.011110544204712:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -1.5951325222849846:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier n_ter ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -2.537020854651928:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -0.8978767916560173:  root modified ^ Literal-Literal value false_ter ^ ^ ^  prefix_operators ^ selectors ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators selectors value']
copynode -9.354097060859203:  root modified ^ control EnhancedForControl ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl']
copynode -0.8978767916560173:  root modified ^ Literal-Literal value false_ter ^ ^ ^  value false_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -7.435732126235962:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier n_ter ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.44801926612854:  root add ^ Statement_ter ^ ^ ; ['root -> add', 'root -> Statement_ter', 'root -> End']
copynode -7.435732126235962:  root add ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member createNameInformation_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -2.537020854651928:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -5.331667423248291:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -7.435732126235962:  root add ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member createNameInformation_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -2.537020854651928:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -10.120687179267406:  root modified ^ parameters FormalParameter ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter']
copynode -2.537020854651928:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -5.589723281562328:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member recordSet_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -7.435732126235962:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier n_ter ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -5.589723281562328:  root modified ^ StatementExpression expression MethodInvocation qualifier refNodes_ter ^ ^ arguments ClassCreator type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference member n_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MethodInvocation qualifier parent_ter ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -5.589723281562328:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member prototypeClass_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member prototypeProperty_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member recordPrototypeSet_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -10.413794212043285:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -1.5951325222849846:  root modified ^ LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -0.8978767916560173:  root modified ^ Literal-Literal value false_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -5.331667423248291:  root add ^ ReturnStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement']
copynode -10.590056113898754:  root modified ^ member-member loc4 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -0.8978767916560173:  root modified ^ Literal-Literal value false_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -10.89311977440957:  root IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -11.41941200196743:  root member-member getName_ter ^ ^  unknown ^ ^ StatementExpression ^ ^ ; ['copy-member', 'start -> unknown', 'root -> StatementExpression']
copynode -11.285416826605797:  root ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -11.118239879608154:  root Literal-Literal value false_ter ^ ^ ^  value true_ter ^ ^ ^ ^ ; ['copy-Literal', 'Literal -> value', 'value -> true_ter']
copynode -0.8978767916560173:  root modified ^ Literal-Literal value false_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -5.331667423248291:  root add ^ ReturnStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> BreakStatement_ter']
copynode -10.89311977440957:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -5.331667423248291:  root add ^ ReturnStatement_ter ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ContinueStatement_ter']
copynode -11.949299231171608:  root StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -1.5951325222849846:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -7.902803659439087:  root add ^ BreakStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> StatementExpression']
copynode -11.118239879608154:  root Literal-Literal value false_ter ^ ^ ^  value false_ter ^ ^ ^ ^ ; ['copy-Literal', 'Literal -> value', 'value -> false_ter']
copynode -8.011110544204712:  root add ^ control ForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl']
copynode -5.331667423248291:  root add ^ ReturnStatement_ter ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement_ter']
copynode -2.537020854651928:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -7.435732126235962:  root add ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -11.285416826605797:  root ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -1.5951325222849846:  root modified ^ LocalVariableDeclaration modifiers ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators']
copynode -7.435732126235962:  root add ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -11.446645975112915:  root return_type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -12.852680206298828:  root MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc3 ^ ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -10.590056113898754:  root modified ^ member-member loc4 ^ ^  getParent_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.537020854651928:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier selectors member']
copynode -11.118239879608154:  root Literal-Literal value false_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['copy-Literal', 'Literal -> value', 'value -> null_ter']
copynode -8.011110544204712:  root add ^ control ForControl_ter ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl_ter']
copynode -11.446645975112915:  root return_type ReferenceType name NameInformation_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -10.89311977440957:  root IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -5.331667423248291:  root add ^ ReturnStatement_ter ^ control ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> control']
copynode -7.902803659439087:  root add ^ BreakStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> IfStatement']
copynode -5.331667423248291:  root add ^ ReturnStatement_ter ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement']
copynode -2.6520256400108337:  root add ^ IfStatement condition MemberReference qualifier loc3 ^ ^ member isPrototype_ter ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member prototypeClass_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member prototypeProperty_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member recordPrototypeSet_ter ^ ^ ^ ^ ^ ^ ^ ^ else_statement BlockStatement statements StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member recordSet_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -11.446645975112915:  root return_type ReferenceType name Node_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -11.446645975112915:  root return_type ReferenceType name JsName_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -8.626175165176392:  root add ^ ContinueStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> StatementExpression']
copynode -2.6520256400108337:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier refNodes_ter ^ ^ arguments ClassCreator type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference member n_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MethodInvocation qualifier parent_ter ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -2.6520256400108337:  root add ^ IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isCall_ter ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier n_ter ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member createNameInformation_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier refNodes_ter ^ ^ arguments ClassCreator type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference member n_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MethodInvocation qualifier parent_ter ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -10.590056113898754:  root modified ^ member-member loc4 ^ ^  getName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> getName_ter']
copynode -11.446645975112915:  root return_type ReferenceType name ^ arguments ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name arguments']
copynode -9.44801926612854:  root add ^ Statement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> Statement_ter', 'root -> StatementExpression']
copynode -12.818029463291168:  root MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'member -> loc3']
before@3 batch0 x: -13.822887480258942: root MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  member loc3 ^ ^ ^ ^  ; ['copy-MemberReference', 'MemberReference -> member', 'member -> loc3']
after@3 batch0 x: -13.822887480258942: root MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  member loc3 ^ ^ ^ ^  ; ['copy-MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -0.9023030390962958:  root modified ^ Literal-Literal value false_ter ^ ^ ^  value true_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> true_ter']
copynode -1.605221682228148:  root modified ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -1.7469703182578087:  root modified ^ member-member getName_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -0.9023030390962958:  root modified ^ Literal-Literal value false_ter ^ ^ ^  value false_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> false_ter']
copynode -3.000682197511196:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc3 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -2.6527910776785575:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -2.6527910776785575:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -3.7087026834487915:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -0.9023030390962958:  root modified ^ Literal-Literal value false_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> null_ter']
copynode -4.670641236007214:  root modified ^ member-member getName_ter ^ ^  createNameInformation_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -0.9023030390962958:  root modified ^ Literal-Literal value false_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -3.545344762504101:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -3.545344762504101:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -2.6527910776785575:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -5.614848516881466:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -6.039046339690685:  root modified ^ member-member getName_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
copynode -3.7087026834487915:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -3.545344762504101:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -3.545344762504101:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  member parent_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.138782553374767:  root modified ^ member-member getName_ter ^ ^  recordPrototypeSet_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.259996943175793:  root modified ^ member-member getName_ter ^ ^  isCall_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.249679923057556:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member prototypeClass_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member prototypeProperty_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member recordPrototypeSet_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -3.545344762504101:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  member n_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.303308844566345:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member recordSet_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.40154492855072:  root add ^ StatementExpression expression MethodInvocation qualifier refNodes_ter ^ ^ arguments ClassCreator type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference member n_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MethodInvocation qualifier parent_ter ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -3.545344762504101:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  member loc5 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc5']
copynode -6.555841498076916:  root modified ^ member-member getName_ter ^ ^  createNameInformation_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -3.545344762504101:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.7230983301997185:  root modified ^ Literal-Literal value false_ter ^ ^ ^  prefix_operators -_ter ^ ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter']
copynode -6.818069510161877:  root modified ^ member-member getName_ter ^ ^  recordSet_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.882086925208569:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter']
copynode -3.545344762504101:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.919958166778088:  root modified ^ member-member getName_ter ^ ^  isAssign_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -2.6527910776785575:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.1727185770869255:  root modified ^ member-member getName_ter ^ ^  getName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -3.000682197511196:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc2 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc2']
copynode -3.545344762504101:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -2.6527910776785575:  root add ^ IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isCall_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -2.6527910776785575:  root add ^ IfStatement condition MemberReference qualifier loc3 ^ ^ member isPrototype_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.479069761931896:  root modified ^ member-member getName_ter ^ ^  debug_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> debug_ter', 'root -> End']
copynode -5.614848516881466:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -3.7087026834487915:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -3.545344762504101:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  member n_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -2.6527910776785575:  root add ^ IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -0.9023030390962958:  root modified ^ Literal-Literal value false_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 1_ter']
copynode -3.000682197511196:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier parent_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -2.6527910776785575:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -2.6527910776785575:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.973219156265259:  root add ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -8.124743036925793:  root modified ^ Literal-Literal value false_ter ^ ^ ^  selectors MethodInvocation ^ ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> selectors value', 'selectors -> MethodInvocation']
copynode -0.9023030390962958:  root modified ^ Literal-Literal value false_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 0_ter']
copynode -3.000682197511196:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc1 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc1']
copynode -8.281475715339184:  root modified ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member createNameInformation_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -8.285777263343334:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier n_ter ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -2.6527910776785575:  root add ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -8.41412466019392:  root modified ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member createNameInformation_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -3.000682197511196:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -3.000682197511196:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -3.000682197511196:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc6 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc6']
copynode -3.000682197511196:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier n_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -8.554000072181225:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  selectors ArraySelector ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector']
copynode -8.796949744224548:  root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -0.9023030390962958:  root modified ^ Literal-Literal value false_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 2_ter']
copynode -8.946740321815014:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier n_ter ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -3.000682197511196:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc4 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc4']
copynode -3.000682197511196:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc5 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc5']
copynode -3.7087026834487915:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -9.20443730801344:  root modified ^ Literal-Literal value false_ter ^ ^ ^  prefix_operators -_ter ^ ^ selectors ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators selectors value', 'prefix_operators -> -_ter']
copynode -8.616160213947296:  root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -9.364465208724141:  root modified ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -9.410183005034924:  root modified ^ Literal-Literal value false_ter ^ ^ ^  value false_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal', 'root -> End']
copynode -9.165707759559155:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  prefix_operators !_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -8.78157764673233:  root add ^ AssertStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation']
copynode -9.592529468238354:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc3 ^ ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member', 'qualifier -> loc3']
copynode -3.7087026834487915:  root add ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -6.249679923057556:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member prototypeClass_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member prototypeProperty_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member recordPrototypeSet_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -6.303308844566345:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member recordSet_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -6.40154492855072:  root add ^ StatementExpression expression MethodInvocation qualifier refNodes_ter ^ ^ arguments ClassCreator type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference member n_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MethodInvocation qualifier parent_ter ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -9.450414419174194:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier n_ter ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -6.249679923057556:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member prototypeClass_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member prototypeProperty_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member recordPrototypeSet_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -9.576171636581421:  root add ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member createNameInformation_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -8.616160213947296:  root add ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -6.303308844566345:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member recordSet_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -9.779457092285156:  root add ^ ReturnStatement_ter ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -8.78157764673233:  root add ^ AssertStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MemberReference']
copynode -10.002385310828686:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  postfix_operators ++_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -8.78157764673233:  root add ^ AssertStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MethodInvocation']
copynode -8.616160213947296:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -10.370763950049877:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member recordSet_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.40154492855072:  root add ^ StatementExpression expression MethodInvocation qualifier refNodes_ter ^ ^ arguments ClassCreator type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference member n_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MethodInvocation qualifier parent_ter ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -10.40040224045515:  root modified ^ StatementExpression expression MethodInvocation qualifier refNodes_ter ^ ^ arguments ClassCreator type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ arguments MemberReference member loc4 ^ ^ ^ MemberReference member n_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MethodInvocation qualifier parent_ter ^ ^ member getParent_ter ^ ^ ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -10.402668170630932:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member prototypeClass_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member prototypeProperty_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member recordPrototypeSet_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -9.863708257675171:  root add ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member createNameInformation_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -10.172485522925854:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
before@4 batch0 x: -10.483605019748211: root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
after@4 batch0 x: -10.483605019748211: root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -1.4632220258936286:  root modified ^ Literal-Literal value false_ter ^ ^ ^  value true_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> true_ter', 'root -> End']
copynode -1.6053730894782348:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -1.9108310332521796:  root modified ^ Literal-Literal value false_ter ^ ^ ^  value false_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> false_ter', 'root -> End']
copynode -3.552002245967742:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.058149676769972:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown']
copynode -4.14264255668968:  root modified ^ Literal-Literal value false_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -3.841445028781891:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.680379449389875:  root modified ^ Literal-Literal value false_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> <string>_ter', 'root -> End']
copynode -3.4632819243124686:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.829456143081188:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4', 'root -> End']
copynode -3.4632819243124686:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.837566070258617:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3', 'root -> End']
copynode -3.841445028781891:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.058149676769972:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc3 ^ ^ member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'member -> loc4']
copynode -1.6053730894782348:  root modified ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -3.4632819243124686:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -3.841445028781891:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.4632819243124686:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -5.7782376781105995:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.024137789790984:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -1.6053730894782348:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -3.552002245967742:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.058149676769972:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc3 ^ ^ member parent_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member']
copynode -6.046362996101379:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -6.067554168403149:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2', 'root -> End']
copynode -6.069204740226269:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  member parent_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -3.058149676769972:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc3 ^ ^ member n_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member']
copynode -3.058149676769972:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc3 ^ ^ member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'member -> loc1']
copynode -3.4632819243124686:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -6.321991376578808:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  member n_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -3.058149676769972:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc3 ^ ^ member prototypeProperty_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member']
copynode -1.6053730894782348:  root modified ^ LocalVariableDeclaration type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -6.497302941977978:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  member loc5 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc5', 'root -> End']
copynode -5.024137789790984:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -3.058149676769972:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc3 ^ ^ member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'member -> loc3']
copynode -3.4632819243124686:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.576412133872509:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -3.058149676769972:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc3 ^ ^ member prototypeClass_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member']
copynode -3.4632819243124686:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -3.841445028781891:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.024137789790984:  root add ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -3.058149676769972:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc3 ^ ^ member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'member -> loc2']
copynode -3.058149676769972:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc3 ^ ^ member isPrototype_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member']
copynode -1.6053730894782348:  root modified ^ LocalVariableDeclaration type ReferenceType name ^ arguments ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments']
copynode -6.898865478113294:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> ReferenceType']
copynode -6.91211312264204:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -5.024137789790984:  root add ^ IfStatement condition MemberReference prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -6.981882626598235:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -3.4632819243124686:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -3.4632819243124686:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member']
copynode -7.215541534125805:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -1.6053730894782348:  root modified ^ LocalVariableDeclaration type ReferenceType name ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name']
copynode -6.742026777938008:  root modified ^ Literal-Literal value false_ter ^ ^ ^  prefix_operators -_ter ^ ^ value true_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter', 'value -> true_ter']
copynode -7.534985803067684:  root modified ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -7.42816787440097:  root add ^ IfStatement condition MemberReference qualifier loc3 ^ ^ member isPrototype_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.668245725333691:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  member n_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -3.4632819243124686:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member']
copynode -7.423718030040618:  root add ^ IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isCall_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.793282805941999:  root modified ^ Literal-Literal value false_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 1_ter', 'root -> End']
copynode -1.6053730894782348:  root modified ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -7.665497899055481:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -7.209350906312466:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc2', 'start -> unknown']
copynode -7.7398553438833915:  root add ^ IfStatement condition MethodInvocation qualifier n_ter ^ ^ member isAssign_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -6.742026777938008:  root modified ^ Literal-Literal value false_ter ^ ^ ^  prefix_operators -_ter ^ ^ value false_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter', 'value -> false_ter']
copynode -7.825865323131438:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.931671673839446:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -8.190808593295515:  root modified ^ Literal-Literal value false_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -3.841445028781891:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -8.189289696514606:  root modified ^ Literal-Literal value false_ter ^ ^ ^  selectors MethodInvocation arguments ^ member ^ ^ ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> selectors value', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -1.6053730894782348:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -7.812909446656704:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier parent_ter ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -8.346678311412688:  root add ^ IfStatement condition This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors']
copynode -8.924331008456647:  root modified ^ Literal-Literal value false_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 2_ter', 'root -> End']
copynode -8.770889230072498:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  selectors ArraySelector index ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index']
copynode -8.213743530213833:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc1', 'start -> unknown']
copynode -6.742026777938008:  root modified ^ Literal-Literal value false_ter ^ ^ ^  prefix_operators -_ter ^ ^ value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter', 'value -> <string>_ter']
copynode -3.841445028781891:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -9.173098683357239:  root add ^ StatementExpression expression This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors']
copynode -8.639368377625942:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc6 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc6', 'start -> unknown']
before@5 batch0 x: -9.24003853648901: root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc6 ^ ^ member unknown ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc6', 'start -> unknown']
after@5 batch0 x: -9.24003853648901: root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc6 ^ ^ member unknown ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc6', 'start -> unknown']
copynode -1.6611263466038508:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator']
copynode -3.7619692496955395:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'root -> End']
copynode -3.652302528207656:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -3.652302528207656:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -5.409557919949293:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc3 ^ ^ member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'member -> loc4', 'root -> End']
copynode -4.837590152805205:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3']
copynode -5.0653151869773865:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -5.610673005168792:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -5.509894554779748:  root modified ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator']
copynode -4.599782824516296:  root add ^ StatementExpression expression MethodInvocation qualifier refNodes_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.652302528207656:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.803601080959197:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -5.810827441513538:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -4.599782824516296:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3']
copynode -4.788740927760955:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3']
copynode -6.0276335291564465:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc3 ^ ^ member parent_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'root -> End']
copynode -6.046775664610323:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -5.882422630951623:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator']
copynode -5.950617844646331:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -5.679664433002472:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3']
copynode -6.207740645855665:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc3 ^ ^ member n_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'root -> End']
copynode -6.294914823025465:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc3 ^ ^ member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'member -> loc1', 'root -> End']
copynode -5.847423786704894:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.422857146710157:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc3 ^ ^ member prototypeProperty_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'root -> End']
copynode -4.788740927760955:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.506239111011382:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -6.520378690212965:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc3 ^ ^ member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'member -> loc3', 'root -> End']
copynode -6.453103249237756:  root modified ^ LocalVariableDeclaration type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator']
copynode -3.652302528207656:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -6.638511519879103:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc3 ^ ^ member prototypeClass_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'root -> End']
copynode -6.729163224285003:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.837496619671583:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc3 ^ ^ member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'member -> loc2', 'root -> End']
copynode -6.857787948101759:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc3 ^ ^ member isPrototype_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'root -> End']
copynode -6.812291920185089:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.599782824516296:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.899104103969876:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name JsName_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -6.321955496852752:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc3']
copynode -6.813871676509734:  root add ^ IfStatement condition MemberReference qualifier loc3 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -7.0607665129355155:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -6.863933270142297:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ arguments ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name']
copynode -7.133120591228362:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter']
copynode -7.191662842815276:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter']
copynode -4.599782824516296:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1']
copynode -4.788740927760955:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1']
copynode -4.788740927760955:  root add ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2']
copynode -4.837590152805205:  root add ^ IfStatement condition MethodInvocation qualifier loc4 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc4']
copynode -7.3787794429808855:  root modified ^ Literal-Literal value false_ter ^ ^ ^  prefix_operators -_ter ^ ^ value true_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter', 'value -> true_ter', 'root -> End']
copynode -6.563513810222503:  root add ^ IfStatement condition MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -5.0653151869773865:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -4.837590152805205:  root add ^ IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -4.599782824516296:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2']
copynode -4.788740927760955:  root add ^ IfStatement condition MethodInvocation qualifier parent_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.882422630951623:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -5.0653151869773865:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -7.535712170531042:  root modified ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -4.788740927760955:  root add ^ IfStatement condition MethodInvocation qualifier refNodes_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.837590152805205:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
copynode -4.599782824516296:  root add ^ StatementExpression expression MethodInvocation qualifier parent_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -7.338020031616907:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name']
copynode -7.672657782619353:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -5.509894554779748:  root modified ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -4.788740927760955:  root add ^ IfStatement condition MethodInvocation qualifier loc4 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc4']
copynode -5.0653151869773865:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -4.837590152805205:  root add ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2']
copynode -3.652302528207656:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -6.563513810222503:  root add ^ IfStatement condition MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -7.884622775018215:  root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc2', 'start -> unknown', 'root -> End']
before@6 batch0 x: -7.885109803901287: root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc2 ^ ^ member unknown ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc2', 'start -> unknown', 'root -> End']
after@6 batch0 x: -7.885109803901287: root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc2 ^ ^ member unknown ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc2', 'start -> unknown', 'root -> End']
copynode -1.6640178314846708:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -4.37923952419078:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -4.885106588189956:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -5.51437186676776:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown']
copynode -5.629127835200052:  root modified ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -5.597435176372528:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.726441884820815:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -6.102650155589799:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -6.131425470113754:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown']
copynode -6.550307926998357:  root modified ^ LocalVariableDeclaration type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -5.710144758224487:  root add ^ StatementExpression expression MethodInvocation qualifier refNodes_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -6.077192691562232:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -4.37923952419078:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -5.804949352459516:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc3 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc3']
copynode -4.885106588189956:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -5.956379055976868:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference']
copynode -5.597435176372528:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.861128270626068:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -6.4152486272505485:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -6.513139090908226:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.956605166720692:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -6.077192691562232:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier ^ member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.978668982570525:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference']
copynode -6.99159800488269:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc3', 'selectors -> MethodInvocation']
copynode -5.978668982570525:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'copy-arguments']
copynode -5.61256252793828:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -5.61256252793828:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc3 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'qualifier -> loc3']
copynode -7.037364313786384:  root add ^ IfStatement condition MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown']
copynode -6.617221380060073:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -7.072541599438409:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ arguments TypeArgument ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument']
copynode -6.455847556178924:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -6.765570285206195:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -7.311428005283233:  root add ^ IfStatement condition MethodInvocation qualifier loc4 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc4', 'start -> unknown']
copynode -7.068105496407952:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ qualifier loc3 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc3']
copynode -6.917335629463196:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -7.438672000949737:  root add ^ IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -7.523170058891992:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators', 'root -> End']
copynode -4.37923952419078:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'copy-operandl']
copynode -7.539785802364349:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -5.710144758224487:  root add ^ StatementExpression expression MethodInvocation qualifier refNodes_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -5.956379055976868:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation']
copynode -7.594016964023467:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown']
copynode -5.956379055976868:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal']
copynode -7.723394100830774:  root modified ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators', 'root -> End']
copynode -5.726441884820815:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -7.674009217356797:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.455847556178924:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -6.4152486272505485:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression']
copynode -7.416038388793822:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.726441884820815:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference']
copynode -7.746745998447295:  root add ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown']
copynode -7.745552718639374:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -7.606083189413766:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name', 'copy-declarators']
before@7 batch0 x: -7.885109803901287: root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc2 ^ ^ member unknown ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc2', 'start -> unknown', 'root -> End']
after@7 batch0 x: -7.885109803901287: root modified ^ MemberReference-MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^  qualifier loc2 ^ ^ member unknown ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc2', 'start -> unknown', 'root -> End']
copynode -1.666002548110555:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4']
copynode -4.590602511947509:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.6315718682453735:  root modified ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4']
copynode -4.590602511947509:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.176706547325011:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.176706547325011:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.105164875785704:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4']
copynode -6.206622205674648:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'root -> End']
copynode -5.609613107924815:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'root -> End']
copynode -6.096414978092071:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.552963678303058:  root modified ^ LocalVariableDeclaration type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4']
copynode -5.927049964666367:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -6.678181359486189:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc3', 'start -> unknown']
copynode -5.609613107924815:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'root -> StatementExpression']
copynode -6.978650302218739:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators', 'root -> End']
copynode -6.890707314014435:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -6.997023252246436:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc3 ^ ^ member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -6.978433809650596:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -6.612085461616516:  root add ^ StatementExpression expression MethodInvocation qualifier refNodes_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.765862941741943:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.075015360896941:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc3', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.612085461616516:  root add ^ StatementExpression expression MethodInvocation qualifier refNodes_ter ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.00858824927127:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.090089613979217:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'copy-arguments', 'start -> unknown']
copynode -6.62011399626499:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -6.663253510778304:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.730951572244521:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.24846103269374:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.765862941741943:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.264925474708434:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.255419169829111:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ arguments TypeArgument pattern_type ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> pattern_type']
copynode -7.632626935839653:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -7.479722954274621:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc3', 'start -> unknown']
copynode -5.609613107924815:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -7.72199010848999:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value']
copynode -7.190411800926086:  root add ^ IfStatement condition MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'root -> End']
copynode -7.490331828594208:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.124193420691881:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown', 'arguments -> MemberReference']
copynode -7.882174586222391:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name', 'copy-declarators', 'root -> End']
copynode -7.869270473718643:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -7.775800818984862:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -7.739796748792287:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -7.51714103895938:  root add ^ IfStatement condition MethodInvocation qualifier parent_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -5.927049964666367:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -7.00858824927127:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.153339734359179:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc3 ^ ^ arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'qualifier -> loc3', 'copy-arguments']
copynode -7.402790936117526:  root add ^ IfStatement condition MethodInvocation qualifier loc4 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc4', 'start -> unknown', 'root -> End']
copynode -7.153339734359179:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc3 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'qualifier -> loc3', 'arguments -> MemberReference']
before@8 batch0 x: -8.222790828032885: root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc3 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'qualifier -> loc3', 'arguments -> MemberReference']
after@8 batch0 x: -8.222790828032885: root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc3 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'qualifier -> loc3', 'arguments -> MemberReference']
copynode -1.6693199768633349:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation']
copynode -1.6693199768633349:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer Cast ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> Cast']
copynode -4.994404221361037:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -5.636621007506619:  root modified ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation']
copynode -5.6987709947279654:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier loc3 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -6.049052471702453:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier loc3 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -6.110274701888557:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation']
copynode -5.7307770200422965:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -6.557651048569824:  root modified ^ LocalVariableDeclaration type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation']
copynode -1.6693199768633349:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer This ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> This']
copynode -6.401803994958755:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -1.6693199768633349:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> TernaryExpression']
copynode -1.6693199768633349:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer ClassCreator ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> ClassCreator']
copynode -6.853815483336803:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -6.794207679049578:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc3', 'start -> unknown', 'root -> End']
copynode -1.6693199768633349:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> BinaryOperation']
copynode -6.745352238416672:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End']
copynode -6.401803994958755:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -7.133095247147139:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown']
copynode -7.645262872145395:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ arguments TypeArgument pattern_type ?_ter ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> pattern_type', 'pattern_type -> ?_ter']
copynode -7.517398623225745:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'value -> MethodInvocation']
copynode -4.994404221361037:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -1.6693199768633349:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MemberReference']
copynode -7.687246727233287:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'root -> ReturnStatement_ter', 'root -> End']
copynode -7.363622963428497:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments MemberReference qualifier loc3 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -7.420944536512252:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ arguments MemberReference qualifier loc3 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -7.388654112815857:  root add ^ StatementExpression expression MethodInvocation qualifier refNodes_ter ^ ^ arguments MemberReference qualifier loc3 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -7.522123480623122:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc3 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3']
copynode -7.006231538951397:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown']
copynode -7.57005926448619:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc3 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3']
copynode -7.679403401853051:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc3', 'start -> unknown', 'root -> End']
copynode -6.745352238416672:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc3 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> MemberReference']
copynode -7.473777825420257:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -4.994404221361037:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member parent_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.994404221361037:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc5 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc5']
copynode -7.968317607825156:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -4.994404221361037:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc4 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -7.8440958764986135:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
before@9 batch0 x: -8.103886326833162: root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
after@9 batch0 x: -8.103886326833162: root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -1.720660780367325:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -1.720660780367325:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.340491880473564:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer Cast type ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> Cast', 'Cast -> type expression']
copynode -5.438952887838241:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr']
copynode -1.720660780367325:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.69150298628665:  root modified ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.166586678053136:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -1.720660780367325:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.76748015958583:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown']
copynode -6.2892914362601005:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr']
copynode -6.610311174808885:  root modified ^ LocalVariableDeclaration type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.131378712540027:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown']
copynode -6.9631727829546435:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer This selectors ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> This', 'This -> selectors']
copynode -7.012111057338188:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -7.065950740870903:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer ClassCreator type ^ arguments ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> ClassCreator', 'ClassCreator -> type arguments']
copynode -1.720660780367325:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'copy-MethodInvocation']
copynode -1.720660780367325:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -7.087794395571109:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -1.720660780367325:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -7.009830737893935:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -7.345767845210503:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -1.720660780367325:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -7.588398426771164:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc3 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'start -> unknown']
copynode -5.76748015958583:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member']
copynode -5.69150298628665:  root modified ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.664845134408097:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ arguments TypeArgument pattern_type ?_ter ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> pattern_type', 'pattern_type -> ?_ter', 'arguments -> End']
copynode -7.695372963731643:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -5.438952887838241:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr']
copynode -7.639957691018935:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -7.70622621923394:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.2892914362601005:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr']
copynode -5.76748015958583:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier loc3 ^ ^ member prototypeProperty_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member']
copynode -7.776854599302169:  root add ^ IfStatement condition MethodInvocation qualifier loc3 ^ ^ arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown']
copynode -6.131378712540027:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member']
before@10 batch0 x: -8.16173893440282: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member']
after@10 batch0 x: -8.16173893440282: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member']
copynode -1.919281397757004:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -1.919281397757004:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -3.734011267122696:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -1.919281397757004:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -3.734011267122696:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc3 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3']
copynode -5.348524248969625:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer Cast type ReferenceType ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType']
copynode -5.623260358755942:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'root -> End']
copynode -5.8850148001656635:  root modified ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -5.761816595491837:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -3.734011267122696:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier parent_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.360957007433171:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -5.761816595491837:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.446714018282364:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc3 ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3']
copynode -6.472579027002212:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'copy-operandr']
copynode -3.734011267122696:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc4 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc4']
copynode -3.734011267122696:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier refNodes_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -1.919281397757004:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -1.919281397757004:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -3.734011267122696:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -6.807034233628656:  root modified ^ LocalVariableDeclaration type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -7.111019966003369:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer ClassCreator type ReferenceType ^ ^ arguments ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType']
copynode -7.120877359804581:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -3.734011267122696:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc2 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2']
copynode -7.132979963716934:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation']
copynode -1.919281397757004:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -3.734011267122696:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc5 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc5']
copynode -1.919281397757004:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments BinaryOperation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> BinaryOperation']
copynode -6.78645473200595:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'root -> End']
copynode -7.254346941408585:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc3 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc3']
copynode -3.734011267122696:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier n_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.987764569741557:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer This selectors MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> This', 'This -> selectors', 'selectors -> MethodInvocation']
copynode -1.919281397757004:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -1.919281397757004:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference member n_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MethodInvocation qualifier parent_ter ^ ^ member getParent_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.850797476654407:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'copy-operandr']
copynode -1.919281397757004:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member prototypeClass_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member prototypeProperty_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -7.289171869342681:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -3.734011267122696:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1']
copynode -7.684682764112949:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc3 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -7.013303085506777:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer TernaryExpression condition MethodInvocation ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MethodInvocation']
copynode -6.987764569741557:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer This selectors MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -5.8850148001656635:  root modified ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
before@11 batch0 x: -7.881225256060134: root modified ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
after@11 batch0 x: -7.881225256060134: root modified ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -2.167353470620583:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -2.167353470620583:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -4.497885082659195:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -4.890047942099045:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value']
copynode -3.9635895833343966:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.9635895833343966:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.349379166131257:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer Cast type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -3.9635895833343966:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.3418754085869296:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc3 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference']
copynode -3.9635895833343966:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier parent_ter ^ ^ member getParent_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.497885082659195:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -3.9635895833343966:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.338951800760697:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'root -> End']
copynode -5.349379166131257:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer Cast type ReferenceType name JsName_ter ^ ^ ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -6.135116128061782:  root modified ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.616970215734909:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -5.3418754085869296:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc3 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal']
copynode -6.376483534273575:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier parent_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -6.907042895254563:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
copynode -6.739868009870406:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -6.613224338318105:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.135116128061782:  root modified ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -4.497885082659195:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -6.99914303868718:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
copynode -6.666880060729454:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc3 ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'copy-member']
copynode -5.3418754085869296:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc3 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MethodInvocation']
copynode -7.141941021938692:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.11123915630742:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer ClassCreator type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ arguments ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -7.265212450918625:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
copynode -7.499919806417893:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc3 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc3', 'selectors -> MethodInvocation']
copynode -7.0712256525148405:  root modified ^ LocalVariableDeclaration type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.83647761195607:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc4 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc4', 'arguments -> MemberReference']
copynode -6.666880060729454:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown']
copynode -3.9635895833343966:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -6.847152326998184:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier refNodes_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -6.613224338318105:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.55259648412175:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
copynode -7.06909594386525:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference']
copynode -7.55636731236882:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference member n_ter ^ ^ ^ MemberReference member parent_ter ^ ^ ^ MethodInvocation qualifier parent_ter ^ ^ member getParent_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
copynode -7.580018435415695:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member prototypeClass_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member prototypeProperty_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
before@12 batch0 x: -7.719645370540093: root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member prototypeClass_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member prototypeProperty_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
after@12 batch0 x: -7.719645370540093: root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member prototypeClass_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member prototypeProperty_ter ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
copynode -2.6393872693151934:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -3.1477586820692522:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -4.940000627932022:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier loc3 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3']
copynode -4.88036987632222:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'copy-member']
copynode -2.6393872693151934:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc5 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5']
copynode -2.6393872693151934:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -5.845283254151582:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer Cast type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ expression MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation']
copynode -5.8331910714478:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.904669659954379:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -4.904669659954379:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -4.904669659954379:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -2.6393872693151934:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member parent_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.043012414869736:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc3 ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.566634877686738:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer Cast type ReferenceType name JsName_ter ^ ^ ^ ^ expression MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation']
copynode -2.6393872693151934:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member n_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -6.289360199865769:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.267336343225907:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -2.6393872693151934:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.588490513895522:  root modified ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -6.933835719522904:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc3 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> Literal', 'Literal -> value']
copynode -3.1477586820692522:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier parent_ter ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -5.858644638952683:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier loc3 ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3']
copynode -6.062171851095627:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier parent_ter ^ ^ member getParent_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference']
copynode -7.050551582869957:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member t_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference member n_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member', 'root -> End']
copynode -5.858644638952683:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -2.6393872693151934:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.062171851095627:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier parent_ter ^ ^ member getParent_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal']
copynode -6.043012414869736:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -2.6393872693151934:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -7.147362856005202:  root modified ^ LocalVariableDeclaration type ReferenceType name NameInformation_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -4.940000627932022:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier parent_ter ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -7.265884672102402:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member', 'root -> End']
copynode -2.6393872693151934:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.285757531222771:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc3 ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'copy-member', 'root -> End']
copynode -6.267336343225907:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.064619760538335:  root modified ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -3.1477586820692522:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc2 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc2']
copynode -2.6393872693151934:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member n_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.4079140618414385:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member', 'root -> End']
copynode -6.9847040519089205:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier parent_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.565663148459862:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'root -> End']
copynode -4.904669659954379:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
before@13 batch0 x: -7.651337573712226: root add ^ IfStatement condition MemberReference qualifier loc3 ^ ^ member isPrototype_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
after@13 batch0 x: -7.651337573712226: root add ^ IfStatement condition MemberReference qualifier loc3 ^ ^ member isPrototype_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -2.879710932073067:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal']
copynode -3.2300618112058146:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown']
copynode -2.879710932073067:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference']
copynode -2.879710932073067:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End']
copynode -3.2300618112058146:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member']
copynode -2.879710932073067:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MethodInvocation']
copynode -5.391456638273667:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'copy-member', 'root -> End']
copynode -5.249477778372238:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown']
copynode -3.2300618112058146:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member']
copynode -3.2300618112058146:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member prototypeClass_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member']
copynode -3.2300618112058146:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member prototypeProperty_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member']
copynode -5.879960387115716:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer Cast type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.761552472409676:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc5 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal']
copynode -5.829812903699349:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc3 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal']
copynode -5.947608130794833:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments Literal value false_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> MemberReference']
copynode -6.469115887579392:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc3 ^ ^ arguments MemberReference qualifier loc3 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -6.047036426884006:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments Literal value null_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> MemberReference']
copynode -6.696309719976853:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -5.934949514266918:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.761552472409676:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MemberReference']
copynode -3.2300618112058146:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'member -> loc1']
copynode -5.829812903699349:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc3 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> MemberReference']
copynode -2.879710932073067:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ BinaryOperation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> BinaryOperation']
copynode -6.348937173184822:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member parent_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference']
copynode -3.2300618112058146:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member isPrototype_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member']
copynode -7.098080788549851:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier parent_ter ^ ^ member getParent_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> Literal', 'Literal -> value']
copynode -6.2839824136317475:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments Literal value true_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> MemberReference']
copynode -5.947608130794833:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments Literal value false_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal']
copynode -3.2300618112058146:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member n_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member']
copynode -6.047036426884006:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments Literal value null_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal']
copynode -6.6543508812756045:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -3.2300618112058146:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member parent_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member']
copynode -5.934949514266918:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End']
copynode -6.607345004376839:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member n_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'copy-member', 'arguments -> MemberReference']
copynode -3.2300618112058146:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'member -> loc4']
copynode -7.322246168550919:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference qualifier loc3 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -7.10902753919072:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc3 ^ ^ arguments MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -7.241809938845108:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier parent_ter ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.60034989482665:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer Cast type ReferenceType name JsName_ter ^ ^ ^ ^ expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.934949514266918:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> Literal']
copynode -5.879960387115716:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer Cast type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.2839824136317475:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments Literal value true_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal']
copynode -6.6543508812756045:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
before@14 batch0 x: -7.475256805118988: root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
after@14 batch0 x: -7.475256805118988: root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.7860719755262835:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value']
copynode -4.034298200902413:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -3.975415569540928:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> MemberReference']
copynode -4.7563765242666705:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End', 'copy-member']
copynode -4.034298200902413:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.975415569540928:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal']
copynode -3.975415569540928:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> End']
copynode -5.231111545857857:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.044168037173222:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MemberReference']
copynode -5.044168037173222:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> Literal']
copynode -3.975415569540928:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -5.417064596709679:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.670665544268559:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MemberReference']
copynode -6.653207977113198:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc5 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'Literal -> value']
copynode -5.670665544268559:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> Literal']
copynode -5.417064596709679:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal']
copynode -6.752712984380196:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc3 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'Literal -> value']
copynode -5.417064596709679:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> End']
copynode -6.570247559910058:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer Cast type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -4.7563765242666705:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End', 'start -> unknown']
copynode -5.044168037173222:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> End']
copynode -5.231111545857857:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier parent_ter ^ ^ member getParent_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.138371127468417:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments Literal value false_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value']
copynode -7.228725570064853:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments Literal value null_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal', 'Literal -> value']
copynode -6.79003060310788:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc3 ^ ^ arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown']
copynode -5.417064596709679:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -6.366164726015995:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member prototypeClass_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> Literal']
copynode -7.237900678810547:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -5.231111545857857:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.366164726015995:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member prototypeClass_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MemberReference']
copynode -6.927932855483959:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.075554151830147:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.044168037173222:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MethodInvocation']
copynode -7.36278176009364:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.7596442278445465:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments Literal value false_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.934641022977303:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.426601645347546:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value']
copynode -6.489223045107792:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member prototypeProperty_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> Literal']
copynode -6.846933501583408:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments Literal value null_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.9683635428518755:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc3 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.489223045107792:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member prototypeProperty_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MemberReference']
copynode -7.46308817229874:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments Literal value true_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value']
before@15 batch0 x: -7.471430629302631: root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments Literal value true_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value']
after@15 batch0 x: -7.471430629302631: root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments Literal value true_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value']
copynode -3.804536874216865:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -3.804536874216865:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -4.531842459735344:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -4.873829488453339:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.104510170218418:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value']
copynode -4.832184773680638:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -4.979752679166268:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -4.832184773680638:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.9164916098088725:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -3.804536874216865:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.047188800570439:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -6.044798773524235:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.982776959237526:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3']
copynode -4.531842459735344:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -6.682541531321476:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -6.727606584128807:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value']
copynode -6.806254197654198:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.007137556371163:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.639126402136753:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.0459585607022746:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> End', 'copy-member']
copynode -6.424084764716099:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.579459001120995:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.044798773524235:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.579459001120995:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.33114908337302:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member prototypeClass_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -7.402582452443312:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -4.979752679166268:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -7.4492900192708476:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member prototypeProperty_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> Literal', 'Literal -> value']
copynode -6.676549452167819:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc5 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -6.676549452167819:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc5 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -6.977847634916543:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer Cast type ReferenceType name ClassDefiningFunctionNode_ter ^ ^ ^ ^ expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.382354763147305:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation member unknown ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -4.979752679166268:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.775137315315078:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc3 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -7.404326635223697:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments Literal value false_ter ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -6.775137315315078:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc3 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -7.454134006795357:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc3 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -7.346655827757786:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member prototypeClass_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -3.804536874216865:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -7.454122024399112:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments Literal value null_ter ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -7.411313672360848:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc5 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc5', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -6.639126402136753:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
before@16 batch0 x: -7.707275730368565: root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
after@16 batch0 x: -7.707275730368565: root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.82947080284066:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown']
copynode -5.245629620549153:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ MemberReference qualifier loc3 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -4.652383799475501:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal']
copynode -4.645753855627845:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal']
copynode -5.967896980044316:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -4.645753855627845:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End']
copynode -5.111433077880065:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -4.652383799475501:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -4.645753855627845:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> MemberReference']
copynode -4.652383799475501:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> MemberReference']
copynode -5.111433077880065:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -5.921609383818577:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -5.593026895818184:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End']
copynode -6.412571233508061:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -5.593026895818184:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference member loc4 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal']
copynode -6.588950414952706:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown']
copynode -6.846250285205315:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.046690041941474:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value null_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal']
copynode -6.057824929986964:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -6.057824929986964:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -4.82947080284066:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member']
copynode -5.111433077880065:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.116578620669316:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.06555790900893:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -4.82947080284066:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member']
copynode -6.046690041941474:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End']
copynode -7.229768086966942:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ MemberReference qualifier loc3 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -6.046690041941474:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value null_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> MemberReference']
copynode -5.593026895818184:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference']
copynode -7.234432500597904:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -4.645753855627845:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> MethodInvocation']
copynode -4.652383799475501:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> MethodInvocation']
copynode -7.320088674125145:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -6.694280696843634:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -6.732679745924543:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -6.694280696843634:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -6.732679745924543:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -7.667721611258457:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member prototypeClass_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -7.220920544859837:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3']
before@17 batch0 x: -7.868385714289616: root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3']
after@17 batch0 x: -7.868385714289616: root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3']
copynode -5.287288923558663:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> End']
copynode -5.53632437698252:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value']
copynode -5.546422119063209:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value']
copynode -5.988144988936256:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member']
copynode -6.018494481962989:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member']
copynode -6.14351652264304:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End']
copynode -6.345338304337929:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End', 'copy-member']
copynode -5.989115584918181:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -6.064995575972716:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End']
copynode -6.6995177462667925:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference member loc4 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value']
copynode -6.0540096711338265:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.054266686362098:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.054266686362098:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.0540096711338265:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.953821475428413:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value null_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal', 'Literal -> value']
copynode -6.531196494397591:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown']
copynode -6.796225522455643:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> End']
copynode -7.3546107362926705:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member']
copynode -5.287288923558663:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal']
copynode -7.056971479483764:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End']
copynode -7.048374582824181:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> End']
copynode -5.989115584918181:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value false_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> MemberReference']
copynode -5.989115584918181:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value false_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal']
copynode -5.287288923558663:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> MemberReference']
copynode -7.51239441036887:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End']
copynode -6.064995575972716:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value true_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> MemberReference']
copynode -7.181421180066536:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown']
copynode -7.552254010734032:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End']
copynode -6.064995575972716:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value true_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal']
copynode -7.258549143371056:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> End']
copynode -5.328498740491341:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member']
copynode -5.328498740491341:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member']
copynode -6.955621799264918:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -7.0281582677707775:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End']
copynode -6.955621799264918:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal']
copynode -7.4765066102118:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
before@18 batch0 x: -8.101195831593941: root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
after@18 batch0 x: -8.101195831593941: root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference member loc4 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.533245865997742:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.037632654231857:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.067496704679797:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.547996601831983:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -5.558383727257024:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -6.4269555330247385:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.409580689665745:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End', 'copy-member']
copynode -5.547996601831983:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -5.558383727257024:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -6.518697250910918:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member']
copynode -6.5475798140250845:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member']
copynode -7.052774254974793:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.748818213862251:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -7.0148834779829485:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> End']
copynode -6.750046784800361:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3']
copynode -7.405504080277751:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.407768984136055:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value']
copynode -5.558383727257024:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.719462829452823:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -6.719462829452823:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -5.547996601831983:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.582959343024413:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member']
copynode -7.6476446285814745:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> End', 'copy-member']
copynode -6.75075035802729:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -6.75006961337931:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -7.725673307009856:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value']
copynode -6.964857088212739:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value null_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -7.855637718268554:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value']
copynode -7.820124816891621:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End', 'copy-member']
copynode -6.964857088212739:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value null_ter ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -7.843374986943672:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End', 'copy-member']
copynode -7.888917852935265:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> End', 'copy-member']
copynode -7.826414127644966:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> End']
copynode -7.982541521821986:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member']
copynode -7.99989302996255:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member']
copynode -8.054797729288111:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value']
before@19 batch0 x: -8.063470933397184: root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value']
after@19 batch0 x: -8.063470933397184: root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value']
copynode -5.566010524329613:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.464641888436745:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.5511611553811235:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.580922108420054:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.404067477953504:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -6.423977637474309:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -6.483596226942609:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End']
copynode -6.499066198055516:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End']
copynode -7.083153676983784:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.158742149171303:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.616834286876838:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.157629574459861:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown']
copynode -7.1621943365753395:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown']
copynode -7.6917152188689215:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.573590064232121:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End']
copynode -7.590138993036817:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End']
copynode -7.694717581194709:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End']
copynode -7.579640823227237:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End']
copynode -7.706165666502784:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End']
copynode -7.58463426194794:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -7.873992339518736:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.897338506576489:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier loc3 ^ ^ member unknown ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.936504480239819:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.970354770121048:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -8.011477580104838:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.029932359044324:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.847931133394013:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value null_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -7.883812116269837:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value null_ter ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End']
copynode -7.4179408147901995:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -7.4179408147901995:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -6.404067477953504:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value false_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal']
copynode -6.423977637474309:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value false_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal']
before@20 batch0 x: -8.60558083075739: root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value false_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal']
after@20 batch0 x: -8.60558083075739: root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value false_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal']
copynode -6.613461873304914:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member']
copynode -6.628369802419911:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member']
copynode -6.685894763839315:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member']
copynode -6.698828497712384:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member']
copynode -7.18007102496631:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.623361016434501:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> End']
copynode -7.640131230276893:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> End']
copynode -7.757689634148846:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member']
copynode -7.775472826135228:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member']
copynode -7.81353057436354:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End', 'copy-member']
copynode -7.818813684207271:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member']
copynode -7.823137047511409:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End', 'copy-member']
copynode -7.832372235876392:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member']
copynode -7.992362187054823:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference qualifier loc3 ^ ^ member onlyAffectsClassDef_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'copy-member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.061047615294228:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value null_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member']
copynode -8.086157070283662:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value null_ter ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member']
copynode -8.315642197427223:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -8.396387894448708:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End']
copynode -8.562787494432996:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value']
copynode -8.60558083075739:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value']
before@21 batch0 x: -8.61877641994215: root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value']
after@21 batch0 x: -8.61877641994215: root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value']
copynode -6.639874168482493:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.65538277271844:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.713528067615698:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.727055975978146:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.704811337214778:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.7202873852074845:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.786045631204615:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.803156622496317:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.856581683081458:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.85715711004741:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.866401801627944:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ MemberReference member loc4 ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.870153824609588:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.088926233162056:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value null_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.115046439503203:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value null_ter ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.447610367831658:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member']
copynode -8.521924798187683:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member']
copynode -8.575817007382284:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -8.61877641994215:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
before@22 batch0 x: -9.474416116063367: root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
after@22 batch0 x: -9.474416116063367: root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -7.727934473005007:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.743394478035043:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.477904940766166:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.553105267506908:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ MemberReference qualifier loc3 ^ ^ member unknown ^ ^ ^ Literal value true_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc3', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -9.42438175137795:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -9.474416116063367:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
before@23 batch0 x: -9.564462804977666: root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
after@23 batch0 x: -9.564462804977666: root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -9.515248808820616:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member']
copynode -9.564462804977666:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member']
before@24 batch0 x: -9.591654233445297: root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member']
after@24 batch0 x: -9.591654233445297: root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member']
copynode -9.541900303025614:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -9.591654233445297:  root modified ^ LocalVariableDeclaration type ReferenceType name JsName_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation arguments MemberReference member loc4 ^ ^ ^ Literal value true_ter ^ ^ ^ Literal value false_ter ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc4', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc4', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member', 'root -> End']
method
7 
None JsName process getName_ter
None JsName recordAlias getName_ter
None JsName recordReference getName_ter
None JsName removeUnreferenced getName_ter
String JsName getHtmlReport getName_ter
None JsName appendListItem getName_ter
String JsName nameLink getName_ter
String JsName nameAnchor getName_ter
JsName JsName getName getName_ter
None JsName createName getName_ter
None JsName referenceAliases getName_ter
None JsName referenceParentNames getName_ter
NameInformation JsName createNameInformation getName_ter
NameInformation JsName createNameInformation getName_ter
boolean JsName isExternallyReferenceable getName_ter
NameInformation JsName getDependencyScope getName_ter
NameInformation JsName getEnclosingFunctionDependencyScope getName_ter
None JsName calculateReferences getName_ter
int JsName countOf getName_ter
List JsName getSideEffectNodes getName_ter
None JsName replaceWithRhs getName_ter
None JsName replaceTopLevelExpressionWithRhs getName_ter
boolean JsName valueConsumedByParent getName_ter
Node JsName collapseReplacements getName_ter
List JsName getRhsSubexpressions getName_ter
6 name_ter
6 name_ter
6 name_ter
method
7 
6 name_ter
6 name_ter
6 name_ter
6 name_ter
6 name_ter
method
ns_ter {'nameNode_ter': 'Node', 'ns_ter': 'NameInformation', 'name_ter': 'JsName'}
7 NameInformation
6 name_ter
6 name_ter
method
ns_ter {'nameNode_ter': 'Node', 'ns_ter': 'NameInformation', 'name_ter': 'JsName'}
7 NameInformation
6 name_ter
6 name_ter
6 name_ter
6 name_ter
method
7 
6 name_ter
6 name_ter
method
ns_ter {'nameNode_ter': 'Node', 'ns_ter': 'NameInformation', 'name_ter': 'JsName'}
7 NameInformation
6 name_ter
method
7 
None  process 
None  recordAlias 
None  recordReference 
None  removeUnreferenced 
String  getHtmlReport 
None  appendListItem 
String  nameLink 
String  nameAnchor 
JsName  getName 
None  createName 
None  referenceAliases 
None  referenceParentNames 
NameInformation  createNameInformation 
NameInformation  createNameInformation 
boolean  isExternallyReferenceable 
NameInformation  getDependencyScope 
NameInformation  getEnclosingFunctionDependencyScope 
None  calculateReferences 
int  countOf 
List  getSideEffectNodes 
None  replaceWithRhs 
None  replaceTopLevelExpressionWithRhs 
boolean  valueConsumedByParent 
Node  collapseReplacements 
List  getRhsSubexpressions 
6 name_ter
method
7 
None  process 
None  recordAlias 
None  recordReference 
None  removeUnreferenced 
String  getHtmlReport 
None  appendListItem 
String  nameLink 
String  nameAnchor 
JsName  getName 
None  createName 
None  referenceAliases 
None  referenceParentNames 
NameInformation  createNameInformation 
NameInformation  createNameInformation 
boolean  isExternallyReferenceable 
NameInformation  getDependencyScope 
NameInformation  getEnclosingFunctionDependencyScope 
None  calculateReferences 
int  countOf 
List  getSideEffectNodes 
None  replaceWithRhs 
None  replaceTopLevelExpressionWithRhs 
boolean  valueConsumedByParent 
Node  collapseReplacements 
List  getRhsSubexpressions 
method
ns_ter {'nameNode_ter': 'Node', 'ns_ter': 'NameInformation', 'name_ter': 'JsName'}
7 NameInformation
method
ns_ter {'nameNode_ter': 'Node', 'ns_ter': 'NameInformation', 'name_ter': 'JsName'}
7 NameInformation
stderr: Check out program version: Closure-40b..................................... OK
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Running ant (export.dir.src.classes)....................................... OK

  0%|          | 0/1 [00:00<?, ?it/s]/root/projects/Recoder-bwk/run.py:527: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  tmpdepth = np.array(tmpdepth)
/root/envs/recoder/lib/python3.7/site-packages/torch/nn/functional.py:1340: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
100%|██████████| 1/1 [00:29<00:00, 29.08s/it]100%|██████████| 1/1 [00:29<00:00, 29.08s/it]
