stdout: else_statement -> BlockStatement
using GPU
p
path org.apache.commons.math3.linear.OpenMapRealVector
ebeDivide
Position(line=341, column=12)
FOUND IT!
path org.apache.commons.math3.linear.OpenMapRealVector
ebeMultiply
Position(line=359, column=12)
FOUND IT!
[{'bugid': 'Math-29', 'treeroot': <Searchnode.Node object at 0x7fa2b0cd5cd0>, 'troot': <Searchnode.Node object at 0x7fa2b0cd5cd0>, 'oldcode': '        Iterator iter = entries.iterator();', 'filepath': 'buggy/Math-29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java', 'subroot': <Searchnode.Node object at 0x7fa2b0cdd9d0>, 'vardic': {'ebeDivide_ter': 'meth0', 'v_ter': 'par0', 'res_ter': 'loc0', 'iter_ter': 'loc1'}, 'typedic': {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}, 'idss': 'Math-29', 'classname': 'org.apache.commons.math3.linear.OpenMapRealVector', 'precode': '/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the "License"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.math3.linear;\n\nimport java.io.Serializable;\n\nimport org.apache.commons.math3.exception.MathArithmeticException;\nimport org.apache.commons.math3.exception.NotPositiveException;\nimport org.apache.commons.math3.exception.util.LocalizedFormats;\nimport org.apache.commons.math3.util.OpenIntToDoubleHashMap;\nimport org.apache.commons.math3.util.OpenIntToDoubleHashMap.Iterator;\nimport org.apache.commons.math3.util.FastMath;\n\n/**\n * This class implements the {@link RealVector} interface with a\n * {@link OpenIntToDoubleHashMap} backing store.\n * @version $Id$\n * @since 2.0\n*/\npublic class OpenMapRealVector extends SparseRealVector\n    implements Serializable {\n    /** Default Tolerance for having a value considered zero. */\n    public static final double DEFAULT_ZERO_TOLERANCE = 1.0e-12;\n    /** Serializable version identifier. */\n    private static final long serialVersionUID = 8772222695580707260L;\n    /** Entries of the vector. */\n    private final OpenIntToDoubleHashMap entries;\n    /** Dimension of the vector. */\n    private final int virtualSize;\n    /** Tolerance for having a value considered zero. */\n    private final double epsilon;\n\n    /**\n     * Build a 0-length vector.\n     * Zero-length vectors may be used to initialized construction of vectors\n     * by data gathering. We start with zero-length and use either the {@link\n     * #OpenMapRealVector(OpenMapRealVector, int)} constructor\n     * or one of the {@code append} method ({@link #append(double)},\n     * {@link #append(RealVector)}) to gather data into this vector.\n     */\n    public OpenMapRealVector() {\n        this(0, DEFAULT_ZERO_TOLERANCE);\n    }\n\n    /**\n     * Construct a vector of zeroes.\n     *\n     * @param dimension Size of the vector.\n     */\n    public OpenMapRealVector(int dimension) {\n        this(dimension, DEFAULT_ZERO_TOLERANCE);\n    }\n\n    /**\n     * Construct a vector of zeroes, specifying zero tolerance.\n     *\n     * @param dimension Size of the vector.\n     * @param epsilon Tolerance below which a value considered zero.\n     */\n    public OpenMapRealVector(int dimension, double epsilon) {\n        virtualSize = dimension;\n        entries = new OpenIntToDoubleHashMap(0.0);\n        this.epsilon = epsilon;\n    }\n\n    /**\n     * Build a resized vector, for use with append.\n     *\n     * @param v Original vector.\n     * @param resize Amount to add.\n     */\n    protected OpenMapRealVector(OpenMapRealVector v, int resize) {\n        virtualSize = v.getDimension() + resize;\n        entries = new OpenIntToDoubleHashMap(v.entries);\n        epsilon = v.epsilon;\n    }\n\n    /**\n     * Build a vector with known the sparseness (for advanced use only).\n     *\n     * @param dimension Size of the vector.\n     * @param expectedSize The expected number of non-zero entries.\n     */\n    public OpenMapRealVector(int dimension, int expectedSize) {\n        this(dimension, expectedSize, DEFAULT_ZERO_TOLERANCE);\n    }\n\n    /**\n     * Build a vector with known the sparseness and zero tolerance\n     * setting (for advanced use only).\n     *\n     * @param dimension Size of the vector.\n     * @param expectedSize Expected number of non-zero entries.\n     * @param epsilon Tolerance below which a value is considered zero.\n     */\n    public OpenMapRealVector(int dimension, int expectedSize, double epsilon) {\n        virtualSize = dimension;\n        entries = new OpenIntToDoubleHashMap(expectedSize, 0.0);\n        this.epsilon = epsilon;\n    }\n\n    /**\n     * Create from an array.\n     * Only non-zero entries will be stored.\n     *\n     * @param values Set of values to create from.\n     */\n    public OpenMapRealVector(double[] values) {\n        this(values, DEFAULT_ZERO_TOLERANCE);\n    }\n\n    /**\n     * Create from an array, specifying zero tolerance.\n     * Only non-zero entries will be stored.\n     *\n     * @param values Set of values to create from.\n     * @param epsilon Tolerance below which a value is considered zero.\n     */\n    public OpenMapRealVector(double[] values, double epsilon) {\n        virtualSize = values.length;\n        entries = new OpenIntToDoubleHashMap(0.0);\n        this.epsilon = epsilon;\n        for (int key = 0; key < values.length; key++) {\n            double value = values[key];\n            if (!isDefaultValue(value)) {\n                entries.put(key, value);\n            }\n        }\n    }\n\n    /**\n     * Create from an array.\n     * Only non-zero entries will be stored.\n     *\n     * @param values The set of values to create from\n     */\n    public OpenMapRealVector(Double[] values) {\n        this(values, DEFAULT_ZERO_TOLERANCE);\n    }\n\n    /**\n     * Create from an array.\n     * Only non-zero entries will be stored.\n     *\n     * @param values Set of values to create from.\n     * @param epsilon Tolerance below which a value is considered zero.\n     */\n    public OpenMapRealVector(Double[] values, double epsilon) {\n        virtualSize = values.length;\n        entries = new OpenIntToDoubleHashMap(0.0);\n        this.epsilon = epsilon;\n        for (int key = 0; key < values.length; key++) {\n            double value = values[key].doubleValue();\n            if (!isDefaultValue(value)) {\n                entries.put(key, value);\n            }\n        }\n    }\n\n    /**\n     * Copy constructor.\n     *\n     * @param v Instance to copy from.\n     */\n    public OpenMapRealVector(OpenMapRealVector v) {\n        virtualSize = v.getDimension();\n        entries = new OpenIntToDoubleHashMap(v.getEntries());\n        epsilon = v.epsilon;\n    }\n\n    /**\n     * Generic copy constructor.\n     *\n     * @param v Instance to copy from.\n     */\n    public OpenMapRealVector(RealVector v) {\n        virtualSize = v.getDimension();\n        entries = new OpenIntToDoubleHashMap(0.0);\n        epsilon = DEFAULT_ZERO_TOLERANCE;\n        for (int key = 0; key < virtualSize; key++) {\n            double value = v.getEntry(key);\n            if (!isDefaultValue(value)) {\n                entries.put(key, value);\n            }\n        }\n    }\n\n    /**\n     * Get the entries of this instance.\n     *\n     * @return the entries of this instance.\n     */\n    private OpenIntToDoubleHashMap getEntries() {\n        return entries;\n    }\n\n    /**\n     * Determine if this value is within epsilon of zero.\n     *\n     * @param value Value to test\n     * @return {@code true} if this value is within epsilon to zero,\n     * {@code false} otherwise.\n     * @since 2.1\n     */\n    protected boolean isDefaultValue(double value) {\n        return FastMath.abs(value) < epsilon;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public RealVector add(RealVector v) {\n        checkVectorDimensions(v.getDimension());\n        if (v instanceof OpenMapRealVector) {\n            return add((OpenMapRealVector) v);\n        } else {\n            return super.add(v);\n        }\n    }\n\n    /**\n     * Optimized method to add two OpenMapRealVectors.\n     * It copies the larger vector, then iterates over the smaller.\n     *\n     * @param v Vector to add.\n     * @return the sum of {@code this} and {@code v}.\n     * @throws org.apache.commons.math3.exception.DimensionMismatchException\n     * if the dimensions do not match.\n     */\n    public OpenMapRealVector add(OpenMapRealVector v) {\n        checkVectorDimensions(v.getDimension());\n        boolean copyThis = entries.size() > v.entries.size();\n        OpenMapRealVector res = copyThis ? this.copy() : v.copy();\n        Iterator iter = copyThis ? v.entries.iterator() : entries.iterator();\n        OpenIntToDoubleHashMap randomAccess = copyThis ? entries : v.entries;\n        while (iter.hasNext()) {\n            iter.advance();\n            int key = iter.key();\n            if (randomAccess.containsKey(key)) {\n                res.setEntry(key, randomAccess.get(key) + iter.value());\n            } else {\n                res.setEntry(key, iter.value());\n            }\n        }\n        return res;\n    }\n\n    /**\n     * Optimized method to append a OpenMapRealVector.\n     * @param v vector to append\n     * @return The result of appending {@code v} to self\n     */\n    public OpenMapRealVector append(OpenMapRealVector v) {\n        OpenMapRealVector res = new OpenMapRealVector(this, v.getDimension());\n        Iterator iter = v.entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            res.setEntry(iter.key() + virtualSize, iter.value());\n        }\n        return res;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector append(RealVector v) {\n        if (v instanceof OpenMapRealVector) {\n            return append((OpenMapRealVector) v);\n        } else {\n            final OpenMapRealVector res = new OpenMapRealVector(this, v.getDimension());\n            for (int i = 0; i < v.getDimension(); i++) {\n                res.setEntry(i + virtualSize, v.getEntry(i));\n            }\n            return res;\n        }\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector append(double d) {\n        OpenMapRealVector res = new OpenMapRealVector(this, 1);\n        res.setEntry(virtualSize, d);\n        return res;\n    }\n\n    /**\n     * {@inheritDoc}\n     * @since 2.1\n     */\n    @Override\n    public OpenMapRealVector copy() {\n        return new OpenMapRealVector(this);\n    }\n\n    /**\n     * Optimized method to compute the dot product with an OpenMapRealVector.\n     * It iterates over the smallest of the two.\n     *\n     * @param v Cector to compute the dot product with.\n     * @return the dot product of {@code this} and {@code v}.\n     * @throws org.apache.commons.math3.exception.DimensionMismatchException\n     * if the dimensions do not match.\n     */\n    public double dotProduct(OpenMapRealVector v) {\n        checkVectorDimensions(v.getDimension());\n        boolean thisIsSmaller  = entries.size() < v.entries.size();\n        Iterator iter = thisIsSmaller  ? entries.iterator() : v.entries.iterator();\n        OpenIntToDoubleHashMap larger = thisIsSmaller  ? v.entries : entries;\n        double d = 0;\n        while(iter.hasNext()) {\n            iter.advance();\n            d += iter.value() * larger.get(iter.key());\n        }\n        return d;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public double dotProduct(RealVector v) {\n        if(v instanceof OpenMapRealVector) {\n            return dotProduct((OpenMapRealVector)v);\n        } else {\n            return super.dotProduct(v);\n        }\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector ebeDivide(RealVector v) {\n        checkVectorDimensions(v.getDimension());\n        OpenMapRealVector res = new OpenMapRealVector(this);\n        /*\n         * MATH-803: it is not sufficient to loop through non zero entries of\n         * this only. Indeed, if this[i] = 0d and v[i] = 0d, then\n         * this[i] / v[i] = NaN, and not 0d.\n         */', 'aftercode': '        while (iter.hasNext()) {\n            iter.advance();\n            res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key()));\n        }\n        return res;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector ebeMultiply(RealVector v) {\n        checkVectorDimensions(v.getDimension());\n        OpenMapRealVector res = new OpenMapRealVector(this);\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n        }\n        /*\n         * MATH-803: the above loop assumes that 0d * x  = 0d for any double x,\n         * which allows to consider only the non-zero entries of this. However,\n         * this fails if this[i] == 0d and (v[i] = NaN or v[i] = Infinity).\n         *\n         * These special cases are handled below.\n         */\n        return res;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector getSubVector(int index, int n) {\n        checkIndex(index);\n        if (n < 0) {\n            throw new NotPositiveException(LocalizedFormats.NUMBER_OF_ELEMENTS_SHOULD_BE_POSITIVE, n);\n        }\n        checkIndex(index + n - 1);\n        OpenMapRealVector res = new OpenMapRealVector(n);\n        int end = index + n;\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            int key = iter.key();\n            if (key >= index && key < end) {\n                res.setEntry(key - index, iter.value());\n            }\n        }\n        return res;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public int getDimension() {\n        return virtualSize;\n    }\n\n    /**\n     * Optimized method to compute distance.\n     *\n     * @param v Vector to compute distance to.\n     * @return the distance from {@code this} and {@code v}.\n     * @throws org.apache.commons.math3.exception.DimensionMismatchException\n     * if the dimensions do not match.\n     */\n    public double getDistance(OpenMapRealVector v) {\n        Iterator iter = entries.iterator();\n        double res = 0;\n        while (iter.hasNext()) {\n            iter.advance();\n            int key = iter.key();\n            double delta;\n            delta = iter.value() - v.getEntry(key);\n            res += delta * delta;\n        }\n        iter = v.getEntries().iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            int key = iter.key();\n            if (!entries.containsKey(key)) {\n                final double value = iter.value();\n                res += value * value;\n            }\n        }\n        return FastMath.sqrt(res);\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public double getDistance(RealVector v) {\n        checkVectorDimensions(v.getDimension());\n        if (v instanceof OpenMapRealVector) {\n            return getDistance((OpenMapRealVector) v);\n        } else {\n            return super.getDistance(v);\n        }\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public double getEntry(int index) {\n        checkIndex(index);\n        return entries.get(index);\n    }\n\n    /**\n     * Distance between two vectors.\n     * This method computes the distance consistent with\n     * L<sub>1</sub> norm, i.e. the sum of the absolute values of\n     * elements differences.\n     *\n     * @param v Vector to which distance is requested.\n     * @return distance between this vector and {@code v}.\n     */\n    public double getL1Distance(OpenMapRealVector v) {\n        double max = 0;\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            double delta = FastMath.abs(iter.value() - v.getEntry(iter.key()));\n            max += delta;\n        }\n        iter = v.getEntries().iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            int key = iter.key();\n            if (!entries.containsKey(key)) {\n                double delta = FastMath.abs(iter.value());\n                max +=  FastMath.abs(delta);\n            }\n        }\n        return max;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public double getL1Distance(RealVector v) {\n        checkVectorDimensions(v.getDimension());\n        if (v instanceof OpenMapRealVector) {\n            return getL1Distance((OpenMapRealVector) v);\n        } else {\n            return super.getL1Distance(v);\n        }\n    }\n\n    /**\n     * Optimized method to compute LInfDistance.\n     *\n     * @param v Vector to compute distance from.\n     * @return the LInfDistance.\n     */\n    private double getLInfDistance(OpenMapRealVector v) {\n        double max = 0;\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            double delta = FastMath.abs(iter.value() - v.getEntry(iter.key()));\n            if (delta > max) {\n                max = delta;\n            }\n        }\n        iter = v.getEntries().iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            int key = iter.key();\n            if (!entries.containsKey(key)) {\n                if (iter.value() > max) {\n                    max = iter.value();\n                }\n            }\n        }\n        return max;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public double getLInfDistance(RealVector v) {\n        checkVectorDimensions(v.getDimension());\n        if (v instanceof OpenMapRealVector) {\n            return getLInfDistance((OpenMapRealVector) v);\n        } else {\n            return super.getLInfDistance(v);\n        }\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public boolean isInfinite() {\n        boolean infiniteFound = false;\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            final double value = iter.value();\n            if (Double.isNaN(value)) {\n                return false;\n            }\n            if (Double.isInfinite(value)) {\n                infiniteFound = true;\n            }\n        }\n        return infiniteFound;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public boolean isNaN() {\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            if (Double.isNaN(iter.value())) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector mapAdd(double d) {\n        return copy().mapAddToSelf(d);\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector mapAddToSelf(double d) {\n        for (int i = 0; i < virtualSize; i++) {\n            setEntry(i, getEntry(i) + d);\n        }\n        return this;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public RealVector projection(RealVector v) {\n        checkVectorDimensions(v.getDimension());\n        return v.mapMultiply(dotProduct(v) / v.dotProduct(v));\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public void setEntry(int index, double value) {\n        checkIndex(index);\n        if (!isDefaultValue(value)) {\n            entries.put(index, value);\n        } else if (entries.containsKey(index)) {\n            entries.remove(index);\n        }\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public void setSubVector(int index, RealVector v) {\n        checkIndex(index);\n        checkIndex(index + v.getDimension() - 1);\n        for (int i = 0; i < v.getDimension(); i++) {\n            setEntry(i + index, v.getEntry(i));\n        }\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public void set(double value) {\n        for (int i = 0; i < virtualSize; i++) {\n            setEntry(i, value);\n        }\n    }\n\n    /**\n     * Optimized method to subtract OpenMapRealVectors.\n     *\n     * @param v Vector to subtract from {@code this}.\n     * @return the difference of {@code this} and {@code v}.\n     * @throws org.apache.commons.math3.exception.DimensionMismatchException\n     * if the dimensions do not match.\n     */\n    public OpenMapRealVector subtract(OpenMapRealVector v) {\n        checkVectorDimensions(v.getDimension());\n        OpenMapRealVector res = copy();\n        Iterator iter = v.getEntries().iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            int key = iter.key();\n            if (entries.containsKey(key)) {\n                res.setEntry(key, entries.get(key) - iter.value());\n            } else {\n                res.setEntry(key, -iter.value());\n            }\n        }\n        return res;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public RealVector subtract(RealVector v) {\n        checkVectorDimensions(v.getDimension());\n        if (v instanceof OpenMapRealVector) {\n            return subtract((OpenMapRealVector) v);\n        } else {\n            return super.subtract(v);\n        }\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector unitVector() {\n        OpenMapRealVector res = copy();\n        res.unitize();\n        return res;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public void unitize() {\n        double norm = getNorm();\n        if (isDefaultValue(norm)) {\n            throw new MathArithmeticException(LocalizedFormats.ZERO_NORM);\n        }\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            entries.put(iter.key(), iter.value() / norm);\n        }\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public double[] toArray() {\n        double[] res = new double[virtualSize];\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            res[iter.key()] = iter.value();\n        }\n        return res;\n    }\n\n    /**\n     * {@inheritDoc}\n     * Implementation Note: This works on exact values, and as a result\n     * it is possible for {@code a.subtract(b)} to be the zero vector, while\n     * {@code a.hashCode() != b.hashCode()}.\n     */\n    @Override\n    public int hashCode() {\n        final int prime = 31;\n        int result = 1;\n        long temp;\n        temp = Double.doubleToLongBits(epsilon);\n        result = prime * result + (int) (temp ^ (temp >>> 32));\n        result = prime * result + virtualSize;\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            temp = Double.doubleToLongBits(iter.value());\n            result = prime * result + (int) (temp ^ (temp >>32));\n        }\n        return result;\n    }\n\n    /**\n     * {@inheritDoc}\n     * Implementation Note: This performs an exact comparison, and as a result\n     * it is possible for {@code a.subtract(b}} to be the zero vector, while\n     * {@code  a.equals(b) == false}.\n     */\n    @Override\n    public boolean equals(Object obj) {\n        if (this == obj) {\n            return true;\n        }\n        if (!(obj instanceof OpenMapRealVector)) {\n            return false;\n        }\n        OpenMapRealVector other = (OpenMapRealVector) obj;\n        if (virtualSize != other.virtualSize) {\n            return false;\n        }\n        if (Double.doubleToLongBits(epsilon) !=\n            Double.doubleToLongBits(other.epsilon)) {\n            return false;\n        }\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            double test = other.getEntry(iter.key());\n            if (Double.doubleToLongBits(test) != Double.doubleToLongBits(iter.value())) {\n                return false;\n            }\n        }\n        iter = other.getEntries().iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            double test = iter.value();\n            if (Double.doubleToLongBits(test) != Double.doubleToLongBits(getEntry(iter.key()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     *\n     * @return the percentage of none zero elements as a decimal percent.\n     * @since 2.2\n     */\n    public double getSparsity() {\n        return (double)entries.size()/(double)getDimension();\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public java.util.Iterator<Entry> sparseIterator() {\n        return new OpenMapSparseIterator();\n    }\n\n    /**\n     * Implementation of {@code Entry} optimized for OpenMap.\n     * This implementation does not allow arbitrary calls to {@code setIndex}\n     * since the order in which entries are returned is undefined.\n     */\n    protected class OpenMapEntry extends Entry {\n        /** Iterator pointing to the entry. */\n        private final Iterator iter;\n\n        /**\n         * Build an entry from an iterator point to an element.\n         *\n         * @param iter Iterator pointing to the entry.\n         */\n        protected OpenMapEntry(Iterator iter) {\n            this.iter = iter;\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public double getValue() {\n            return iter.value();\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public void setValue(double value) {\n            entries.put(iter.key(), value);\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public int getIndex() {\n            return iter.key();\n        }\n\n    }\n\n    /**\n     * Iterator class to do iteration over just the non-zero elements.\n     * This implementation is fail-fast, so cannot be used to modify\n     * any zero element.\n     */\n    protected class OpenMapSparseIterator implements java.util.Iterator<Entry> {\n        /** Underlying iterator. */\n        private final Iterator iter;\n        /** Current entry. */\n        private final Entry current;\n\n        /** Simple constructor. */\n        protected OpenMapSparseIterator() {\n            iter = entries.iterator();\n            current = new OpenMapEntry(iter);\n        }\n\n        /** {@inheritDoc} */\n        public boolean hasNext() {\n            return iter.hasNext();\n        }\n\n        /** {@inheritDoc} */\n        public Entry next() {\n            iter.advance();\n            return current;\n        }\n\n        /** {@inheritDoc} */\n        public void remove() {\n            throw new UnsupportedOperationException("Not supported");\n        }\n    }\n}', 'tree': 'MethodDeclaration modifiers public_ter ^ ^ annotations Annotation name Override_ter ^ ^ ^ ^ return_type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ name meth0 ^ ^ parameters FormalParameter type ReferenceType name RealVector_ter ^ ^ ^ ^ name par0 ^ ^ ^ ^ body StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ClassCreator type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ arguments This_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ WhileStatement condition MethodInvocation qualifier loc1 ^ ^ member hasNext_ter ^ ^ ^ ^ body BlockStatement statements StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ^ ', 'prob': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'mode': 0, 'line': 349, 'isa': False, 'fl_score': 1}, {'bugid': 'Math-29', 'treeroot': <Searchnode.Node object at 0x7fa2b3c531d0>, 'troot': <Searchnode.Node object at 0x7fa2b3c531d0>, 'oldcode': '        return res;', 'filepath': 'buggy/Math-29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java', 'subroot': <Searchnode.Node object at 0x7fa2b3c62890>, 'vardic': {'ebeMultiply_ter': 'meth0', 'v_ter': 'par0', 'res_ter': 'loc0', 'iter_ter': 'loc1'}, 'typedic': {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}, 'idss': 'Math-29', 'classname': 'org.apache.commons.math3.linear.OpenMapRealVector', 'precode': '/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the "License"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.math3.linear;\n\nimport java.io.Serializable;\n\nimport org.apache.commons.math3.exception.MathArithmeticException;\nimport org.apache.commons.math3.exception.NotPositiveException;\nimport org.apache.commons.math3.exception.util.LocalizedFormats;\nimport org.apache.commons.math3.util.OpenIntToDoubleHashMap;\nimport org.apache.commons.math3.util.OpenIntToDoubleHashMap.Iterator;\nimport org.apache.commons.math3.util.FastMath;\n\n/**\n * This class implements the {@link RealVector} interface with a\n * {@link OpenIntToDoubleHashMap} backing store.\n * @version $Id$\n * @since 2.0\n*/\npublic class OpenMapRealVector extends SparseRealVector\n    implements Serializable {\n    /** Default Tolerance for having a value considered zero. */\n    public static final double DEFAULT_ZERO_TOLERANCE = 1.0e-12;\n    /** Serializable version identifier. */\n    private static final long serialVersionUID = 8772222695580707260L;\n    /** Entries of the vector. */\n    private final OpenIntToDoubleHashMap entries;\n    /** Dimension of the vector. */\n    private final int virtualSize;\n    /** Tolerance for having a value considered zero. */\n    private final double epsilon;\n\n    /**\n     * Build a 0-length vector.\n     * Zero-length vectors may be used to initialized construction of vectors\n     * by data gathering. We start with zero-length and use either the {@link\n     * #OpenMapRealVector(OpenMapRealVector, int)} constructor\n     * or one of the {@code append} method ({@link #append(double)},\n     * {@link #append(RealVector)}) to gather data into this vector.\n     */\n    public OpenMapRealVector() {\n        this(0, DEFAULT_ZERO_TOLERANCE);\n    }\n\n    /**\n     * Construct a vector of zeroes.\n     *\n     * @param dimension Size of the vector.\n     */\n    public OpenMapRealVector(int dimension) {\n        this(dimension, DEFAULT_ZERO_TOLERANCE);\n    }\n\n    /**\n     * Construct a vector of zeroes, specifying zero tolerance.\n     *\n     * @param dimension Size of the vector.\n     * @param epsilon Tolerance below which a value considered zero.\n     */\n    public OpenMapRealVector(int dimension, double epsilon) {\n        virtualSize = dimension;\n        entries = new OpenIntToDoubleHashMap(0.0);\n        this.epsilon = epsilon;\n    }\n\n    /**\n     * Build a resized vector, for use with append.\n     *\n     * @param v Original vector.\n     * @param resize Amount to add.\n     */\n    protected OpenMapRealVector(OpenMapRealVector v, int resize) {\n        virtualSize = v.getDimension() + resize;\n        entries = new OpenIntToDoubleHashMap(v.entries);\n        epsilon = v.epsilon;\n    }\n\n    /**\n     * Build a vector with known the sparseness (for advanced use only).\n     *\n     * @param dimension Size of the vector.\n     * @param expectedSize The expected number of non-zero entries.\n     */\n    public OpenMapRealVector(int dimension, int expectedSize) {\n        this(dimension, expectedSize, DEFAULT_ZERO_TOLERANCE);\n    }\n\n    /**\n     * Build a vector with known the sparseness and zero tolerance\n     * setting (for advanced use only).\n     *\n     * @param dimension Size of the vector.\n     * @param expectedSize Expected number of non-zero entries.\n     * @param epsilon Tolerance below which a value is considered zero.\n     */\n    public OpenMapRealVector(int dimension, int expectedSize, double epsilon) {\n        virtualSize = dimension;\n        entries = new OpenIntToDoubleHashMap(expectedSize, 0.0);\n        this.epsilon = epsilon;\n    }\n\n    /**\n     * Create from an array.\n     * Only non-zero entries will be stored.\n     *\n     * @param values Set of values to create from.\n     */\n    public OpenMapRealVector(double[] values) {\n        this(values, DEFAULT_ZERO_TOLERANCE);\n    }\n\n    /**\n     * Create from an array, specifying zero tolerance.\n     * Only non-zero entries will be stored.\n     *\n     * @param values Set of values to create from.\n     * @param epsilon Tolerance below which a value is considered zero.\n     */\n    public OpenMapRealVector(double[] values, double epsilon) {\n        virtualSize = values.length;\n        entries = new OpenIntToDoubleHashMap(0.0);\n        this.epsilon = epsilon;\n        for (int key = 0; key < values.length; key++) {\n            double value = values[key];\n            if (!isDefaultValue(value)) {\n                entries.put(key, value);\n            }\n        }\n    }\n\n    /**\n     * Create from an array.\n     * Only non-zero entries will be stored.\n     *\n     * @param values The set of values to create from\n     */\n    public OpenMapRealVector(Double[] values) {\n        this(values, DEFAULT_ZERO_TOLERANCE);\n    }\n\n    /**\n     * Create from an array.\n     * Only non-zero entries will be stored.\n     *\n     * @param values Set of values to create from.\n     * @param epsilon Tolerance below which a value is considered zero.\n     */\n    public OpenMapRealVector(Double[] values, double epsilon) {\n        virtualSize = values.length;\n        entries = new OpenIntToDoubleHashMap(0.0);\n        this.epsilon = epsilon;\n        for (int key = 0; key < values.length; key++) {\n            double value = values[key].doubleValue();\n            if (!isDefaultValue(value)) {\n                entries.put(key, value);\n            }\n        }\n    }\n\n    /**\n     * Copy constructor.\n     *\n     * @param v Instance to copy from.\n     */\n    public OpenMapRealVector(OpenMapRealVector v) {\n        virtualSize = v.getDimension();\n        entries = new OpenIntToDoubleHashMap(v.getEntries());\n        epsilon = v.epsilon;\n    }\n\n    /**\n     * Generic copy constructor.\n     *\n     * @param v Instance to copy from.\n     */\n    public OpenMapRealVector(RealVector v) {\n        virtualSize = v.getDimension();\n        entries = new OpenIntToDoubleHashMap(0.0);\n        epsilon = DEFAULT_ZERO_TOLERANCE;\n        for (int key = 0; key < virtualSize; key++) {\n            double value = v.getEntry(key);\n            if (!isDefaultValue(value)) {\n                entries.put(key, value);\n            }\n        }\n    }\n\n    /**\n     * Get the entries of this instance.\n     *\n     * @return the entries of this instance.\n     */\n    private OpenIntToDoubleHashMap getEntries() {\n        return entries;\n    }\n\n    /**\n     * Determine if this value is within epsilon of zero.\n     *\n     * @param value Value to test\n     * @return {@code true} if this value is within epsilon to zero,\n     * {@code false} otherwise.\n     * @since 2.1\n     */\n    protected boolean isDefaultValue(double value) {\n        return FastMath.abs(value) < epsilon;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public RealVector add(RealVector v) {\n        checkVectorDimensions(v.getDimension());\n        if (v instanceof OpenMapRealVector) {\n            return add((OpenMapRealVector) v);\n        } else {\n            return super.add(v);\n        }\n    }\n\n    /**\n     * Optimized method to add two OpenMapRealVectors.\n     * It copies the larger vector, then iterates over the smaller.\n     *\n     * @param v Vector to add.\n     * @return the sum of {@code this} and {@code v}.\n     * @throws org.apache.commons.math3.exception.DimensionMismatchException\n     * if the dimensions do not match.\n     */\n    public OpenMapRealVector add(OpenMapRealVector v) {\n        checkVectorDimensions(v.getDimension());\n        boolean copyThis = entries.size() > v.entries.size();\n        OpenMapRealVector res = copyThis ? this.copy() : v.copy();\n        Iterator iter = copyThis ? v.entries.iterator() : entries.iterator();\n        OpenIntToDoubleHashMap randomAccess = copyThis ? entries : v.entries;\n        while (iter.hasNext()) {\n            iter.advance();\n            int key = iter.key();\n            if (randomAccess.containsKey(key)) {\n                res.setEntry(key, randomAccess.get(key) + iter.value());\n            } else {\n                res.setEntry(key, iter.value());\n            }\n        }\n        return res;\n    }\n\n    /**\n     * Optimized method to append a OpenMapRealVector.\n     * @param v vector to append\n     * @return The result of appending {@code v} to self\n     */\n    public OpenMapRealVector append(OpenMapRealVector v) {\n        OpenMapRealVector res = new OpenMapRealVector(this, v.getDimension());\n        Iterator iter = v.entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            res.setEntry(iter.key() + virtualSize, iter.value());\n        }\n        return res;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector append(RealVector v) {\n        if (v instanceof OpenMapRealVector) {\n            return append((OpenMapRealVector) v);\n        } else {\n            final OpenMapRealVector res = new OpenMapRealVector(this, v.getDimension());\n            for (int i = 0; i < v.getDimension(); i++) {\n                res.setEntry(i + virtualSize, v.getEntry(i));\n            }\n            return res;\n        }\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector append(double d) {\n        OpenMapRealVector res = new OpenMapRealVector(this, 1);\n        res.setEntry(virtualSize, d);\n        return res;\n    }\n\n    /**\n     * {@inheritDoc}\n     * @since 2.1\n     */\n    @Override\n    public OpenMapRealVector copy() {\n        return new OpenMapRealVector(this);\n    }\n\n    /**\n     * Optimized method to compute the dot product with an OpenMapRealVector.\n     * It iterates over the smallest of the two.\n     *\n     * @param v Cector to compute the dot product with.\n     * @return the dot product of {@code this} and {@code v}.\n     * @throws org.apache.commons.math3.exception.DimensionMismatchException\n     * if the dimensions do not match.\n     */\n    public double dotProduct(OpenMapRealVector v) {\n        checkVectorDimensions(v.getDimension());\n        boolean thisIsSmaller  = entries.size() < v.entries.size();\n        Iterator iter = thisIsSmaller  ? entries.iterator() : v.entries.iterator();\n        OpenIntToDoubleHashMap larger = thisIsSmaller  ? v.entries : entries;\n        double d = 0;\n        while(iter.hasNext()) {\n            iter.advance();\n            d += iter.value() * larger.get(iter.key());\n        }\n        return d;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public double dotProduct(RealVector v) {\n        if(v instanceof OpenMapRealVector) {\n            return dotProduct((OpenMapRealVector)v);\n        } else {\n            return super.dotProduct(v);\n        }\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector ebeDivide(RealVector v) {\n        checkVectorDimensions(v.getDimension());\n        OpenMapRealVector res = new OpenMapRealVector(this);\n        /*\n         * MATH-803: it is not sufficient to loop through non zero entries of\n         * this only. Indeed, if this[i] = 0d and v[i] = 0d, then\n         * this[i] / v[i] = NaN, and not 0d.\n         */\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key()));\n        }\n        return res;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector ebeMultiply(RealVector v) {\n        checkVectorDimensions(v.getDimension());\n        OpenMapRealVector res = new OpenMapRealVector(this);\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));\n        }\n        /*\n         * MATH-803: the above loop assumes that 0d * x  = 0d for any double x,\n         * which allows to consider only the non-zero entries of this. However,\n         * this fails if this[i] == 0d and (v[i] = NaN or v[i] = Infinity).\n         *\n         * These special cases are handled below.\n         */', 'aftercode': '    }\n\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector getSubVector(int index, int n) {\n        checkIndex(index);\n        if (n < 0) {\n            throw new NotPositiveException(LocalizedFormats.NUMBER_OF_ELEMENTS_SHOULD_BE_POSITIVE, n);\n        }\n        checkIndex(index + n - 1);\n        OpenMapRealVector res = new OpenMapRealVector(n);\n        int end = index + n;\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            int key = iter.key();\n            if (key >= index && key < end) {\n                res.setEntry(key - index, iter.value());\n            }\n        }\n        return res;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public int getDimension() {\n        return virtualSize;\n    }\n\n    /**\n     * Optimized method to compute distance.\n     *\n     * @param v Vector to compute distance to.\n     * @return the distance from {@code this} and {@code v}.\n     * @throws org.apache.commons.math3.exception.DimensionMismatchException\n     * if the dimensions do not match.\n     */\n    public double getDistance(OpenMapRealVector v) {\n        Iterator iter = entries.iterator();\n        double res = 0;\n        while (iter.hasNext()) {\n            iter.advance();\n            int key = iter.key();\n            double delta;\n            delta = iter.value() - v.getEntry(key);\n            res += delta * delta;\n        }\n        iter = v.getEntries().iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            int key = iter.key();\n            if (!entries.containsKey(key)) {\n                final double value = iter.value();\n                res += value * value;\n            }\n        }\n        return FastMath.sqrt(res);\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public double getDistance(RealVector v) {\n        checkVectorDimensions(v.getDimension());\n        if (v instanceof OpenMapRealVector) {\n            return getDistance((OpenMapRealVector) v);\n        } else {\n            return super.getDistance(v);\n        }\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public double getEntry(int index) {\n        checkIndex(index);\n        return entries.get(index);\n    }\n\n    /**\n     * Distance between two vectors.\n     * This method computes the distance consistent with\n     * L<sub>1</sub> norm, i.e. the sum of the absolute values of\n     * elements differences.\n     *\n     * @param v Vector to which distance is requested.\n     * @return distance between this vector and {@code v}.\n     */\n    public double getL1Distance(OpenMapRealVector v) {\n        double max = 0;\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            double delta = FastMath.abs(iter.value() - v.getEntry(iter.key()));\n            max += delta;\n        }\n        iter = v.getEntries().iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            int key = iter.key();\n            if (!entries.containsKey(key)) {\n                double delta = FastMath.abs(iter.value());\n                max +=  FastMath.abs(delta);\n            }\n        }\n        return max;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public double getL1Distance(RealVector v) {\n        checkVectorDimensions(v.getDimension());\n        if (v instanceof OpenMapRealVector) {\n            return getL1Distance((OpenMapRealVector) v);\n        } else {\n            return super.getL1Distance(v);\n        }\n    }\n\n    /**\n     * Optimized method to compute LInfDistance.\n     *\n     * @param v Vector to compute distance from.\n     * @return the LInfDistance.\n     */\n    private double getLInfDistance(OpenMapRealVector v) {\n        double max = 0;\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            double delta = FastMath.abs(iter.value() - v.getEntry(iter.key()));\n            if (delta > max) {\n                max = delta;\n            }\n        }\n        iter = v.getEntries().iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            int key = iter.key();\n            if (!entries.containsKey(key)) {\n                if (iter.value() > max) {\n                    max = iter.value();\n                }\n            }\n        }\n        return max;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public double getLInfDistance(RealVector v) {\n        checkVectorDimensions(v.getDimension());\n        if (v instanceof OpenMapRealVector) {\n            return getLInfDistance((OpenMapRealVector) v);\n        } else {\n            return super.getLInfDistance(v);\n        }\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public boolean isInfinite() {\n        boolean infiniteFound = false;\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            final double value = iter.value();\n            if (Double.isNaN(value)) {\n                return false;\n            }\n            if (Double.isInfinite(value)) {\n                infiniteFound = true;\n            }\n        }\n        return infiniteFound;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public boolean isNaN() {\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            if (Double.isNaN(iter.value())) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector mapAdd(double d) {\n        return copy().mapAddToSelf(d);\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector mapAddToSelf(double d) {\n        for (int i = 0; i < virtualSize; i++) {\n            setEntry(i, getEntry(i) + d);\n        }\n        return this;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public RealVector projection(RealVector v) {\n        checkVectorDimensions(v.getDimension());\n        return v.mapMultiply(dotProduct(v) / v.dotProduct(v));\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public void setEntry(int index, double value) {\n        checkIndex(index);\n        if (!isDefaultValue(value)) {\n            entries.put(index, value);\n        } else if (entries.containsKey(index)) {\n            entries.remove(index);\n        }\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public void setSubVector(int index, RealVector v) {\n        checkIndex(index);\n        checkIndex(index + v.getDimension() - 1);\n        for (int i = 0; i < v.getDimension(); i++) {\n            setEntry(i + index, v.getEntry(i));\n        }\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public void set(double value) {\n        for (int i = 0; i < virtualSize; i++) {\n            setEntry(i, value);\n        }\n    }\n\n    /**\n     * Optimized method to subtract OpenMapRealVectors.\n     *\n     * @param v Vector to subtract from {@code this}.\n     * @return the difference of {@code this} and {@code v}.\n     * @throws org.apache.commons.math3.exception.DimensionMismatchException\n     * if the dimensions do not match.\n     */\n    public OpenMapRealVector subtract(OpenMapRealVector v) {\n        checkVectorDimensions(v.getDimension());\n        OpenMapRealVector res = copy();\n        Iterator iter = v.getEntries().iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            int key = iter.key();\n            if (entries.containsKey(key)) {\n                res.setEntry(key, entries.get(key) - iter.value());\n            } else {\n                res.setEntry(key, -iter.value());\n            }\n        }\n        return res;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public RealVector subtract(RealVector v) {\n        checkVectorDimensions(v.getDimension());\n        if (v instanceof OpenMapRealVector) {\n            return subtract((OpenMapRealVector) v);\n        } else {\n            return super.subtract(v);\n        }\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public OpenMapRealVector unitVector() {\n        OpenMapRealVector res = copy();\n        res.unitize();\n        return res;\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public void unitize() {\n        double norm = getNorm();\n        if (isDefaultValue(norm)) {\n            throw new MathArithmeticException(LocalizedFormats.ZERO_NORM);\n        }\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            entries.put(iter.key(), iter.value() / norm);\n        }\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public double[] toArray() {\n        double[] res = new double[virtualSize];\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            res[iter.key()] = iter.value();\n        }\n        return res;\n    }\n\n    /**\n     * {@inheritDoc}\n     * Implementation Note: This works on exact values, and as a result\n     * it is possible for {@code a.subtract(b)} to be the zero vector, while\n     * {@code a.hashCode() != b.hashCode()}.\n     */\n    @Override\n    public int hashCode() {\n        final int prime = 31;\n        int result = 1;\n        long temp;\n        temp = Double.doubleToLongBits(epsilon);\n        result = prime * result + (int) (temp ^ (temp >>> 32));\n        result = prime * result + virtualSize;\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            temp = Double.doubleToLongBits(iter.value());\n            result = prime * result + (int) (temp ^ (temp >>32));\n        }\n        return result;\n    }\n\n    /**\n     * {@inheritDoc}\n     * Implementation Note: This performs an exact comparison, and as a result\n     * it is possible for {@code a.subtract(b}} to be the zero vector, while\n     * {@code  a.equals(b) == false}.\n     */\n    @Override\n    public boolean equals(Object obj) {\n        if (this == obj) {\n            return true;\n        }\n        if (!(obj instanceof OpenMapRealVector)) {\n            return false;\n        }\n        OpenMapRealVector other = (OpenMapRealVector) obj;\n        if (virtualSize != other.virtualSize) {\n            return false;\n        }\n        if (Double.doubleToLongBits(epsilon) !=\n            Double.doubleToLongBits(other.epsilon)) {\n            return false;\n        }\n        Iterator iter = entries.iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            double test = other.getEntry(iter.key());\n            if (Double.doubleToLongBits(test) != Double.doubleToLongBits(iter.value())) {\n                return false;\n            }\n        }\n        iter = other.getEntries().iterator();\n        while (iter.hasNext()) {\n            iter.advance();\n            double test = iter.value();\n            if (Double.doubleToLongBits(test) != Double.doubleToLongBits(getEntry(iter.key()))) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     *\n     * @return the percentage of none zero elements as a decimal percent.\n     * @since 2.2\n     */\n    public double getSparsity() {\n        return (double)entries.size()/(double)getDimension();\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public java.util.Iterator<Entry> sparseIterator() {\n        return new OpenMapSparseIterator();\n    }\n\n    /**\n     * Implementation of {@code Entry} optimized for OpenMap.\n     * This implementation does not allow arbitrary calls to {@code setIndex}\n     * since the order in which entries are returned is undefined.\n     */\n    protected class OpenMapEntry extends Entry {\n        /** Iterator pointing to the entry. */\n        private final Iterator iter;\n\n        /**\n         * Build an entry from an iterator point to an element.\n         *\n         * @param iter Iterator pointing to the entry.\n         */\n        protected OpenMapEntry(Iterator iter) {\n            this.iter = iter;\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public double getValue() {\n            return iter.value();\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public void setValue(double value) {\n            entries.put(iter.key(), value);\n        }\n\n        /** {@inheritDoc} */\n        @Override\n        public int getIndex() {\n            return iter.key();\n        }\n\n    }\n\n    /**\n     * Iterator class to do iteration over just the non-zero elements.\n     * This implementation is fail-fast, so cannot be used to modify\n     * any zero element.\n     */\n    protected class OpenMapSparseIterator implements java.util.Iterator<Entry> {\n        /** Underlying iterator. */\n        private final Iterator iter;\n        /** Current entry. */\n        private final Entry current;\n\n        /** Simple constructor. */\n        protected OpenMapSparseIterator() {\n            iter = entries.iterator();\n            current = new OpenMapEntry(iter);\n        }\n\n        /** {@inheritDoc} */\n        public boolean hasNext() {\n            return iter.hasNext();\n        }\n\n        /** {@inheritDoc} */\n        public Entry next() {\n            iter.advance();\n            return current;\n        }\n\n        /** {@inheritDoc} */\n        public void remove() {\n            throw new UnsupportedOperationException("Not supported");\n        }\n    }\n}', 'tree': 'MethodDeclaration modifiers public_ter ^ ^ annotations Annotation name Override_ter ^ ^ ^ ^ return_type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ name meth0 ^ ^ parameters FormalParameter type ReferenceType name RealVector_ter ^ ^ ^ ^ name par0 ^ ^ ^ ^ body StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ClassCreator type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ arguments This_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ WhileStatement condition MethodInvocation qualifier loc1 ^ ^ member hasNext_ter ^ ^ ^ ^ body BlockStatement statements StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ^ ', 'prob': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1], 'mode': 0, 'line': 374, 'isa': False, 'fl_score': 1}]
before@0 batch0 x: 0: root ^  ; []
after@0 batch0 x: 0: root ^  ; []
before@0 batch1 x: 0: root ^  ; []
after@0 batch1 x: 0: root ^  ; []
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root parameters ^ ^ ; ['root -> parameters']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root qualifier-qualifier entries_ter ^ ^  ^ ^ ; ['copy-qualifier']
copynode 0:  root LocalVariableDeclaration ^ ^ ; ['root -> LocalVariableDeclaration']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root MemberReference-MemberReference member loc0 ^ ^ ^  ^ ^ ; ['copy-MemberReference']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root parameters ^ ^ ; ['root -> parameters']
copynode 0:  root LocalVariableDeclaration ^ ^ ; ['root -> LocalVariableDeclaration']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root par0 ^ ^ ; ['copy-FormalParameter']
before@1 batch0 x: -11.909029006958008: root LocalVariableDeclaration ^ ^  ; ['root -> LocalVariableDeclaration']
after@1 batch0 x: -11.909029006958008: root LocalVariableDeclaration ^ ^  ; ['root -> LocalVariableDeclaration']
before@1 batch1 x: -15.424776077270508: root par0 ^ ^  ; ['copy-FormalParameter']
after@1 batch1 x: -15.424776077270508: root par0 ^ ^  ; ['copy-FormalParameter']
copynode -0.2817606031894684:  root modified ^ qualifier-qualifier entries_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-qualifier']
copynode -0.2817606031894684:  root modified ^ member-member iterator_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -0.2817606031894684:  root modified ^ LocalVariableDeclaration ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration']
copynode -1.4078117609024048:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -1.4078117609024048:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -0.2817606031894684:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -1.4078117609024048:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -1.4078117609024048:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -1.4078117609024048:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -1.4078117609024048:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -1.4078117609024048:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter']
copynode -1.4078117609024048:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -0.2817606031894684:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -1.4078117609024048:  root add ^ WhileStatement ^ ^ ; ['root -> add', 'root -> WhileStatement']
copynode -8.472602844238281:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -0.2817606031894684:  root modified ^ control ^ ^ ; ['root -> modified', 'root -> control']
copynode -0.2817606031894684:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -1.4078117609024048:  root add ^ Statement_ter ^ ^ ; ['root -> add', 'root -> Statement_ter']
copynode -9.021739959716797:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -9.570213317871094:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -9.66926383972168:  root parameters FormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter']
copynode -0.2817606031894684:  root modified ^ parameters ^ ^ ; ['root -> modified', 'root -> parameters']
copynode -10.02471923828125:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -0.2817606031894684:  root modified ^ ReturnStatement ^ ^ ; ['root -> modified', 'root -> ReturnStatement']
copynode -8.472602844238281:  root ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -9.021739959716797:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -11.39903736114502:  root qualifier-qualifier entries_ter ^ ^  unknown ^ ^ ^ ; ['copy-qualifier', 'start -> unknown']
copynode -0.2817606031894684:  root modified ^ TernaryExpression ^ ^ ; ['root -> modified', 'root -> TernaryExpression']
copynode -11.909029006958008:  root LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -9.66926383972168:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End']
copynode -11.39903736114502:  root qualifier-qualifier entries_ter ^ ^  par0 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> par0']
copynode -11.39903736114502:  root qualifier-qualifier entries_ter ^ ^  loc0 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> loc0']
copynode -10.02471923828125:  root StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -10.02471923828125:  root StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -10.02471923828125:  root StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.909029006958008:  root LocalVariableDeclaration type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ClassCreator type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ arguments This_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.021739959716797:  root return_type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'copy-return_type']
copynode -11.39903736114502:  root qualifier-qualifier entries_ter ^ ^  par1 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> par1']
copynode -11.909029006958008:  root LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -9.66926383972168:  root parameters MemberReference ^ ^ ^ ; ['root -> parameters', 'parameters -> MemberReference']
copynode -11.39903736114502:  root qualifier-qualifier entries_ter ^ ^  loc1 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> loc1']
copynode -11.39903736114502:  root qualifier-qualifier entries_ter ^ ^  LOG_ter ^ ^ ^ ; ['copy-qualifier', 'qualifier -> LOG_ter']
copynode -9.66926383972168:  root parameters FormalParameter type ReferenceType name RealVector_ter ^ ^ ^ ^ name par0 ^ ^ ^ ^ ^ ; ['root -> parameters', 'copy-parameters']
copynode -11.39903736114502:  root qualifier-qualifier entries_ter ^ ^  entries_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -9.66926383972168:  root parameters InferredFormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> InferredFormalParameter']
copynode -11.909029006958008:  root LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -11.39903736114502:  root qualifier-qualifier entries_ter ^ ^  Math_ter ^ ^ ^ ; ['copy-qualifier', 'qualifier -> Math_ter']
copynode -11.39903736114502:  root qualifier-qualifier entries_ter ^ ^  par2 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> par2']
copynode -11.909029006958008:  root LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -11.39903736114502:  root qualifier-qualifier entries_ter ^ ^  Double_ter ^ ^ ^ ; ['copy-qualifier', 'qualifier -> Double_ter']
copynode -9.021739959716797:  root return_type par0 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -8.472602844238281:  root ReturnStatement par0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -11.909029006958008:  root LocalVariableDeclaration modifiers ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators']
copynode -11.909029006958008:  root LocalVariableDeclaration par0 ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-FormalParameter']
copynode -9.66926383972168:  root parameters loc0 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -9.66926383972168:  root parameters Cast ^ ^ ^ ; ['root -> parameters', 'parameters -> Cast']
copynode -9.570213317871094:  root IfStatement par0 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -11.909029006958008:  root LocalVariableDeclaration unknown ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'start -> unknown']
copynode -9.021739959716797:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -9.66926383972168:  root parameters par0 ^ ^ ^ ; ['root -> parameters', 'copy-FormalParameter']
copynode -9.021739959716797:  root return_type loc0 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -9.66926383972168:  root parameters loc1 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -9.021739959716797:  root return_type loc1 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.02471923828125:  root StatementExpression par0 ^ ^ ^ ; ['root -> StatementExpression', 'copy-FormalParameter']
copynode -10.02471923828125:  root StatementExpression unknown ^ ^ ^ ; ['root -> StatementExpression', 'start -> unknown']
copynode -9.570213317871094:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -9.570213317871094:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -8.472602844238281:  root ReturnStatement unknown ^ ^ ^ ; ['root -> ReturnStatement', 'start -> unknown']
copynode -9.570213317871094:  root IfStatement condition ^ then_statement ^ else_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement else_statement']
copynode -8.472602844238281:  root ReturnStatement loc0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -8.472602844238281:  root ReturnStatement loc1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -11.909029006958008:  root LocalVariableDeclaration loc0 ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-VariableDeclarator']
copynode -9.66926383972168:  root parameters unknown ^ ^ ^ ; ['root -> parameters', 'start -> unknown']
copynode -11.909029006958008:  root LocalVariableDeclaration loc1 ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-VariableDeclarator']
copynode -10.02471923828125:  root StatementExpression label ^ expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> label expression']
copynode -10.02471923828125:  root StatementExpression loc1 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -9.570213317871094:  root IfStatement loc1 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -9.570213317871094:  root IfStatement loc0 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -10.02471923828125:  root StatementExpression loc0 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -0.0096992626786232:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -0.0096992626786232:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -0.0096992626786232:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -4.677318572998047:  root modified ^ ReturnStatement ^ ^ ; ['root -> modified', 'root -> ReturnStatement']
copynode -0.0096992626786232:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -0.0096992626786232:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter']
copynode -4.677318572998047:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.0096992626786232:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -0.0096992626786232:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -0.0096992626786232:  root add ^ ^ ; ['root -> add', 'root -> End']
copynode -0.0096992626786232:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter']
copynode -0.0096992626786232:  root add ^ add ^ ^ ; ['root -> add', 'root -> add']
copynode -9.484634399414062:  root MemberReference-MemberReference member loc0 ^ ^ ^  member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member']
copynode -10.52433967590332:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -4.677318572998047:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -4.677318572998047:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -11.634231567382812:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -9.484634399414062:  root MemberReference-MemberReference member loc0 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier member']
copynode -9.484634399414062:  root MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -4.677318572998047:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -4.677318572998047:  root modified ^ ContinueStatement_ter ^ ^ ; ['root -> modified', 'root -> ContinueStatement_ter']
copynode -13.251872062683105:  root parameters FormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter']
copynode -4.677318572998047:  root modified ^ Statement_ter ^ ^ ; ['root -> modified', 'root -> Statement_ter']
copynode -4.677318572998047:  root modified ^ control ^ ^ ; ['root -> modified', 'root -> control']
copynode -11.634231567382812:  root StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -4.677318572998047:  root modified ^ member-member loc0 ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -4.677318572998047:  root modified ^ LocalVariableDeclaration ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration']
copynode -9.484634399414062:  root MemberReference-MemberReference member loc0 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -11.634231567382812:  root StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -15.083168029785156:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -11.634231567382812:  root StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -13.251872062683105:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End']
copynode -15.060684204101562:  root LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -10.52433967590332:  root ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -9.484634399414062:  root MemberReference-MemberReference member loc0 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> selectors member']
copynode -15.060684204101562:  root LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -15.060684204101562:  root LocalVariableDeclaration type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ClassCreator type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ arguments This_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.484634399414062:  root MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -9.484634399414062:  root MemberReference-MemberReference member loc0 ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -9.484634399414062:  root MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -13.251872062683105:  root parameters MemberReference ^ ^ ^ ; ['root -> parameters', 'parameters -> MemberReference']
copynode -15.060684204101562:  root LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -10.52433967590332:  root ReturnStatement par0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -9.484634399414062:  root MemberReference-MemberReference member loc0 ^ ^ ^  postfix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators selectors member']
copynode -13.251872062683105:  root parameters FormalParameter type ReferenceType name RealVector_ter ^ ^ ^ ^ name par0 ^ ^ ^ ^ ^ ; ['root -> parameters', 'copy-parameters']
copynode -9.484634399414062:  root MemberReference-MemberReference member loc0 ^ ^ ^  postfix_operators ^ qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators qualifier member']
copynode -13.251872062683105:  root parameters InferredFormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> InferredFormalParameter']
copynode -15.060684204101562:  root LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -15.060684204101562:  root LocalVariableDeclaration modifiers ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators']
copynode -13.251872062683105:  root parameters loc0 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -13.251872062683105:  root parameters loc1 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -15.060684204101562:  root LocalVariableDeclaration unknown ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'start -> unknown']
copynode -15.060684204101562:  root LocalVariableDeclaration par0 ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-FormalParameter']
copynode -11.634231567382812:  root StatementExpression unknown ^ ^ ^ ; ['root -> StatementExpression', 'start -> unknown']
copynode -15.083168029785156:  root IfStatement par0 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -10.52433967590332:  root ReturnStatement loc0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -10.52433967590332:  root ReturnStatement loc1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -13.251872062683105:  root parameters Cast ^ ^ ^ ; ['root -> parameters', 'parameters -> Cast']
copynode -10.52433967590332:  root ReturnStatement unknown ^ ^ ^ ; ['root -> ReturnStatement', 'start -> unknown']
copynode -11.634231567382812:  root StatementExpression par0 ^ ^ ^ ; ['root -> StatementExpression', 'copy-FormalParameter']
copynode -13.251872062683105:  root parameters par0 ^ ^ ^ ; ['root -> parameters', 'copy-FormalParameter']
copynode -15.083168029785156:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -15.083168029785156:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -15.083168029785156:  root IfStatement condition ^ then_statement ^ else_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement else_statement']
copynode -11.634231567382812:  root StatementExpression label ^ expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> label expression']
copynode -15.060684204101562:  root LocalVariableDeclaration loc0 ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-VariableDeclarator']
copynode -11.634231567382812:  root StatementExpression loc1 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -13.251872062683105:  root parameters unknown ^ ^ ^ ; ['root -> parameters', 'start -> unknown']
copynode -11.634231567382812:  root StatementExpression loc0 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -15.060684204101562:  root LocalVariableDeclaration loc1 ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'copy-VariableDeclarator']
copynode -15.083168029785156:  root IfStatement loc0 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -15.083168029785156:  root IfStatement loc1 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
before@2 batch0 x: -31.920387268066406: root StatementExpression loc0 ^ ^ ^  ; ['root -> StatementExpression', 'copy-VariableDeclarator']
after@2 batch0 x: -31.920387268066406: root StatementExpression loc0 ^ ^ ^  ; ['root -> StatementExpression', 'copy-VariableDeclarator']
before@2 batch1 x: -34.4281063079834: root IfStatement loc1 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
after@2 batch1 x: -34.4281063079834: root IfStatement loc1 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -0.9925711452960968:  root modified ^ qualifier-qualifier entries_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown']
copynode -1.5443232357501984:  root modified ^ member-member iterator_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -1.8125422298908234:  root modified ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -2.117651581764221:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -2.1405856013298035:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -0.9925711452960968:  root modified ^ qualifier-qualifier entries_ter ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par0']
copynode -0.9925711452960968:  root modified ^ qualifier-qualifier entries_ter ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0']
copynode -5.1787876188755035:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -0.9925711452960968:  root modified ^ qualifier-qualifier entries_ter ^ ^  par1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par1']
copynode -1.8125422298908234:  root modified ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -1.5443232357501984:  root modified ^ member-member iterator_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -1.5443232357501984:  root modified ^ member-member iterator_ter ^ ^  getEntry_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.5443232357501984:  root modified ^ member-member iterator_ter ^ ^  hasNext_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.5443232357501984:  root modified ^ member-member iterator_ter ^ ^  advance_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.5443232357501984:  root modified ^ member-member iterator_ter ^ ^  value_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -5.932783722877502:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -0.9925711452960968:  root modified ^ qualifier-qualifier entries_ter ^ ^  loc1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc1']
copynode -2.1405856013298035:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.1405856013298035:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.5443232357501984:  root modified ^ member-member iterator_ter ^ ^  key_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.5443232357501984:  root modified ^ member-member iterator_ter ^ ^  getDimension_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.5443232357501984:  root modified ^ member-member iterator_ter ^ ^  key_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -6.832583069801331:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -2.1405856013298035:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.79493772983551:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -5.932783722877502:  root add ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -0.9925711452960968:  root modified ^ qualifier-qualifier entries_ter ^ ^  entries_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -0.9925711452960968:  root modified ^ qualifier-qualifier entries_ter ^ ^  LOG_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> LOG_ter']
copynode -1.5443232357501984:  root modified ^ member-member iterator_ter ^ ^  add_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> add_ter']
copynode -1.8125422298908234:  root modified ^ LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -8.106236100196838:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> End']
copynode -8.280712515115738:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -8.13309919834137:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -8.505152344703674:  root add ^ WhileStatement condition ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -7.7205740213394165:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -1.8125422298908234:  root modified ^ LocalVariableDeclaration type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ClassCreator type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ arguments This_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -8.739946752786636:  root modified ^ control EnhancedForControl ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl']
copynode -6.79493772983551:  root add ^ LocalVariableDeclaration type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ClassCreator type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ arguments This_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -0.9925711452960968:  root modified ^ qualifier-qualifier entries_ter ^ ^  Math_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> Math_ter']
copynode -0.9925711452960968:  root modified ^ qualifier-qualifier entries_ter ^ ^  par2 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par2']
copynode -5.1787876188755035:  root modified ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -9.130335450172424:  root add ^ Statement_ter ^ ^ ; ['root -> add', 'root -> Statement_ter', 'root -> End']
copynode -5.1787876188755035:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -0.9925711452960968:  root modified ^ qualifier-qualifier entries_ter ^ ^  Double_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> Double_ter']
copynode -5.1787876188755035:  root modified ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -8.597553007304668:  root ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -7.7205740213394165:  root add ^ control par0 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter']
copynode -1.8125422298908234:  root modified ^ LocalVariableDeclaration modifiers ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators']
copynode -8.597553007304668:  root ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -9.824819952249527:  root modified ^ parameters FormalParameter ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter']
copynode -8.597553007304668:  root ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -10.064683064818382:  root StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -9.570612868032185:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -10.18661442399025:  root modified ^ ReturnStatement expression ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -9.147109344601631:  root return_type ReferenceType name Iterator_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -9.76066105812788:  root parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -9.76066105812788:  root parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -9.147109344601631:  root return_type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -9.570612868032185:  root IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -10.635559797286987:  root ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -9.147109344601631:  root return_type ReferenceType name ^ arguments ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name arguments']
copynode -9.147109344601631:  root return_type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -9.147109344601631:  root return_type ReferenceType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name']
copynode -6.79493772983551:  root add ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -9.570612868032185:  root IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -8.597553007304668:  root ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -6.832583069801331:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -11.713094234466553:  root return_type BasicType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'BasicType -> name']
copynode -11.989625245332718:  root LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -1.8125422298908234:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.147109344601631:  root return_type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -11.924050718545914:  root modified ^ TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ; ['root -> modified', 'root -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -7.7205740213394165:  root add ^ control ForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl']
copynode -1.8125422298908234:  root modified ^ LocalVariableDeclaration par0 ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-FormalParameter']
copynode -9.824819952249527:  root modified ^ parameters ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> End']
copynode -11.920588195323944:  root qualifier-qualifier entries_ter ^ ^  unknown ^ ^ ^ ; ['copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.832583069801331:  root add ^ ReturnStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement']
copynode -12.226822853088379:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End', 'root -> End']
copynode -9.147109344601631:  root return_type ReferenceType name RealVector_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -8.106236100196838:  root add ^ BreakStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> StatementExpression']
copynode -8.505152344703674:  root add ^ WhileStatement condition MethodInvocation qualifier loc1 ^ ^ member hasNext_ter ^ ^ ^ ^ body BlockStatement statements StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'copy-WhileStatement']
copynode -10.064683064818382:  root StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -7.7205740213394165:  root add ^ control ForControl_ter ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl_ter']
copynode -9.76066105812788:  root parameters FormalParameter annotations ^ type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> annotations type name']
copynode -11.920588195323944:  root qualifier-qualifier entries_ter ^ ^  unknown ^ ^ StatementExpression ^ ^ ; ['copy-qualifier', 'start -> unknown', 'root -> StatementExpression']
copynode -10.635559797286987:  root ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement', 'root -> StatementExpression']
copynode -12.819035291671753:  root qualifier-qualifier entries_ter ^ ^  par0 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> par0', 'root -> End']
copynode -2.117651581764221:  root add ^ IfStatement par0 ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-FormalParameter']
copynode -8.106236100196838:  root add ^ BreakStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> IfStatement']
copynode -11.924050718545914:  root modified ^ TernaryExpression condition ^ ^ ^ ; ['root -> modified', 'root -> TernaryExpression', 'TernaryExpression -> condition']
copynode -6.79493772983551:  root add ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -9.147109344601631:  root return_type ReferenceType name ^ arguments ^ sub_type ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name arguments sub_type']
copynode -1.8125422298908234:  root modified ^ LocalVariableDeclaration unknown ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'start -> unknown']
copynode -9.76066105812788:  root parameters FormalParameter type ReferenceType name RealVector_ter ^ ^ ^ ^ name par0 ^ ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'copy-FormalParameter']
copynode -10.18661442399025:  root modified ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -8.13309919834137:  root add ^ AssertStatement condition ^ value ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition value']
copynode -6.79493772983551:  root add ^ LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -8.739946752786636:  root modified ^ control ForControl ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> ForControl']
copynode -0.18147321790456772:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -2.0748125687241554:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -0.18147321790456772:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -0.18147321790456772:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -0.18147321790456772:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.0277427807450294:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -4.856098264455795:  root modified ^ ReturnStatement expression ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -5.269749082624912:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -5.60894051939249:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> End']
copynode -6.521117568016052:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -6.908590711653233:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -7.6061519756913185:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> End']
copynode -7.059889234602451:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -4.0277427807450294:  root add ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.908590711653233:  root add ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -6.908590711653233:  root add ^ LocalVariableDeclaration type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ClassCreator type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ arguments This_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -6.521117568016052:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -5.269749082624912:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -6.521117568016052:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -8.93026963621378:  root add ^ add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> add', 'root -> StatementExpression']
copynode -6.521117568016052:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -5.60894051939249:  root add ^ BreakStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> StatementExpression']
copynode -9.642174780368805:  root MemberReference-MemberReference member loc0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.059889234602451:  root add ^ control par0 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter']
copynode -10.633852005004883:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -8.93026963621378:  root add ^ add ^ IfStatement ^ ^ ; ['root -> add', 'root -> add', 'root -> IfStatement']
copynode -9.642174780368805:  root MemberReference-MemberReference member loc0 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.856098264455795:  root modified ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.521117568016052:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -5.60894051939249:  root add ^ BreakStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> BreakStatement_ter']
copynode -5.269749082624912:  root add ^ ReturnStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement']
copynode -5.60894051939249:  root add ^ BreakStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> IfStatement']
copynode -9.642174780368805:  root MemberReference-MemberReference member loc0 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -10.560624845325947:  root ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -5.269749082624912:  root add ^ ReturnStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> BreakStatement_ter']
copynode -10.560624845325947:  root ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -11.819436848163605:  root StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -7.6061519756913185:  root add ^ ContinueStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> StatementExpression']
copynode -9.642174780368805:  root MemberReference-MemberReference member loc0 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -7.059889234602451:  root add ^ control ForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl']
copynode -5.60894051939249:  root add ^ BreakStatement_ter ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> ContinueStatement_ter']
copynode -10.560624845325947:  root ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -12.368473052978516:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -2.0748125687241554:  root add ^ IfStatement par0 ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-FormalParameter']
copynode -5.269749082624912:  root add ^ ReturnStatement_ter ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement_ter']
copynode -6.908590711653233:  root add ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -7.059889234602451:  root add ^ control ForControl_ter ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl_ter']
copynode -12.094891548156738:  root MemberReference-MemberReference member loc0 ^ ^ ^  qualifier loc0 ^ ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -5.269749082624912:  root add ^ ReturnStatement_ter ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ContinueStatement_ter']
copynode -8.93026963621378:  root add ^ add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> add', 'root -> ReturnStatement']
copynode -5.60894051939249:  root add ^ BreakStatement_ter ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> ReturnStatement_ter']
copynode -5.60894051939249:  root add ^ BreakStatement_ter ^ control ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> control']
copynode -6.521117568016052:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -13.11762809753418:  root modified ^ ContinueStatement_ter ^ ^ ; ['root -> modified', 'root -> ContinueStatement_ter', 'root -> End']
copynode -7.6061519756913185:  root add ^ ContinueStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> IfStatement']
copynode -12.287970781326294:  root MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators !_ter ^ ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -12.094891548156738:  root MemberReference-MemberReference member loc0 ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -5.60894051939249:  root add ^ BreakStatement_ter ^ WhileStatement ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> WhileStatement']
copynode -5.269749082624912:  root add ^ ReturnStatement_ter ^ control ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> control']
copynode -7.6061519756913185:  root add ^ ContinueStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> BreakStatement_ter']
copynode -5.269749082624912:  root add ^ ReturnStatement_ter ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement']
copynode -12.287970781326294:  root MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators -_ter ^ ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter']
copynode -5.60894051939249:  root add ^ BreakStatement_ter ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> ReturnStatement']
copynode -9.642174780368805:  root MemberReference-MemberReference member loc0 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -13.769003868103027:  root modified ^ Statement_ter ^ ^ ; ['root -> modified', 'root -> Statement_ter', 'root -> End']
copynode -13.788262367248535:  root modified ^ control EnhancedForControl ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl']
copynode -4.0277427807450294:  root add ^ ReturnStatement par0 ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-FormalParameter']
copynode -8.93026963621378:  root add ^ add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> add', 'root -> ReturnStatement_ter']
copynode -0.18147321790456772:  root add ^ StatementExpression unknown ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'start -> unknown']
copynode -10.633852005004883:  root modified ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -12.287970781326294:  root MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ~_ter ^ ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ~_ter']
copynode -10.560624845325947:  root ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -14.10414433479309:  root StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -13.403279304504395:  root parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -6.908590711653233:  root add ^ LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -5.269749082624912:  root add ^ ReturnStatement_ter ^ WhileStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> WhileStatement']
copynode -14.298449516296387:  root modified ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -14.239957809448242:  root modified ^ member-member loc0 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -12.287970781326294:  root MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ++_ter ^ ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ++_ter']
copynode -13.403279304504395:  root parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -7.6061519756913185:  root add ^ ContinueStatement_ter ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> ContinueStatement_ter']
copynode -12.094891548156738:  root MemberReference-MemberReference member loc0 ^ ^ ^  qualifier par0 ^ ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -14.510867357254028:  root StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.521117568016052:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -8.93026963621378:  root add ^ add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> add', 'root -> BreakStatement_ter']
copynode -10.633852005004883:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -12.094891548156738:  root MemberReference-MemberReference member loc0 ^ ^ ^  qualifier loc1 ^ ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc1']
copynode -14.415947914123535:  root MemberReference-MemberReference member loc0 ^ ^ ^  postfix_operators ++_ter ^ ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -10.633852005004883:  root modified ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -5.60894051939249:  root add ^ BreakStatement_ter ^ DoStatement ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> DoStatement']
copynode -9.642174780368805:  root MemberReference-MemberReference member loc0 ^ ^ ^  member e_ter ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'member -> e_ter']
copynode -6.521117568016052:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -7.6061519756913185:  root add ^ ContinueStatement_ter ^ control ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> control']
copynode -6.908590711653233:  root add ^ LocalVariableDeclaration modifiers ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators']
copynode -11.819436848163605:  root StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -9.642174780368805:  root MemberReference-MemberReference member loc0 ^ ^ ^  member advance_ter ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.6061519756913185:  root add ^ ContinueStatement_ter ^ WhileStatement ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> WhileStatement']
before@3 batch0 x: -13.626084715127945: root modified ^ control ForControl ^ ^ ^  ; ['root -> modified', 'root -> control', 'control -> ForControl']
after@3 batch0 x: -13.626084715127945: root modified ^ control ForControl ^ ^ ^  ; ['root -> modified', 'root -> control', 'control -> ForControl']
before@3 batch1 x: -15.213916696608067: root add ^ ContinueStatement_ter ^ WhileStatement ^ ^  ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> WhileStatement']
after@3 batch1 x: -15.213916696608067: root add ^ ContinueStatement_ter ^ WhileStatement ^ ^  ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> WhileStatement']
copynode -1.2310669720172882:  root modified ^ qualifier-qualifier entries_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -1.6301727816462517:  root modified ^ member-member iterator_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -1.8443437814712524:  root modified ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -2.17447417229414:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -2.1179821441473905:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -3.006816178560257:  root modified ^ qualifier-qualifier entries_ter ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par0', 'root -> End']
copynode -2.1179821441473905:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -3.9349530041217804:  root modified ^ qualifier-qualifier entries_ter ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0', 'root -> End']
copynode -2.1179821441473905:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -2.17447417229414:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -5.3151810467243195:  root modified ^ qualifier-qualifier entries_ter ^ ^  par1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par1', 'root -> End']
copynode -5.465555936098099:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter']
copynode -5.232445441186428:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -5.885757237672806:  root modified ^ member-member iterator_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
copynode -5.961517125368118:  root modified ^ member-member iterator_ter ^ ^  getEntry_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.049310475587845:  root modified ^ member-member iterator_ter ^ ^  hasNext_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.24672868847847:  root modified ^ member-member iterator_ter ^ ^  advance_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.328464299440384:  root modified ^ member-member iterator_ter ^ ^  value_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.466237336397171:  root modified ^ qualifier-qualifier entries_ter ^ ^  loc1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc1', 'root -> End']
copynode -6.489967048168182:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -5.232445441186428:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -6.5771843791008:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.771775990724564:  root modified ^ member-member iterator_ter ^ ^  key_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.791060715913773:  root modified ^ member-member iterator_ter ^ ^  getDimension_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.796603947877884:  root modified ^ member-member iterator_ter ^ ^  key_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -2.17447417229414:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -6.951939731836319:  root add ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -6.358269482851028:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.917522132396698:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.010866761207581:  root add ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.092552453279495:  root modified ^ qualifier-qualifier entries_ter ^ ^  entries_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -7.2110646069049835:  root modified ^ qualifier-qualifier entries_ter ^ ^  LOG_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> LOG_ter', 'root -> End']
copynode -2.1179821441473905:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member hasNext_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -6.358269482851028:  root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -7.744419366121292:  root modified ^ member-member iterator_ter ^ ^  add_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> add_ter', 'root -> End']
copynode -2.17447417229414:  root add ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -2.17447417229414:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -2.1179821441473905:  root add ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -8.021303921937943:  root modified ^ LocalVariableDeclaration annotations Annotation name Override_ter ^ ^ ^ ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators', 'copy-annotations']
copynode -8.64259460568428:  root modified ^ LocalVariableDeclaration type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ClassCreator type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ arguments This_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -8.633180439472198:  root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -8.770984018221498:  root modified ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -6.358269482851028:  root add ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -8.859473496675491:  root modified ^ qualifier-qualifier entries_ter ^ ^  Math_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> Math_ter', 'root -> End']
copynode -8.280907560518244:  root modified ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -2.1179821441473905:  root add ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -8.284777641296387:  root add ^ AssertStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation']
copynode -9.012730866670609:  root modified ^ qualifier-qualifier entries_ter ^ ^  par2 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par2', 'root -> End']
copynode -9.108861833810806:  root modified ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -8.83717954158783:  root add ^ LocalVariableDeclaration type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ClassCreator type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ arguments This_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -9.214660555124283:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -2.17447417229414:  root add ^ StatementExpression expression Cast ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast']
copynode -8.530692249536514:  root add ^ WhileStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation']
copynode -9.368947297334671:  root modified ^ qualifier-qualifier entries_ter ^ ^  Double_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> Double_ter', 'root -> End']
copynode -8.280907560518244:  root modified ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -9.396964937448502:  root modified ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.489967048168182:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -6.5771843791008:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -6.917522132396698:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -9.510031513869762:  root ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -8.284777641296387:  root add ^ AssertStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MemberReference']
copynode -9.5412677526474:  root add ^ control par0 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter', 'root -> End']
copynode -6.358269482851028:  root add ^ ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -1.8443437814712524:  root modified ^ LocalVariableDeclaration type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType']
copynode -9.730149060487747:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators', 'modifiers -> final_ter']
copynode -8.530692249536514:  root add ^ WhileStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MethodInvocation']
copynode -5.232445441186428:  root modified ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -10.098942510783672:  root ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -8.530692249536514:  root add ^ WhileStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MemberReference']
copynode -8.284777641296387:  root add ^ AssertStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MethodInvocation']
copynode -8.021303921937943:  root modified ^ LocalVariableDeclaration annotations Annotation ^ ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators', 'annotations -> Annotation']
copynode -10.200331529340474:  root IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -1.2310669720172882:  root modified ^ qualifier-qualifier entries_ter ^ ^  unknown ^ ^ StatementExpression ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown', 'root -> StatementExpression']
copynode -8.280907560518244:  root modified ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -2.1179821441473905:  root add ^ IfStatement condition Cast ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast']
copynode -6.489967048168182:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -10.425399854779243:  root return_type ReferenceType name Iterator_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType', 'root -> End']
copynode -6.5771843791008:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -8.83717954158783:  root add ^ LocalVariableDeclaration type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ClassCreator type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ arguments This_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> StatementExpression']
copynode -10.487807743251324:  root parameters FormalParameter modifiers final_ter ^ ^ type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name', 'modifiers -> final_ter']
copynode -6.358269482851028:  root add ^ ReturnStatement expression This_ter ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This_ter']
copynode -6.917522132396698:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -10.614125661551952:  root parameters FormalParameter type ReferenceType ^ ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name', 'type -> ReferenceType']
copynode -10.643604353070259:  root return_type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType', 'root -> End']
copynode -9.913854338228703:  root modified ^ parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -9.808108203113079:  root ReturnStatement expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -9.913854338228703:  root modified ^ parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> modified', 'root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -7.010866761207581:  root add ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> StatementExpression']
copynode -2.17447417229414:  root add ^ StatementExpression expression ClassCreator ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> ClassCreator']
copynode -5.232445441186428:  root modified ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -8.021303921937943:  root modified ^ LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators', 'annotations -> End']
copynode -10.222601853311062:  root modified ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -8.284777641296387:  root add ^ AssertStatement condition MethodInvocation qualifier loc1 ^ ^ member hasNext_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'copy-condition']
copynode -6.358269482851028:  root add ^ ReturnStatement expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'copy-expression']
copynode -0.31948374956846237:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -2.0751457545848098:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -2.899557314813137:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -2.0751457545848098:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -3.43044301122427:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -0.31948374956846237:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -2.0751457545848098:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -3.92719479650259:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -4.111335925757885:  root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -4.869708137586713:  root modified ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -4.111335925757885:  root add ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -4.111335925757885:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -0.31948374956846237:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -2.0751457545848098:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member hasNext_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -2.899557314813137:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -4.869708137586713:  root modified ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -0.31948374956846237:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -3.43044301122427:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -3.92719479650259:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -0.31948374956846237:  root add ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -7.4626776948571205:  root add ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -6.828360587358475:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.70478842407465:  root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -4.869708137586713:  root modified ^ ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -4.111335925757885:  root add ^ ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -4.869708137586713:  root modified ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -4.869708137586713:  root modified ^ ReturnStatement expression TernaryExpression ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression']
copynode -0.31948374956846237:  root add ^ StatementExpression expression Cast ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast']
copynode -2.0751457545848098:  root add ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -8.282346166670322:  root add ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -4.869708137586713:  root modified ^ ReturnStatement expression Cast ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Cast']
copynode -6.828360587358475:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -2.899557314813137:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -4.111335925757885:  root add ^ ReturnStatement expression This_ter ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This_ter']
copynode -6.828360587358475:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -3.43044301122427:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -6.828360587358475:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.111335925757885:  root add ^ ReturnStatement expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'copy-expression']
copynode -4.869708137586713:  root modified ^ ReturnStatement expression This ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This']
copynode -8.452070273458958:  root add ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> StatementExpression']
copynode -8.49582103639841:  root add ^ LocalVariableDeclaration type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ClassCreator type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ arguments This_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> StatementExpression']
copynode -4.111335925757885:  root add ^ ReturnStatement expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'copy-expression']
copynode -8.729832530021667:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  postfix_operators ++_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -9.119607038795948:  root add ^ add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -9.06616012006998:  root add ^ ReturnStatement_ter ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -2.0751457545848098:  root add ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -8.452070273458958:  root add ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -0.31948374956846237:  root add ^ StatementExpression expression ClassCreator ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> ClassCreator']
copynode -4.111335925757885:  root add ^ ReturnStatement expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Assignment']
copynode -8.49582103639841:  root add ^ LocalVariableDeclaration type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer ClassCreator type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ arguments This_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration', 'root -> End']
copynode -3.92719479650259:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -4.111335925757885:  root add ^ ReturnStatement expression This ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This']
copynode -0.31948374956846237:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'copy-expression']
copynode -2.899557314813137:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> ReturnStatement_ter']
copynode -4.869708137586713:  root modified ^ ReturnStatement expression ClassCreator ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator']
copynode -4.111335925757885:  root add ^ ReturnStatement expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'copy-expression']
copynode -9.525539554655552:  root add ^ BreakStatement_ter ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -0.31948374956846237:  root add ^ StatementExpression expression BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> BinaryOperation']
copynode -9.429200291633606:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  qualifier loc0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -8.729832530021667:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  postfix_operators --_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> --_ter']
copynode -9.110556721687317:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators -_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter']
copynode -9.110556721687317:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ~_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ~_ter']
copynode -2.0751457545848098:  root add ^ IfStatement condition Cast ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast']
copynode -2.899557314813137:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> BreakStatement_ter']
copynode -10.492772340774536:  root MemberReference-MemberReference member loc0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -3.92719479650259:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> ReturnStatement_ter']
copynode -0.31948374956846237:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'copy-expression']
copynode -10.70206630975008:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -10.923060573637486:  root add ^ add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -4.869708137586713:  root modified ^ ReturnStatement expression This_ter ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This_ter']
copynode -10.685327209532261:  root add ^ control par0 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter', 'root -> End']
copynode -6.828360587358475:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -3.43044301122427:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> ReturnStatement_ter']
copynode -11.022599399089813:  root MemberReference-MemberReference member loc0 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -3.43044301122427:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> BreakStatement_ter']
copynode -11.11159572005272:  root modified ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -9.429200291633606:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  qualifier loc1 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc1']
copynode -4.869708137586713:  root modified ^ ReturnStatement expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Assignment']
copynode -11.173890985548496:  root add ^ BreakStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> BreakStatement_ter', 'root -> End']
copynode -11.224956430494785:  root add ^ ReturnStatement_ter ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement', 'IfStatement -> condition']
copynode -9.110556721687317:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators ++_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ++_ter']
copynode -11.338264860212803:  root add ^ BreakStatement_ter ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> IfStatement', 'IfStatement -> condition']
copynode -11.15116012096405:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  selectors ArraySelector ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector']
copynode -9.06616012006998:  root add ^ ReturnStatement_ter ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.899557314813137:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> ReturnStatement']
copynode -11.442825235426426:  root add ^ ReturnStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> BreakStatement_ter', 'root -> End']
copynode -2.0751457545848098:  root add ^ IfStatement condition TernaryExpression ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> TernaryExpression']
copynode -6.828360587358475:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -9.525539554655552:  root add ^ BreakStatement_ter ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.899557314813137:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> ContinueStatement_ter']
copynode -11.408412106335163:  root ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -11.40633887052536:  root MemberReference-MemberReference member loc0 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -2.0751457545848098:  root add ^ IfStatement condition ClassReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> ClassReference']
copynode -9.110556721687317:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators !_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
before@4 batch0 x: -11.244527608156204: root add ^ ReturnStatement expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'copy-expression']
after@4 batch0 x: -11.244527608156204: root add ^ ReturnStatement expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'copy-expression']
before@4 batch1 x: -11.668753027915955: root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators !_ter ^ ^ member ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
after@4 batch1 x: -11.668753027915955: root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  prefix_operators !_ter ^ ^ member ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -1.8447475055872928:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -2.6463001320662443:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.263590008020401:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -2.263590008020401:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.263590008020401:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -2.263590008020401:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.3141525934042875:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.856105975806713:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -3.3141525934042875:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -4.452418083936209:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -4.452418083936209:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -1.8447475055872928:  root modified ^ LocalVariableDeclaration type ReferenceType name ^ arguments ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments']
copynode -3.3141525934042875:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.542057022452354:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> ReferenceType']
copynode -5.55453871935606:  root modified ^ StatementExpression expression MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -3.3141525934042875:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -3.3141525934042875:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -1.8447475055872928:  root modified ^ LocalVariableDeclaration type ReferenceType name ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name']
copynode -3.3141525934042875:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member']
copynode -3.3141525934042875:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -6.580760918557644:  root modified ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -3.3141525934042875:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member']
copynode -4.452418083936209:  root add ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -2.263590008020401:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -6.951461724936962:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -7.03679296374321:  root add ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -2.263590008020401:  root add ^ StatementExpression expression MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -3.3141525934042875:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.9561226409859955:  root add ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -7.3369529197516385:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member hasNext_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.4642700254917145:  root add ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -1.8447475055872928:  root modified ^ LocalVariableDeclaration type ReferenceType name ^ sub_type ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name sub_type']
copynode -3.3141525934042875:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -8.031979016959667:  root add ^ StatementExpression expression This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors']
copynode -2.263590008020401:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -4.452418083936209:  root add ^ IfStatement condition MemberReference prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -1.8447475055872928:  root modified ^ LocalVariableDeclaration type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -2.263590008020401:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -1.8447475055872928:  root modified ^ LocalVariableDeclaration type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -8.069956536084646:  root add ^ IfStatement condition This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors']
copynode -8.553278058767319:  root modified ^ LocalVariableDeclaration annotations Annotation name Override_ter ^ ^ ^ ^ type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators', 'copy-annotations', 'type -> ReferenceType']
copynode -7.761283807456493:  root add ^ StatementExpression expression SuperMethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> arguments member']
copynode -1.8447475055872928:  root modified ^ LocalVariableDeclaration type ReferenceType name ^ dimensions ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name dimensions']
copynode -6.9561226409859955:  root add ^ LocalVariableDeclaration type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -7.761283807456493:  root add ^ StatementExpression expression SuperMethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> member']
copynode -2.6463001320662443:  root add ^ IfStatement condition BinaryOperation operator /_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -8.913770784070948:  root modified ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -8.935996055603027:  root add ^ AssertStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -1.8447475055872928:  root modified ^ LocalVariableDeclaration type ReferenceType name ^ dimensions ^ arguments ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name dimensions arguments']
copynode -2.263590008020401:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -2.263590008020401:  root add ^ StatementExpression expression MethodInvocation selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors arguments member']
copynode -1.8447475055872928:  root modified ^ LocalVariableDeclaration type ReferenceType name ^ arguments ^ sub_type ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments sub_type']
copynode -9.22103551030159:  root add ^ WhileStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -8.916606659680838:  root add ^ IfStatement condition Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal', 'Literal -> value']
copynode -6.9561226409859955:  root add ^ LocalVariableDeclaration type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -1.8447475055872928:  root modified ^ LocalVariableDeclaration type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -7.4642700254917145:  root add ^ ReturnStatement expression MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.3369529197516385:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member hasNext_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> StatementExpression']
copynode -8.069956536084646:  root add ^ IfStatement condition This prefix_operators ^ selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> prefix_operators selectors']
copynode -8.849115639925003:  root add ^ ReturnStatement expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.55453871935606:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -9.219805173575878:  root add ^ StatementExpression expression Cast type ^ expression ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast', 'Cast -> type expression']
copynode -9.789926797151566:  root add ^ ReturnStatement expression BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -9.71402645111084:  root add ^ AssertStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -5.55453871935606:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -0.36909887194633484:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -0.36909887194633484:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -0.36909887194633484:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -2.873849305877229:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -0.36909887194633484:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -3.5462725088000298:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -3.0933069322200026:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.891059431800386:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -3.0933069322200026:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -0.36909887194633484:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -3.0933069322200026:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -4.83163296431303:  root add ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -3.891059431800386:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -3.0933069322200026:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -5.760307602584362:  root add ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -5.761730186641216:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -3.891059431800386:  root add ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -2.873849305877229:  root add ^ IfStatement condition BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.0933069322200026:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -3.0933069322200026:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.915133509406587:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member hasNext_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -0.36909887194633484:  root add ^ StatementExpression expression MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -5.356431560590863:  root modified ^ ReturnStatement expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.593513958156109:  root add ^ StatementExpression expression This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors']
copynode -6.52161748893559:  root modified ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -3.0933069322200026:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.51762431114912:  root add ^ ReturnStatement expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.356431560590863:  root modified ^ ReturnStatement expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.0933069322200026:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member']
copynode -5.51762431114912:  root add ^ ReturnStatement expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.111402712762356:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.0933069322200026:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member']
copynode -0.36909887194633484:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -4.83163296431303:  root add ^ ReturnStatement expression MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.111402712762356:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.6637327298521996:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -5.356431560590863:  root modified ^ ReturnStatement expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.915133509406587:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member hasNext_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> StatementExpression']
copynode -5.356431560590863:  root modified ^ ReturnStatement expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.9171872064471245:  root add ^ StatementExpression expression SuperMethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> arguments member']
copynode -5.51762431114912:  root add ^ ReturnStatement expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.891059431800386:  root add ^ IfStatement condition MemberReference prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -7.571718484163284:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -5.51762431114912:  root add ^ ReturnStatement expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.908898316323757:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -7.892932491376996:  root modified ^ ReturnStatement expression BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.908898316323757:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -7.984656887128949:  root modified ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -6.9171872064471245:  root add ^ StatementExpression expression SuperMethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> member']
copynode -3.0933069322200026:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -8.105817394331098:  root modified ^ ReturnStatement expression TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -7.923401288688183:  root add ^ ReturnStatement expression BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.6637327298521996:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.111402712762356:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -8.117961399257183:  root add ^ StatementExpression expression Cast type ^ expression ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast', 'Cast -> type expression']
copynode -8.4781554043293:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -8.478906832635403:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement', 'IfStatement -> condition']
copynode -6.6637327298521996:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -5.356431560590863:  root modified ^ ReturnStatement expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -0.36909887194633484:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -8.395253734663129:  root modified ^ ReturnStatement expression Cast type ^ expression ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Cast', 'Cast -> type expression']
copynode -0.36909887194633484:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -8.6100580021739:  root add ^ ReturnStatement expression This_ter ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This_ter', 'root -> End']
copynode -8.194524321326753:  root add ^ IfStatement condition This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors']
copynode -7.466259606182575:  root add ^ LocalVariableDeclaration type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -8.748600274324417:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -6.52161748893559:  root modified ^ ReturnStatement expression MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.466259606182575:  root add ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -6.908898316323757:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -7.466259606182575:  root add ^ LocalVariableDeclaration type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -5.761730186641216:  root add ^ StatementExpression expression MemberReference postfix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators qualifier member']
copynode -8.948362551629543:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement', 'IfStatement -> condition']
copynode -5.51762431114912:  root add ^ ReturnStatement expression MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -9.030777245759964:  root modified ^ MemberReference-MemberReference member loc0 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -5.51762431114912:  root add ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.356431560590863:  root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -0.36909887194633484:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -9.085321120917797:  root add ^ ReturnStatement expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'copy-expression', 'root -> End']
copynode -9.102712230756879:  root modified ^ ReturnStatement expression This selectors ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This', 'This -> selectors']
copynode -5.761730186641216:  root add ^ StatementExpression expression MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -9.162656478583813:  root add ^ ReturnStatement expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'copy-expression', 'root -> End']
copynode -9.250373475253582:  root add ^ add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -6.111402712762356:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -7.716047950088978:  root add ^ control EnhancedForControl var VariableDeclaration ^ ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable', 'var -> VariableDeclaration']
copynode -5.51762431114912:  root add ^ ReturnStatement expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -6.908898316323757:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -9.28110697120428:  root add ^ ReturnStatement_ter ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -7.923401288688183:  root add ^ ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'copy-BinaryOperation']
copynode -9.424558810889721:  root add ^ ReturnStatement expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -9.450789175927639:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement', 'IfStatement -> condition']
before@5 batch0 x: -9.983696453273296: root modified ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
after@5 batch0 x: -9.983696453273296: root modified ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
before@5 batch1 x: -9.451388262794353: root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ IfStatement condition ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement', 'IfStatement -> condition']
after@5 batch1 x: -9.451388262794353: root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ IfStatement condition ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement', 'IfStatement -> condition']
copynode -1.8964711273729336:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator']
copynode -2.6488098925037775:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -2.6488098925037775:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -3.48785200715065:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -3.9722518026828766:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.051870256662369:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -3.368465334177017:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -1.8964711273729336:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -4.856308532893308:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -4.28530084589147:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -5.106790299207205:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -5.351985747605795:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -3.368465334177017:  root add ^ StatementExpression expression MethodInvocation arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -3.368465334177017:  root add ^ StatementExpression expression MethodInvocation arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.413050136965467:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ arguments ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name']
copynode -5.542452040826902:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -2.6488098925037775:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -5.596673335880041:  root modified ^ StatementExpression expression MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -5.222623641282553:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -3.368465334177017:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -3.368465334177017:  root add ^ StatementExpression expression MethodInvocation arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This_ter']
copynode -3.368465334177017:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -4.28530084589147:  root add ^ IfStatement condition MethodInvocation qualifier entries_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -4.28530084589147:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -6.074147815495962:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -2.6488098925037775:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -3.48785200715065:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.315942401677603:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -6.3489872167410795:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -2.6488098925037775:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -2.6488098925037775:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -6.196823559206678:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name']
copynode -5.4407442758383695:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -5.846727008611197:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0']
copynode -4.051870256662369:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -5.4407442758383695:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.581672271480784:  root modified ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -4.051870256662369:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -4.28530084589147:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -6.709472532063955:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter']
copynode -3.368465334177017:  root add ^ StatementExpression expression MethodInvocation arguments This ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This']
copynode -5.222623641282553:  root add ^ IfStatement condition MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -7.041797773446888:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -2.6488098925037775:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter']
copynode -3.48785200715065:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1']
copynode -6.95419517159462:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0']
copynode -5.222623641282553:  root add ^ IfStatement condition MemberReference member par0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.48785200715065:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -3.368465334177017:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -7.311877399682999:  root add ^ StatementExpression expression MethodInvocation selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation']
copynode -3.368465334177017:  root add ^ StatementExpression expression MethodInvocation arguments BinaryOperation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> BinaryOperation']
copynode -5.4407442758383695:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -5.846727008611197:  root add ^ IfStatement condition MethodInvocation qualifier entries_ter ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier']
copynode -7.41159111680463:  root add ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator']
copynode -4.051870256662369:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
copynode -6.7764222572150175:  root add ^ IfStatement condition MemberReference qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -3.48785200715065:  root add ^ StatementExpression expression MethodInvocation qualifier entries_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.846727008611197:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0']
copynode -5.4407442758383695:  root add ^ IfStatement condition MethodInvocation qualifier entries_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -7.0376270934939384:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -3.368465334177017:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.7764222572150175:  root add ^ IfStatement condition MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -7.813398800295545:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ sub_type ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name sub_type', 'copy-name']
copynode -7.945300931722159:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter']
copynode -7.622283652424812:  root add ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -2.6488098925037775:  root add ^ IfStatement condition BinaryOperation operator instanceof_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> instanceof_ter']
copynode -2.6488098925037775:  root add ^ IfStatement condition BinaryOperation operator <=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <=_ter']
copynode -4.28530084589147:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
copynode -8.169322724133963:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -8.163544327020645:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'qualifier -> loc0']
copynode -5.846727008611197:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown']
copynode -7.394870633870596:  root add ^ IfStatement condition MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -7.0376270934939384:  root add ^ StatementExpression expression MemberReference postfix_operators --_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> --_ter']
copynode -8.272056541842176:  root modified ^ LocalVariableDeclaration type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -8.45663133263588:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -8.472419701021863:  root modified ^ LocalVariableDeclaration type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -0.9538092315196991:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -1.754601925611496:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -2.425010174512863:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -3.419639080762863:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -2.9154098216386046:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -3.5465042785072:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -0.9538092315196991:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -2.425010174512863:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -1.754601925611496:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -2.9154098216386046:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -4.15560868717148:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -4.504229459533235:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.9378923509211745:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -4.80316898226738:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0']
copynode -2.425010174512863:  root add ^ StatementExpression expression MethodInvocation arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -2.9154098216386046:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.106732282409212:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -0.9538092315196991:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -0.9538092315196991:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1']
copynode -2.425010174512863:  root add ^ StatementExpression expression MethodInvocation arguments BinaryOperation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> BinaryOperation']
copynode -4.681577238807222:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -4.959948040544987:  root add ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -1.754601925611496:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -2.425010174512863:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -4.681577238807222:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.726228151092073:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -1.754601925611496:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
copynode -2.425010174512863:  root add ^ StatementExpression expression MethodInvocation arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.7619038365082815:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -4.15560868717148:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -2.425010174512863:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -4.15560868717148:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -2.9154098216386046:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -0.9538092315196991:  root add ^ StatementExpression expression MethodInvocation qualifier entries_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.189641389617464:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.959948040544987:  root add ^ ReturnStatement expression MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -2.425010174512863:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -2.9154098216386046:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -6.081804427871248:  root add ^ IfStatement condition BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -5.902689762413502:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -6.448528498411179:  root add ^ StatementExpression expression MethodInvocation selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation']
copynode -5.913001093635103:  root add ^ IfStatement condition MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -6.107751283416292:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0']
copynode -6.640181275084615:  root modified ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.753390702971956:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -6.563669638708234:  root modified ^ ReturnStatement expression MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -4.15560868717148:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
copynode -6.893746766814729:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter']
copynode -2.9154098216386046:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -4.504229459533235:  root add ^ IfStatement condition MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.864401660859585:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.6634998843073845:  root add ^ ReturnStatement expression MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -1.754601925611496:  root add ^ StatementExpression expression MethodInvocation qualifier entries_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -6.762758307158947:  root add ^ ReturnStatement expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -6.917949885129929:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'qualifier -> loc0']
copynode -6.612595979124308:  root add ^ StatementExpression expression This selectors MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -5.902689762413502:  root add ^ StatementExpression expression MemberReference postfix_operators --_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> --_ter']
copynode -5.913001093635103:  root add ^ IfStatement condition MemberReference qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -7.08561035245657:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -4.681577238807222:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -6.665525870397687:  root modified ^ ReturnStatement expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -2.9154098216386046:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter']
copynode -7.182325683534145:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -2.425010174512863:  root add ^ StatementExpression expression MethodInvocation arguments This ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This']
copynode -6.663470659026643:  root add ^ IfStatement condition MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -4.80316898226738:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown']
copynode -6.081804427871248:  root add ^ IfStatement condition BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> StatementExpression']
copynode -4.959948040544987:  root add ^ ReturnStatement expression MemberReference member par0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.546927485236665:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -6.612595979124308:  root add ^ StatementExpression expression This selectors MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MethodInvocation']
copynode -2.425010174512863:  root add ^ StatementExpression expression MethodInvocation arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This_ter']
copynode -4.959948040544987:  root add ^ ReturnStatement expression MemberReference member loc1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -4.681577238807222:  root add ^ IfStatement condition MethodInvocation qualifier entries_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -7.196199970319867:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -4.504229459533235:  root add ^ IfStatement condition MemberReference member par0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -0.9538092315196991:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3']
copynode -7.742437295615673:  root add ^ ReturnStatement expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.665525870397687:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -4.15560868717148:  root add ^ IfStatement condition MethodInvocation qualifier entries_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -7.391178684309125:  root modified ^ ReturnStatement expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.072001092135906:  root add ^ ReturnStatement expression MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -7.417802982032299:  root add ^ StatementExpression expression SuperMethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -7.802931033074856:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.072001092135906:  root add ^ ReturnStatement expression MemberReference qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -6.107751283416292:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0']
copynode -4.681577238807222:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1']
copynode -7.956970535218716:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member checkVectorDimensions_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -3.419639080762863:  root add ^ StatementExpression expression MethodInvocation member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -7.918398899957538:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -7.986292105983011:  root modified ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.107751283416292:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown']
before@6 batch0 x: -8.528291131806327: root modified ^ LocalVariableDeclaration type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
after@6 batch0 x: -8.528291131806327: root modified ^ LocalVariableDeclaration type ReferenceType name OpenMapRealVector_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
before@6 batch1 x: -8.140774879226228: root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ selectors ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown']
after@6 batch1 x: -8.140774879226228: root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ selectors ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown']
copynode -1.9615162457048427:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -3.5743740027828608:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -3.4411762183590326:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -3.993851127102971:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -4.279743045568466:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -4.299169212579727:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.686021193367196:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators', 'root -> End']
copynode -3.4411762183590326:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -3.634392872452736:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference']
copynode -4.9056758899387205:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -4.944171125680441:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -3.634392872452736:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This_ter']
copynode -5.448648124933243:  root add ^ StatementExpression expression MethodInvocation arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value']
copynode -5.480393797159195:  root add ^ StatementExpression expression MethodInvocation arguments This_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -3.5743740027828608:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -5.5541068378370255:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators']
copynode -3.634392872452736:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal']
copynode -5.544444046419812:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ arguments TypeArgument ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument']
copynode -5.357891795370961:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -5.109097632259363:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc0']
copynode -5.941098839044571:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -5.971679444104666:  root add ^ IfStatement condition MethodInvocation qualifier entries_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -5.668649345636368:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.908426195383072:  root add ^ StatementExpression expression MethodInvocation arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This_ter', 'arguments -> End']
copynode -3.4411762183590326:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
copynode -3.634392872452736:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation']
copynode -6.05721771219396:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -5.662141318112845:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -1.9615162457048427:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name']
copynode -5.588156682817498:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -6.318197700340534:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -3.634392872452736:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments']
copynode -5.588156682817498:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MethodInvocation']
copynode -3.634392872452736:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments']
copynode -3.634392872452736:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This']
copynode -5.109097632259363:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier entries_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -5.109097632259363:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par0']
copynode -6.227362377016107:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -6.558385247975821:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation']
copynode -6.421364463370992:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name', 'copy-declarators']
copynode -6.631014583399519:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -6.657833009958267:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -6.364697439043084:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -6.116632508725161:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -7.07649897178635:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -5.357891795370961:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member par0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> par0']
copynode -3.5743740027828608:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'copy-operandl']
copynode -6.401938421098748:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -7.160740256309509:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation']
copynode -3.634392872452736:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments']
copynode -7.0505997240543365:  root add ^ StatementExpression expression MethodInvocation arguments This selectors ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This', 'This -> selectors']
copynode -5.662141318112845:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression']
copynode -6.401938421098748:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MethodInvocation']
copynode -5.357891795370961:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc0']
copynode -7.259963423013687:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -4.299169212579727:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.274384647607803:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -3.634392872452736:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments']
copynode -5.109097632259363:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -7.437688738107681:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown']
copynode -7.390813226491446:  root add ^ IfStatement condition MethodInvocation qualifier entries_ter ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation']
copynode -7.322515159845352:  root add ^ StatementExpression expression MethodInvocation arguments BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.451326305657858:  root add ^ IfStatement condition MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -6.352322406979511:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -7.4168614549562335:  root add ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name ^ initializer ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer']
copynode -6.116632508725161:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement']
copynode -4.944171125680441:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member isEmpty_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'member -> isEmpty_ter']
copynode -7.566668863088125:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation']
copynode -6.629831666738028:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -6.4458945939841215:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference']
copynode -5.544444046419812:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ arguments This_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'copy-arguments']
copynode -5.662141318112845:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement']
copynode -6.712206396885449:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter', 'qualifier -> loc0']
copynode -6.352322406979511:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'qualifier -> loc0']
copynode -6.352322406979511:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier entries_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -7.095972997514764:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference']
copynode -1.8817769587039948:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -1.0488896667957306:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation']
copynode -1.0488896667957306:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference']
copynode -1.0488896667957306:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal']
copynode -3.0674423277378082:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.4441895727068186:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -1.0488896667957306:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This']
copynode -3.5929967098199995:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -3.4695795956940856:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -1.0488896667957306:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation']
copynode -1.0488896667957306:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This_ter']
copynode -1.0488896667957306:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments']
copynode -4.005583256483078:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.8396765887737274:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -4.660793456801912:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -3.4695795956940856:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -1.0488896667957306:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments']
copynode -4.943225681781769:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation']
copynode -4.535024661192438:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -5.0384621322155:  root add ^ StatementExpression expression MethodInvocation arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value']
copynode -4.715911749372026:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression']
copynode -1.0488896667957306:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments']
copynode -3.8396765887737274:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -5.115011752204737:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -1.8817769587039948:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -5.101264971861383:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -5.556530095636845:  root add ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -5.605264872312546:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -3.5929967098199995:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier ^ member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member']
copynode -1.0488896667957306:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments']
copynode -4.535024661192438:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -4.940036660613259:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc0']
copynode -3.8396765887737274:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal']
copynode -5.65744611620903:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -5.735065668821335:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown']
copynode -5.431423634290695:  root add ^ StatementExpression expression MethodInvocation arguments BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.881413615425117:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -5.862518519163132:  root add ^ StatementExpression expression MethodInvocation arguments This_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -4.715911749372026:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -3.0674423277378082:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -3.8396765887737274:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments BinaryOperation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> BinaryOperation']
copynode -6.105350703001022:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -1.8817769587039948:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -6.105110320815584:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -5.226488560438156:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation']
copynode -6.271219350397587:  root add ^ ReturnStatement expression MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -6.281866282224655:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -4.940036660613259:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par0']
copynode -4.005583256483078:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.411144703626633:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> MethodInvocation']
copynode -5.431423634290695:  root add ^ StatementExpression expression MethodInvocation arguments BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.675960573920747:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -4.005583256483078:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.005583256483078:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.729065001098206:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -4.005583256483078:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.246954656759044:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> StatementExpression']
copynode -4.940036660613259:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.671555731067201:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation']
copynode -6.741449670866132:  root modified ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -5.504337284335634:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation']
copynode -5.226488560438156:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference']
copynode -6.4590289713814855:  root add ^ StatementExpression expression MethodInvocation selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.223476189741632:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -3.4695795956940856:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'copy-operandl']
copynode -5.226488560438156:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal']
copynode -5.101264971861383:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -6.755428335716715:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -5.504337284335634:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference']
copynode -5.729065001098206:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'qualifier -> loc0']
copynode -5.411144703626633:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> MemberReference']
copynode -6.8188326690287795:  root add ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown']
copynode -5.411144703626633:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> Literal']
copynode -5.675960573920747:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -7.002250142395496:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'qualifier -> loc0', 'selectors -> MethodInvocation']
copynode -6.972640007734299:  root add ^ StatementExpression expression MethodInvocation qualifier entries_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -3.4441895727068186:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> StatementExpression']
copynode -6.437557049095631:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter', 'start -> unknown']
copynode -4.005583256483078:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.972511373460293:  root add ^ ReturnStatement expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -7.093371871858835:  root add ^ StatementExpression expression This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -6.331813830503961:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -4.005583256483078:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.101264971861383:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference']
copynode -4.005583256483078:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -6.331813830503961:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MethodInvocation']
copynode -7.1674652431102:  root add ^ IfStatement condition MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -6.77832773514092:  root modified ^ ReturnStatement expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -5.504337284335634:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal']
before@7 batch0 x: -7.81009451803402: root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference']
after@7 batch0 x: -7.81009451803402: root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter', 'operandl -> MemberReference']
before@7 batch1 x: -7.343960020312807: root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal']
after@7 batch1 x: -7.343960020312807: root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal']
copynode -1.974887603399111:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1']
copynode -3.7767043834610377:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -3.900161159603158:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.3333461582660675:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -4.351568639278412:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.7474818378686905:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.351568639278412:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.317943230271339:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This_ter', 'arguments -> End']
copynode -5.509076185524464:  root add ^ StatementExpression expression MethodInvocation arguments This_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -4.707164210645715:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.5597896876279265:  root modified ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-declarators', 'root -> End']
copynode -5.561519280076027:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value']
copynode -4.955355903148302:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.0351196229457855:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -5.728311500948621:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ arguments TypeArgument pattern_type ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> pattern_type']
copynode -5.109279925614828:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -6.1537028551101685:  root add ^ StatementExpression expression MethodInvocation arguments This_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This_ter', 'arguments -> End', 'start -> unknown']
copynode -6.009825202316279:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc0', 'start -> unknown']
copynode -5.849713352654362:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -6.336653574806405:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name', 'name -> loc1']
copynode -5.109279925614828:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ReturnStatement']
copynode -6.349562866060296:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.955355903148302:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.546922249166528:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.955355903148302:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.7474818378686905:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.455645218025893:  root add ^ StatementExpression expression MethodInvocation arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -6.451211109757423:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'start -> unknown']
copynode -4.707164210645715:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.170453444123268:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.455645218025893:  root add ^ StatementExpression expression MethodInvocation arguments Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -6.633429057401372:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name', 'copy-declarators', 'root -> End']
copynode -6.608909828035394:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.521888390183449:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors']
copynode -5.109279925614828:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression']
copynode -6.712726071476936:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -6.663460137089714:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.743170214263955:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.5936150873603765:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par0', 'start -> unknown']
copynode -6.571266325801844:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier entries_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier', 'start -> unknown']
copynode -6.423255100846291:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'start -> unknown']
copynode -5.546922249166528:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.110080361366272:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -6.395064200420165:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -6.153893989889184:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl', 'operandr -> MemberReference']
copynode -6.096300149947638:  root add ^ IfStatement condition MethodInvocation qualifier entries_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.153893989889184:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl', 'operandr -> Literal']
copynode -6.110080361366272:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -5.455645218025893:  root add ^ StatementExpression expression MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -4.351568639278412:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.221514354139799:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -7.159843069879571:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.449946505395928:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.621745149284834:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.728311500948621:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ arguments TypeArgument type ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> type']
copynode -7.25455235937261:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -7.303875993937254:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -7.178353443741798:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'start -> unknown']
copynode -6.621745149284834:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.34479346871376:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.4881119430065155:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'root -> End']
copynode -7.137293812964344:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member par0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> par0', 'root -> End']
copynode -6.221514354139799:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement']
copynode -3.900161159603158:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.239832475781441:  root add ^ StatementExpression expression MethodInvocation arguments This selectors MemberReference ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -6.096300149947638:  root add ^ IfStatement condition MethodInvocation qualifier entries_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> ReturnStatement']
copynode -7.140480799047509:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'copy-operandl', 'operandr -> Literal']
copynode -4.707164210645715:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.096300149947638:  root add ^ IfStatement condition MethodInvocation qualifier entries_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> StatementExpression']
copynode -7.562107886187732:  root add ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1']
copynode -7.356932774186134:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'start -> unknown']
copynode -7.302298543188954:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc0', 'root -> End']
copynode -1.935572523623705:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -2.648816853761673:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value']
copynode -2.0788858234882355:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -2.6017244160175323:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.1219100020825863:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -3.825825828680536:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -3.700185328722:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors']
copynode -2.6017244160175323:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -3.7319045596086653:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -2.0788858234882355:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.2939009964466095:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.1219100020825863:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.566216021776199:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'start -> unknown']
copynode -4.514207631349564:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This_ter', 'arguments -> End']
copynode -2.0788858234882355:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -2.0788858234882355:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> member']
copynode -4.755146354436874:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.89321568608284:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'start -> unknown']
copynode -5.039608377584955:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -3.7319045596086653:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -2.0788858234882355:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.808189946779748:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression']
copynode -2.0788858234882355:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -2.0788858234882355:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.138112250337144:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -4.952044816687703:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.8807708207459655:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -1.935572523623705:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression']
copynode -5.451511770486832:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'copy-member', 'root -> End']
copynode -4.707471638917923:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -5.658937353640795:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -2.0788858234882355:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.744936436414719:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value']
copynode -5.673570268627373:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -5.769770421087742:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -5.791049994528294:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'root -> End']
copynode -5.29055455327034:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'start -> unknown']
copynode -5.528975206980249:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.682610064744949:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'start -> unknown']
copynode -4.2939009964466095:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.724291151942452:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc0', 'start -> unknown']
copynode -5.919039808213711:  root add ^ StatementExpression expression MethodInvocation arguments This_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -3.1219100020825863:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -2.0788858234882355:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.952044816687703:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.328945487737656:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.347106323199114:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -5.347106323199114:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> StatementExpression']
copynode -4.707471638917923:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
copynode -6.15619845315814:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -5.697342414030572:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.232485443353653:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'copy-member', 'root -> End']
copynode -2.0788858234882355:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation selectors ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -4.707471638917923:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -4.808189946779748:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -5.29055455327034:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'copy-member']
copynode -6.334351196885109:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -5.045206800103188:  root add ^ StatementExpression expression MethodInvocation arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -6.10583159327507:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.1219100020825863:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -5.836436063051224:  root add ^ StatementExpression expression MethodInvocation arguments BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -6.037994295358658:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -5.045206800103188:  root add ^ StatementExpression expression MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -6.411657577933511:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par0', 'start -> unknown']
copynode -6.549664828547975:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.248995694884798:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> StatementExpression']
copynode -5.045206800103188:  root add ^ StatementExpression expression MethodInvocation arguments Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -5.045206800103188:  root add ^ StatementExpression expression MethodInvocation arguments Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -4.566216021776199:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'copy-member']
copynode -6.673900939145824:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -5.528975206980249:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.827311605215073:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value']
copynode -6.252301424741745:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.7319045596086653:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.514207631349564:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This_ter ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This_ter', 'arguments -> MethodInvocation']
copynode -6.563035219907761:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -4.89321568608284:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'copy-member']
copynode -6.531319946050644:  root add ^ StatementExpression expression MethodInvocation arguments BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End']
copynode -6.553096026182175:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -6.763606280088425:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.990483731031418:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> Literal', 'Literal -> value']
copynode -7.022864390164614:  root add ^ StatementExpression expression MethodInvocation qualifier entries_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.795846361288568:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.489526242017746:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.069416619837284:  root add ^ ReturnStatement expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
before@8 batch0 x: -7.741690871451283: root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc0', 'root -> End']
after@8 batch0 x: -7.741690871451283: root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> loc0', 'root -> End']
before@8 batch1 x: -7.101762622594833: root add ^ ReturnStatement expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
after@8 batch1 x: -7.101762622594833: root add ^ ReturnStatement expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -1.9804732873744797:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation']
copynode -3.7839847061841283:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -3.9272964870615397:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.940555810928345:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -1.9804732873744797:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast']
copynode -5.434946238994598:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -1.9804732873744797:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> BinaryOperation']
copynode -5.508904755115509:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This_ter', 'arguments -> End', 'start -> unknown']
copynode -5.6448855605121935:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation']
copynode -1.9804732873744797:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MemberReference']
copynode -1.9804732873744797:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This']
copynode -3.7839847061841283:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -3.9272964870615397:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.948815107345581:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.948815107345581:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.111546270054532:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ arguments TypeArgument pattern_type ?_ter ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> pattern_type', 'pattern_type -> ?_ter']
copynode -6.192721720784903:  root add ^ StatementExpression expression MethodInvocation arguments This_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> This_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -3.9272964870615397:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.342441152752144:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name', 'name -> loc1', 'root -> End']
copynode -5.533817035524407:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -1.9804732873744797:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer TernaryExpression ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> TernaryExpression']
copynode -3.7839847061841283:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.4661478009220446:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation']
copynode -6.57029215991497:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -6.48406483232975:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -5.533817035524407:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entries_ter ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -6.55864407075569:  root add ^ StatementExpression expression MethodInvocation arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -6.4174725836201105:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.2210205222072545:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -6.626829996239394:  root add ^ StatementExpression expression MethodInvocation arguments Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End']
copynode -6.660090620309347:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -4.948815107345581:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.569379398599267:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -5.569379398599267:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -6.744185017189011:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'value -> MethodInvocation']
copynode -6.594489020673791:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal']
copynode -6.380274946481222:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -6.858447387814522:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -6.871740860311547:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal']
copynode -6.981643778650323:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl', 'operandr -> Literal', 'Literal -> value']
copynode -5.569379398599267:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -6.885659337043762:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -6.6512856632471085:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -6.436679264545091:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation']
copynode -6.9235954707546625:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.992690205574036:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -7.291706762713147:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ arguments TypeArgument type ReferenceType ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> type', 'type -> ReferenceType']
copynode -6.6512767983658705:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -3.9272964870615397:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -7.036011591088027:  root add ^ StatementExpression expression MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -6.821321609109873:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier entries_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.441753191320458:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -6.805419909447664:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -6.380274946481222:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -5.533817035524407:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -1.9804732873744797:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Literal ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Literal']
copynode -7.354285284876823:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -4.948815107345581:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -7.321522968501085:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -7.079841792583466:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -6.614223316311836:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -2.8487454652786255:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -2.6533157848753035:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -2.6617075502872467:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
copynode -2.6617075502872467:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -3.5823625586926937:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -3.8639770295412745:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -3.865291118621826:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -2.6617075502872467:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -4.1427309811115265:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -2.6533157848753035:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -2.6533157848753035:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -2.6533157848753035:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -4.160206728454796:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation']
copynode -4.7016017735004425:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -4.770279437303543:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.5188478492200375:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -4.5175653994083405:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -5.060871437191963:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -4.7397750318050385:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This_ter', 'arguments -> End', 'start -> unknown']
copynode -3.865291118621826:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MethodInvocation ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MethodInvocation']
copynode -2.8487454652786255:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -2.8487454652786255:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.820367053151131:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.265874582895776:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -5.2143829945416655:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -5.165913396354881:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation']
copynode -2.6617075502872467:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -4.4729945957660675:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.225269109010696:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -5.208678990602493:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -5.121251802513143:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.253095418214798:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -2.6533157848753035:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -2.8487454652786255:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -5.4760941453278065:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -3.5823625586926937:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference']
copynode -3.5823625586926937:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation']
copynode -5.5794141590595245:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -2.6533157848753035:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -4.756886273622513:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ selectors ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc1']
copynode -5.727268010377884:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -4.756886273622513:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ selectors ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0']
copynode -4.7397750318050385:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This_ter ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This_ter', 'arguments -> End', 'copy-member']
copynode -5.844129651784897:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -5.800069727774826:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -5.892854288220406:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -5.423008817801019:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -4.160206728454796:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference']
copynode -4.4729945957660675:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -4.160206728454796:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal']
copynode -5.749723100569099:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -6.010726066306233:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -2.6617075502872467:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1']
copynode -5.90159597992897:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End']
copynode -4.5175653994083405:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator -_ter ^ ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter']
copynode -3.5823625586926937:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> Literal']
copynode -4.4729945957660675:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1']
copynode -6.095427439169725:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -6.158881813287735:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown']
copynode -5.849740374454996:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -6.293761044740677:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation selectors MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation']
copynode -2.6533157848753035:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter']
copynode -2.8487454652786255:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.363037973642349:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'copy-arguments', 'copy-member', 'root -> End']
copynode -3.8639770295412745:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.297179967164993:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -4.5188478492200375:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference']
copynode -5.406897576525807:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -4.756886273622513:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier unknown ^ ^ selectors ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown']
copynode -5.952624714554986:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression']
copynode -3.8639770295412745:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.439452677965164:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -6.3870586305856705:  root add ^ StatementExpression expression MethodInvocation arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -4.5188478492200375:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation']
copynode -5.964124109596014:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -4.820367053151131:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
before@9 batch0 x: -7.462177410721779: root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
after@9 batch0 x: -7.462177410721779: root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
before@9 batch1 x: -6.78325791656971: root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
after@9 batch1 x: -6.78325791656971: root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -2.1246031149930786:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.1246031149930786:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.083442733070115:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -4.281070021359483:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -2.1246031149930786:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -2.1246031149930786:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -2.1246031149930786:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.159479171037674:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'start -> unknown']
copynode -5.266949422628386:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression']
copynode -2.1246031149930786:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -5.649876601964934:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.641475334763527:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown']
copynode -5.6662658751010895:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.800562627584441:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors']
copynode -2.1246031149930786:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.835603759071091:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal']
copynode -5.7805004194087815:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MemberReference', 'MemberReference -> member']
copynode -5.9994049072265625:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -5.922376004426042:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal']
copynode -6.015048861503601:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -6.147192932170583:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ arguments TypeArgument pattern_type ?_ter ^ ^ ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> pattern_type', 'pattern_type -> ?_ter', 'arguments -> End']
copynode -2.1246031149930786:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -6.309865323273698:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -6.42646766451071:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -6.487390801688889:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -5.755837393939146:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.281070021359483:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -6.718500360380858:  root add ^ StatementExpression expression MethodInvocation arguments Literal value false_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'start -> unknown']
copynode -6.7744809980504215:  root add ^ StatementExpression expression MethodInvocation arguments Literal value true_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'start -> unknown']
copynode -6.851383400527993:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value']
copynode -6.782161819428438:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -6.84121168567799:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'value -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.785043716430664:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -6.840916583314538:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -6.952411135105649:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value']
copynode -6.798394033685327:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -2.1246031149930786:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.006808111444116:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End']
copynode -7.105427131056786:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -6.753391129343072:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -6.883651251584524:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -7.081678032875061:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End']
copynode -6.4251630133076105:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -7.195669636130333:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End']
copynode -6.990932720160345:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.371876485616667:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Literal', 'Literal -> value']
copynode -7.327696218620986:  root add ^ StatementExpression expression MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'start -> unknown']
copynode -2.1246031149930786:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.355739469319815:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -7.326609936921159:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc1 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'operandr -> Literal']
copynode -6.590744329630979:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.661986095277825:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'copy-member']
copynode -7.402545928955078:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -3.262571156024933:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -3.743776351213455:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown']
copynode -3.7877102196216583:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -4.022888001054525:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'start -> unknown']
copynode -3.677518966142088:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -4.206224203109741:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -4.105948403099319:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -4.3280642055906355:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -4.419462444726378:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -4.532682659570128:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End']
copynode -4.862396031618118:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End']
copynode -4.98469677194953:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown']
copynode -5.158112734556198:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.229230523109436:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -5.356729182967683:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -5.268314003944397:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -5.366390377283096:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -4.5741097860300215:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.220210790634155:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MethodInvocation member ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.534381832927465:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -4.105948403099319:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -5.457292797509581:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End']
copynode -5.525607705116272:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> End']
copynode -5.638826277107:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.677518966142088:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MethodInvocation']
copynode -5.798199445009232:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc1', 'selectors -> MethodInvocation']
copynode -5.854672223329544:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation']
copynode -3.262571156024933:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -5.721831604838371:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End']
copynode -5.783851864282042:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End']
copynode -5.879337757825851:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This_ter ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.307431682944298:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -5.316321674356004:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.677518966142088:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference']
copynode -5.381744712591171:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown']
copynode -5.41188707947731:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown']
copynode -6.06529586839315:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value']
copynode -5.441101580858231:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown']
copynode -5.420914362737676:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal']
copynode -5.381744712591171:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member']
copynode -6.023084455009666:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference', 'MemberReference -> member']
copynode -6.18028249964118:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> Literal', 'Literal -> value']
copynode -5.41188707947731:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member']
copynode -4.5741097860300215:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.262571156024933:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.441101580858231:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member']
copynode -5.420914362737676:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference']
copynode -6.100683361291885:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown']
copynode -5.053284913301468:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation']
copynode -6.206902877049288:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -6.098632680252194:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -5.714481022208929:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.8455870896577835:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown']
copynode -5.053284913301468:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation']
copynode -5.992888826498529:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -3.677518966142088:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal']
copynode -5.370582848787308:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -6.355238201562315:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter', 'arguments -> End']
copynode -6.305693030357361:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'arguments -> End']
copynode -5.053284913301468:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'copy-operandl']
copynode -6.389299273490906:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -5.913536355670658:  root add ^ StatementExpression expression Assignment expressionl MemberReference qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'value -> MethodInvocation']
copynode -6.465070154517889:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.359607600446907:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.507284909486771:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier unknown ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -6.113734677433968:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member']
copynode -6.434268951416016:  root add ^ StatementExpression expression MethodInvocation arguments MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End']
copynode -6.523893809498986:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -6.352235391736031:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.220210790634155:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MethodInvocation arguments ^ member ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.370582848787308:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -6.650183722376823:  root add ^ StatementExpression expression MethodInvocation arguments Literal value false_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'start -> unknown']
before@10 batch0 x: -7.507688730955124: root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
after@10 batch0 x: -7.507688730955124: root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
before@10 batch1 x: -6.733163833618164: root add ^ StatementExpression expression MethodInvocation arguments Literal value false_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'start -> unknown']
after@10 batch1 x: -6.733163833618164: root add ^ StatementExpression expression MethodInvocation arguments Literal value false_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'start -> unknown']
copynode -3.0107359513349365:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.119405139615992:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -3.0107359513349365:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -3.6109175309247803:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -4.402964120177785:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -3.6109175309247803:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -4.590848289401038:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier']
copynode -5.194367490708828:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.2921404856897425:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType']
copynode -4.772763572604163:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -5.452071748644812:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation']
copynode -4.772763572604163:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -3.6109175309247803:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -4.458833061129553:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -5.67947793751955:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -4.458833061129553:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.854509435564978:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -4.458833061129553:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -5.892686851701001:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value']
copynode -4.590848289401038:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown']
copynode -6.132439104287187:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value']
copynode -5.966781385213835:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.163676464435412:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ arguments TypeArgument pattern_type ?_ter ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> pattern_type', 'pattern_type -> ?_ter', 'arguments -> End', 'copy-declarators']
copynode -3.0107359513349365:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -6.113209895789623:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown']
copynode -6.421422240702668:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -5.821987591654761:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -6.520567030092934:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -5.6537124749447685:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -3.6109175309247803:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -5.821987591654761:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MethodInvocation']
copynode -4.590848289401038:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0']
copynode -6.774052977096289:  root add ^ StatementExpression expression MethodInvocation arguments Literal value false_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.40362104025553:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier']
copynode -6.829019233118743:  root add ^ StatementExpression expression MethodInvocation arguments Literal value true_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.900447809835896:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter']
copynode -6.864055730780819:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.960166548291454:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.050384364993079:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ member getDimension_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -6.430478685972048:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer TernaryExpression condition BinaryOperation ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation']
copynode -6.914252936840057:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'start -> unknown']
copynode -6.688993958203355:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.147858304349938:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -6.953654790297151:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'start -> unknown']
copynode -4.458833061129553:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -7.213017041474814:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -6.984683284536004:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'start -> unknown']
copynode -6.627891732394346:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -5.6537124749447685:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -7.11262616282329:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.112496929243207:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'start -> unknown']
copynode -7.406265102297766:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -3.8890222162008286:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'arguments -> End']
copynode -3.93414805829525:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End']
copynode -4.065483275800943:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -3.438915878534317:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -4.214742599986494:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.4026279594691005:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -4.084875198546797:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'start -> unknown']
copynode -4.084875198546797:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member']
copynode -4.455002012196928:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'start -> unknown']
copynode -5.035905942320824:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -4.55982423061505:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'start -> unknown']
copynode -4.650501089636236:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'start -> unknown']
copynode -4.455002012196928:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member']
copynode -4.55982423061505:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member']
copynode -4.650501089636236:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member']
copynode -5.503972381353378:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End']
copynode -5.5227390229702:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.972482979297638:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -5.425786688923836:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'start -> unknown']
copynode -5.624136045196792:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -5.366121351718903:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown']
copynode -5.825967503711581:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc1', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.8830187153071165:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.404296557971975:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.949157539376756:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -6.054152637720108:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.071393817663193:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.110976170370122:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value']
copynode -6.075466424226761:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.993566634599119:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.6693296283483505:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc1 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> End', 'start -> unknown']
copynode -6.1539486944675446:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.193697243928909:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.638245823327452:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'start -> unknown']
copynode -5.522450380798546:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -5.366121351718903:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member']
copynode -6.256126672029495:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.266935706138611:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End']
copynode -5.592663895338774:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.236504137516022:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.730489852372557:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.43615901703015:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value']
copynode -6.399105027318001:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.425786688923836:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'copy-member']
copynode -6.286160260438919:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.638245823327452:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member']
copynode -5.905055458191782:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'start -> unknown']
copynode -5.890145123004913:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.1554358236753615:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference member loc0 ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.571702495217323:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ operandr MethodInvocation qualifier par0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member getEntry_ter ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.256749104330083:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -5.6693296283483505:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc1 ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> End', 'copy-member']
copynode -6.438993602991104:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.642258709849557:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -6.199387424465385:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -5.522450380798546:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -5.905055458191782:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'copy-member']
copynode -4.214742599986494:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member par0 ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.559803247451782:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier unknown ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.733163833618164:  root add ^ StatementExpression expression MethodInvocation arguments Literal value false_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.68949456140399:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.289410278754076:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.592663895338774:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.43240012563183:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'operandr -> Literal']
copynode -5.404296557971975:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.624136045196792:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.68949456140399:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.408034116029739:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.648715570569038:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -3.93414805829525:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> MethodInvocation']
before@11 batch0 x: -7.407033940049587: root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
after@11 batch0 x: -7.407033940049587: root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member value_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
before@11 batch1 x: -7.0719244331121445: root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> MethodInvocation']
after@11 batch1 x: -7.0719244331121445: root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -4.124107900453964:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -4.411635099357227:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -4.20078661289881:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'copy-member']
copynode -3.471357785136206:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -3.471357785136206:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.083884797961218:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation']
copynode -4.184755288035376:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -4.184755288035376:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -4.20078661289881:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -5.4396053179807495:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'root -> End']
copynode -5.293199803883908:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Iterator_ter ^ ^ ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -5.532141707808478:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -5.897052213927964:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.895909868151648:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.471357785136206:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -5.51910380271147:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -3.471357785136206:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -4.184755288035376:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -3.471357785136206:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This']
copynode -6.060332260996802:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -5.633813582331641:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'copy-member']
copynode -6.140914759977022:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -3.471357785136206:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This_ter']
copynode -6.207682244450552:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -6.256880448636366:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ arguments TypeArgument pattern_type ?_ter ^ ^ ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'arguments -> TypeArgument', 'TypeArgument -> pattern_type', 'pattern_type -> ?_ter', 'arguments -> End', 'copy-declarators', 'root -> End']
copynode -5.665626011759741:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.0139976367063355:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown', 'copy-member']
copynode -6.343915514647961:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.853410921961768:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments This_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
copynode -6.429802444210509:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.46511652317713:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -3.471357785136206:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -6.524938977236161:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.51910380271147:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.633813582331641:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -5.853410921961768:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments This_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -6.774695478350623:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation']
copynode -6.902218860341236:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter', 'root -> End']
copynode -4.184755288035376:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal']
copynode -6.819806687504752:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ selectors MethodInvocation ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier', 'selectors -> MethodInvocation']
copynode -5.665626011759741:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.590188704401953:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'copy-member']
copynode -6.980342232534895:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -6.544219398143468:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer BinaryOperation operator +_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation']
copynode -6.678472600848181:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.111377590772463:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer TernaryExpression condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.12602561712265:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -7.1792525742203:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -4.184755288035376:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -7.2171272301638965:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -4.176199406385422:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -4.408102104527643:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -4.370850606821477:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End']
copynode -3.957945354282856:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -4.0075076296925545:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -4.817521663848311:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -4.8259294354356825:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.058399620000273:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.169056954327971:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.2590630822815:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.328998866025358:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.425882818643004:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.515806334558874:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value true_ter ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.755118280649185:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -5.809143602848053:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.933303669095039:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.948980033397675:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.0699293423385825:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -6.119712145620724:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.189809426665306:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc1 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -5.576633885502815:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -4.370850606821477:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ MethodInvocation ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -6.2397967600263655:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.274587333202362:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.358071696013212:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -6.445131853222847:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.936760499695083:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.990448547527194:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc1', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.47719831764698:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -6.569118552681175:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference member loc0 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'type -> =_ter']
copynode -6.5234706425108016:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.0621728133410215:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.53958826744929:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.664016231894493:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member loc1 ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.742646510247141:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.914111632475397:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'operandr -> Literal', 'Literal -> value']
copynode -6.789336990565062:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -6.33381263166666:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.884753928141436:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -6.92331151253893:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -6.906508695334196:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -6.1400310271419585:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.007706895470619:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -6.4396176498848945:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -6.7688054433092475:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member par0 ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'member -> par0', 'selectors -> End']
copynode -6.978948544710875:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> End']
copynode -6.941521241882583:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -6.366870226804167:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
copynode -6.082532737025758:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation']
copynode -6.694566438527545:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.661582838365575:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.540189862251282:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
copynode -4.176199406385422:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> StatementExpression']
copynode -6.366870226804167:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -6.082532737025758:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference']
copynode -7.0719244331121445:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.540189862251282:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -6.082532737025758:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal']
copynode -6.1400310271419585:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
before@12 batch0 x: -7.2553909534181: root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
after@12 batch0 x: -7.2553909534181: root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
before@12 batch1 x: -7.828447031322867: root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
after@12 batch1 x: -7.828447031322867: root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.136461858084658:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -4.585874877840979:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'copy-member', 'root -> End']
copynode -4.743615351588232:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.430732427543262:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement']
copynode -5.360773883730872:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.41970386353205:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -4.668727003008826:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.443138774688123:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Iterator_ter ^ ^ ^ ^ expression MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation']
copynode -5.138993419677718:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.379204712779028:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.430732427543262:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -6.029267512232764:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value']
copynode -5.908750912552932:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -4.430732427543262:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression']
copynode -5.138993419677718:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.119882993370993:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'copy-member', 'root -> End']
copynode -5.9752790555066895:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member']
copynode -6.342923007876379:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown', 'copy-member', 'root -> End']
copynode -6.383953414828284:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments This_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member', 'root -> End']
copynode -4.743615351588232:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.308488629729254:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -4.668727003008826:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.99697587636183:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation member iterator_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -6.106459818751318:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This selectors ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This', 'This -> selectors']
copynode -6.117954738409026:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.535128150047967:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -6.505232058436377:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member']
copynode -6.207989893824561:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This_ter', 'arguments -> End']
copynode -6.766513191134436:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -6.783772550494177:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments This_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -5.9662531166977715:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.468234230735106:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.136461858084658:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression']
copynode -6.938212357432349:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value']
copynode -5.379204712779028:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.037767313391669:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'copy-member', 'root -> End']
copynode -4.668727003008826:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> member']
copynode -4.430732427543262:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ContinueStatement_ter']
copynode -6.821109984040959:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.99697587636183:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.668727003008826:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.544463782571256:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End']
copynode -4.61390770226717:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -4.680579669773579:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -4.44376569063752:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression']
copynode -4.44376569063752:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -5.816768482327461:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End']
copynode -6.24276365339756:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.250480337999761:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ MethodInvocation member ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.573153273042408:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference member loc0 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'type -> =_ter', 'root -> End']
copynode -6.5560917388647795:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc1', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -6.584128065034747:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -6.184480974072358:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression']
copynode -6.506870582321426:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression']
copynode -6.995032645761967:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.920311455702176:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.975941311568022:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'start -> unknown']
copynode -7.08159606391564:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -6.140275600919267:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation']
copynode -7.142853318713605:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member par0 ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'member -> par0', 'selectors -> End', 'arguments -> End']
copynode -7.116031901212409:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -7.163330461829901:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> End', 'start -> unknown']
copynode -7.263116429181537:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -6.184480974072358:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -6.442493934184313:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation']
copynode -7.224597098771483:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown']
copynode -7.411492794752121:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -6.571494892239571:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation']
copynode -7.695497963199159:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value']
copynode -7.232176158198854:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.51234537595883:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -4.61390770226717:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> StatementExpression']
copynode -4.544463782571256:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> MethodInvocation']
copynode -6.140275600919267:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference']
copynode -7.609861705073854:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.680579669773579:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> StatementExpression']
copynode -6.506870582321426:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -7.373821328947088:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression']
copynode -6.140275600919267:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal']
copynode -7.828447031322867:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
before@13 batch0 x: -7.263729177386267: root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
after@13 batch0 x: -7.263729177386267: root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
before@13 batch1 x: -7.93802228057757: root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
after@13 batch1 x: -7.93802228057757: root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -4.963139869243605:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.255495129531482:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -5.761505775124533:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -5.620389398391126:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Iterator_ter ^ ^ ^ ^ expression MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.255495129531482:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -5.645177163154585:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ selectors MethodInvocation member iterator_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -6.094606457656482:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -5.611919485003455:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -6.266921780974371:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'root -> End']
copynode -6.3861478194303345:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -6.419151745707495:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -6.453601606161101:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation member iterator_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End']
copynode -6.407787449628813:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown']
copynode -6.675122328073485:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member key_ter ^ ^ ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'root -> End']
copynode -6.680635057360632:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This_ter', 'arguments -> End', 'copy-member']
copynode -5.645177163154585:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.418001811922295:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.837999537558062:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -5.611919485003455:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation qualifier entries_ter ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -6.9124072831182275:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -4.963139869243605:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.069660364097217:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ContinueStatement_ter', 'root -> End']
copynode -6.479336522490485:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This selectors MemberReference ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -6.036135503993137:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -6.942188669898314:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -6.479336522490485:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This selectors MethodInvocation ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This', 'This -> selectors', 'selectors -> MethodInvocation']
copynode -7.040666662127478:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.495415218145354:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ selectors MethodInvocation member iterator_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member']
copynode -5.418001811922295:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -5.094904175115516:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -4.629822767339647:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'copy-member']
copynode -5.894400976598263:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'copy-member']
copynode -6.7173399418534245:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -6.942292138555786:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -7.092182394117117:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -7.281676109880209:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -7.057496165012708:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression']
copynode -7.458055617753416:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'arguments -> End']
copynode -7.509986348450184:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -7.1866924040950835:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.205220821866533:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.233421131037176:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member par0 ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'member -> par0', 'selectors -> End', 'arguments -> End', 'copy-member']
copynode -7.252036974998191:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member']
copynode -7.734926926437765:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End']
copynode -7.82151747084572:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value']
copynode -7.650292947888374:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.430674273520708:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.745436556637287:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -7.815281789371511:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -7.813686855137348:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -4.629822767339647:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member debug_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'member -> debug_ter']
copynode -7.777751568326494:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.094904175115516:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -7.700109162920853:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -7.327419544191798:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation']
copynode -4.629822767339647:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member e_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'member -> e_ter']
copynode -7.233421131037176:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member par0 ^ ^ ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'member -> par0', 'selectors -> End', 'arguments -> End', 'start -> unknown']
copynode -7.93802228057757:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member']
copynode -7.252036974998191:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'start -> unknown']
copynode -7.057496165012708:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
before@14 batch0 x: -7.386551897943718: root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
after@14 batch0 x: -7.386551897943718: root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
before@14 batch1 x: -8.421994184231153: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
after@14 batch1 x: -8.421994184231153: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -5.24691820886801:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -5.93092184906709:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer Cast type ReferenceType name Iterator_ter ^ ^ ^ ^ expression MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -5.807815311854938:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.135354159778217:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -6.150667108566267:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ selectors MethodInvocation member iterator_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End']
copynode -6.189697182184318:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -6.227241478831274:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -6.63314168897341:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -6.780946478218539:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This_ter ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.533491089910967:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation member iterator_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'start -> unknown']
copynode -6.7943256310827564:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -6.792182721168501:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -6.529333062440855:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member']
copynode -7.05729732659529:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -7.118128739268286:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This selectors MemberReference member ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -7.1620290968276095:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -6.97556958757923:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -6.902666561276419:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.951572619349463:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation qualifier entries_ter ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -7.2574729220650624:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -7.357223980099661:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End']
copynode -6.189697182184318:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -7.3843548968143295:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ selectors MethodInvocation member iterator_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End']
copynode -7.386551897943718:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -7.335461638838751:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This selectors MethodInvocation member ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.529333062440855:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown']
copynode -5.209564722143114:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.1852399018534925:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -6.620101593434811:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.845040240878006:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -7.0180413346679416:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -7.476376687263837:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -7.553838446736336:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.615479039493948:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.757177158258855:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member par0 ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'member -> par0', 'selectors -> End', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.1852399018534925:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -7.796827004523948:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.857070952653885:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -7.890586964786053:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -7.524399476591498:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.950352288782597:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -7.9349956024379935:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -7.993749178014696:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member debug_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'member -> debug_ter', 'root -> End']
copynode -7.803816663566977:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.6665474209876265:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
copynode -5.209564722143114:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'copy-member', 'root -> StatementExpression']
copynode -8.222616901708534:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member advance_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -8.339122331701219:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member e_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'member -> e_ter', 'root -> End']
copynode -7.826326414564392:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -8.382472439669073:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member par0 ^ ^ ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'member -> par0', 'selectors -> End', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -8.40151127660647:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.418730424018577:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -8.237320163840195:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -7.882991034537554:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
before@15 batch0 x: -7.625530786783202: root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown']
after@15 batch0 x: -7.625530786783202: root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown']
before@15 batch1 x: -8.749957043677568: root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
after@15 batch1 x: -8.749957043677568: root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
copynode -5.293506555230124:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -5.933369113510707:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -6.6013621613092255:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End']
copynode -6.783076882333262:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation member iterator_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'start -> unknown', 'root -> End']
copynode -6.24095573273371:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ selectors MethodInvocation member iterator_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'start -> unknown']
copynode -6.24095573273371:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ selectors MethodInvocation member iterator_ter ^ ^ ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'copy-member']
copynode -7.077156789571745:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.093353781820042:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member']
copynode -7.021009735733969:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member']
copynode -7.199258631066186:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member']
copynode -7.311901502282126:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.123769808531506:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.417014515405754:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -7.375882528693182:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation qualifier entries_ter ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End']
copynode -7.408193346083863:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.575064933305839:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.625530786783202:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation qualifier entries_ter ^ ^ member iterator_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -7.5363069101877045:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.575064933305839:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.575064933305839:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.268518906465033:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.575064933305839:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.270883394492557:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.270883394492557:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.270883394492557:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.0869790907891:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.9572173669876065:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.5579360994452145:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -7.660999603569508:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -7.825713744474342:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -7.959539400879294:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.926902607083321:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.985743202269077:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -8.230541902128607:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.014925311872503:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.9572173669876065:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.270883394492557:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -8.366956031881273:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'copy-member', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -8.400975569704315:  root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
before@16 batch0 x: -8.56285218000994: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
after@16 batch0 x: -8.56285218000994: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
before@16 batch1 x: -8.673832580068847: root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
after@16 batch1 x: -8.673832580068847: root add ^ IfStatement condition MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -5.366236776084406:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.937403953546891:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.640522964269621:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.985108517081244:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ selectors MethodInvocation member iterator_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'start -> unknown', 'root -> End']
copynode -7.068711183936102:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ selectors MethodInvocation member iterator_ter ^ ^ ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'copy-member', 'selectors -> End', 'copy-member', 'root -> End']
copynode -7.206828948081238:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.230085261136992:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'copy-member', 'root -> End']
copynode -7.288138283387525:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.476754728675587:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.425939582259161:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation qualifier entries_ter ^ ^ member unknown ^ ^ ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.417166876490228:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -7.354800108791096:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End']
copynode -7.599765098100761:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -7.918398253590567:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -8.163315927988151:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -8.289556246629218:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -8.56285218000994:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.354800108791096:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ MethodInvocation ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -5.801839662803104:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -6.869571520102909:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -7.516804247716209:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -7.5320852115692105:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -7.82582795349299:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -8.048544123768806:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -7.620354496961227:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -8.103754714131355:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -7.261653734458378:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -8.449130188295385:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -8.542301288805902:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'copy-member', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -8.506622148765018:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -8.484922321134945:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -7.70892271772027:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation']
copynode -7.261653734458378:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
before@17 batch0 x: -8.891252402187092: root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ MethodInvocation ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation']
after@17 batch0 x: -8.891252402187092: root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ MethodInvocation ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation']
before@17 batch1 x: -8.822435690177372: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
after@17 batch1 x: -8.822435690177372: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -5.9788418886309955:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -6.709482878417475:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.493307843775256:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments MethodInvocation qualifier entries_ter ^ ^ member unknown ^ ^ ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.540451663429849:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -7.614967200875981:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End']
copynode -8.055919460923178:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End']
copynode -8.385496950155357:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -8.61701457426534:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -8.891252402187092:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ MethodInvocation member ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.916421478992561:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference']
copynode -7.916421478992561:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal']
copynode -6.982833599759033:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -5.892822971654823:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation']
copynode -5.892822971654823:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference']
copynode -5.892822971654823:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal']
copynode -7.918856625532499:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -8.120116793637862:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -5.892822971654823:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This']
copynode -8.397720648063114:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.892822971654823:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation']
copynode -8.57144848909229:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'copy-member', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -8.573705514980247:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -8.599123449617764:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -7.589306994894287:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation']
copynode -7.624698103958508:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation']
copynode -8.099433705210686:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation']
before@18 batch0 x: -9.488370722538093: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal']
after@18 batch0 x: -9.488370722538093: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal']
before@18 batch1 x: -8.850383266806602: root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation']
after@18 batch1 x: -8.850383266806602: root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation']
copynode -7.672125704557402:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'copy-member']
copynode -7.589294209028594:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -8.10884770748089:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'copy-member']
copynode -8.460302165156463:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -9.15357763171778:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -9.488370722538093:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value']
copynode -7.589294209028594:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.091407625091961:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -7.428268065763405:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value']
copynode -7.3993337062129285:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.146720638585975:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -8.329711666418007:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors']
copynode -8.009438467299333:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -8.539666881872108:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -8.66984376963228:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'copy-member', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -8.752418892079731:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'root -> End']
copynode -7.3993337062129285:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -8.46815854133456:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -8.223622099583736:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation']
copynode -8.850383266806602:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -8.807343050459167:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
before@19 batch0 x: -9.599979891325347: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0']
after@19 batch0 x: -9.599979891325347: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0']
before@19 batch1 x: -9.3079792704375: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
after@19 batch1 x: -9.3079792704375: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.765266559988959:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.20334859189461:  root modified ^ LocalVariableDeclaration type ReferenceType name Iterator_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation qualifier entries_ter ^ ^ arguments This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ member iterator_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType', 'declarators -> VariableDeclarator', 'VariableDeclarator -> name initializer', 'name -> loc1', 'initializer -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.975096060778014:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation']
copynode -7.975096060778014:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> Literal']
copynode -9.599979891325347:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation']
copynode -7.975096060778014:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MemberReference']
copynode -7.432054876204347:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -7.6956400182971265:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
copynode -7.623489445162704:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.50495691326796:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation']
copynode -8.458821749401977:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -8.702153449965408:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -7.6956400182971265:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -9.029102554632118:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -9.147328017366817:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -8.458821749401977:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MethodInvocation ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MethodInvocation']
copynode -7.432054876204347:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.432054876204347:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
before@20 batch0 x: -10.171079470659606: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MemberReference']
after@20 batch0 x: -10.171079470659606: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MemberReference']
before@20 batch1 x: -9.541034816618776: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
after@20 batch1 x: -9.541034816618776: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -8.359702928806655:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -10.087108447100036:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> Literal', 'Literal -> value']
copynode -8.359702928806655:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -10.171079470659606:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MemberReference', 'MemberReference -> member']
copynode -8.028154431696748:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -8.29585730106919:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown']
copynode -8.48044682116597:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -8.949940895749023:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -9.199425509286812:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -9.459828583610943:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'start -> unknown']
copynode -9.541034816618776:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -9.522012828703737:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End']
copynode -9.504996633244446:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MethodInvocation member ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -8.8527604463452:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -9.012188261462143:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation']
copynode -8.8527604463452:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
before@21 batch0 x: -10.349000408197753: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MemberReference', 'MemberReference -> member']
after@21 batch0 x: -10.349000408197753: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MemberReference', 'MemberReference -> member']
before@21 batch1 x: -10.094087851321092: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
after@21 batch1 x: -10.094087851321092: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -9.239185853744857:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0']
copynode -9.239185853744857:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -10.106329544330947:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -10.349000408197753:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference member loc0 ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -8.483215784741333:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'arguments -> End']
copynode -8.199837996478891:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'start -> unknown']
copynode -8.199837996478891:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member']
copynode -8.963035869499436:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.610677143646171:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -9.379847383213928:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End']
copynode -9.658515794289997:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -9.717958724213531:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -9.940639322710922:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -10.094087851321092:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0']
copynode -9.671811043139314:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'start -> unknown']
copynode -9.659518285508966:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'start -> unknown']
before@22 batch0 x: -10.845884158159606: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference member loc0 ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc0']
after@22 batch0 x: -10.845884158159606: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference member loc0 ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc0']
before@22 batch1 x: -10.416005357023096: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'start -> unknown']
after@22 batch1 x: -10.416005357023096: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'start -> unknown']
copynode -9.926047130371444:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown']
copynode -10.280627055908553:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -10.845884158159606:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference member loc0 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'type -> =_ter']
copynode -10.678532822872512:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference']
copynode -8.961556686874246:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -9.002394570823526:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.588998211635044:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -9.296461841178825:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -9.18167496015667:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End']
copynode -9.968054002238205:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -9.48862267108052:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -10.144492870284012:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -10.412750004645204:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value null_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -10.416005357023096:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments Literal value false_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -9.18167496015667:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ MethodInvocation ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation']
before@23 batch0 x: -12.014768822933547: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference']
after@23 batch0 x: -12.014768822933547: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference']
before@23 batch1 x: -10.773131850262871: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ MethodInvocation ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation']
after@23 batch1 x: -10.773131850262871: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ MethodInvocation ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -10.075530483270995:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'type -> =_ter']
copynode -10.431227682973258:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'type -> =_ter']
copynode -10.8481422647601:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MemberReference member loc0 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'type -> =_ter', 'root -> End']
copynode -12.014768822933547:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -9.191596461547306:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -9.417094755073776:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End']
copynode -10.061007311654976:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End']
copynode -10.111312454653671:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -10.773131850262871:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ MethodInvocation member ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -10.187531346542528:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation']
before@24 batch0 x: -12.589605911518447: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
after@24 batch0 x: -12.589605911518447: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> MemberReference', 'MemberReference -> member']
before@24 batch1 x: -11.07284306929796: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation']
after@24 batch1 x: -11.07284306929796: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation']
copynode -10.077057766378857:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'type -> =_ter', 'root -> End']
copynode -10.432810006896034:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'type -> =_ter', 'root -> End']
copynode -10.077057766378857:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'type -> =_ter', 'root -> StatementExpression']
copynode -9.528560656210175:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'copy-member']
copynode -10.158215006900718:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'copy-member']
copynode -11.07284306929796:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -9.528560656210175:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member debug_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'member -> debug_ter']
before@25 batch0 x: -12.681151794851758: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'type -> =_ter', 'root -> StatementExpression']
after@25 batch0 x: -12.681151794851758: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'type -> =_ter', 'root -> StatementExpression']
before@25 batch1 x: -13.064485806127777: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member debug_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'member -> debug_ter']
after@25 batch1 x: -13.064485806127777: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member debug_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'member -> debug_ter']
copynode -12.681151794851758:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'type -> =_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -10.13016577353119:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'copy-member', 'root -> End']
copynode -10.786253592086723:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MethodInvocation member unknown ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'copy-member', 'root -> End']
copynode -11.218013400299242:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -10.13016577353119:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'copy-member', 'root -> StatementExpression']
before@26 batch0 x: -12.797677854658104: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'type -> =_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
after@26 batch0 x: -12.797677854658104: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'type -> =_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
before@26 batch1 x: -12.915499883791199: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'copy-member', 'root -> StatementExpression']
after@26 batch1 x: -12.915499883791199: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ member setEntry_ter ^ ^ ^ ^ ^ StatementExpression ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'copy-member', 'root -> StatementExpression']
copynode -12.797677854658104:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'type -> =_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -11.24995297761052:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation']
copynode -11.24995297761052:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> Literal']
before@27 batch0 x: -13.480445305467583: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'type -> =_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
after@27 batch0 x: -13.480445305467583: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'type -> =_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
before@27 batch1 x: -12.72670609326451: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> Literal']
after@27 batch1 x: -12.72670609326451: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> Literal']
copynode -13.480445305467583:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'type -> =_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -12.071463054133346:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -12.72670609326451:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> Literal', 'Literal -> value']
before@28 batch0 x: -13.480573821332655: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'type -> =_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
after@28 batch0 x: -13.480573821332655: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'type -> =_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
before@28 batch1 x: -12.729846820555395: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> Literal', 'Literal -> value']
after@28 batch1 x: -12.729846820555395: root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> Literal', 'Literal -> value']
copynode -13.480573821332655:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value MethodInvocation qualifier loc0 ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc0', 'start -> unknown', 'type -> =_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -12.17181426109164:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -12.729846820555395:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Literal value <string>_ter ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> Literal', 'Literal -> value', 'value -> <string>_ter']
method
7 
method
entries_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
entries_ter DEFAULT_ZERO_TOLERANCE
entries_ter serialVersionUID
entries_ter entries
7 OpenIntToDoubleHashMap
int Iterator computeCapacity iterator_ter
int Iterator nextPowerOfTwo iterator_ter
double Iterator get iterator_ter
boolean Iterator containsKey iterator_ter
Iterator Iterator iterator iterator_ter
int Iterator perturb iterator_ter
int Iterator findInsertionIndex iterator_ter
int Iterator findInsertionIndex iterator_ter
int Iterator probe iterator_ter
int Iterator changeIndexSign iterator_ter
int Iterator size iterator_ter
double Iterator remove iterator_ter
boolean Iterator containsKey iterator_ter
double Iterator doRemove iterator_ter
double Iterator put iterator_ter
None Iterator growTable iterator_ter
boolean Iterator shouldGrowTable iterator_ter
int Iterator hashOf iterator_ter
None Iterator readObject iterator_ter
method
7 
OpenIntToDoubleHashMap  getEntries 
boolean  isDefaultValue 
RealVector  add 
OpenMapRealVector  add 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  copy 
double  dotProduct 
double  dotProduct 
OpenMapRealVector  ebeDivide 
OpenMapRealVector  ebeMultiply 
OpenMapRealVector  getSubVector 
int  getDimension 
double  getDistance 
double  getDistance 
double  getEntry 
double  getL1Distance 
double  getL1Distance 
double  getLInfDistance 
double  getLInfDistance 
boolean  isInfinite 
boolean  isNaN 
OpenMapRealVector  mapAdd 
OpenMapRealVector  mapAddToSelf 
RealVector  projection 
None  setEntry 
None  setSubVector 
None  set 
OpenMapRealVector  subtract 
RealVector  subtract 
OpenMapRealVector  unitVector 
None  unitize 
double  toArray 
int  hashCode 
boolean  equals 
double  getSparsity 
java  sparseIterator 
method
res_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
7 OpenMapRealVector
OpenIntToDoubleHashMap  getEntries 
boolean  isDefaultValue 
RealVector  add 
OpenMapRealVector  add 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  copy 
double  dotProduct 
double  dotProduct 
OpenMapRealVector  ebeDivide 
OpenMapRealVector  ebeMultiply 
OpenMapRealVector  getSubVector 
int  getDimension 
double  getDistance 
double  getDistance 
double  getEntry 
double  getL1Distance 
double  getL1Distance 
double  getLInfDistance 
double  getLInfDistance 
boolean  isInfinite 
boolean  isNaN 
OpenMapRealVector  mapAdd 
OpenMapRealVector  mapAddToSelf 
RealVector  projection 
None  setEntry 
None  setSubVector 
None  set 
OpenMapRealVector  subtract 
RealVector  subtract 
OpenMapRealVector  unitVector 
None  unitize 
double  toArray 
int  hashCode 
boolean  equals 
double  getSparsity 
java  sparseIterator 
method
7 
OpenIntToDoubleHashMap  getEntries 
boolean  isDefaultValue 
RealVector  add 
OpenMapRealVector  add 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  copy 
double  dotProduct 
double  dotProduct 
OpenMapRealVector  ebeDivide 
OpenMapRealVector  ebeMultiply 
OpenMapRealVector  getSubVector 
int  getDimension 
double  getDistance 
double  getDistance 
double  getEntry 
double  getL1Distance 
double  getL1Distance 
double  getLInfDistance 
double  getLInfDistance 
boolean  isInfinite 
boolean  isNaN 
OpenMapRealVector  mapAdd 
OpenMapRealVector  mapAddToSelf 
RealVector  projection 
None  setEntry 
None  setSubVector 
None  set 
OpenMapRealVector  subtract 
RealVector  subtract 
OpenMapRealVector  unitVector 
None  unitize 
double  toArray 
int  hashCode 
boolean  equals 
double  getSparsity 
java  sparseIterator 
method
entries_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
entries_ter DEFAULT_ZERO_TOLERANCE
entries_ter serialVersionUID
entries_ter entries
7 OpenIntToDoubleHashMap
method
except
method
7 
method
7 
OpenIntToDoubleHashMap  getEntries 
boolean  isDefaultValue 
RealVector  add 
OpenMapRealVector  add 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  copy 
double  dotProduct 
double  dotProduct 
OpenMapRealVector  ebeDivide 
OpenMapRealVector  ebeMultiply 
OpenMapRealVector  getSubVector 
int  getDimension 
double  getDistance 
double  getDistance 
double  getEntry 
double  getL1Distance 
double  getL1Distance 
double  getLInfDistance 
double  getLInfDistance 
boolean  isInfinite 
boolean  isNaN 
OpenMapRealVector  mapAdd 
OpenMapRealVector  mapAddToSelf 
RealVector  projection 
None  setEntry 
None  setSubVector 
None  set 
OpenMapRealVector  subtract 
RealVector  subtract 
OpenMapRealVector  unitVector 
None  unitize 
double  toArray 
int  hashCode 
boolean  equals 
double  getSparsity 
java  sparseIterator 
method
except
method
res_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
7 OpenMapRealVector
method
7 
method
res_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
7 OpenMapRealVector
OpenIntToDoubleHashMap  getEntries 
boolean  isDefaultValue 
RealVector  add 
OpenMapRealVector  add 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  copy 
double  dotProduct 
double  dotProduct 
OpenMapRealVector  ebeDivide 
OpenMapRealVector  ebeMultiply 
OpenMapRealVector  getSubVector 
int  getDimension 
double  getDistance 
double  getDistance 
double  getEntry 
double  getL1Distance 
double  getL1Distance 
double  getLInfDistance 
double  getLInfDistance 
boolean  isInfinite 
boolean  isNaN 
OpenMapRealVector  mapAdd 
OpenMapRealVector  mapAddToSelf 
RealVector  projection 
None  setEntry 
None  setSubVector 
None  set 
OpenMapRealVector  subtract 
RealVector  subtract 
OpenMapRealVector  unitVector 
None  unitize 
double  toArray 
int  hashCode 
boolean  equals 
double  getSparsity 
java  sparseIterator 
method
res_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
except
method
except
method
v_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
7 RealVector
method
v_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
7 RealVector
int  getDimension 
double  getEntry 
None  setEntry 
None  addToEntry 
RealVector  append 
RealVector  append 
RealVector  getSubVector 
None  setSubVector 
boolean  isNaN 
boolean  isInfinite 
None  checkVectorDimensions 
None  checkVectorDimensions 
None  checkIndex 
None  checkIndices 
RealVector  add 
RealVector  subtract 
RealVector  mapAdd 
RealVector  mapAddToSelf 
RealVector  copy 
double  dotProduct 
double  cosine 
RealVector  ebeDivide 
RealVector  ebeMultiply 
double  getDistance 
double  getNorm 
double  getL1Norm 
double  getLInfNorm 
double  getL1Distance 
double  getLInfDistance 
int  getMinIndex 
double  getMinValue 
int  getMaxIndex 
double  getMaxValue 
RealVector  mapMultiply 
RealVector  mapMultiplyToSelf 
RealVector  mapSubtract 
RealVector  mapSubtractToSelf 
RealVector  mapDivide 
RealVector  mapDivideToSelf 
RealMatrix  outerProduct 
RealVector  projection 
None  set 
double  toArray 
RealVector  unitVector 
None  unitize 
Iterator  sparseIterator 
Iterator  iterator 
RealVector  map 
RealVector  mapToSelf 
RealVector  combine 
RealVector  combineToSelf 
double  walkInDefaultOrder 
double  walkInDefaultOrder 
double  walkInOptimizedOrder 
double  walkInOptimizedOrder 
double  walkInDefaultOrder 
double  walkInDefaultOrder 
double  walkInOptimizedOrder 
double  walkInOptimizedOrder 
RealVector  unmodifiableRealVector 
method
v_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
7 RealVector
method
res_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
7 OpenMapRealVector
method
7 
method
except
method
7 
OpenIntToDoubleHashMap  getEntries 
boolean  isDefaultValue 
RealVector  add 
OpenMapRealVector  add 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  copy 
double  dotProduct 
double  dotProduct 
OpenMapRealVector  ebeDivide 
OpenMapRealVector  ebeMultiply 
OpenMapRealVector  getSubVector 
int  getDimension 
double  getDistance 
double  getDistance 
double  getEntry 
double  getL1Distance 
double  getL1Distance 
double  getLInfDistance 
double  getLInfDistance 
boolean  isInfinite 
boolean  isNaN 
OpenMapRealVector  mapAdd 
OpenMapRealVector  mapAddToSelf 
RealVector  projection 
None  setEntry 
None  setSubVector 
None  set 
OpenMapRealVector  subtract 
RealVector  subtract 
OpenMapRealVector  unitVector 
None  unitize 
double  toArray 
int  hashCode 
boolean  equals 
double  getSparsity 
java  sparseIterator 
method
7 
OpenIntToDoubleHashMap  getEntries 
boolean  isDefaultValue 
RealVector  add 
OpenMapRealVector  add 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  copy 
double  dotProduct 
double  dotProduct 
OpenMapRealVector  ebeDivide 
OpenMapRealVector  ebeMultiply 
OpenMapRealVector  getSubVector 
int  getDimension 
double  getDistance 
double  getDistance 
double  getEntry 
double  getL1Distance 
double  getL1Distance 
double  getLInfDistance 
double  getLInfDistance 
boolean  isInfinite 
boolean  isNaN 
OpenMapRealVector  mapAdd 
OpenMapRealVector  mapAddToSelf 
RealVector  projection 
None  setEntry 
None  setSubVector 
None  set 
OpenMapRealVector  subtract 
RealVector  subtract 
OpenMapRealVector  unitVector 
None  unitize 
double  toArray 
int  hashCode 
boolean  equals 
double  getSparsity 
java  sparseIterator 
method
7 
method
res_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
except
method
7 
method
res_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
7 OpenMapRealVector
OpenIntToDoubleHashMap  getEntries 
boolean  isDefaultValue 
RealVector  add 
OpenMapRealVector  add 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  copy 
double  dotProduct 
double  dotProduct 
OpenMapRealVector  ebeDivide 
OpenMapRealVector  ebeMultiply 
OpenMapRealVector  getSubVector 
int  getDimension 
double  getDistance 
double  getDistance 
double  getEntry 
double  getL1Distance 
double  getL1Distance 
double  getLInfDistance 
double  getLInfDistance 
boolean  isInfinite 
boolean  isNaN 
OpenMapRealVector  mapAdd 
OpenMapRealVector  mapAddToSelf 
RealVector  projection 
None  setEntry 
None  setSubVector 
None  set 
OpenMapRealVector  subtract 
RealVector  subtract 
OpenMapRealVector  unitVector 
None  unitize 
double  toArray 
int  hashCode 
boolean  equals 
double  getSparsity 
java  sparseIterator 
method
7 
OpenIntToDoubleHashMap  getEntries 
boolean  isDefaultValue 
RealVector  add 
OpenMapRealVector  add 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  copy 
double  dotProduct 
double  dotProduct 
OpenMapRealVector  ebeDivide 
OpenMapRealVector  ebeMultiply 
OpenMapRealVector  getSubVector 
int  getDimension 
double  getDistance 
double  getDistance 
double  getEntry 
double  getL1Distance 
double  getL1Distance 
double  getLInfDistance 
double  getLInfDistance 
boolean  isInfinite 
boolean  isNaN 
OpenMapRealVector  mapAdd 
OpenMapRealVector  mapAddToSelf 
RealVector  projection 
None  setEntry 
None  setSubVector 
None  set 
OpenMapRealVector  subtract 
RealVector  subtract 
OpenMapRealVector  unitVector 
None  unitize 
double  toArray 
int  hashCode 
boolean  equals 
double  getSparsity 
java  sparseIterator 
method
7 
OpenIntToDoubleHashMap  getEntries 
boolean  isDefaultValue 
RealVector  add 
OpenMapRealVector  add 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  copy 
double  dotProduct 
double  dotProduct 
OpenMapRealVector  ebeDivide 
OpenMapRealVector  ebeMultiply 
OpenMapRealVector  getSubVector 
int  getDimension 
double  getDistance 
double  getDistance 
double  getEntry 
double  getL1Distance 
double  getL1Distance 
double  getLInfDistance 
double  getLInfDistance 
boolean  isInfinite 
boolean  isNaN 
OpenMapRealVector  mapAdd 
OpenMapRealVector  mapAddToSelf 
RealVector  projection 
None  setEntry 
None  setSubVector 
None  set 
OpenMapRealVector  subtract 
RealVector  subtract 
OpenMapRealVector  unitVector 
None  unitize 
double  toArray 
int  hashCode 
boolean  equals 
double  getSparsity 
java  sparseIterator 
int setEntry
method
iter_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
7 Iterator
method
v_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
7 RealVector
int  getDimension 
double  getEntry 
None  setEntry 
None  addToEntry 
RealVector  append 
RealVector  append 
RealVector  getSubVector 
None  setSubVector 
boolean  isNaN 
boolean  isInfinite 
None  checkVectorDimensions 
None  checkVectorDimensions 
None  checkIndex 
None  checkIndices 
RealVector  add 
RealVector  subtract 
RealVector  mapAdd 
RealVector  mapAddToSelf 
RealVector  copy 
double  dotProduct 
double  cosine 
RealVector  ebeDivide 
RealVector  ebeMultiply 
double  getDistance 
double  getNorm 
double  getL1Norm 
double  getLInfNorm 
double  getL1Distance 
double  getLInfDistance 
int  getMinIndex 
double  getMinValue 
int  getMaxIndex 
double  getMaxValue 
RealVector  mapMultiply 
RealVector  mapMultiplyToSelf 
RealVector  mapSubtract 
RealVector  mapSubtractToSelf 
RealVector  mapDivide 
RealVector  mapDivideToSelf 
RealMatrix  outerProduct 
RealVector  projection 
None  set 
double  toArray 
RealVector  unitVector 
None  unitize 
Iterator  sparseIterator 
Iterator  iterator 
RealVector  map 
RealVector  mapToSelf 
RealVector  combine 
RealVector  combineToSelf 
double  walkInDefaultOrder 
double  walkInDefaultOrder 
double  walkInOptimizedOrder 
double  walkInOptimizedOrder 
double  walkInDefaultOrder 
double  walkInDefaultOrder 
double  walkInOptimizedOrder 
double  walkInOptimizedOrder 
RealVector  unmodifiableRealVector 
method
res_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
except
method
res_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
7 OpenMapRealVector
OpenIntToDoubleHashMap  getEntries 
boolean  isDefaultValue 
RealVector  add 
OpenMapRealVector  add 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  copy 
double  dotProduct 
double  dotProduct 
OpenMapRealVector  ebeDivide 
OpenMapRealVector  ebeMultiply 
OpenMapRealVector  getSubVector 
int  getDimension 
double  getDistance 
double  getDistance 
double  getEntry 
double  getL1Distance 
double  getL1Distance 
double  getLInfDistance 
double  getLInfDistance 
boolean  isInfinite 
boolean  isNaN 
OpenMapRealVector  mapAdd 
OpenMapRealVector  mapAddToSelf 
RealVector  projection 
None  setEntry 
None  setSubVector 
None  set 
OpenMapRealVector  subtract 
RealVector  subtract 
OpenMapRealVector  unitVector 
None  unitize 
double  toArray 
int  hashCode 
boolean  equals 
double  getSparsity 
java  sparseIterator 
method
7 
OpenIntToDoubleHashMap  getEntries 
boolean  isDefaultValue 
RealVector  add 
OpenMapRealVector  add 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  copy 
double  dotProduct 
double  dotProduct 
OpenMapRealVector  ebeDivide 
OpenMapRealVector  ebeMultiply 
OpenMapRealVector  getSubVector 
int  getDimension 
double  getDistance 
double  getDistance 
double  getEntry 
double  getL1Distance 
double  getL1Distance 
double  getLInfDistance 
double  getLInfDistance 
boolean  isInfinite 
boolean  isNaN 
OpenMapRealVector  mapAdd 
OpenMapRealVector  mapAddToSelf 
RealVector  projection 
None  setEntry 
None  setSubVector 
None  set 
OpenMapRealVector  subtract 
RealVector  subtract 
OpenMapRealVector  unitVector 
None  unitize 
double  toArray 
int  hashCode 
boolean  equals 
double  getSparsity 
java  sparseIterator 
method
res_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
except
method
res_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
7 OpenMapRealVector
OpenIntToDoubleHashMap  getEntries 
boolean  isDefaultValue 
RealVector  add 
OpenMapRealVector  add 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  copy 
double  dotProduct 
double  dotProduct 
OpenMapRealVector  ebeDivide 
OpenMapRealVector  ebeMultiply 
OpenMapRealVector  getSubVector 
int  getDimension 
double  getDistance 
double  getDistance 
double  getEntry 
double  getL1Distance 
double  getL1Distance 
double  getLInfDistance 
double  getLInfDistance 
boolean  isInfinite 
boolean  isNaN 
OpenMapRealVector  mapAdd 
OpenMapRealVector  mapAddToSelf 
RealVector  projection 
None  setEntry 
None  setSubVector 
None  set 
OpenMapRealVector  subtract 
RealVector  subtract 
OpenMapRealVector  unitVector 
None  unitize 
double  toArray 
int  hashCode 
boolean  equals 
double  getSparsity 
java  sparseIterator 
method
res_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
7 OpenMapRealVector
OpenIntToDoubleHashMap  getEntries 
boolean  isDefaultValue 
RealVector  add 
OpenMapRealVector  add 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  copy 
double  dotProduct 
double  dotProduct 
OpenMapRealVector  ebeDivide 
OpenMapRealVector  ebeMultiply 
OpenMapRealVector  getSubVector 
int  getDimension 
double  getDistance 
double  getDistance 
double  getEntry 
double  getL1Distance 
double  getL1Distance 
double  getLInfDistance 
double  getLInfDistance 
boolean  isInfinite 
boolean  isNaN 
OpenMapRealVector  mapAdd 
OpenMapRealVector  mapAddToSelf 
RealVector  projection 
None  setEntry 
None  setSubVector 
None  set 
OpenMapRealVector  subtract 
RealVector  subtract 
OpenMapRealVector  unitVector 
None  unitize 
double  toArray 
int  hashCode 
boolean  equals 
double  getSparsity 
java  sparseIterator 
method
res_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
7 OpenMapRealVector
OpenIntToDoubleHashMap  getEntries 
boolean  isDefaultValue 
RealVector  add 
OpenMapRealVector  add 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  copy 
double  dotProduct 
double  dotProduct 
OpenMapRealVector  ebeDivide 
OpenMapRealVector  ebeMultiply 
OpenMapRealVector  getSubVector 
int  getDimension 
double  getDistance 
double  getDistance 
double  getEntry 
double  getL1Distance 
double  getL1Distance 
double  getLInfDistance 
double  getLInfDistance 
boolean  isInfinite 
boolean  isNaN 
OpenMapRealVector  mapAdd 
OpenMapRealVector  mapAddToSelf 
RealVector  projection 
None  setEntry 
None  setSubVector 
None  set 
OpenMapRealVector  subtract 
RealVector  subtract 
OpenMapRealVector  unitVector 
None  unitize 
double  toArray 
int  hashCode 
boolean  equals 
double  getSparsity 
java  sparseIterator 
method
v_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
7 RealVector
int  getDimension 
double  getEntry 
None  setEntry 
None  addToEntry 
RealVector  append 
RealVector  append 
RealVector  getSubVector 
None  setSubVector 
boolean  isNaN 
boolean  isInfinite 
None  checkVectorDimensions 
None  checkVectorDimensions 
None  checkIndex 
None  checkIndices 
RealVector  add 
RealVector  subtract 
RealVector  mapAdd 
RealVector  mapAddToSelf 
RealVector  copy 
double  dotProduct 
double  cosine 
RealVector  ebeDivide 
RealVector  ebeMultiply 
double  getDistance 
double  getNorm 
double  getL1Norm 
double  getLInfNorm 
double  getL1Distance 
double  getLInfDistance 
int  getMinIndex 
double  getMinValue 
int  getMaxIndex 
double  getMaxValue 
RealVector  mapMultiply 
RealVector  mapMultiplyToSelf 
RealVector  mapSubtract 
RealVector  mapSubtractToSelf 
RealVector  mapDivide 
RealVector  mapDivideToSelf 
RealMatrix  outerProduct 
RealVector  projection 
None  set 
double  toArray 
RealVector  unitVector 
None  unitize 
Iterator  sparseIterator 
Iterator  iterator 
RealVector  map 
RealVector  mapToSelf 
RealVector  combine 
RealVector  combineToSelf 
double  walkInDefaultOrder 
double  walkInDefaultOrder 
double  walkInOptimizedOrder 
double  walkInOptimizedOrder 
double  walkInDefaultOrder 
double  walkInDefaultOrder 
double  walkInOptimizedOrder 
double  walkInOptimizedOrder 
RealVector  unmodifiableRealVector 
method
except
method
iter_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
7 Iterator
method
7 
OpenIntToDoubleHashMap  getEntries 
boolean  isDefaultValue 
RealVector  add 
OpenMapRealVector  add 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  copy 
double  dotProduct 
double  dotProduct 
OpenMapRealVector  ebeDivide 
OpenMapRealVector  ebeMultiply 
OpenMapRealVector  getSubVector 
int  getDimension 
double  getDistance 
double  getDistance 
double  getEntry 
double  getL1Distance 
double  getL1Distance 
double  getLInfDistance 
double  getLInfDistance 
boolean  isInfinite 
boolean  isNaN 
OpenMapRealVector  mapAdd 
OpenMapRealVector  mapAddToSelf 
RealVector  projection 
None  setEntry 
None  setSubVector 
None  set 
OpenMapRealVector  subtract 
RealVector  subtract 
OpenMapRealVector  unitVector 
None  unitize 
double  toArray 
int  hashCode 
boolean  equals 
double  getSparsity 
java  sparseIterator 
method
res_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
except
method
res_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
except
method
except
method
res_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
7 OpenMapRealVector
OpenIntToDoubleHashMap  getEntries 
boolean  isDefaultValue 
RealVector  add 
OpenMapRealVector  add 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  copy 
double  dotProduct 
double  dotProduct 
OpenMapRealVector  ebeDivide 
OpenMapRealVector  ebeMultiply 
OpenMapRealVector  getSubVector 
int  getDimension 
double  getDistance 
double  getDistance 
double  getEntry 
double  getL1Distance 
double  getL1Distance 
double  getLInfDistance 
double  getLInfDistance 
boolean  isInfinite 
boolean  isNaN 
OpenMapRealVector  mapAdd 
OpenMapRealVector  mapAddToSelf 
RealVector  projection 
None  setEntry 
None  setSubVector 
None  set 
OpenMapRealVector  subtract 
RealVector  subtract 
OpenMapRealVector  unitVector 
None  unitize 
double  toArray 
int  hashCode 
boolean  equals 
double  getSparsity 
java  sparseIterator 
method
res_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
7 OpenMapRealVector
OpenIntToDoubleHashMap  getEntries 
boolean  isDefaultValue 
RealVector  add 
OpenMapRealVector  add 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  copy 
double  dotProduct 
double  dotProduct 
OpenMapRealVector  ebeDivide 
OpenMapRealVector  ebeMultiply 
OpenMapRealVector  getSubVector 
int  getDimension 
double  getDistance 
double  getDistance 
double  getEntry 
double  getL1Distance 
double  getL1Distance 
double  getLInfDistance 
double  getLInfDistance 
boolean  isInfinite 
boolean  isNaN 
OpenMapRealVector  mapAdd 
OpenMapRealVector  mapAddToSelf 
RealVector  projection 
None  setEntry 
None  setSubVector 
None  set 
OpenMapRealVector  subtract 
RealVector  subtract 
OpenMapRealVector  unitVector 
None  unitize 
double  toArray 
int  hashCode 
boolean  equals 
double  getSparsity 
java  sparseIterator 
method
res_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
except
method
except
method
res_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
7 OpenMapRealVector
OpenIntToDoubleHashMap  getEntries 
boolean  isDefaultValue 
RealVector  add 
OpenMapRealVector  add 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  copy 
double  dotProduct 
double  dotProduct 
OpenMapRealVector  ebeDivide 
OpenMapRealVector  ebeMultiply 
OpenMapRealVector  getSubVector 
int  getDimension 
double  getDistance 
double  getDistance 
double  getEntry 
double  getL1Distance 
double  getL1Distance 
double  getLInfDistance 
double  getLInfDistance 
boolean  isInfinite 
boolean  isNaN 
OpenMapRealVector  mapAdd 
OpenMapRealVector  mapAddToSelf 
RealVector  projection 
None  setEntry 
None  setSubVector 
None  set 
OpenMapRealVector  subtract 
RealVector  subtract 
OpenMapRealVector  unitVector 
None  unitize 
double  toArray 
int  hashCode 
boolean  equals 
double  getSparsity 
java  sparseIterator 
method
res_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
7 OpenMapRealVector
OpenIntToDoubleHashMap  getEntries 
boolean  isDefaultValue 
RealVector  add 
OpenMapRealVector  add 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  copy 
double  dotProduct 
double  dotProduct 
OpenMapRealVector  ebeDivide 
OpenMapRealVector  ebeMultiply 
OpenMapRealVector  getSubVector 
int  getDimension 
double  getDistance 
double  getDistance 
double  getEntry 
double  getL1Distance 
double  getL1Distance 
double  getLInfDistance 
double  getLInfDistance 
boolean  isInfinite 
boolean  isNaN 
OpenMapRealVector  mapAdd 
OpenMapRealVector  mapAddToSelf 
RealVector  projection 
None  setEntry 
None  setSubVector 
None  set 
OpenMapRealVector  subtract 
RealVector  subtract 
OpenMapRealVector  unitVector 
None  unitize 
double  toArray 
int  hashCode 
boolean  equals 
double  getSparsity 
java  sparseIterator 
method
res_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
7 OpenMapRealVector
OpenIntToDoubleHashMap  getEntries 
boolean  isDefaultValue 
RealVector  add 
OpenMapRealVector  add 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  copy 
double  dotProduct 
double  dotProduct 
OpenMapRealVector  ebeDivide 
OpenMapRealVector  ebeMultiply 
OpenMapRealVector  getSubVector 
int  getDimension 
double  getDistance 
double  getDistance 
double  getEntry 
double  getL1Distance 
double  getL1Distance 
double  getLInfDistance 
double  getLInfDistance 
boolean  isInfinite 
boolean  isNaN 
OpenMapRealVector  mapAdd 
OpenMapRealVector  mapAddToSelf 
RealVector  projection 
None  setEntry 
None  setSubVector 
None  set 
OpenMapRealVector  subtract 
RealVector  subtract 
OpenMapRealVector  unitVector 
None  unitize 
double  toArray 
int  hashCode 
boolean  equals 
double  getSparsity 
java  sparseIterator 
method
res_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
7 OpenMapRealVector
method
except
method
res_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
except
method
res_ter {'v_ter': 'RealVector', 'res_ter': 'OpenMapRealVector', 'iter_ter': 'Iterator'}
7 OpenMapRealVector
OpenIntToDoubleHashMap  getEntries 
boolean  isDefaultValue 
RealVector  add 
OpenMapRealVector  add 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  copy 
double  dotProduct 
double  dotProduct 
OpenMapRealVector  ebeDivide 
OpenMapRealVector  ebeMultiply 
OpenMapRealVector  getSubVector 
int  getDimension 
double  getDistance 
double  getDistance 
double  getEntry 
double  getL1Distance 
double  getL1Distance 
double  getLInfDistance 
double  getLInfDistance 
boolean  isInfinite 
boolean  isNaN 
OpenMapRealVector  mapAdd 
OpenMapRealVector  mapAddToSelf 
RealVector  projection 
None  setEntry 
None  setSubVector 
None  set 
OpenMapRealVector  subtract 
RealVector  subtract 
OpenMapRealVector  unitVector 
None  unitize 
double  toArray 
int  hashCode 
boolean  equals 
double  getSparsity 
java  sparseIterator 
method
7 
OpenIntToDoubleHashMap  getEntries 
boolean  isDefaultValue 
RealVector  add 
OpenMapRealVector  add 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  append 
OpenMapRealVector  copy 
double  dotProduct 
double  dotProduct 
OpenMapRealVector  ebeDivide 
OpenMapRealVector  ebeMultiply 
OpenMapRealVector  getSubVector 
int  getDimension 
double  getDistance 
double  getDistance 
double  getEntry 
double  getL1Distance 
double  getL1Distance 
double  getLInfDistance 
double  getLInfDistance 
boolean  isInfinite 
boolean  isNaN 
OpenMapRealVector  mapAdd 
OpenMapRealVector  mapAddToSelf 
RealVector  projection 
None  setEntry 
None  setSubVector 
None  set 
OpenMapRealVector  subtract 
RealVector  subtract 
OpenMapRealVector  unitVector 
None  unitize 
double  toArray 
int  hashCode 
boolean  equals 
double  getSparsity 
java  sparseIterator 
stderr: Check out 7bbddc22 to /root/projects/Recoder-bwk/buggy/Math-29............. OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff 7bbddc22:350b2b1a..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Math-29b........................................ OK
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Running ant (export.dir.src.classes)....................................... OK

  0%|          | 0/1 [00:00<?, ?it/s]/root/projects/Recoder-bwk/run.py:527: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  tmpdepth = np.array(tmpdepth)
/root/envs/recoder/lib/python3.7/site-packages/torch/nn/functional.py:1340: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
100%|██████████| 1/1 [00:30<00:00, 30.90s/it]100%|██████████| 1/1 [00:30<00:00, 30.90s/it]
