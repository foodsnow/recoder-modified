stdout: ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumYY - ((sumXY * sumXY) / sumXX));
ReturnStatement expression MethodInvocation qualifier Math_ter ^ ^ arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ ^ 
return Math.max((sumYY - ((sumXY * sumXY) / sumXX)), 0);
ReturnStatement expression BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ 
return ((sumXY * sumXY) / sumXX);
ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumX_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumX - ((sumXY * sumXY) / sumXX));
ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumXX_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumXX - ((sumXY * sumXY) / sumXX));
ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumY - ((sumXY * sumXY) / sumXX));
ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumXY - ((sumXY * sumXY) / sumXX));
ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member xbar_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (xbar - ((sumXY * sumXY) / sumXX));
ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member ybar_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (ybar - ((sumXY * sumXY) / sumXX));
ReturnStatement expression MethodInvocation qualifier Math_ter ^ ^ arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ ^ member max_ter ^ ^ ^ ^ ^ 
return Math.max((sumYY - ((sumXY * sumXY) / sumXX)));
ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumYY + ((sumXY * sumXY) / sumXX));
ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumX_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumYY - ((sumXY * sumXY) / sumX));
ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumY_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumYY - ((sumXY * sumXY) / sumY));
ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumYY_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumYY - ((sumXY * sumXY) / sumYY));
ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumYY - ((sumXY * sumXY) / sumXY));
ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member xbar_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumYY - ((sumXY * sumXY) / xbar));
ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member ybar_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumYY - ((sumXY * sumXY) / ybar));
ReturnStatement expression BinaryOperation operator /_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumYY / ((sumXY * sumXY) / sumXX));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumYY * ((sumXY * sumXY) / sumXX));
ReturnStatement expression MethodInvocation qualifier Math_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ ^ 
return Math.max(0);
ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumX_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumYY - ((sumX * sumXY) / sumXX));
ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXX_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumYY - ((sumXX * sumXY) / sumXX));
ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumYY - ((sumY * sumXY) / sumXX));
ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumYY - ((sumYY * sumXY) / sumXX));
ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member xbar_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumYY - ((xbar * sumXY) / sumXX));
ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member ybar_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumYY - ((ybar * sumXY) / sumXX));
ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator -_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumYY - ((sumXY * sumXY) - sumXX));
ReturnStatement expression MethodInvocation qualifier Math_ter ^ ^ arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ ^ 
return Math.max((sumYY - ((sumXY * sumXY) / sumXX)), 1);
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ ^ 
return (sumXY * sumXY);
ReturnStatement expression MemberReference member sumYY_ter ^ ^ ^ ^ ^ 
return sumYY;
ReturnStatement expression MethodInvocation qualifier Math_ter ^ ^ member add_ter ^ ^ ^ ^ ^ 
return Math.add();
ReturnStatement expression MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member sumYY_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ ^ 
return Math.max(sumYY);
ReturnStatement expression MethodInvocation qualifier Math_ter ^ ^ member getSumSquaredErrors_ter ^ ^ ^ ^ ^ 
return Math.getSumSquaredErrors();
ReturnStatement expression MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member sumXX_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ ^ 
return Math.max(sumXX);
ReturnStatement expression MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member sumXY_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ ^ 
return Math.max(sumXY);
ReturnStatement expression MethodInvocation qualifier Math_ter ^ ^ member max_ter ^ ^ ^ ^ ^ 
return Math.max();
ReturnStatement expression BinaryOperation operator <=_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumYY <= ((sumXY * sumXY) / sumXX));
ReturnStatement expression MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ ^ 
return max((sumYY - ((sumXY * sumXY) / sumXX)), 0);
ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumYY - ((sumXY - sumXY) / sumXX));
ReturnStatement expression MethodInvocation qualifier Math_ter ^ ^ arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ ^ 
return Math.max((sumYY - ((sumXY * sumXY) / sumXX)), 2);
ReturnStatement expression MemberReference member sumXY_ter ^ ^ ^ ^ ^ 
return sumXY;
ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumYY - ((sumXY * sumXY) + sumXX));
ReturnStatement expression MethodInvocation qualifier Math_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ ^ 
return Math.max(1);
ReturnStatement expression MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ ^ member max_ter ^ ^ ^ ^ ^ 
return max((sumYY - ((sumXY * sumXY) / sumXX)));
ReturnStatement expression MethodInvocation member getSumSquaredErrors_ter ^ ^ ^ ^ ^ 
return getSumSquaredErrors();
ReturnStatement expression BinaryOperation operator %_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumYY % ((sumXY * sumXY) / sumXX));
ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr MemberReference member sumYY_ter ^ ^ ^ ^ ^ ^ ^ 
return (sumYY - sumYY);
ReturnStatement expression MethodInvocation arguments MemberReference member sumYY_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ ^ 
return max(sumYY);
ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumXX_ter ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ 
return (sumXX - sumXX);
ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumYY - ((sumXY + sumXY) / sumXX));
ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ ^ 
return (sumYY - sumXY);
ReturnStatement expression BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member getSumSquaredErrors_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (sumYY - ((sumXY * sumXY) / getSumSquaredErrors));
ReturnStatement expression MethodInvocation qualifier Math_ter ^ ^ arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ Literal value 0_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ ^ 
return Math.max((sumYY - ((sumXY * sumXY) / sumXX)), 0, 0);
ReturnStatement expression MethodInvocation qualifier Math_ter ^ ^ arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ Literal value null_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ ^ 
return Math.max((sumYY - ((sumXY * sumXY) / sumXX)), null);
ReturnStatement expression MethodInvocation qualifier Math_ter ^ ^ member debug_ter ^ ^ ^ ^ ^ 
return Math.debug();
ReturnStatement expression MethodInvocation qualifier Math_ter ^ ^ arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member sumYY_ter ^ ^ ^ ^ operandr BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member sumXY_ter ^ ^ ^ ^ operandr MemberReference member sumXY_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member sumXX_ter ^ ^ ^ ^ ^ ^ ^ Literal value false_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ ^ 
return Math.max((sumYY - ((sumXY * sumXY) / sumXX)), false);
stderr: 