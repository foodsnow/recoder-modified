stdout: condition BinaryOperation operator >=_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ 
if((offsetLocal >= 0)){

condition BinaryOperation operator <=_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ 
if((offsetLocal <= 0)){

condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ 
if((offsetLocal > 0)){

condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member instantAdjusted_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ 
if((instantAdjusted > 0)){

condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member nextLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ 
if((nextLocal > 0)){

condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ 
if((offsetLocal < 0)){

condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetAdjusted_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ 
if((offsetAdjusted > 0)){

condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member nextAdjusted_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ 
if((nextAdjusted > 0)){

condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ 
if((offsetLocal == 0)){

ReturnStatement expression MemberReference member offsetLocal_ter ^ ^ ^ ^ ^ 
if (true) { return offsetLocal; }

condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ 
if(( > 0)){

condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member instantLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ 
if((instantLocal > 0)){

condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ 
if((offsetLocal != 0)){

ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ 
if (true) { return 0; }

ReturnStatement expression MemberReference member offsetPrev_ter ^ ^ ^ ^ ^ 
if (true) { return offsetPrev; }

IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr MemberReference member offsetLocal_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((offsetLocal > 0) || (offsetLocal > offsetLocal))){


IfStatement condition MemberReference member offsetLocal_ter ^ ^ ^ ^ ^ 
if(offsetLocal){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr MemberReference member offsetLocal_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((offsetLocal > 0) && (offsetLocal > offsetLocal))){


condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member prev_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ 
if((prev > 0)){

IfStatement condition BinaryOperation operator -_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr MemberReference member offsetAdjusted_ter ^ ^ ^ ^ ^ ^ ^ 
if((offsetLocal - offsetAdjusted)){


condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetPrev_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ 
if((offsetPrev > 0)){

condition BinaryOperation operator >_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ 
if((-offsetLocal > 0)){

IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if((offsetLocal < (offsetLocal > 0))){


IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((offsetLocal > 0) || (offsetLocal > 0))){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr MemberReference member instantAdjusted_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((offsetLocal > 0) && (offsetLocal > instantAdjusted))){


IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr MemberReference member instantAdjusted_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((offsetLocal > 0) || (offsetLocal > instantAdjusted))){


IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr MemberReference member offsetLocal_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((offsetLocal > 0) || (offsetLocal < offsetLocal))){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((offsetLocal > 0) && (offsetLocal > 0))){


BreakStatement_ter ^ 
break;

IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr MemberReference member offsetLocal_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((offsetLocal > 0) || (offsetLocal >= offsetLocal))){


ReturnStatement expression Literal value 1_ter ^ ^ ^ ^ ^ 
if (true) { return 1; }

IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr MemberReference member offsetLocal_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((offsetLocal > 0) && (offsetLocal < offsetLocal))){


IfStatement condition BinaryOperation operator -_ter ^ ^ operandl MemberReference member instantAdjusted_ter ^ ^ ^ ^ operandr MemberReference member prev_ter ^ ^ ^ ^ ^ ^ ^ 
if((instantAdjusted - prev)){


IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member offsetLocal_ter ^ ^ ^ ^ ^ ^ ^ 
if(((offsetLocal > 0) || offsetLocal)){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr MemberReference member offsetLocal_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((offsetLocal > 0) && (offsetLocal >= offsetLocal))){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr MemberReference member instantAdjusted_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((offsetLocal > 0) && (offsetLocal == instantAdjusted))){


IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr MemberReference member offsetLocal_ter ^ ^ ^ ^ ^ ^ ^ 
if((offsetLocal < offsetLocal)){


IfStatement condition MethodInvocation member isFixed_ter ^ ^ ^ ^ ^ 
ReturnStatement expression MemberReference member offsetLocal_ter ^ ^ ^ ^ ^ 
if(isFixed()){
return offsetLocal;}
ReturnStatement expression MemberReference member offsetAdjusted_ter ^ ^ ^ ^ ^ 
if (true) { return offsetAdjusted; }

IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr MemberReference member offsetLocal_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((offsetLocal > 0) && (offsetLocal == offsetLocal))){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr MemberReference member instantAdjusted_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((offsetLocal > 0) && (offsetLocal < instantAdjusted))){


IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((offsetLocal > 0) || (offsetLocal < 0))){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member offsetLocal_ter ^ ^ ^ ^ ^ ^ ^ 
if(((offsetLocal > 0) && offsetLocal)){


IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr MemberReference member instantAdjusted_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((offsetLocal > 0) || (offsetLocal < instantAdjusted))){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((offsetLocal > 0) && (offsetLocal == 0))){


IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <=_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr MemberReference member offsetLocal_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((offsetLocal > 0) || (offsetLocal <= offsetLocal))){


IfStatement condition MethodInvocation arguments MemberReference member offsetLocal_ter ^ ^ ^ ^ member isFixed_ter ^ ^ ^ ^ ^ 
if(isFixed(offsetLocal)){


ReturnStatement_ter ^ 
if (true) { return;
 }

IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((offsetLocal > 0) || (offsetLocal >= 0))){


IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member offsetLocal_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
if(((offsetLocal > 0) && (offsetLocal < 0))){


ReturnStatement expression Literal value 2_ter ^ ^ ^ ^ ^ 
if (true) { return 2; }

stderr: 