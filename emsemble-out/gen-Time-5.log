stdout: else_statement -> BlockStatement
using GPU
p
path org.joda.time.Period
normalizedStandard
Position(line=1616, column=12)
FOUND IT!
[{'bugid': 'Time-5', 'treeroot': <Searchnode.Node object at 0x7fe62bcaf690>, 'troot': <Searchnode.Node object at 0x7fe62bcaf690>, 'oldcode': '            years = FieldUtils.safeAdd(years, months / 12);', 'filepath': 'buggy/Time-5/src/main/java/org/joda/time/Period.java', 'subroot': <Searchnode.Node object at 0x7fe62bcd3590>, 'vardic': {'normalizedStandard_ter': 'meth0', 'type_ter': 'par0', 'millis_ter': 'loc0', 'result_ter': 'loc1', 'years_ter': 'loc2', 'months_ter': 'loc3'}, 'typedic': {'type_ter': 'PeriodType', 'millis_ter': 'long', 'result_ter': 'Period', 'years_ter': 'int', 'months_ter': 'int'}, 'idss': 'Time-5', 'classname': 'org.joda.time.Period', 'precode': '/*\n *  Copyright 2001-2010 Stephen Colebourne\n *\n *  Licensed under the Apache License, Version 2.0 (the "License");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an "AS IS" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\npackage org.joda.time;\n\nimport java.io.Serializable;\n\nimport org.joda.convert.FromString;\nimport org.joda.time.base.BasePeriod;\nimport org.joda.time.chrono.ISOChronology;\nimport org.joda.time.field.FieldUtils;\nimport org.joda.time.format.ISOPeriodFormat;\nimport org.joda.time.format.PeriodFormatter;\n\n/**\n * An immutable time period specifying a set of duration field values.\n * <p>\n * A time period is divided into a number of fields, such as hours and seconds.\n * Which fields are supported is defined by the PeriodType class.\n * The default is the standard period type, which supports years, months, weeks, days,\n * hours, minutes, seconds and millis.\n * <p>\n * When this time period is added to an instant, the effect is of adding each field in turn.\n * As a result, this takes into account daylight savings time.\n * Adding a time period of 1 day to the day before daylight savings starts will only add\n * 23 hours rather than 24 to ensure that the time remains the same.\n * If this is not the behaviour you want, then see {@link Duration}.\n * <p>\n * The definition of a period also affects the equals method. A period of 1\n * day is not equal to a period of 24 hours, nor 1 hour equal to 60 minutes.\n * This is because periods represent an abstracted definition of a time period\n * (eg. a day may not actually be 24 hours, it might be 23 or 25 at daylight\n * savings boundary). To compare the actual duration of two periods, convert\n * both to durations using toDuration, an operation that emphasises that the\n * result may differ according to the date you choose.\n * <p>\n * Period is thread-safe and immutable, provided that the PeriodType is as well.\n * All standard PeriodType classes supplied are thread-safe and immutable.\n *\n * @author Brian S O\'Neill\n * @author Stephen Colebourne\n * @since 1.0\n * @see MutablePeriod\n */\npublic final class Period\n        extends BasePeriod\n        implements ReadablePeriod, Serializable {\n\n    /**\n     * A period of zero length and standard period type.\n     * @since 1.4\n     */\n    public static final Period ZERO = new Period();\n\n    /** Serialization version */\n    private static final long serialVersionUID = 741052353876488155L;\n\n    //-----------------------------------------------------------------------\n    /**\n     * Parses a {@code Period} from the specified string.\n     * <p>\n     * This uses {@link ISOPeriodFormat#standard()}.\n     * \n     * @param str  the string to parse, not null\n     * @since 2.0\n     */\n    @FromString\n    public static Period parse(String str) {\n        return parse(str, ISOPeriodFormat.standard());\n    }\n\n    /**\n     * Parses a {@code Period} from the specified string using a formatter.\n     * \n     * @param str  the string to parse, not null\n     * @param formatter  the formatter to use, not null\n     * @since 2.0\n     */\n    public static Period parse(String str, PeriodFormatter formatter) {\n        return formatter.parsePeriod(str);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Create a period with a specified number of years.\n     * <p>\n     * The standard period type is used, thus you can add other fields such\n     * as months or days using the <code>withXxx()</code> methods.\n     * For example, <code>Period.years(2).withMonths(6);</code>\n     * <p>\n     * If you want a year-based period that cannot have other fields added,\n     * then you should consider using {@link Years}.\n     *\n     * @param years  the amount of years in this period\n     * @return the period\n     */\n    public static Period years(int years) {\n        return new Period(new int[] {years, 0, 0, 0, 0, 0, 0, 0, 0}, PeriodType.standard());\n    }\n\n    /**\n     * Create a period with a specified number of months.\n     * <p>\n     * The standard period type is used, thus you can add other fields such\n     * as years or days using the <code>withXxx()</code> methods.\n     * For example, <code>Period.months(2).withDays(6);</code>\n     * <p>\n     * If you want a month-based period that cannot have other fields added,\n     * then you should consider using {@link Months}.\n     *\n     * @param months  the amount of months in this period\n     * @return the period\n     */\n    public static Period months(int months) {\n        return new Period(new int[] {0, months, 0, 0, 0, 0, 0, 0}, PeriodType.standard());\n    }\n\n    /**\n     * Create a period with a specified number of weeks.\n     * <p>\n     * The standard period type is used, thus you can add other fields such\n     * as months or days using the <code>withXxx()</code> methods.\n     * For example, <code>Period.weeks(2).withDays(6);</code>\n     * <p>\n     * If you want a week-based period that cannot have other fields added,\n     * then you should consider using {@link Weeks}.\n     *\n     * @param weeks  the amount of weeks in this period\n     * @return the period\n     */\n    public static Period weeks(int weeks) {\n        return new Period(new int[] {0, 0, weeks, 0, 0, 0, 0, 0}, PeriodType.standard());\n    }\n\n    /**\n     * Create a period with a specified number of days.\n     * <p>\n     * The standard period type is used, thus you can add other fields such\n     * as months or weeks using the <code>withXxx()</code> methods.\n     * For example, <code>Period.days(2).withHours(6);</code>\n     * <p>\n     * If you want a day-based period that cannot have other fields added,\n     * then you should consider using {@link Days}.\n     *\n     * @param days  the amount of days in this period\n     * @return the period\n     */\n    public static Period days(int days) {\n        return new Period(new int[] {0, 0, 0, days, 0, 0, 0, 0}, PeriodType.standard());\n    }\n\n    /**\n     * Create a period with a specified number of hours.\n     * <p>\n     * The standard period type is used, thus you can add other fields such\n     * as months or days using the <code>withXxx()</code> methods.\n     * For example, <code>Period.hours(2).withMinutes(30);</code>\n     * <p>\n     * If you want a hour-based period that cannot have other fields added,\n     * then you should consider using {@link Hours}.\n     *\n     * @param hours  the amount of hours in this period\n     * @return the period\n     */\n    public static Period hours(int hours) {\n        return new Period(new int[] {0, 0, 0, 0, hours, 0, 0, 0}, PeriodType.standard());\n    }\n\n    /**\n     * Create a period with a specified number of minutes.\n     * <p>\n     * The standard period type is used, thus you can add other fields such\n     * as days or hours using the <code>withXxx()</code> methods.\n     * For example, <code>Period.minutes(2).withSeconds(30);</code>\n     * <p>\n     * If you want a minute-based period that cannot have other fields added,\n     * then you should consider using {@link Minutes}.\n     *\n     * @param minutes  the amount of minutes in this period\n     * @return the period\n     */\n    public static Period minutes(int minutes) {\n        return new Period(new int[] {0, 0, 0, 0, 0, minutes, 0, 0}, PeriodType.standard());\n    }\n\n    /**\n     * Create a period with a specified number of seconds.\n     * <p>\n     * The standard period type is used, thus you can add other fields such\n     * as days or hours using the <code>withXxx()</code> methods.\n     * For example, <code>Period.seconds(2).withMillis(30);</code>\n     * <p>\n     * If you want a second-based period that cannot have other fields added,\n     * then you should consider using {@link Seconds}.\n     *\n     * @param seconds  the amount of seconds in this period\n     * @return the period\n     */\n    public static Period seconds(int seconds) {\n        return new Period(new int[] {0, 0, 0, 0, 0, 0, seconds, 0}, PeriodType.standard());\n    }\n\n    /**\n     * Create a period with a specified number of millis.\n     * <p>\n     * The standard period type is used, thus you can add other fields such\n     * as days or hours using the <code>withXxx()</code> methods.\n     * For example, <code>Period.millis(20).withSeconds(30);</code>\n     *\n     * @param millis  the amount of millis in this period\n     * @return the period\n     */\n    public static Period millis(int millis) {\n        return new Period(new int[] {0, 0, 0, 0, 0, 0, 0, millis}, PeriodType.standard());\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Creates a period from two partially specified times, calculating\n     * by field difference.\n     * <p>\n     * The two partials must contain the same fields, thus you can specify\n     * two <code>LocalDate</code> objects, or two <code>LocalTime</code> objects,\n     * but not one of each. Also, the partial may not contain overlapping\n     * fields, such as dayOfWeek and dayOfMonth.\n     * <p>\n     * Calculation by field difference works by extracting the difference\n     * one field at a time and not wrapping into other fields.\n     * Thus 2005-06-09/2007-04-12 will yield P1Y-2M3D.\n     * <p>\n     * For example, you have an event that always runs from the 27th of\n     * each month to the 2nd of the next month. If you calculate this\n     * period using a standard constructor, then you will get between\n     * P3D and P6D depending on the month. If you use this method, then\n     * you will get P1M-25D. This field-difference based period can\n     * be successfully applied to each month of the year to obtain the\n     * correct end date for a given start date.\n     *\n     * @param start  the start of the period, must not be null\n     * @param end  the end of the period, must not be null\n     * @throws IllegalArgumentException if the partials are null or invalid\n     * @since 1.1\n     */\n    public static Period fieldDifference(ReadablePartial start, ReadablePartial end) {\n        if (start == null || end == null) {\n            throw new IllegalArgumentException("ReadablePartial objects must not be null");\n        }\n        if (start.size() != end.size()) {\n            throw new IllegalArgumentException("ReadablePartial objects must have the same set of fields");\n        }\n        DurationFieldType[] types = new DurationFieldType[start.size()];\n        int[] values = new int[start.size()];\n        for (int i = 0, isize = start.size(); i < isize; i++) {\n            if (start.getFieldType(i) != end.getFieldType(i)) {\n                throw new IllegalArgumentException("ReadablePartial objects must have the same set of fields");\n            }\n            types[i] = start.getFieldType(i).getDurationType();\n            if (i > 0 && types[i - 1] == types[i]) {\n                throw new IllegalArgumentException("ReadablePartial objects must not have overlapping fields");\n            }\n            values[i] = end.getValue(i) - start.getValue(i);\n        }\n        return new Period(values, PeriodType.forFields(types));\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Creates a new empty period with the standard set of fields.\n     * <p>\n     * One way to initialise a period is as follows:\n     * <pre>\n     * Period = new Period().withYears(6).withMonths(3).withSeconds(23);\n     * </pre>\n     * Bear in mind that this creates four period instances in total, three of\n     * which are immediately discarded.\n     * The alterative is more efficient, but less readable:\n     * <pre>\n     * Period = new Period(6, 3, 0, 0, 0, 0, 23, 0);\n     * </pre>\n     * The following is also slightly less wasteful:\n     * <pre>\n     * Period = Period.years(6).withMonths(3).withSeconds(23);\n     * </pre>\n     */\n    public Period() {\n        super(0L, null, null);\n    }\n\n    /**\n     * Create a period from a set of field values using the standard set of fields.\n     * Note that the parameters specify the time fields hours, minutes,\n     * seconds and millis, not the date fields.\n     *\n     * @param hours  amount of hours in this period\n     * @param minutes  amount of minutes in this period\n     * @param seconds  amount of seconds in this period\n     * @param millis  amount of milliseconds in this period\n     */\n    public Period(int hours, int minutes, int seconds, int millis) {\n        super(0, 0, 0, 0, hours, minutes, seconds, millis, PeriodType.standard());\n    }\n\n    /**\n     * Create a period from a set of field values using the standard set of fields.\n     *\n     * @param years  amount of years in this period\n     * @param months  amount of months in this period\n     * @param weeks  amount of weeks in this period\n     * @param days  amount of days in this period\n     * @param hours  amount of hours in this period\n     * @param minutes  amount of minutes in this period\n     * @param seconds  amount of seconds in this period\n     * @param millis  amount of milliseconds in this period\n     */\n    public Period(int years, int months, int weeks, int days,\n                  int hours, int minutes, int seconds, int millis) {\n        super(years, months, weeks, days, hours, minutes, seconds, millis, PeriodType.standard());\n    }\n\n    /**\n     * Create a period from a set of field values.\n     * <p>\n     * There is usually little need to use this constructor.\n     * The period type is used primarily to define how to split an interval into a period.\n     * As this constructor already is split, the period type does no real work.\n     *\n     * @param years  amount of years in this period, which must be zero if unsupported\n     * @param months  amount of months in this period, which must be zero if unsupported\n     * @param weeks  amount of weeks in this period, which must be zero if unsupported\n     * @param days  amount of days in this period, which must be zero if unsupported\n     * @param hours  amount of hours in this period, which must be zero if unsupported\n     * @param minutes  amount of minutes in this period, which must be zero if unsupported\n     * @param seconds  amount of seconds in this period, which must be zero if unsupported\n     * @param millis  amount of milliseconds in this period, which must be zero if unsupported\n     * @param type  which set of fields this period supports, null means AllType\n     * @throws IllegalArgumentException if an unsupported field\'s value is non-zero\n     */\n    public Period(int years, int months, int weeks, int days,\n                    int hours, int minutes, int seconds, int millis, PeriodType type) {\n        super(years, months, weeks, days, hours, minutes, seconds, millis, type);\n    }\n\n    /**\n     * Creates a period from the given millisecond duration using the standard\n     * set of fields.\n     * <p>\n     * Only precise fields in the period type will be used.\n     * For the standard period type this is the time fields only.\n     * Thus the year, month, week and day fields will not be populated.\n     * <p>\n     * If the duration is small, less than one day, then this method will perform\n     * as you might expect and split the fields evenly.\n     * <p>\n     * If the duration is larger than one day then all the remaining duration will\n     * be stored in the largest available precise field, hours in this case.\n     * <p>\n     * For example, a duration equal to (365 + 60 + 5) days will be converted to\n     * ((365 + 60 + 5) * 24) hours by this constructor.\n     * <p>\n     * For more control over the conversion process, you have two options:\n     * <ul>\n     * <li>convert the duration to an {@link Interval}, and from there obtain the period\n     * <li>specify a period type that contains precise definitions of the day and larger\n     * fields, such as UTC\n     * </ul>\n     *\n     * @param duration  the duration, in milliseconds\n     */\n    public Period(long duration) {\n        super(duration);\n    }\n\n    /**\n     * Creates a period from the given millisecond duration.\n     * <p>\n     * Only precise fields in the period type will be used.\n     * Imprecise fields will not be populated.\n     * <p>\n     * If the duration is small then this method will perform\n     * as you might expect and split the fields evenly.\n     * <p>\n     * If the duration is large then all the remaining duration will\n     * be stored in the largest available precise field.\n     * For details as to which fields are precise, review the period type javadoc.\n     *\n     * @param duration  the duration, in milliseconds\n     * @param type  which set of fields this period supports, null means standard\n     */\n    public Period(long duration, PeriodType type) {\n        super(duration, type, null);\n    }\n\n    /**\n     * Creates a period from the given millisecond duration using the standard\n     * set of fields.\n     * <p>\n     * Only precise fields in the period type will be used.\n     * Imprecise fields will not be populated.\n     * <p>\n     * If the duration is small then this method will perform\n     * as you might expect and split the fields evenly.\n     * <p>\n     * If the duration is large then all the remaining duration will\n     * be stored in the largest available precise field.\n     * For details as to which fields are precise, review the period type javadoc.\n     *\n     * @param duration  the duration, in milliseconds\n     * @param chronology  the chronology to use to split the duration, null means ISO default\n     */\n    public Period(long duration, Chronology chronology) {\n        super(duration, null, chronology);\n    }\n\n    /**\n     * Creates a period from the given millisecond duration.\n     * <p>\n     * Only precise fields in the period type will be used.\n     * Imprecise fields will not be populated.\n     * <p>\n     * If the duration is small then this method will perform\n     * as you might expect and split the fields evenly.\n     * <p>\n     * If the duration is large then all the remaining duration will\n     * be stored in the largest available precise field.\n     * For details as to which fields are precise, review the period type javadoc.\n     *\n     * @param duration  the duration, in milliseconds\n     * @param type  which set of fields this period supports, null means standard\n     * @param chronology  the chronology to use to split the duration, null means ISO default\n     */\n    public Period(long duration, PeriodType type, Chronology chronology) {\n        super(duration, type, chronology);\n    }\n\n    /**\n     * Creates a period from the given interval endpoints using the standard\n     * set of fields.\n     *\n     * @param startInstant  interval start, in milliseconds\n     * @param endInstant  interval end, in milliseconds\n     */\n    public Period(long startInstant, long endInstant) {\n        super(startInstant, endInstant, null, null);\n    }\n\n    /**\n     * Creates a period from the given interval endpoints.\n     *\n     * @param startInstant  interval start, in milliseconds\n     * @param endInstant  interval end, in milliseconds\n     * @param type  which set of fields this period supports, null means standard\n     */\n    public Period(long startInstant, long endInstant, PeriodType type) {\n        super(startInstant, endInstant, type, null);\n    }\n\n    /**\n     * Creates a period from the given interval endpoints using the standard\n     * set of fields.\n     *\n     * @param startInstant  interval start, in milliseconds\n     * @param endInstant  interval end, in milliseconds\n     * @param chrono  the chronology to use, null means ISO in default zone\n     */\n    public Period(long startInstant, long endInstant, Chronology chrono) {\n        super(startInstant, endInstant, null, chrono);\n    }\n\n    /**\n     * Creates a period from the given interval endpoints.\n     *\n     * @param startInstant  interval start, in milliseconds\n     * @param endInstant  interval end, in milliseconds\n     * @param type  which set of fields this period supports, null means standard\n     * @param chrono  the chronology to use, null means ISO in default zone\n     */\n    public Period(long startInstant, long endInstant, PeriodType type, Chronology chrono) {\n        super(startInstant, endInstant, type, chrono);\n    }\n\n    /**\n     * Creates a period between the given instants using the standard set of fields.\n     * <p>\n     * Most calculations performed by this method have obvious results.\n     * The special case is where the calculation is from a "long" month to a "short" month.\n     * Here, the result favours increasing the months field rather than the days.\n     * For example, 2013-01-31 to 2013-02-28 is treated as one whole month.\n     * By contrast, 2013-01-31 to 2013-03-30 is treated as one month and 30 days\n     * (exposed as 4 weeks and 2 days).\n     * The results are explained by considering that the start date plus the\n     * calculated period result in the end date.\n     *\n     * @param startInstant  interval start, null means now\n     * @param endInstant  interval end, null means now\n     */\n    public Period(ReadableInstant startInstant, ReadableInstant endInstant) {\n        super(startInstant, endInstant, null);\n    }\n\n    /**\n     * Creates a period between the given instants.\n     * <p>\n     * Most calculations performed by this method have obvious results.\n     * The special case is where the calculation is from a "long" month to a "short" month.\n     * Here, the result favours increasing the months field rather than the days.\n     * For example, 2013-01-31 to 2013-02-28 is treated as one whole month.\n     * By contrast, 2013-01-31 to 2013-03-30 is treated as one month and 30 days.\n     * The results are explained by considering that the start date plus the\n     * calculated period result in the end date.\n     *\n     * @param startInstant  interval start, null means now\n     * @param endInstant  interval end, null means now\n     * @param type  which set of fields this period supports, null means standard\n     */\n    public Period(ReadableInstant startInstant, ReadableInstant endInstant, PeriodType type) {\n        super(startInstant, endInstant, type);\n    }\n\n    /**\n     * Creates a period from two partially specified times.\n     * <p>\n     * The two partials must contain the same fields, thus you can specify\n     * two <code>LocalDate</code> objects, or two <code>LocalTime</code> objects,\n     * but not one of each.\n     * As these are Partial objects, time zones have no effect on the result.\n     * <p>\n     * The two partials must also both be contiguous - see\n     * {@link DateTimeUtils#isContiguous(ReadablePartial)} for a definition.\n     * Both <code>LocalDate</code> and <code>LocalTime</code> are contiguous.\n     * <p>\n     * Most calculations performed by this method have obvious results.\n     * The special case is where the calculation is from a "long" month to a "short" month.\n     * Here, the result favours increasing the months field rather than the days.\n     * For example, 2013-01-31 to 2013-02-28 is treated as one whole month.\n     * By contrast, 2013-01-31 to 2013-03-30 is treated as one month and 30 days\n     * (exposed as 4 weeks and 2 days).\n     * The results are explained by considering that the start date plus the\n     * calculated period result in the end date.\n     * <p>\n     * An alternative way of constructing a Period from two Partials\n     * is {@link #fieldDifference(ReadablePartial, ReadablePartial)}.\n     * That method handles all kinds of partials.\n     *\n     * @param start  the start of the period, must not be null\n     * @param end  the end of the period, must not be null\n     * @throws IllegalArgumentException if the partials are null or invalid\n     * @since 1.1\n     */\n    public Period(ReadablePartial start, ReadablePartial end) {\n        super(start, end, null);\n    }\n\n    /**\n     * Creates a period from two partially specified times.\n     * <p>\n     * The two partials must contain the same fields, thus you can specify\n     * two <code>LocalDate</code> objects, or two <code>LocalTime</code> objects,\n     * but not one of each.\n     * As these are Partial objects, time zones have no effect on the result.\n     * <p>\n     * The two partials must also both be contiguous - see\n     * {@link DateTimeUtils#isContiguous(ReadablePartial)} for a definition.\n     * Both <code>LocalDate</code> and <code>LocalTime</code> are contiguous.\n     * <p>\n     * Most calculations performed by this method have obvious results.\n     * The special case is where the calculation is from a "long" month to a "short" month.\n     * Here, the result favours increasing the months field rather than the days.\n     * For example, 2013-01-31 to 2013-02-28 is treated as one whole month.\n     * By contrast, 2013-01-31 to 2013-03-30 is treated as one month and 30 days.\n     * The results are explained by considering that the start date plus the\n     * calculated period result in the end date.\n     * <p>\n     * An alternative way of constructing a Period from two Partials\n     * is {@link #fieldDifference(ReadablePartial, ReadablePartial)}.\n     * That method handles all kinds of partials.\n     *\n     * @param start  the start of the period, must not be null\n     * @param end  the end of the period, must not be null\n     * @param type  which set of fields this period supports, null means standard\n     * @throws IllegalArgumentException if the partials are null or invalid\n     * @since 1.1\n     */\n    public Period(ReadablePartial start, ReadablePartial end, PeriodType type) {\n        super(start, end, type);\n    }\n\n    /**\n     * Creates a period from the given start point and the duration.\n     *\n     * @param startInstant  the interval start, null means now\n     * @param duration  the duration of the interval, null means zero-length\n     */\n    public Period(ReadableInstant startInstant, ReadableDuration duration) {\n        super(startInstant, duration, null);\n    }\n\n    /**\n     * Creates a period from the given start point and the duration.\n     *\n     * @param startInstant  the interval start, null means now\n     * @param duration  the duration of the interval, null means zero-length\n     * @param type  which set of fields this period supports, null means standard\n     */\n    public Period(ReadableInstant startInstant, ReadableDuration duration, PeriodType type) {\n        super(startInstant, duration, type);\n    }\n\n    /**\n     * Creates a period from the given duration and end point.\n     *\n     * @param duration  the duration of the interval, null means zero-length\n     * @param endInstant  the interval end, null means now\n     */\n    public Period(ReadableDuration duration, ReadableInstant endInstant) {\n        super(duration, endInstant, null);\n    }\n\n    /**\n     * Creates a period from the given duration and end point.\n     *\n     * @param duration  the duration of the interval, null means zero-length\n     * @param endInstant  the interval end, null means now\n     * @param type  which set of fields this period supports, null means standard\n     */\n    public Period(ReadableDuration duration, ReadableInstant endInstant, PeriodType type) {\n        super(duration, endInstant, type);\n    }\n\n    /**\n     * Creates a period by converting or copying from another object.\n     * <p>\n     * The recognised object types are defined in\n     * {@link org.joda.time.convert.ConverterManager ConverterManager} and\n     * include ReadablePeriod, ReadableInterval and String.\n     * The String formats are described by {@link ISOPeriodFormat#standard()}.\n     *\n     * @param period  period to convert\n     * @throws IllegalArgumentException if period is invalid\n     * @throws UnsupportedOperationException if an unsupported field\'s value is non-zero\n     */\n    public Period(Object period) {\n        super(period, null, null);\n    }\n\n    /**\n     * Creates a period by converting or copying from another object.\n     * <p>\n     * The recognised object types are defined in\n     * {@link org.joda.time.convert.ConverterManager ConverterManager} and\n     * include ReadablePeriod, ReadableInterval and String.\n     * The String formats are described by {@link ISOPeriodFormat#standard()}.\n     *\n     * @param period  period to convert\n     * @param type  which set of fields this period supports, null means use converter\n     * @throws IllegalArgumentException if period is invalid\n     * @throws UnsupportedOperationException if an unsupported field\'s value is non-zero\n     */\n    public Period(Object period, PeriodType type) {\n        super(period, type, null);\n    }\n\n    /**\n     * Creates a period by converting or copying from another object.\n     * <p>\n     * The recognised object types are defined in\n     * {@link org.joda.time.convert.ConverterManager ConverterManager} and\n     * include ReadablePeriod, ReadableInterval and String.\n     * The String formats are described by {@link ISOPeriodFormat#standard()}.\n     *\n     * @param period  period to convert\n     * @param chrono  the chronology to use, null means ISO in default zone\n     * @throws IllegalArgumentException if period is invalid\n     * @throws UnsupportedOperationException if an unsupported field\'s value is non-zero\n     */\n    public Period(Object period, Chronology chrono) {\n        super(period, null, chrono);\n    }\n\n    /**\n     * Creates a period by converting or copying from another object.\n     * <p>\n     * The recognised object types are defined in\n     * {@link org.joda.time.convert.ConverterManager ConverterManager} and\n     * include ReadablePeriod, ReadableInterval and String.\n     * The String formats are described by {@link ISOPeriodFormat#standard()}.\n     *\n     * @param period  period to convert\n     * @param type  which set of fields this period supports, null means use converter\n     * @param chrono  the chronology to use, null means ISO in default zone\n     * @throws IllegalArgumentException if period is invalid\n     * @throws UnsupportedOperationException if an unsupported field\'s value is non-zero\n     */\n    public Period(Object period, PeriodType type, Chronology chrono) {\n        super(period, type, chrono);\n    }\n\n    /**\n     * Constructor used when we trust ourselves.\n     *\n     * @param values  the values to use, not null, not cloned\n     * @param type  which set of fields this period supports, not null\n     */\n    private Period(int[] values, PeriodType type) {\n        super(values, type);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Get this period as an immutable <code>Period</code> object\n     * by returning <code>this</code>.\n     * \n     * @return <code>this</code>\n     */\n    public Period toPeriod() {\n        return this;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the years field part of the period.\n     * \n     * @return the number of years in the period, zero if unsupported\n     */\n    public int getYears() {\n        return getPeriodType().getIndexedField(this, PeriodType.YEAR_INDEX);\n    }\n\n    /**\n     * Gets the months field part of the period.\n     * \n     * @return the number of months in the period, zero if unsupported\n     */\n    public int getMonths() {\n        return getPeriodType().getIndexedField(this, PeriodType.MONTH_INDEX);\n    }\n\n    /**\n     * Gets the weeks field part of the period.\n     * \n     * @return the number of weeks in the period, zero if unsupported\n     */\n    public int getWeeks() {\n        return getPeriodType().getIndexedField(this, PeriodType.WEEK_INDEX);\n    }\n\n    /**\n     * Gets the days field part of the period.\n     * \n     * @return the number of days in the period, zero if unsupported\n     */\n    public int getDays() {\n        return getPeriodType().getIndexedField(this, PeriodType.DAY_INDEX);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the hours field part of the period.\n     * \n     * @return the number of hours in the period, zero if unsupported\n     */\n    public int getHours() {\n        return getPeriodType().getIndexedField(this, PeriodType.HOUR_INDEX);\n    }\n\n    /**\n     * Gets the minutes field part of the period.\n     * \n     * @return the number of minutes in the period, zero if unsupported\n     */\n    public int getMinutes() {\n        return getPeriodType().getIndexedField(this, PeriodType.MINUTE_INDEX);\n    }\n\n    /**\n     * Gets the seconds field part of the period.\n     * \n     * @return the number of seconds in the period, zero if unsupported\n     */\n    public int getSeconds() {\n        return getPeriodType().getIndexedField(this, PeriodType.SECOND_INDEX);\n    }\n\n    /**\n     * Gets the millis field part of the period.\n     * \n     * @return the number of millis in the period, zero if unsupported\n     */\n    public int getMillis() {\n        return getPeriodType().getIndexedField(this, PeriodType.MILLI_INDEX);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Creates a new Period instance with the same field values but\n     * different PeriodType.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     * \n     * @param type  the period type to use, null means standard\n     * @return the new period instance\n     * @throws IllegalArgumentException if the new period won\'t accept all of the current fields\n     */\n    public Period withPeriodType(PeriodType type) {\n        type = DateTimeUtils.getPeriodType(type);\n        if (type.equals(getPeriodType())) {\n            return this;\n        }\n        return new Period(this, type);\n    }\n\n    /**\n     * Creates a new Period instance with the fields from the specified period\n     * copied on top of those from this period.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     * \n     * @param period  the period to copy from, null ignored\n     * @return the new period instance\n     * @throws IllegalArgumentException if a field type is unsupported\n     */\n    public Period withFields(ReadablePeriod period) {\n        if (period == null) {\n            return this;\n        }\n        int[] newValues = getValues();  // cloned\n        newValues = super.mergePeriodInto(newValues, period);\n        return new Period(newValues, getPeriodType());\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Creates a new Period instance with the specified field set to a new value.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     * \n     * @param field  the field to set, not null\n     * @param value  the value to set to\n     * @return the new period instance\n     * @throws IllegalArgumentException if the field type is null or unsupported\n     */\n    public Period withField(DurationFieldType field, int value) {\n        if (field == null) {\n            throw new IllegalArgumentException("Field must not be null");\n        }\n        int[] newValues = getValues();  // cloned\n        super.setFieldInto(newValues, field, value);\n        return new Period(newValues, getPeriodType());\n    }\n\n    /**\n     * Creates a new Period instance with the valueToAdd added to the specified field.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     * \n     * @param field  the field to set, not null\n     * @param value  the value to add\n     * @return the new period instance\n     * @throws IllegalArgumentException if the field type is null or unsupported\n     */\n    public Period withFieldAdded(DurationFieldType field, int value) {\n        if (field == null) {\n            throw new IllegalArgumentException("Field must not be null");\n        }\n        if (value == 0) {\n            return this;\n        }\n        int[] newValues = getValues();  // cloned\n        super.addFieldInto(newValues, field, value);\n        return new Period(newValues, getPeriodType());\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a new period with the specified number of years.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param years  the amount of years to add, may be negative\n     * @return the new period with the increased years\n     * @throws UnsupportedOperationException if the field is not supported\n     */\n    public Period withYears(int years) {\n        int[] values = getValues();  // cloned\n        getPeriodType().setIndexedField(this, PeriodType.YEAR_INDEX, values, years);\n        return new Period(values, getPeriodType());\n    }\n\n    /**\n     * Returns a new period with the specified number of months.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param months  the amount of months to add, may be negative\n     * @return the new period with the increased months\n     * @throws UnsupportedOperationException if the field is not supported\n     */\n    public Period withMonths(int months) {\n        int[] values = getValues();  // cloned\n        getPeriodType().setIndexedField(this, PeriodType.MONTH_INDEX, values, months);\n        return new Period(values, getPeriodType());\n    }\n\n    /**\n     * Returns a new period with the specified number of weeks.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param weeks  the amount of weeks to add, may be negative\n     * @return the new period with the increased weeks\n     * @throws UnsupportedOperationException if the field is not supported\n     */\n    public Period withWeeks(int weeks) {\n        int[] values = getValues();  // cloned\n        getPeriodType().setIndexedField(this, PeriodType.WEEK_INDEX, values, weeks);\n        return new Period(values, getPeriodType());\n    }\n\n    /**\n     * Returns a new period with the specified number of days.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param days  the amount of days to add, may be negative\n     * @return the new period with the increased days\n     * @throws UnsupportedOperationException if the field is not supported\n     */\n    public Period withDays(int days) {\n        int[] values = getValues();  // cloned\n        getPeriodType().setIndexedField(this, PeriodType.DAY_INDEX, values, days);\n        return new Period(values, getPeriodType());\n    }\n\n    /**\n     * Returns a new period with the specified number of hours.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param hours  the amount of hours to add, may be negative\n     * @return the new period with the increased hours\n     * @throws UnsupportedOperationException if the field is not supported\n     */\n    public Period withHours(int hours) {\n        int[] values = getValues();  // cloned\n        getPeriodType().setIndexedField(this, PeriodType.HOUR_INDEX, values, hours);\n        return new Period(values, getPeriodType());\n    }\n\n    /**\n     * Returns a new period with the specified number of minutes.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param minutes  the amount of minutes to add, may be negative\n     * @return the new period with the increased minutes\n     * @throws UnsupportedOperationException if the field is not supported\n     */\n    public Period withMinutes(int minutes) {\n        int[] values = getValues();  // cloned\n        getPeriodType().setIndexedField(this, PeriodType.MINUTE_INDEX, values, minutes);\n        return new Period(values, getPeriodType());\n    }\n\n    /**\n     * Returns a new period with the specified number of seconds.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param seconds  the amount of seconds to add, may be negative\n     * @return the new period with the increased seconds\n     * @throws UnsupportedOperationException if the field is not supported\n     */\n    public Period withSeconds(int seconds) {\n        int[] values = getValues();  // cloned\n        getPeriodType().setIndexedField(this, PeriodType.SECOND_INDEX, values, seconds);\n        return new Period(values, getPeriodType());\n    }\n\n    /**\n     * Returns a new period with the specified number of millis.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param millis  the amount of millis to add, may be negative\n     * @return the new period with the increased millis\n     * @throws UnsupportedOperationException if the field is not supported\n     */\n    public Period withMillis(int millis) {\n        int[] values = getValues();  // cloned\n        getPeriodType().setIndexedField(this, PeriodType.MILLI_INDEX, values, millis);\n        return new Period(values, getPeriodType());\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a new period with the specified period added.\n     * <p>\n     * Each field of the period is added separately. Thus a period of\n     * 2 hours 30 minutes plus 3 hours 40 minutes will produce a result\n     * of 5 hours 70 minutes - see {@link #normalizedStandard()}.\n     * <p>\n     * If the period being added contains a non-zero amount for a field that\n     * is not supported in this period then an exception is thrown.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param period  the period to add, null adds zero and returns this\n     * @return the new updated period\n     * @throws UnsupportedOperationException if any field is not supported\n     * @since 1.5\n     */\n    public Period plus(ReadablePeriod period) {\n        if (period == null) {\n            return this;\n        }\n        int[] values = getValues();  // cloned\n        getPeriodType().addIndexedField(this, PeriodType.YEAR_INDEX, values, period.get(DurationFieldType.YEARS_TYPE));\n        getPeriodType().addIndexedField(this, PeriodType.MONTH_INDEX, values, period.get(DurationFieldType.MONTHS_TYPE));\n        getPeriodType().addIndexedField(this, PeriodType.WEEK_INDEX, values, period.get(DurationFieldType.WEEKS_TYPE));\n        getPeriodType().addIndexedField(this, PeriodType.DAY_INDEX, values, period.get(DurationFieldType.DAYS_TYPE));\n        getPeriodType().addIndexedField(this, PeriodType.HOUR_INDEX, values, period.get(DurationFieldType.HOURS_TYPE));\n        getPeriodType().addIndexedField(this, PeriodType.MINUTE_INDEX, values, period.get(DurationFieldType.MINUTES_TYPE));\n        getPeriodType().addIndexedField(this, PeriodType.SECOND_INDEX, values, period.get(DurationFieldType.SECONDS_TYPE));\n        getPeriodType().addIndexedField(this, PeriodType.MILLI_INDEX, values, period.get(DurationFieldType.MILLIS_TYPE));\n        return new Period(values, getPeriodType());\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a new period with the specified number of years added.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param years  the amount of years to add, may be negative\n     * @return the new period with the increased years\n     * @throws UnsupportedOperationException if the field is not supported\n     */\n    public Period plusYears(int years) {\n        if (years == 0) {\n            return this;\n        }\n        int[] values = getValues();  // cloned\n        getPeriodType().addIndexedField(this, PeriodType.YEAR_INDEX, values, years);\n        return new Period(values, getPeriodType());\n    }\n\n    /**\n     * Returns a new period plus the specified number of months added.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param months  the amount of months to add, may be negative\n     * @return the new period plus the increased months\n     * @throws UnsupportedOperationException if the field is not supported\n     */\n    public Period plusMonths(int months) {\n        if (months == 0) {\n            return this;\n        }\n        int[] values = getValues();  // cloned\n        getPeriodType().addIndexedField(this, PeriodType.MONTH_INDEX, values, months);\n        return new Period(values, getPeriodType());\n    }\n\n    /**\n     * Returns a new period plus the specified number of weeks added.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param weeks  the amount of weeks to add, may be negative\n     * @return the new period plus the increased weeks\n     * @throws UnsupportedOperationException if the field is not supported\n     */\n    public Period plusWeeks(int weeks) {\n        if (weeks == 0) {\n            return this;\n        }\n        int[] values = getValues();  // cloned\n        getPeriodType().addIndexedField(this, PeriodType.WEEK_INDEX, values, weeks);\n        return new Period(values, getPeriodType());\n    }\n\n    /**\n     * Returns a new period plus the specified number of days added.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param days  the amount of days to add, may be negative\n     * @return the new period plus the increased days\n     * @throws UnsupportedOperationException if the field is not supported\n     */\n    public Period plusDays(int days) {\n        if (days == 0) {\n            return this;\n        }\n        int[] values = getValues();  // cloned\n        getPeriodType().addIndexedField(this, PeriodType.DAY_INDEX, values, days);\n        return new Period(values, getPeriodType());\n    }\n\n    /**\n     * Returns a new period plus the specified number of hours added.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param hours  the amount of hours to add, may be negative\n     * @return the new period plus the increased hours\n     * @throws UnsupportedOperationException if the field is not supported\n     */\n    public Period plusHours(int hours) {\n        if (hours == 0) {\n            return this;\n        }\n        int[] values = getValues();  // cloned\n        getPeriodType().addIndexedField(this, PeriodType.HOUR_INDEX, values, hours);\n        return new Period(values, getPeriodType());\n    }\n\n    /**\n     * Returns a new period plus the specified number of minutes added.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param minutes  the amount of minutes to add, may be negative\n     * @return the new period plus the increased minutes\n     * @throws UnsupportedOperationException if the field is not supported\n     */\n    public Period plusMinutes(int minutes) {\n        if (minutes == 0) {\n            return this;\n        }\n        int[] values = getValues();  // cloned\n        getPeriodType().addIndexedField(this, PeriodType.MINUTE_INDEX, values, minutes);\n        return new Period(values, getPeriodType());\n    }\n\n    /**\n     * Returns a new period plus the specified number of seconds added.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param seconds  the amount of seconds to add, may be negative\n     * @return the new period plus the increased seconds\n     * @throws UnsupportedOperationException if the field is not supported\n     */\n    public Period plusSeconds(int seconds) {\n        if (seconds == 0) {\n            return this;\n        }\n        int[] values = getValues();  // cloned\n        getPeriodType().addIndexedField(this, PeriodType.SECOND_INDEX, values, seconds);\n        return new Period(values, getPeriodType());\n    }\n\n    /**\n     * Returns a new period plus the specified number of millis added.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param millis  the amount of millis to add, may be negative\n     * @return the new period plus the increased millis\n     * @throws UnsupportedOperationException if the field is not supported\n     */\n    public Period plusMillis(int millis) {\n        if (millis == 0) {\n            return this;\n        }\n        int[] values = getValues();  // cloned\n        getPeriodType().addIndexedField(this, PeriodType.MILLI_INDEX, values, millis);\n        return new Period(values, getPeriodType());\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a new period with the specified period subtracted.\n     * <p>\n     * Each field of the period is subtracted separately. Thus a period of\n     * 3 hours 30 minutes minus 2 hours 40 minutes will produce a result\n     * of 1 hour and -10 minutes - see {@link #normalizedStandard()}.\n     * <p>\n     * If the period being added contains a non-zero amount for a field that\n     * is not supported in this period then an exception is thrown.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param period  the period to add, null adds zero and returns this\n     * @return the new updated period\n     * @throws UnsupportedOperationException if any field is not supported\n     * @since 1.5\n     */\n    public Period minus(ReadablePeriod period) {\n        if (period == null) {\n            return this;\n        }\n        int[] values = getValues();  // cloned\n        getPeriodType().addIndexedField(this, PeriodType.YEAR_INDEX, values, -period.get(DurationFieldType.YEARS_TYPE));\n        getPeriodType().addIndexedField(this, PeriodType.MONTH_INDEX, values, -period.get(DurationFieldType.MONTHS_TYPE));\n        getPeriodType().addIndexedField(this, PeriodType.WEEK_INDEX, values, -period.get(DurationFieldType.WEEKS_TYPE));\n        getPeriodType().addIndexedField(this, PeriodType.DAY_INDEX, values, -period.get(DurationFieldType.DAYS_TYPE));\n        getPeriodType().addIndexedField(this, PeriodType.HOUR_INDEX, values, -period.get(DurationFieldType.HOURS_TYPE));\n        getPeriodType().addIndexedField(this, PeriodType.MINUTE_INDEX, values, -period.get(DurationFieldType.MINUTES_TYPE));\n        getPeriodType().addIndexedField(this, PeriodType.SECOND_INDEX, values, -period.get(DurationFieldType.SECONDS_TYPE));\n        getPeriodType().addIndexedField(this, PeriodType.MILLI_INDEX, values, -period.get(DurationFieldType.MILLIS_TYPE));\n        return new Period(values, getPeriodType());\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a new period with the specified number of years taken away.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param years  the amount of years to take away, may be negative\n     * @return the new period with the increased years\n     * @throws UnsupportedOperationException if the field is not supported\n     */\n    public Period minusYears(int years) {\n        return plusYears(-years);\n    }\n\n    /**\n     * Returns a new period minus the specified number of months taken away.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param months  the amount of months to take away, may be negative\n     * @return the new period minus the increased months\n     * @throws UnsupportedOperationException if the field is not supported\n     */\n    public Period minusMonths(int months) {\n        return plusMonths(-months);\n    }\n\n    /**\n     * Returns a new period minus the specified number of weeks taken away.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param weeks  the amount of weeks to take away, may be negative\n     * @return the new period minus the increased weeks\n     * @throws UnsupportedOperationException if the field is not supported\n     */\n    public Period minusWeeks(int weeks) {\n        return plusWeeks(-weeks);\n    }\n\n    /**\n     * Returns a new period minus the specified number of days taken away.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param days  the amount of days to take away, may be negative\n     * @return the new period minus the increased days\n     * @throws UnsupportedOperationException if the field is not supported\n     */\n    public Period minusDays(int days) {\n        return plusDays(-days);\n    }\n\n    /**\n     * Returns a new period minus the specified number of hours taken away.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param hours  the amount of hours to take away, may be negative\n     * @return the new period minus the increased hours\n     * @throws UnsupportedOperationException if the field is not supported\n     */\n    public Period minusHours(int hours) {\n        return plusHours(-hours);\n    }\n\n    /**\n     * Returns a new period minus the specified number of minutes taken away.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param minutes  the amount of minutes to take away, may be negative\n     * @return the new period minus the increased minutes\n     * @throws UnsupportedOperationException if the field is not supported\n     */\n    public Period minusMinutes(int minutes) {\n        return plusMinutes(-minutes);\n    }\n\n    /**\n     * Returns a new period minus the specified number of seconds taken away.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param seconds  the amount of seconds to take away, may be negative\n     * @return the new period minus the increased seconds\n     * @throws UnsupportedOperationException if the field is not supported\n     */\n    public Period minusSeconds(int seconds) {\n        return plusSeconds(-seconds);\n    }\n\n    /**\n     * Returns a new period minus the specified number of millis taken away.\n     * <p>\n     * This period instance is immutable and unaffected by this method call.\n     *\n     * @param millis  the amount of millis to take away, may be negative\n     * @return the new period minus the increased millis\n     * @throws UnsupportedOperationException if the field is not supported\n     */\n    public Period minusMillis(int millis) {\n        return plusMillis(-millis);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a new instance with each element in this period multiplied\n     * by the specified scalar.\n     *\n     * @param scalar  the scalar to multiply by, not null\n     * @return a {@code Period} based on this period with the amounts multiplied by the scalar, never null\n     * @throws ArithmeticException if the capacity of any field is exceeded\n     * @since 2.1\n     */\n    public Period multipliedBy(int scalar) {\n        if (this == ZERO || scalar == 1) {\n            return this;\n        }\n        int[] values = getValues();  // cloned\n        for (int i = 0; i < values.length; i++) {\n            values[i] = FieldUtils.safeMultiply(values[i], scalar);\n        }\n        return new Period(values, getPeriodType());\n    }\n\n    /**\n     * Returns a new instance with each amount in this period negated.\n     *\n     * @return a {@code Period} based on this period with the amounts negated, never null\n     * @throws ArithmeticException if any field has the minimum value\n     * @since 2.1\n     */\n    public Period negated() {\n        return multipliedBy(-1);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Converts this period to a period in weeks assuming a\n     * 7 day week, 24 hour day, 60 minute hour and 60 second minute.\n     * <p>\n     * This method allows you to convert between different types of period.\n     * However to achieve this it makes the assumption that all\n     * weeks are 7 days, all days are 24 hours, all hours are 60 minutes and\n     * all minutes are 60 seconds. This is not true when daylight savings time\n     * is considered, and may also not be true for some unusual chronologies.\n     * However, it is included as it is a useful operation for many\n     * applications and business rules.\n     * <p>\n     * If the period contains years or months, an exception will be thrown.\n     * \n     * @return a period representing the number of standard weeks in this period\n     * @throws UnsupportedOperationException if the period contains years or months\n     * @throws ArithmeticException if the number of weeks is too large to be represented\n     * @since 1.5\n     */\n    public Weeks toStandardWeeks() {\n        checkYearsAndMonths("Weeks");\n        long millis = getMillis();  // assign to a long\n        millis += ((long) getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND;\n        millis += ((long) getMinutes()) * DateTimeConstants.MILLIS_PER_MINUTE;\n        millis += ((long) getHours()) * DateTimeConstants.MILLIS_PER_HOUR;\n        millis += ((long) getDays()) * DateTimeConstants.MILLIS_PER_DAY;\n        long weeks = ((long) getWeeks()) + millis / DateTimeConstants.MILLIS_PER_WEEK;\n        return Weeks.weeks(FieldUtils.safeToInt(weeks));\n    }\n\n    /**\n     * Converts this period to a period in days assuming a\n     * 7 day week, 24 hour day, 60 minute hour and 60 second minute.\n     * <p>\n     * This method allows you to convert between different types of period.\n     * However to achieve this it makes the assumption that all\n     * weeks are 7 days, all days are 24 hours, all hours are 60 minutes and\n     * all minutes are 60 seconds. This is not true when daylight savings time\n     * is considered, and may also not be true for some unusual chronologies.\n     * However, it is included as it is a useful operation for many\n     * applications and business rules.\n     * <p>\n     * If the period contains years or months, an exception will be thrown.\n     * \n     * @return a period representing the number of standard days in this period\n     * @throws UnsupportedOperationException if the period contains years or months\n     * @throws ArithmeticException if the number of days is too large to be represented\n     * @since 1.5\n     */\n    public Days toStandardDays() {\n        checkYearsAndMonths("Days");\n        long millis = getMillis();  // assign to a long\n        millis += ((long) getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND;\n        millis += ((long) getMinutes()) * DateTimeConstants.MILLIS_PER_MINUTE;\n        millis += ((long) getHours()) * DateTimeConstants.MILLIS_PER_HOUR;\n        long days = millis / DateTimeConstants.MILLIS_PER_DAY;\n        days = FieldUtils.safeAdd(days, getDays());\n        days = FieldUtils.safeAdd(days, ((long) getWeeks()) * ((long) DateTimeConstants.DAYS_PER_WEEK));\n        return Days.days(FieldUtils.safeToInt(days));\n    }\n\n    /**\n     * Converts this period to a period in hours assuming a\n     * 7 day week, 24 hour day, 60 minute hour and 60 second minute.\n     * <p>\n     * This method allows you to convert between different types of period.\n     * However to achieve this it makes the assumption that all\n     * weeks are 7 days, all days are 24 hours, all hours are 60 minutes and\n     * all minutes are 60 seconds. This is not true when daylight savings time\n     * is considered, and may also not be true for some unusual chronologies.\n     * However, it is included as it is a useful operation for many\n     * applications and business rules.\n     * <p>\n     * If the period contains years or months, an exception will be thrown.\n     * \n     * @return a period representing the number of standard hours in this period\n     * @throws UnsupportedOperationException if the period contains years or months\n     * @throws ArithmeticException if the number of hours is too large to be represented\n     * @since 1.5\n     */\n    public Hours toStandardHours() {\n        checkYearsAndMonths("Hours");\n        long millis = getMillis();  // assign to a long\n        millis += ((long) getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND;\n        millis += ((long) getMinutes()) * DateTimeConstants.MILLIS_PER_MINUTE;\n        long hours = millis / DateTimeConstants.MILLIS_PER_HOUR;\n        hours = FieldUtils.safeAdd(hours, getHours());\n        hours = FieldUtils.safeAdd(hours, ((long) getDays()) * ((long) DateTimeConstants.HOURS_PER_DAY));\n        hours = FieldUtils.safeAdd(hours, ((long) getWeeks()) * ((long) DateTimeConstants.HOURS_PER_WEEK));\n        return Hours.hours(FieldUtils.safeToInt(hours));\n    }\n\n    /**\n     * Converts this period to a period in minutes assuming a\n     * 7 day week, 24 hour day, 60 minute hour and 60 second minute.\n     * <p>\n     * This method allows you to convert between different types of period.\n     * However to achieve this it makes the assumption that all\n     * weeks are 7 days, all days are 24 hours, all hours are 60 minutes and\n     * all minutes are 60 seconds. This is not true when daylight savings time\n     * is considered, and may also not be true for some unusual chronologies.\n     * However, it is included as it is a useful operation for many\n     * applications and business rules.\n     * <p>\n     * If the period contains years or months, an exception will be thrown.\n     * \n     * @return a period representing the number of standard minutes in this period\n     * @throws UnsupportedOperationException if the period contains years or months\n     * @throws ArithmeticException if the number of minutes is too large to be represented\n     * @since 1.5\n     */\n    public Minutes toStandardMinutes() {\n        checkYearsAndMonths("Minutes");\n        long millis = getMillis();  // assign to a long\n        millis += ((long) getSeconds()) * DateTimeConstants.MILLIS_PER_SECOND;\n        long minutes = millis / DateTimeConstants.MILLIS_PER_MINUTE;\n        minutes = FieldUtils.safeAdd(minutes, getMinutes());\n        minutes = FieldUtils.safeAdd(minutes, ((long) getHours()) * ((long) DateTimeConstants.MINUTES_PER_HOUR));\n        minutes = FieldUtils.safeAdd(minutes, ((long) getDays()) * ((long) DateTimeConstants.MINUTES_PER_DAY));\n        minutes = FieldUtils.safeAdd(minutes, ((long) getWeeks()) * ((long) DateTimeConstants.MINUTES_PER_WEEK));\n        return Minutes.minutes(FieldUtils.safeToInt(minutes));\n    }\n\n    /**\n     * Converts this period to a period in seconds assuming a\n     * 7 day week, 24 hour day, 60 minute hour and 60 second minute.\n     * <p>\n     * This method allows you to convert between different types of period.\n     * However to achieve this it makes the assumption that all\n     * weeks are 7 days, all days are 24 hours, all hours are 60 minutes and\n     * all minutes are 60 seconds. This is not true when daylight savings time\n     * is considered, and may also not be true for some unusual chronologies.\n     * However, it is included as it is a useful operation for many\n     * applications and business rules.\n     * <p>\n     * If the period contains years or months, an exception will be thrown.\n     * \n     * @return a period representing the number of standard seconds in this period\n     * @throws UnsupportedOperationException if the period contains years or months\n     * @throws ArithmeticException if the number of seconds is too large to be represented\n     * @since 1.5\n     */\n    public Seconds toStandardSeconds() {\n        checkYearsAndMonths("Seconds");\n        long seconds = getMillis() / DateTimeConstants.MILLIS_PER_SECOND;\n        seconds = FieldUtils.safeAdd(seconds, getSeconds());\n        seconds = FieldUtils.safeAdd(seconds, ((long) getMinutes()) * ((long) DateTimeConstants.SECONDS_PER_MINUTE));\n        seconds = FieldUtils.safeAdd(seconds, ((long) getHours()) * ((long) DateTimeConstants.SECONDS_PER_HOUR));\n        seconds = FieldUtils.safeAdd(seconds, ((long) getDays()) * ((long) DateTimeConstants.SECONDS_PER_DAY));\n        seconds = FieldUtils.safeAdd(seconds, ((long) getWeeks()) * ((long) DateTimeConstants.SECONDS_PER_WEEK));\n        return Seconds.seconds(FieldUtils.safeToInt(seconds));\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Converts this period to a duration assuming a\n     * 7 day week, 24 hour day, 60 minute hour and 60 second minute.\n     * <p>\n     * This method allows you to convert from a period to a duration.\n     * However to achieve this it makes the assumption that all\n     * weeks are 7 days, all days are 24 hours, all hours are 60 minutes and\n     * all minutes are 60 seconds. This is not true when daylight savings time\n     * is considered, and may also not be true for some unusual chronologies.\n     * However, it is included as it is a useful operation for many\n     * applications and business rules.\n     * <p>\n     * If the period contains years or months, an exception will be thrown.\n     * \n     * @return a duration equivalent to this period\n     * @throws UnsupportedOperationException if the period contains years or months\n     * @since 1.5\n     */\n    public Duration toStandardDuration() {\n        checkYearsAndMonths("Duration");\n        long millis = getMillis();  // no overflow can happen, even with Integer.MAX_VALUEs\n        millis += (((long) getSeconds()) * ((long) DateTimeConstants.MILLIS_PER_SECOND));\n        millis += (((long) getMinutes()) * ((long) DateTimeConstants.MILLIS_PER_MINUTE));\n        millis += (((long) getHours()) * ((long) DateTimeConstants.MILLIS_PER_HOUR));\n        millis += (((long) getDays()) * ((long) DateTimeConstants.MILLIS_PER_DAY));\n        millis += (((long) getWeeks()) * ((long) DateTimeConstants.MILLIS_PER_WEEK));\n        return new Duration(millis);\n    }\n\n    /**\n     * Check that there are no years or months in the period.\n     * \n     * @param destintionType  the destination type, not null\n     * @throws UnsupportedOperationException if the period contains years or months\n     */\n    private void checkYearsAndMonths(String destintionType) {\n        if (getMonths() != 0) {\n            throw new UnsupportedOperationException("Cannot convert to " + destintionType + " as this period contains months and months vary in length");\n        }\n        if (getYears() != 0) {\n            throw new UnsupportedOperationException("Cannot convert to " + destintionType + " as this period contains years and years vary in length");\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Normalizes this period using standard rules, assuming a 12 month year,\n     * 7 day week, 24 hour day, 60 minute hour and 60 second minute.\n     * <p>\n     * This method allows you to normalize a period.\n     * However to achieve this it makes the assumption that all years are\n     * 12 months, all weeks are 7 days, all days are 24 hours,\n     * all hours are 60 minutes and all minutes are 60 seconds. This is not\n     * true when daylight savings time is considered, and may also not be true\n     * for some chronologies. However, it is included as it is a useful operation\n     * for many applications and business rules.\n     * <p>\n     * If the period contains years or months, then the months will be\n     * normalized to be between 0 and 11. The days field and below will be\n     * normalized as necessary, however this will not overflow into the months\n     * field. Thus a period of 1 year 15 months will normalize to 2 years 3 months.\n     * But a period of 1 month 40 days will remain as 1 month 40 days.\n     * <p>\n     * The result will always have a <code>PeriodType</code> of standard, thus\n     * days will be grouped into weeks.\n     * \n     * @return a normalized period equivalent to this period\n     * @throws ArithmeticException if any field is too large to be represented\n     * @since 1.5\n     */\n    public Period normalizedStandard() {\n        return normalizedStandard(PeriodType.standard());\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Normalizes this period using standard rules, assuming a 12 month year,\n     * 7 day week, 24 hour day, 60 minute hour and 60 second minute,\n     * providing control over how the result is split into fields.\n     * <p>\n     * This method allows you to normalize a period.\n     * However to achieve this it makes the assumption that all years are\n     * 12 months, all weeks are 7 days, all days are 24 hours,\n     * all hours are 60 minutes and all minutes are 60 seconds. This is not\n     * true when daylight savings time is considered, and may also not be true\n     * for some chronologies. However, it is included as it is a useful operation\n     * for many applications and business rules.\n     * <p>\n     * If the period contains years or months, then the months will be\n     * normalized to be between 0 and 11. The days field and below will be\n     * normalized as necessary, however this will not overflow into the months\n     * field. Thus a period of 1 year 15 months will normalize to 2 years 3 months.\n     * But a period of 1 month 40 days will remain as 1 month 40 days.\n     * <p>\n     * The PeriodType parameter controls how the result is created. It allows\n     * you to omit certain fields from the result if desired. For example,\n     * you may not want the result to include weeks, in which case you pass\n     * in <code>PeriodType.yearMonthDayTime()</code>.\n     * \n     * @param type  the period type of the new period, null means standard type\n     * @return a normalized period equivalent to this period\n     * @throws ArithmeticException if any field is too large to be represented\n     * @throws UnsupportedOperationException if this period contains non-zero\n     *  years or months but the specified period type does not support them\n     * @since 1.5\n     */\n    public Period normalizedStandard(PeriodType type) {\n        type = DateTimeUtils.getPeriodType(type);\n        long millis = getMillis();  // no overflow can happen, even with Integer.MAX_VALUEs\n        millis += (((long) getSeconds()) * ((long) DateTimeConstants.MILLIS_PER_SECOND));\n        millis += (((long) getMinutes()) * ((long) DateTimeConstants.MILLIS_PER_MINUTE));\n        millis += (((long) getHours()) * ((long) DateTimeConstants.MILLIS_PER_HOUR));\n        millis += (((long) getDays()) * ((long) DateTimeConstants.MILLIS_PER_DAY));\n        millis += (((long) getWeeks()) * ((long) DateTimeConstants.MILLIS_PER_WEEK));\n        Period result = new Period(millis, type, ISOChronology.getInstanceUTC());\n        int years = getYears();\n        int months = getMonths();\n        if (years != 0 || months != 0) {', 'aftercode': '            months = months % 12;\n            if (years != 0) {\n                result = result.withYears(years);\n            }\n            if (months != 0) {\n                result = result.withMonths(months);\n            }\n        }\n        return result;\n    }\n\n}', 'tree': 'MethodDeclaration modifiers public_ter ^ ^ return_type ReferenceType name Period_ter ^ ^ ^ ^ name meth0 ^ ^ parameters FormalParameter type ReferenceType name PeriodType_ter ^ ^ ^ ^ name par0 ^ ^ ^ ^ body StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier DateTimeUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member getPeriodType_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation member getMillis_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getSeconds_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_SECOND_ter ^ ^ ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getMinutes_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_MINUTE_ter ^ ^ ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getHours_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getDays_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_DAY_ter ^ ^ ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getWeeks_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_WEEK_ter ^ ^ ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Period_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer ClassCreator type ReferenceType name Period_ter ^ ^ ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference member par0 ^ ^ ^ MethodInvocation qualifier ISOChronology_ter ^ ^ member getInstanceUTC_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation member getYears_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation member getMonths_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value BinaryOperation operator %_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member withYears_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member withMonths_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc1 ^ ^ ^ ^ ^ ^ ^ ', 'prob': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'mode': 0, 'line': 1628, 'isa': False, 'fl_score': 1}]
before@0 batch0 x: 0: root ^  ; []
after@0 batch0 x: 0: root ^  ; []
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root Literal-Literal value 12_ter ^ ^ ^  ^ ^ ; ['copy-Literal']
copynode 0:  root parameters ^ ^ ; ['root -> parameters']
copynode 0:  root qualifier-qualifier FieldUtils_ter ^ ^  ^ ^ ; ['copy-qualifier']
before@1 batch0 x: -11.968534469604492: root qualifier-qualifier FieldUtils_ter ^ ^  ^ ^  ; ['copy-qualifier']
after@1 batch0 x: -11.968534469604492: root qualifier-qualifier FieldUtils_ter ^ ^  ^ ^  ; ['copy-qualifier']
copynode -0.11307084560394287:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -0.11307084560394287:  root modified ^ Literal-Literal value 12_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-Literal']
copynode -0.11307084560394287:  root modified ^ member-member safeAdd_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -0.11307084560394287:  root modified ^ qualifier-qualifier FieldUtils_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-qualifier']
copynode -2.238299608230591:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -0.11307084560394287:  root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -2.238299608230591:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -0.11307084560394287:  root modified ^ operator-operator /_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-operator']
copynode -0.11307084560394287:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.11307084560394287:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.11307084560394287:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -2.238299608230591:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -0.11307084560394287:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -2.238299608230591:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -2.238299608230591:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter']
copynode -2.238299608230591:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -2.238299608230591:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -2.238299608230591:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -2.238299608230591:  root add ^ WhileStatement ^ ^ ; ['root -> add', 'root -> WhileStatement']
copynode -2.238299608230591:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter']
copynode -10.670551300048828:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -10.431784629821777:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -10.646449089050293:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -11.299147605895996:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -11.74080753326416:  root Literal-Literal value 12_ter ^ ^ ^  value ^ ^ ^ ; ['copy-Literal', 'Literal -> value']
copynode -11.918614387512207:  root parameters FormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter']
copynode -10.646449089050293:  root ReturnStatement expression MemberReference member loc1 ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -11.968534469604492:  root qualifier-qualifier FieldUtils_ter ^ ^  unknown ^ ^ ^ ; ['copy-qualifier', 'start -> unknown']
copynode -10.431784629821777:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -11.918614387512207:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End']
copynode -11.968534469604492:  root qualifier-qualifier FieldUtils_ter ^ ^  par0 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> par0']
copynode -11.299147605895996:  root StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member withMonths_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.299147605895996:  root StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member withYears_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.968534469604492:  root qualifier-qualifier FieldUtils_ter ^ ^  ISOChronology_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -11.968534469604492:  root qualifier-qualifier FieldUtils_ter ^ ^  loc0 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> loc0']
copynode -11.968534469604492:  root qualifier-qualifier FieldUtils_ter ^ ^  FieldUtils_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -11.968534469604492:  root qualifier-qualifier FieldUtils_ter ^ ^  DateTimeUtils_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -11.299147605895996:  root StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value BinaryOperation operator %_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.74080753326416:  root Literal-Literal value 12_ter ^ ^ ^  prefix_operators ^ value ^ ^ ^ ; ['copy-Literal', 'Literal -> prefix_operators value']
copynode -11.299147605895996:  root StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getWeeks_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_WEEK_ter ^ ^ ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.299147605895996:  root StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getHours_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.299147605895996:  root StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getMinutes_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_MINUTE_ter ^ ^ ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.918614387512207:  root parameters MemberReference ^ ^ ^ ; ['root -> parameters', 'parameters -> MemberReference']
copynode -11.299147605895996:  root StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getSeconds_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_SECOND_ter ^ ^ ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.299147605895996:  root StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getDays_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_DAY_ter ^ ^ ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.74080753326416:  root Literal-Literal value 12_ter ^ ^ ^  value 12_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -11.74080753326416:  root Literal-Literal value 12_ter ^ ^ ^  value 12_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -11.968534469604492:  root qualifier-qualifier FieldUtils_ter ^ ^  par1 ^ ^ ^ ; ['copy-qualifier', 'qualifier -> par1']
copynode -10.431784629821777:  root return_type ReferenceType name Period_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'copy-return_type']
copynode -11.299147605895996:  root StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier DateTimeUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member getPeriodType_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -11.74080753326416:  root Literal-Literal value 12_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -11.918614387512207:  root parameters FormalParameter type ReferenceType name PeriodType_ter ^ ^ ^ ^ name par0 ^ ^ ^ ^ ^ ; ['root -> parameters', 'copy-parameters']
copynode -11.968534469604492:  root qualifier-qualifier FieldUtils_ter ^ ^  LOG_ter ^ ^ ^ ; ['copy-qualifier', 'qualifier -> LOG_ter']
copynode -11.74080753326416:  root Literal-Literal value 12_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -11.918614387512207:  root parameters InferredFormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> InferredFormalParameter']
copynode -11.968534469604492:  root qualifier-qualifier FieldUtils_ter ^ ^  DateTimeConstants_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -11.968534469604492:  root qualifier-qualifier FieldUtils_ter ^ ^  DateTimeConstants_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -11.74080753326416:  root Literal-Literal value 12_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -11.74080753326416:  root Literal-Literal value 12_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['copy-Literal', 'copy-Literal']
copynode -11.74080753326416:  root Literal-Literal value 12_ter ^ ^ ^  selectors ^ value ^ ^ ^ ; ['copy-Literal', 'Literal -> selectors value']
copynode -10.646449089050293:  root ReturnStatement par0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -11.74080753326416:  root Literal-Literal value 12_ter ^ ^ ^  prefix_operators ^ selectors ^ value ^ ^ ^ ; ['copy-Literal', 'Literal -> prefix_operators selectors value']
copynode -10.431784629821777:  root return_type par0 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -11.918614387512207:  root parameters loc0 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -11.918614387512207:  root parameters loc1 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -11.918614387512207:  root parameters loc2 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -11.918614387512207:  root parameters loc3 ^ ^ ^ ; ['root -> parameters', 'copy-VariableDeclarator']
copynode -10.670551300048828:  root IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member withMonths_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -10.670551300048828:  root IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member withYears_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.918614387512207:  root parameters Cast ^ ^ ^ ; ['root -> parameters', 'parameters -> Cast']
copynode -10.670551300048828:  root IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value BinaryOperation operator %_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member withYears_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member withMonths_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -10.431784629821777:  root return_type loc1 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.431784629821777:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -10.431784629821777:  root return_type loc0 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.431784629821777:  root return_type loc2 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.431784629821777:  root return_type loc3 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -10.670551300048828:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -10.670551300048828:  root IfStatement par0 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -10.670551300048828:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -10.646449089050293:  root ReturnStatement unknown ^ ^ ^ ; ['root -> ReturnStatement', 'start -> unknown']
copynode -10.670551300048828:  root IfStatement condition ^ then_statement ^ else_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement else_statement']
copynode -10.646449089050293:  root ReturnStatement loc1 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -10.646449089050293:  root ReturnStatement loc0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -10.646449089050293:  root ReturnStatement loc3 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -10.646449089050293:  root ReturnStatement loc2 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -10.670551300048828:  root IfStatement loc2 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -10.670551300048828:  root IfStatement loc1 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
before@2 batch0 x: -32.44840431213379: root IfStatement loc1 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
after@2 batch0 x: -32.44840431213379: root IfStatement loc1 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -1.1792784929275513:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -1.5959255695343018:  root modified ^ Literal-Literal value 12_ter ^ ^ ^  value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value']
copynode -1.7065317630767822:  root modified ^ member-member safeAdd_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -2.2321075201034546:  root modified ^ qualifier-qualifier FieldUtils_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown']
copynode -2.6689673960208893:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -3.4301291704177856:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -3.3851107358932495:  root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -4.0384591817855835:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -3.6958941221237183:  root modified ^ operator-operator /_ter ^ ^  -_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> -_ter']
copynode -4.652297854423523:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -1.7065317630767822:  root modified ^ member-member safeAdd_ter ^ ^  withYears_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.7065317630767822:  root modified ^ member-member safeAdd_ter ^ ^  withMonths_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.6958941221237183:  root modified ^ operator-operator /_ter ^ ^  +_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> +_ter']
copynode -3.6958941221237183:  root modified ^ operator-operator /_ter ^ ^  /_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> /_ter']
copynode -2.2321075201034546:  root modified ^ qualifier-qualifier FieldUtils_ter ^ ^  DateTimeUtils_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -3.6958941221237183:  root modified ^ operator-operator /_ter ^ ^  *_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> *_ter']
copynode -1.7065317630767822:  root modified ^ member-member safeAdd_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -1.5959255695343018:  root modified ^ Literal-Literal value 12_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -2.2321075201034546:  root modified ^ qualifier-qualifier FieldUtils_ter ^ ^  ISOChronology_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -1.7065317630767822:  root modified ^ member-member safeAdd_ter ^ ^  getWeeks_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -5.783665657043457:  root add ^ ReturnStatement expression MemberReference member loc1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -1.7065317630767822:  root modified ^ member-member safeAdd_ter ^ ^  getHours_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.7065317630767822:  root modified ^ member-member safeAdd_ter ^ ^  getMinutes_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.5959255695343018:  root modified ^ Literal-Literal value 12_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -1.7065317630767822:  root modified ^ member-member safeAdd_ter ^ ^  debug_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> debug_ter']
copynode -3.6958941221237183:  root modified ^ operator-operator /_ter ^ ^  <=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <=_ter']
copynode -3.3851107358932495:  root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -1.5959255695343018:  root modified ^ Literal-Literal value 12_ter ^ ^ ^  value 12_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -3.6958941221237183:  root modified ^ operator-operator /_ter ^ ^  %_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> %_ter']
copynode -5.783665657043457:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -3.6958941221237183:  root modified ^ operator-operator /_ter ^ ^  >>_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >>_ter']
copynode -1.7065317630767822:  root modified ^ member-member safeAdd_ter ^ ^  getDays_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -6.841061472892761:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -1.5959255695343018:  root modified ^ Literal-Literal value 12_ter ^ ^ ^  value 12_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -1.5959255695343018:  root modified ^ Literal-Literal value 12_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -1.7065317630767822:  root modified ^ member-member safeAdd_ter ^ ^  e_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> e_ter']
copynode -1.5959255695343018:  root modified ^ Literal-Literal value 12_ter ^ ^ ^  prefix_operators ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value']
copynode -3.6958941221237183:  root modified ^ operator-operator /_ter ^ ^  >=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >=_ter']
copynode -2.2321075201034546:  root modified ^ qualifier-qualifier FieldUtils_ter ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par0']
copynode -4.0384591817855835:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -2.6689673960208893:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member withMonths_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.6689673960208893:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member withYears_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.6689673960208893:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value BinaryOperation operator %_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.5959255695343018:  root modified ^ Literal-Literal value 12_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -2.2321075201034546:  root modified ^ qualifier-qualifier FieldUtils_ter ^ ^  DateTimeConstants_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -2.2321075201034546:  root modified ^ qualifier-qualifier FieldUtils_ter ^ ^  DateTimeConstants_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -2.2321075201034546:  root modified ^ qualifier-qualifier FieldUtils_ter ^ ^  DateTimeConstants_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -2.6689673960208893:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getWeeks_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_WEEK_ter ^ ^ ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.6689673960208893:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getMinutes_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_MINUTE_ter ^ ^ ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.6689673960208893:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getHours_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.2321075201034546:  root modified ^ qualifier-qualifier FieldUtils_ter ^ ^  DateTimeConstants_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -3.6958941221237183:  root modified ^ operator-operator /_ter ^ ^  <_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <_ter']
copynode -1.1792784929275513:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member withMonths_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.2321075201034546:  root modified ^ qualifier-qualifier FieldUtils_ter ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0']
copynode -1.1792784929275513:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member withYears_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.652297854423523:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -3.6958941221237183:  root modified ^ operator-operator /_ter ^ ^  <<_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <<_ter']
copynode -2.6689673960208893:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getSeconds_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_SECOND_ter ^ ^ ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -2.2321075201034546:  root modified ^ qualifier-qualifier FieldUtils_ter ^ ^  DateTimeConstants_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -2.6689673960208893:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getDays_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_DAY_ter ^ ^ ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -7.443738222122192:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -7.9424660205841064:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> End']
copynode -8.189929246902466:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -2.6689673960208893:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier DateTimeUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member getPeriodType_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.1792784929275513:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getWeeks_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_WEEK_ter ^ ^ ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.1792784929275513:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getHours_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.1792784929275513:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getMinutes_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_MINUTE_ter ^ ^ ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.1792784929275513:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getDays_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_DAY_ter ^ ^ ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.1792784929275513:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getSeconds_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_SECOND_ter ^ ^ ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -3.3851107358932495:  root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -4.0384591817855835:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -1.1792784929275513:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value BinaryOperation operator %_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -1.5959255695343018:  root modified ^ Literal-Literal value 12_ter ^ ^ ^  selectors ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> selectors value']
copynode -9.462588548660278:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -9.655486345291138:  root add ^ WhileStatement condition ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -7.443738222122192:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation member getYears_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -1.1792784929275513:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier DateTimeUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member getPeriodType_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -7.443738222122192:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation member getMonths_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -7.443738222122192:  root add ^ LocalVariableDeclaration type ReferenceType name Period_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer ClassCreator type ReferenceType name Period_ter ^ ^ ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference member par0 ^ ^ ^ MethodInvocation qualifier ISOChronology_ter ^ ^ member getInstanceUTC_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -4.652297854423523:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -7.443738222122192:  root add ^ LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation member getMillis_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -3.3851107358932495:  root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -10.17582631111145:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> End']
copynode -8.346326112747192:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -4.0384591817855835:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -3.3851107358932495:  root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -4.0384591817855835:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -1.5959255695343018:  root modified ^ Literal-Literal value 12_ter ^ ^ ^  prefix_operators ^ selectors ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators selectors value']
copynode -4.652297854423523:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -10.683795601129532:  root return_type ReferenceType name Period_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -4.652297854423523:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -10.670925627666293:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -10.924170166254044:  root ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -8.346326112747192:  root add ^ control par0 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter']
copynode -7.9424660205841064:  root add ^ BreakStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> StatementExpression']
copynode -11.370872393250465:  root StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -10.670925627666293:  root IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -8.189929246902466:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
before@3 batch0 x: -11.935204982757568: root add ^ ReturnStatement_ter ^ StatementExpression ^ ^  ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
after@3 batch0 x: -11.935204982757568: root add ^ ReturnStatement_ter ^ StatementExpression ^ ^  ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -1.1853238916955888:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -1.8453397005796432:  root modified ^ member-member safeAdd_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -2.3161229267716408:  root modified ^ qualifier-qualifier FieldUtils_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -1.6693336367607117:  root modified ^ Literal-Literal value 12_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 1_ter']
copynode -1.6693336367607117:  root modified ^ Literal-Literal value 12_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 2_ter']
copynode -2.7422793805599213:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -1.1853238916955888:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -2.7422793805599213:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -1.6693336367607117:  root modified ^ Literal-Literal value 12_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 0_ter']
copynode -3.4304102458409034:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -3.4335357174277306:  root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -4.6211495995521545:  root modified ^ operator-operator /_ter ^ ^  -_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> -_ter', 'root -> End']
copynode -3.4304102458409034:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -3.4335357174277306:  root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -4.095130402594805:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -3.4304102458409034:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -4.095130402594805:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -3.4335357174277306:  root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.556952238082886:  root modified ^ member-member safeAdd_ter ^ ^  withYears_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -5.601528882980347:  root modified ^ member-member safeAdd_ter ^ ^  withMonths_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -4.7078824788331985:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -5.817541718482971:  root modified ^ operator-operator /_ter ^ ^  +_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> +_ter', 'root -> End']
copynode -3.4335357174277306:  root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -3.4335357174277306:  root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -6.063543915748596:  root modified ^ operator-operator /_ter ^ ^  /_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> /_ter', 'root -> End']
copynode -6.0956727266311646:  root modified ^ qualifier-qualifier FieldUtils_ter ^ ^  DateTimeUtils_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -2.7422793805599213:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -3.4335357174277306:  root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.23304808139801:  root modified ^ operator-operator /_ter ^ ^  *_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> *_ter', 'root -> End']
copynode -6.25476336479187:  root modified ^ member-member safeAdd_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
copynode -6.258989572525024:  root modified ^ Literal-Literal value 12_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal', 'root -> End']
copynode -6.279069781303406:  root modified ^ qualifier-qualifier FieldUtils_ter ^ ^  ISOChronology_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -6.316624402999878:  root modified ^ member-member safeAdd_ter ^ ^  getWeeks_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.343518018722534:  root modified ^ member-member safeAdd_ter ^ ^  getHours_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -4.095130402594805:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.363169431686401:  root modified ^ member-member safeAdd_ter ^ ^  getMinutes_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.338438987731934:  root add ^ ReturnStatement expression MemberReference member loc1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -4.7078824788331985:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.45999550819397:  root modified ^ Literal-Literal value 12_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal', 'root -> End']
copynode -6.484753370285034:  root modified ^ member-member safeAdd_ter ^ ^  debug_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> debug_ter', 'root -> End']
copynode -6.540884613990784:  root modified ^ operator-operator /_ter ^ ^  <=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <=_ter', 'root -> End']
copynode -6.56699013710022:  root modified ^ Literal-Literal value 12_ter ^ ^ ^  value 12_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal', 'root -> End']
copynode -6.644470572471619:  root modified ^ operator-operator /_ter ^ ^  %_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> %_ter', 'root -> End']
copynode -6.667002320289612:  root modified ^ operator-operator /_ter ^ ^  >>_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >>_ter', 'root -> End']
copynode -6.685086011886597:  root modified ^ member-member safeAdd_ter ^ ^  getDays_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -4.095130402594805:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -4.7078824788331985:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.095130402594805:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -3.4304102458409034:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -6.958141565322876:  root modified ^ Literal-Literal value 12_ter ^ ^ ^  value 12_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal', 'root -> End']
copynode -7.008402109146118:  root modified ^ Literal-Literal value 12_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal', 'root -> End']
copynode -7.0782692432403564:  root modified ^ member-member safeAdd_ter ^ ^  e_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> e_ter', 'root -> End']
copynode -7.083126664161682:  root modified ^ operator-operator /_ter ^ ^  >=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >=_ter', 'root -> End']
copynode -3.4335357174277306:  root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -7.097189784049988:  root modified ^ qualifier-qualifier FieldUtils_ter ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par0', 'root -> End']
copynode -7.082183122634888:  root modified ^ Literal-Literal value 12_ter ^ ^ ^  prefix_operators -_ter ^ ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter']
copynode -3.4335357174277306:  root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.7078824788331985:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -4.7078824788331985:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.095130402594805:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -7.154743820428848:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member withMonths_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.214001327753067:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member withYears_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -4.7078824788331985:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -7.3349597454071045:  root modified ^ Literal-Literal value 12_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal', 'root -> End']
copynode -7.225254684686661:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value BinaryOperation operator %_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.362678408622742:  root modified ^ qualifier-qualifier FieldUtils_ter ^ ^  DateTimeConstants_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -6.654803931713104:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -7.383512377738953:  root modified ^ qualifier-qualifier FieldUtils_ter ^ ^  DateTimeConstants_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -4.095130402594805:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.494895815849304:  root modified ^ qualifier-qualifier FieldUtils_ter ^ ^  DateTimeConstants_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -6.842268718522973:  root modified ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -6.654803931713104:  root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -7.630617022514343:  root modified ^ qualifier-qualifier FieldUtils_ter ^ ^  DateTimeConstants_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -7.652878403663635:  root modified ^ operator-operator /_ter ^ ^  <_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <_ter', 'root -> End']
copynode -7.669262051582336:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member withMonths_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.5351530611515045:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getWeeks_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_WEEK_ter ^ ^ ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.6877487897872925:  root modified ^ qualifier-qualifier FieldUtils_ter ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0', 'root -> End']
copynode -7.69651997089386:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member withYears_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -1.1853238916955888:  root modified ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -7.741255164146423:  root modified ^ operator-operator /_ter ^ ^  <<_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <<_ter', 'root -> End']
copynode -7.597946792840958:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getMinutes_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_MINUTE_ter ^ ^ ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -7.612608581781387:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getHours_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -3.4335357174277306:  root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  member MILLIS_PER_MINUTE_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.790387988090515:  root modified ^ qualifier-qualifier FieldUtils_ter ^ ^  DateTimeConstants_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -4.095130402594805:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.4304102458409034:  root add ^ IfStatement condition Cast ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast']
copynode -7.774979263544083:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getSeconds_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_SECOND_ter ^ ^ ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -3.4335357174277306:  root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  member MILLIS_PER_WEEK_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.799414306879044:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getDays_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_DAY_ter ^ ^ ^ ^ ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.842268718522973:  root modified ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -3.4304102458409034:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.941427946090698:  root add ^ LocalVariableDeclaration type BasicType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> BasicType']
copynode -6.554774641990662:  root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -3.4304102458409034:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -2.7422793805599213:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -2.7422793805599213:  root add ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -4.7078824788331985:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4']
before@4 batch0 x: -8.269030168652534: root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc4 ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4']
after@4 batch0 x: -8.269030168652534: root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc4 ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4']
copynode -1.2993862531147897:  root modified ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -2.4597445130348206:  root modified ^ Literal-Literal value 12_ter ^ ^ ^  value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 1_ter', 'root -> End']
copynode -2.5726786255836487:  root modified ^ Literal-Literal value 12_ter ^ ^ ^  value 2_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 2_ter', 'root -> End']
copynode -3.3467757403850555:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -3.666333258152008:  root modified ^ Literal-Literal value 12_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 0_ter', 'root -> End']
copynode -3.450160203035921:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.6437556445598602:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.082026163523551:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.516520880162716:  root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3', 'root -> End']
copynode -3.450160203035921:  root modified ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.098794601857662:  root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2', 'root -> End']
copynode -5.1693508215248585:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3', 'root -> End']
copynode -5.408089954406023:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2', 'root -> End']
copynode -5.551519058644772:  root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -3.6437556445598602:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.6437556445598602:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.799029186367989:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3', 'root -> End']
copynode -5.32416210550582:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -3.450160203035921:  root modified ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.907348297536373:  root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -6.05931606143713:  root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -3.6437556445598602:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -4.833080867712852:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.215943954885006:  root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -6.349209982901812:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -4.833080867712852:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.429611876606941:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2', 'root -> End']
copynode -5.32416210550582:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -6.162987560033798:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -6.774419266730547:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -3.450160203035921:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.082026163523551:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.889733150601387:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -6.904735047370195:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -4.082026163523551:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.9481764830998145:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.0960744842886925:  root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4', 'root -> End']
copynode -7.109231613576412:  root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -7.135416582226753:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -7.098833363503218:  root modified ^ Literal-Literal value 12_ter ^ ^ ^  prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter', 'value -> 1_ter']
copynode -4.833080867712852:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -7.1888604909181595:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -7.238061387091875:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc4 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc4', 'root -> End']
copynode -4.833080867712852:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -7.330790355801582:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -4.082026163523551:  root add ^ IfStatement condition BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.833080867712852:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.479203660041094:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -7.382328510284424:  root add ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -1.2993862531147897:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'copy-Assignment']
copynode -7.596418797969818:  root add ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -7.7875019535422325:  root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  member MILLIS_PER_MINUTE_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -3.450160203035921:  root modified ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -4.833080867712852:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
before@5 batch0 x: -7.834802965109702: root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
after@5 batch0 x: -7.834802965109702: root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -1.3048374447971582:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -4.074336705263704:  root modified ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.349818891612813:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -3.349818891612813:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -4.592371878679842:  root modified ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -4.142700046300888:  root add ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.355651328747626:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -4.142700046300888:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -3.349818891612813:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -4.142700046300888:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2']
copynode -4.355651328747626:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -5.8183759250096045:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.060686081647873:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.899839100893587:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -4.355651328747626:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -1.3048374447971582:  root modified ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -6.453192929213401:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -4.355651328747626:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -5.583536118268967:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -4.355651328747626:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -4.142700046300888:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc1']
copynode -4.074336705263704:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.122904042189475:  root add ^ IfStatement condition MethodInvocation qualifier FieldUtils_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.698364228010178:  root add ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -4.142700046300888:  root add ^ StatementExpression expression MethodInvocation qualifier loc3 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc3']
copynode -5.698364228010178:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -6.883835712855216:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -1.3048374447971582:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -3.349818891612813:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -7.1555290594697:  root modified ^ Literal-Literal value 12_ter ^ ^ ^  prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter', 'value -> 1_ter', 'root -> End']
copynode -7.157095292990562:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -6.98704783100402:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -3.349818891612813:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -4.355651328747626:  root add ^ IfStatement condition BinaryOperation operator >=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >=_ter']
copynode -4.355651328747626:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -7.272013048117515:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -3.349818891612813:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl']
copynode -6.469914674758911:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -7.37140880007064:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.122904042189475:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.583536118268967:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
before@6 batch0 x: -7.4635487496852875: root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
after@6 batch0 x: -7.4635487496852875: root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -1.318595060147345:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation']
copynode -4.262009924976155:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -4.299342340556905:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation']
copynode -4.186495368834585:  root modified ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -1.318595060147345:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value BinaryOperation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation']
copynode -1.318595060147345:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference']
copynode -4.186495368834585:  root modified ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -1.318595060147345:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value Cast ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Cast']
copynode -5.678824732487556:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -5.054029613733292:  root add ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -6.074769891798496:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -6.066277439182159:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -6.054416129773017:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -6.218294886406511:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -6.431138256564736:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -1.318595060147345:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value TernaryExpression ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> TernaryExpression']
copynode -5.889121479121968:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation']
copynode -6.516849368810654:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.331155131047126:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -5.839516133069992:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -4.299342340556905:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference']
copynode -6.480252685432788:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -4.299342340556905:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value BinaryOperation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation']
copynode -6.494286964123603:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -5.998520344495773:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2', 'arguments -> MemberReference']
copynode -6.609862754528876:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -4.186495368834585:  root modified ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation']
copynode -4.186495368834585:  root modified ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -6.979771107435226:  root add ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -7.1089222226291895:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation']
copynode -1.318595060147345:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value ClassCreator ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> ClassCreator']
copynode -5.054029613733292:  root add ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -5.889121479121968:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference']
copynode -4.299342340556905:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Literal']
copynode -5.054029613733292:  root add ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -7.4635487496852875:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -5.054029613733292:  root add ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
before@7 batch0 x: -7.504906088113785: root add ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
after@7 batch0 x: -7.504906088113785: root add ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -1.3773041414096951:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -1.3773041414096951:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation']
copynode -1.3773041414096951:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.299230242846534:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.732749824877828:  root modified ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.639190799323842:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.288538106717169:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.620416768826544:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member']
copynode -1.3773041414096951:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -1.3773041414096951:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -5.853880951588508:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.945867866277695:  root add ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.77561963442713:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value Cast type ^ expression ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Cast', 'Cast -> type expression']
copynode -1.3773041414096951:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -6.3904599048546515:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.424178150948137:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -5.674159829970449:  root modified ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.531349309720099:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -4.639190799323842:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.299230242846534:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -6.454025721177459:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.689326971769333:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.674159829970449:  root modified ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -1.3773041414096951:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.692825502483174:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member']
copynode -4.299230242846534:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.847271124308463:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.288538106717169:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.544932669727132:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.972321520035621:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.75447306263959:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -6.9985409043729305:  root add ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.94110968708992:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.299230242846534:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.7854024830739945:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.648129949753638:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.639190799323842:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> arguments member']
before@8 batch0 x: -7.348514594137669: root add ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value BinaryOperation operator %_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
after@8 batch0 x: -7.348514594137669: root add ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value BinaryOperation operator %_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -1.6294066654518247:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.322404329665005:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter']
copynode -4.742920632008463:  root modified ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -1.6294066654518247:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -4.723338668234646:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.048267698613927:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.72832369315438:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation']
copynode -4.723338668234646:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -5.676210110075772:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MemberReference member loc2 ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -4.72832369315438:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference']
copynode -5.59821901563555:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -6.044458934105933:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value Cast type ReferenceType ^ ^ expression ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Cast', 'Cast -> type expression', 'type -> ReferenceType']
copynode -6.3423906015232205:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ selectors ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier']
copynode -4.72832369315438:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal']
copynode -5.7980633424595:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier loc2 ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2']
copynode -5.048267698613927:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.815610473044217:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier loc2 ^ ^ selectors ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc2']
copynode -6.432976906653494:  root modified ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier FieldUtils_ter ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.713061964139342:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'value -> MethodInvocation']
copynode -5.863988235068973:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.633818293688819:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc3 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'value -> MethodInvocation']
copynode -5.863988235068973:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -6.92907799128443:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation', 'copy-BinaryOperation', 'type -> =_ter']
copynode -4.72832369315438:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value BinaryOperation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> BinaryOperation']
copynode -6.822735692141578:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'value -> MethodInvocation']
copynode -5.99202847853303:  root add ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.561469658277929:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value TernaryExpression condition BinaryOperation ^ ^ if_true ^ if_false ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation']
copynode -6.782142226584256:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation member unknown ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.7980633424595:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc3']
copynode -7.115969325182959:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc1 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'value -> MethodInvocation']
copynode -5.815610473044217:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier loc3 ^ ^ selectors ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc3']
copynode -5.59821901563555:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value BinaryOperation operator |_ter ^ ^ operandl ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> |_ter']
copynode -6.411580620741006:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -3.322404329665005:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> +=_ter']
before@9 batch0 x: -7.436540548689663: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> +=_ter']
after@9 batch0 x: -7.436540548689663: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type +=_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> +=_ter']
copynode -1.6715762810781598:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -3.3414229853078723:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter', 'root -> End']
copynode -1.6715762810781598:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation']
copynode -1.6715762810781598:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -1.6715762810781598:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -4.867926100734621:  root modified ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation']
copynode -5.042354081757367:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -1.6715762810781598:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -5.883791987784207:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.9033671813085675:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MemberReference member loc2 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'type -> =_ter']
copynode -5.355703358538449:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member unknown ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -6.0231217097025365:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference', 'MemberReference -> member']
copynode -5.355703358538449:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
copynode -1.6715762810781598:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -5.042354081757367:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -1.6715762810781598:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -5.517538792220876:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.665508921025321:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.867926100734621:  root modified ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference']
copynode -6.39185702893883:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ selectors MethodInvocation ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier', 'selectors -> MethodInvocation']
copynode -6.46676134574227:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value Literal value ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> Literal', 'Literal -> value']
copynode -6.599514846689999:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier loc2 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc2', 'selectors -> MethodInvocation']
copynode -1.6715762810781598:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -6.520028416998684:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier loc2 ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'copy-member']
copynode -6.94594746734947:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation', 'copy-BinaryOperation', 'type -> =_ter', 'root -> End']
copynode -6.672263955231756:  root modified ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -6.775307493284345:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'value -> MethodInvocation', 'copy-MethodInvocation']
copynode -1.6715762810781598:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference member par0 ^ ^ ^ MethodInvocation qualifier ISOChronology_ter ^ ^ member getInstanceUTC_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -4.867926100734621:  root modified ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation']
copynode -6.224502437748015:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value Cast type ReferenceType name Period_ter ^ ^ ^ ^ expression ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -7.245522086508572:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'type -> =_ter']
copynode -6.224502437748015:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value Cast type ReferenceType name Period_ter ^ ^ ^ ^ expression ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -6.135605194605887:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value BinaryOperation operator +_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation']
copynode -6.528139210073277:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
before@10 batch0 x: -7.360642409650609: root add ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
after@10 batch0 x: -7.360642409650609: root add ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -2.053842325694859:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.4762379126623273:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.4762379126623273:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.349346180446446:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.232933779247105:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value']
copynode -5.909926441498101:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MemberReference member loc2 ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'type -> =_ter', 'root -> End']
copynode -5.9509204076603055:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'type -> =_ter']
copynode -5.873036642558873:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member']
copynode -5.893540241755545:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -5.4183769025839865:  root modified ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.165095870383084:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member', 'type -> =_ter']
copynode -2.053842325694859:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.266253684647381:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.249404211528599:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member']
copynode -5.4183769025839865:  root modified ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.367812414653599:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member']
copynode -6.391012171749026:  root modified ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.388850754825398:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.453464881516993:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.708683525212109:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'copy-member']
copynode -5.232933779247105:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments Literal value 12_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal']
copynode -6.651301641948521:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member']
copynode -4.349346180446446:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.716129471547902:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier loc2 ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'copy-member', 'type -> =_ter']
copynode -4.349346180446446:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.650697608478367:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier loc2 ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> loc2', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.007318859454244:  root modified ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.349346180446446:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.349346180446446:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier ISOChronology_ter ^ ^ member getInstanceUTC_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.143816189840436:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter']
copynode -7.15207411814481:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference member par0 ^ ^ ^ MethodInvocation qualifier ISOChronology_ter ^ ^ member getInstanceUTC_ter ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member']
copynode -7.25164322508499:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'type -> =_ter', 'root -> End']
copynode -6.39014511811547:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.074020321248099:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MemberReference member loc2 ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MemberReference', 'MemberReference -> member', 'member -> loc2']
before@11 batch0 x: -7.330981287697796: root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member par1 ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
after@11 batch0 x: -7.330981287697796: root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member par1 ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -2.071304648183286:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -2.071304648183286:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -4.386021752841771:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter']
copynode -4.1176544027403:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> MemberReference']
copynode -4.929100294597447:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier FieldUtils_ter ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.1176544027403:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ BinaryOperation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> BinaryOperation']
copynode -4.386021752841771:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter']
copynode -2.071304648183286:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -4.1176544027403:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End']
copynode -5.956378970760852:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member unknown ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'type -> =_ter', 'root -> End']
copynode -5.956741054542363:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'type -> =_ter']
copynode -2.071304648183286:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.171862381044775:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -6.290429030545056:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'type -> =_ter']
copynode -4.1176544027403:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> Literal']
copynode -4.929100294597447:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.181522627361119:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -6.28532422054559:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.41076682228595:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'type -> =_ter']
copynode -2.071304648183286:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.375754574779421:  root modified ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End']
copynode -6.626338575966656:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'copy-member', 'type -> =_ter']
copynode -6.68396554607898:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'type -> =_ter']
copynode -6.722664553206414:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier loc2 ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -5.99786136392504:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc2 ^ ^ ^ BinaryOperation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation']
copynode -5.681673903949559:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -4.1176544027403:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> MethodInvocation']
copynode -5.681673903949559:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -5.681673903949559:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments Literal value 2_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> 2_ter']
copynode -4.386021752841771:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator -_ter ^ ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter']
copynode -6.652792234905064:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments Literal value 12_ter ^ ^ ^ BinaryOperation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'copy-Literal', 'arguments -> BinaryOperation']
copynode -7.1620236877352:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'value -> MethodInvocation', 'copy-MethodInvocation', 'type -> =_ter', 'root -> End']
copynode -5.99786136392504:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference']
copynode -2.071304648183286:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.194452592171729:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference member par0 ^ ^ ^ MethodInvocation qualifier ISOChronology_ter ^ ^ member getInstanceUTC_ter ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'type -> =_ter']
copynode -7.016140459571034:  root modified ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
before@12 batch0 x: -7.2384083406068385: root modified ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
after@12 batch0 x: -7.2384083406068385: root modified ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -2.2106744190678:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation']
copynode -2.2106744190678:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference']
copynode -2.2106744190678:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation']
copynode -5.272654970176518:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -2.2106744190678:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -5.025539486669004:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ BinaryOperation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> BinaryOperation']
copynode -5.27956144977361:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.672584016807377:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member']
copynode -5.9638846148736775:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -2.2106744190678:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> Literal']
copynode -5.5984002044424415:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ BinaryOperation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> BinaryOperation']
copynode -5.218810697086155:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference']
copynode -5.3693899707868695:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.298145879991353:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -5.218810697086155:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation']
copynode -5.531934400089085:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference']
copynode -6.418449194636196:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -6.453009861055762:  root modified ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member']
copynode -5.3693899707868695:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.629896739730611:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -6.329392989166081:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> Literal', 'Literal -> value']
copynode -5.025539486669004:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> MemberReference']
copynode -6.693192884325981:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -6.06405648496002:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.531934400089085:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> BinaryOperation']
copynode -6.433298437856138:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ BinaryOperation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> BinaryOperation']
copynode -6.363587041385472:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -6.06405648496002:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ BinaryOperation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> BinaryOperation']
copynode -5.5984002044424415:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> MemberReference']
copynode -7.201707038097084:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ MemberReference member par0 ^ ^ ^ MethodInvocation qualifier ISOChronology_ter ^ ^ member getInstanceUTC_ter ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -7.175618984736502:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.795626898296177:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ BinaryOperation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> BinaryOperation']
before@13 batch0 x: -7.26766409445554: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ BinaryOperation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> BinaryOperation']
after@13 batch0 x: -7.26766409445554: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ BinaryOperation ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> BinaryOperation']
copynode -2.6371641596779227:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.6371641596779227:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.8559161564335227:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.352717532776296:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
copynode -4.949874057434499:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.6078650848940015:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.29980677459389:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -5.7278084652498364:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -6.186890442855656:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.447870104573667:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.447870104573667:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.416538675315678:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.482791249174625:  root modified ^ StatementExpression expression MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.0216285130009055:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> Literal', 'Literal -> value']
copynode -6.693372576497495:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.8559161564335227:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.748609929345548:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.037884472869337:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.4983700113371015:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End']
copynode -2.6371641596779227:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation']
copynode -2.6371641596779227:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.037884472869337:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> BinaryOperation', 'copy-BinaryOperation']
copynode -2.6371641596779227:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getWeeks_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_WEEK_ter ^ ^ ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation']
copynode -2.6371641596779227:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.391177077777684:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.062702317722142:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.0216285130009055:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ Literal value 12_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> Literal', 'copy-Literal']
copynode -6.283116062171757:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter']
before@14 batch0 x: -7.189048561253003: root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc0 ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
after@14 batch0 x: -7.189048561253003: root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc0 ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -3.460312291048467:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End']
copynode -3.4141203006729484:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter']
copynode -3.4141203006729484:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter']
copynode -3.914363141171634:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -3.914363141171634:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -5.3822746919468045:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -5.733054895419627:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -5.62049419619143:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -3.4141203006729484:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator <<_ter ^ ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <<_ter']
copynode -3.4141203006729484:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator -_ter ^ ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter']
copynode -3.914363141171634:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -6.280814855359495:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End']
copynode -5.49898864235729:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.49898864235729:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier FieldUtils_ter ^ ^ arguments ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.642079264856875:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -3.914363141171634:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -3.4141203006729484:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -6.20188105199486:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.80031390953809:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member']
copynode -3.4141203006729484:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> %_ter']
copynode -6.818449540995061:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End']
copynode -6.892035051248968:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End']
copynode -3.914363141171634:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.896992503665388:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End']
copynode -6.766354694031179:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -6.96297316160053:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getWeeks_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_WEEK_ter ^ ^ ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End']
copynode -5.642079264856875:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference']
copynode -6.9842095812782645:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End']
copynode -3.460312291048467:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ Literal ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> Literal']
copynode -6.776077869348228:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.431523415260017:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.216993539594114:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter']
before@15 batch0 x: -7.1093744365207385: root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  member par0 ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
after@15 batch0 x: -7.1093744365207385: root modified ^ MemberReference-MemberReference member loc3 ^ ^ ^  member par0 ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -3.5270298486575484:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member']
copynode -4.944038267247379:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -4.314630134962499:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference']
copynode -5.106614823453128:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -4.490394218824804:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference']
copynode -5.3852038972545415:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -4.314630134962499:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation']
copynode -4.490394218824804:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> BinaryOperation']
copynode -6.348247191868722:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member']
copynode -6.310626740567386:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc3 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End']
copynode -4.314630134962499:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MethodInvocation']
copynode -4.490394218824804:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MethodInvocation']
copynode -6.550822765566409:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
copynode -6.5779092265293:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -6.070561989210546:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator <<_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <<_ter', 'operandl -> MemberReference']
copynode -6.820695427246392:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -6.216508491896093:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator -_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference']
copynode -6.870970203541219:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member']
copynode -6.941798630170524:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member']
copynode -4.314630134962499:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'copy-operandl']
copynode -6.96825812663883:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member']
copynode -6.957671876065433:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> End']
copynode -7.010966937057674:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getWeeks_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_WEEK_ter ^ ^ ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member']
copynode -5.88778574205935:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference']
copynode -5.88778574205935:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation']
copynode -7.033190521411598:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member']
copynode -4.490394218824804:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'copy-operandl']
copynode -7.014569909311831:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ MemberReference member loc2 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.051602873019874:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -6.540399446152151:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.88778574205935:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
before@16 batch0 x: -7.408514807000756: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
after@16 batch0 x: -7.408514807000756: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -3.5384109057486057:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -4.998767941258848:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -5.080463930033147:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.160474485717714:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
copynode -5.209467872045934:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.359670150093734:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -6.364443059079349:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc3 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'copy-member']
copynode -5.88374565448612:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.574447621591389:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -6.632817461155355:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member']
copynode -6.827794624958187:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -6.8058165749534965:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator <<_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <<_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.88374565448612:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.27958784904331:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.85348020400852:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator -_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.881703748367727:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -6.953017166815698:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -6.9804596630856395:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -6.405836685560644:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.023493859916925:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getWeeks_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_WEEK_ter ^ ^ ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -7.015429357998073:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> End', 'copy-member']
copynode -7.044106573797762:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -6.452206595800817:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.0246322844177485:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.168234291486442:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
copynode -6.27958784904331:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.383668138645589:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.408514807000756:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
copynode -7.031210610643029:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.031210610643029:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
before@17 batch0 x: -8.00550384260714: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
after@17 batch0 x: -8.00550384260714: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.5432968134991825:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -5.011786766350269:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -5.176536242477596:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -5.106329615227878:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -5.236219271086156:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -5.106329615227878:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.364174529444426:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc3 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -6.381450210697949:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc3 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -5.236219271086156:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.579242849722505:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -5.106329615227878:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.6469283532351255:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -5.236219271086156:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.886778108309954:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -6.464926823042333:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter']
copynode -6.957722502294928:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -6.985339640639722:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -7.028904359322041:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl Cast type BasicType name long_ter ^ ^ ^ ^ expression MethodInvocation member getWeeks_ter ^ ^ ^ ^ ^ ^ operandr Cast type BasicType name long_ter ^ ^ ^ ^ expression MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_WEEK_ter ^ ^ ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -7.031043968163431:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -7.049552012234926:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -7.1856158236041665:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -6.871091469191015:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter']
copynode -7.009386523626745:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FieldUtils_ter ^ ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.846719547174871:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -7.070842011831701:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MethodInvocation qualifier FieldUtils_ter ^ ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.8335959715768695:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator <<_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <<_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -6.878256558440626:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator -_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> -_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -7.725267002359033:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'copy-BinaryOperation', 'arguments -> End']
copynode -6.464926823042333:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator /_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter']
before@18 batch0 x: -7.945051177404821: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator /_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter']
after@18 batch0 x: -7.945051177404821: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator /_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter']
copynode -5.016349583864212:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -5.182610245421529:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -6.38753830594942:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc3 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -6.651575721334666:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -6.200176174752414:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr']
copynode -6.250433905981481:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr']
copynode -7.0372054083272815:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -6.3577861143276095:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -7.19308847328648:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -6.468632801435888:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -6.608482415787876:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -6.200176174752414:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> MemberReference']
copynode -6.831147178076208:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -6.250433905981481:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> MemberReference']
copynode -6.9186878046020865:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference']
copynode -6.3577861143276095:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference']
copynode -7.7089009722694755:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'arguments -> End']
copynode -6.468632801435888:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference']
copynode -6.608482415787876:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> MemberReference']
copynode -7.3101838966831565:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference']
copynode -6.831147178076208:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> MemberReference']
before@19 batch0 x: -8.084371074102819: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> MemberReference']
after@19 batch0 x: -8.084371074102819: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> MemberReference']
copynode -6.957858378998935:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'arguments -> End']
copynode -7.014305516146123:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'arguments -> End']
copynode -7.123999531380832:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'arguments -> End']
copynode -7.241720422171056:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'arguments -> End']
copynode -7.298696453683078:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'arguments -> End']
copynode -7.553789540193975:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'arguments -> End']
copynode -7.517705853097141:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.634380086325109:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.567560180090368:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.75100841652602:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'arguments -> End', 'copy-member']
copynode -7.670208389870822:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.780660613439977:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.9004319263622165:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.9766785046085715:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -8.084371074102819:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> MemberReference', 'MemberReference -> member']
before@20 batch0 x: -8.152219227515161: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> MemberReference', 'MemberReference -> member']
after@20 batch0 x: -8.152219227515161: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.992605182342231:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'arguments -> End', 'copy-member']
copynode -7.049261483363807:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'arguments -> End', 'copy-member']
copynode -7.1586732706055045:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'arguments -> End', 'copy-member']
copynode -7.276558625511825:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'arguments -> End', 'copy-member']
copynode -7.335111985914409:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'arguments -> End', 'copy-member']
copynode -7.5905908746644855:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'arguments -> End', 'copy-member']
copynode -7.761340368539095:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -7.672653960995376:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -7.671634997241199:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.7203933438286185:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.834127779118717:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.672653960995376:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -8.018031890504062:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -7.9442364713177085:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.7203933438286185:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc2']
before@21 batch0 x: -9.094211502932012: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc2']
after@21 batch0 x: -9.094211502932012: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -7.001317165791988:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -7.0584734212607145:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -7.167295309714973:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -7.285682859830558:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -7.343059937469661:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -7.59904976002872:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -7.782233128324151:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -8.622485007159412:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -8.79915229883045:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -8.826616282574832:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -9.077201916836202:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -9.094211502932012:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -8.62173520307988:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr']
copynode -8.85479228477925:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -8.940813000313938:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr']
before@22 batch0 x: -9.907750661484897: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr']
after@22 batch0 x: -9.907750661484897: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr']
copynode -7.0175751876086:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -7.0758134089410305:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -7.1839102217927575:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -7.30333601962775:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -7.3630301943048835:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -7.620227336883545:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -8.662858783267438:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -8.839700105600059:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -8.866957667283714:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -9.117706093005836:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -9.132340039126575:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
copynode -9.630215990357101:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'copy-operandr']
copynode -9.868336367420852:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'copy-operandr']
copynode -9.907750661484897:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'copy-operandr']
before@23 batch0 x: -10.661978180520236: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'copy-operandr']
after@23 batch0 x: -10.661978180520236: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'copy-operandr']
copynode -8.673583290539682:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -8.850685277022421:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -8.877638978883624:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -9.128643055446446:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -9.143374145030975:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -10.424091803841293:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'copy-operandr', 'arguments -> End']
copynode -10.659847426228225:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'copy-operandr', 'arguments -> End']
copynode -10.661978180520236:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'copy-operandr', 'arguments -> End']
before@24 batch0 x: -10.696035648696125: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'copy-operandr', 'arguments -> End']
after@24 batch0 x: -10.696035648696125: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'copy-operandr', 'arguments -> End']
copynode -8.688222489319742:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -8.86646560486406:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -8.8928027683869:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -9.14491815958172:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -9.157455659471452:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr MemberReference member loc2 ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -10.458320914767683:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'copy-operandr', 'arguments -> End', 'copy-member']
copynode -10.694025467149913:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'copy-operandr', 'arguments -> End', 'copy-member']
copynode -10.696035648696125:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'copy-operandr', 'arguments -> End', 'copy-member']
before@25 batch0 x: -10.70237342454493: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'copy-operandr', 'arguments -> End', 'copy-member']
after@25 batch0 x: -10.70237342454493: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'copy-operandr', 'arguments -> End', 'copy-member']
copynode -10.464373869355768:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'copy-operandr', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -10.700030569918454:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'copy-operandr', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -10.70237342454493:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'copy-operandr', 'arguments -> End', 'copy-member', 'type -> =_ter']
before@26 batch0 x: -10.715918044559658: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'copy-operandr', 'arguments -> End', 'copy-member', 'type -> =_ter']
after@26 batch0 x: -10.715918044559658: root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'copy-operandr', 'arguments -> End', 'copy-member', 'type -> =_ter']
copynode -10.476715093944222:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'copy-operandr', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -10.71252025384456:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'copy-operandr', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
copynode -10.715918044559658:  root modified ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value MethodInvocation qualifier FieldUtils_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MemberReference member loc3 ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ operandr Literal value 12_ter ^ ^ ^ ^ ^ ^ member safeAdd_ter ^ ^ ^ ^ type =_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'copy-expressionl', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> /_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> *_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc3', 'copy-operandr', 'copy-operandr', 'arguments -> End', 'copy-member', 'type -> =_ter', 'root -> End']
method
FieldUtils_ter {'type_ter': 'PeriodType', 'millis_ter': 'long', 'result_ter': 'Period', 'years_ter': 'int', 'months_ter': 'int'}
FieldUtils_ter ZERO
FieldUtils_ter serialVersionUID
except
method
7 
6 months_ter
6 months_ter
6 years_ter
6 years_ter
6 months_ter
6 months_ter
method
except
6 months_ter
method
7 
Period  parse 
Period  parse 
Period  years 
Period  months 
Period  weeks 
Period  days 
Period  hours 
Period  minutes 
Period  seconds 
Period  millis 
Period  fieldDifference 
Period  toPeriod 
int  getYears 
int  getMonths 
int  getWeeks 
int  getDays 
int  getHours 
int  getMinutes 
int  getSeconds 
int  getMillis 
Period  withPeriodType 
Period  withFields 
Period  withField 
Period  withFieldAdded 
Period  withYears 
Period  withMonths 
Period  withWeeks 
Period  withDays 
Period  withHours 
Period  withMinutes 
Period  withSeconds 
Period  withMillis 
Period  plus 
Period  plusYears 
Period  plusMonths 
Period  plusWeeks 
Period  plusDays 
Period  plusHours 
Period  plusMinutes 
Period  plusSeconds 
Period  plusMillis 
Period  minus 
Period  minusYears 
Period  minusMonths 
Period  minusWeeks 
Period  minusDays 
Period  minusHours 
Period  minusMinutes 
Period  minusSeconds 
Period  minusMillis 
Period  multipliedBy 
Period  negated 
Weeks  toStandardWeeks 
Days  toStandardDays 
Hours  toStandardHours 
Minutes  toStandardMinutes 
Seconds  toStandardSeconds 
Duration  toStandardDuration 
None  checkYearsAndMonths 
Period  normalizedStandard 
Period  normalizedStandard 
6 months_ter
6 years_ter
method
except
method
7 
6 years_ter
6 years_ter
6 years_ter
stderr: Check out a6cb59ed to /root/projects/Recoder-bwk/buggy/Time-5.............. OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Run post-checkout hook..................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff a6cb59ed:a38b5e0c..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Time-5b......................................... OK
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Running ant (export.dir.src.classes)....................................... OK

  0%|          | 0/1 [00:00<?, ?it/s]/root/projects/Recoder-bwk/run.py:527: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  tmpdepth = np.array(tmpdepth)
/root/envs/recoder/lib/python3.7/site-packages/torch/nn/functional.py:1340: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
100%|██████████| 1/1 [00:16<00:00, 16.47s/it]100%|██████████| 1/1 [00:16<00:00, 16.47s/it]
