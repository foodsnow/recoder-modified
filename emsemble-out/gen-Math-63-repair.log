stdout: ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ ^ 
return (Double.isNaN(x) && Double.isNaN(y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (Double.isNaN(x) || (x == y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) && Double.isNaN(y)) || (x == y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) && Double.equals(y)) || (x == y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ ^ 
return (Double.isNaN(x) || Double.isNaN(y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) || Double.isNaN(y)) || (x == y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) && Double.isNaN(y)) || (x != y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >=_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) && Double.isNaN(y)) || (x >= y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <=_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) && Double.isNaN(y)) || (x <= y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator >_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) && Double.isNaN(y)) || (x > y));
ReturnStatement expression BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ 
return (x == y);
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (((Double.isNaN(x) && Double.isNaN(y)) || (x == y)) || (x == y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) || (x == y)) || (x == y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator <_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) && Double.isNaN(y)) || (x < y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member y_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) && Double.isNaN(y)) || (y == y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) || Double.isNaN(y)) || Double.isNaN(y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (((Double.isNaN(x) || Double.isNaN(y)) || Double.isNaN(y)) || (x == y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (Double.isNaN(x) || ((Double.isNaN(x) && Double.isNaN(y)) || (x == y)));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (Double.isNaN(x) && (x == y));
ReturnStatement expression MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ 
return Double.isNaN(x);
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) && Double.isNaN(y)) || Double.isNaN(y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (x || (x == y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) && Double.isNaN(y)) || ((Double.isNaN(x) && Double.isNaN(y)) || (x == y)));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) && Double.isNaN(x)) || (x == y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ ^ 
return (((Double.isNaN(x) && Double.isNaN(y)) || (x == y)) || Double.isNaN(y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) && Double.isNaN(y)) || Double.isNaN(x));
ReturnStatement expression MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ 
return Double.isNaN(y);
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier x_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) && x.isNaN(y)) || (x == y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (((Double.isNaN(x) && Double.isNaN(y)) || Double.isNaN(y)) || (x == y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((((Double.isNaN(x) && Double.isNaN(y)) || (x == y)) || Double.isNaN(y)) || (x == y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (Double.isNaN(x) || (Double.isNaN(x) || Double.isNaN(y)));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((((Double.isNaN(x) && Double.isNaN(y)) || (x == y)) || (x == y)) || (x == y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) && Double.isNaN(y)) || Double.isNaN(x, y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) || (Double.isNaN(x) && Double.isNaN(y))) || (x == y));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) || Double.isNaN(y)) && (x == y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr MemberReference member x_ter ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) && Double.isNaN(y)) || x);
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) && Double.isNaN(y)) || (Double.isNaN(x) && Double.isNaN(y)));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Math_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) && Math.isNaN(y)) || (x == y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (((Double.isNaN(x) || Double.isNaN(y)) || (x == y)) || (x == y));
ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) && Double.isNaN(y)) && (x == y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) || (Double.isNaN(x) || Double.isNaN(y))) || (x == y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return (((Double.isNaN(x) || (x == y)) || Double.isNaN(y)) || (x == y));
ReturnStatement expression MethodInvocation arguments MemberReference member x_ter ^ ^ ^ ^ member checkOrder_ter ^ ^ ^ ^ ^ 
return checkOrder(x);
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) && Double.add(y)) || (x == y));
ReturnStatement expression MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member checkOrder_ter ^ ^ ^ ^ ^ 
return Double.checkOrder(x);
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ ^ 
return (Double.isNaN(x) || Double.isNaN(x, y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) && Double.get(y)) || (x == y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) && Double.isNaN(y)) || (x && y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member x_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((Double.isNaN(x) && Double.x(y)) || (x == y));
ReturnStatement expression BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member x_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier Double_ter ^ ^ arguments MemberReference member y_ter ^ ^ ^ ^ member isNaN_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference member x_ter ^ ^ ^ ^ operandr MemberReference member y_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
return ((((Double.isNaN(x) || Double.isNaN(y)) || Double.isNaN(y)) || Double.isNaN(y)) || (x == y));
stderr: 