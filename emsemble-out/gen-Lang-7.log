stdout: else_statement -> BlockStatement
using GPU
p
path org.apache.commons.lang3.math.NumberUtils
createNumber
Position(line=445, column=19)
FOUND IT!
path org.apache.commons.lang3.math.NumberUtils
createBigDecimal
Position(line=713, column=19)
FOUND IT!
[{'bugid': 'Lang-7', 'treeroot': <Searchnode.Node object at 0x7f510173c490>, 'troot': <Searchnode.Node object at 0x7f51017a4150>, 'oldcode': '        if (str.startsWith("--")) {', 'filepath': 'buggy/Lang-7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java', 'subroot': <Searchnode.Node object at 0x7f5101742610>, 'vardic': {'createNumber_ter': 'meth0', 'hexDigits_ter': 'loc0'}, 'typedic': {'hexDigits_ter': 'int'}, 'idss': 'Lang-7', 'classname': 'org.apache.commons.lang3.math.NumberUtils', 'precode': '/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the "License"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.lang3.math;\n\nimport java.math.BigDecimal;\nimport java.math.BigInteger;\n\nimport org.apache.commons.lang3.StringUtils;\n\n/**\n * <p>Provides extra functionality for Java Number classes.</p>\n *\n * @since 2.0\n * @version $Id$\n */\npublic class NumberUtils {\n    \n    /** Reusable Long constant for zero. */\n    public static final Long LONG_ZERO = Long.valueOf(0L);\n    /** Reusable Long constant for one. */\n    public static final Long LONG_ONE = Long.valueOf(1L);\n    /** Reusable Long constant for minus one. */\n    public static final Long LONG_MINUS_ONE = Long.valueOf(-1L);\n    /** Reusable Integer constant for zero. */\n    public static final Integer INTEGER_ZERO = Integer.valueOf(0);\n    /** Reusable Integer constant for one. */\n    public static final Integer INTEGER_ONE = Integer.valueOf(1);\n    /** Reusable Integer constant for minus one. */\n    public static final Integer INTEGER_MINUS_ONE = Integer.valueOf(-1);\n    /** Reusable Short constant for zero. */\n    public static final Short SHORT_ZERO = Short.valueOf((short) 0);\n    /** Reusable Short constant for one. */\n    public static final Short SHORT_ONE = Short.valueOf((short) 1);\n    /** Reusable Short constant for minus one. */\n    public static final Short SHORT_MINUS_ONE = Short.valueOf((short) -1);\n    /** Reusable Byte constant for zero. */\n    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);\n    /** Reusable Byte constant for one. */\n    public static final Byte BYTE_ONE = Byte.valueOf((byte) 1);\n    /** Reusable Byte constant for minus one. */\n    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);\n    /** Reusable Double constant for zero. */\n    public static final Double DOUBLE_ZERO = Double.valueOf(0.0d);\n    /** Reusable Double constant for one. */\n    public static final Double DOUBLE_ONE = Double.valueOf(1.0d);\n    /** Reusable Double constant for minus one. */\n    public static final Double DOUBLE_MINUS_ONE = Double.valueOf(-1.0d);\n    /** Reusable Float constant for zero. */\n    public static final Float FLOAT_ZERO = Float.valueOf(0.0f);\n    /** Reusable Float constant for one. */\n    public static final Float FLOAT_ONE = Float.valueOf(1.0f);\n    /** Reusable Float constant for minus one. */\n    public static final Float FLOAT_MINUS_ONE = Float.valueOf(-1.0f);\n\n    /**\n     * <p><code>NumberUtils</code> instances should NOT be constructed in standard programming.\n     * Instead, the class should be used as <code>NumberUtils.toInt("6");</code>.</p>\n     *\n     * <p>This constructor is public to permit tools that require a JavaBean instance\n     * to operate.</p>\n     */\n    public NumberUtils() {\n        super();\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Convert a <code>String</code> to an <code>int</code>, returning\n     * <code>zero</code> if the conversion fails.</p>\n     *\n     * <p>If the string is <code>null</code>, <code>zero</code> is returned.</p>\n     *\n     * <pre>\n     *   NumberUtils.toInt(null) = 0\n     *   NumberUtils.toInt("")   = 0\n     *   NumberUtils.toInt("1")  = 1\n     * </pre>\n     *\n     * @param str  the string to convert, may be null\n     * @return the int represented by the string, or <code>zero</code> if\n     *  conversion fails\n     * @since 2.1\n     */\n    public static int toInt(String str) {\n        return toInt(str, 0);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to an <code>int</code>, returning a\n     * default value if the conversion fails.</p>\n     *\n     * <p>If the string is <code>null</code>, the default value is returned.</p>\n     *\n     * <pre>\n     *   NumberUtils.toInt(null, 1) = 1\n     *   NumberUtils.toInt("", 1)   = 1\n     *   NumberUtils.toInt("1", 0)  = 1\n     * </pre>\n     *\n     * @param str  the string to convert, may be null\n     * @param defaultValue  the default value\n     * @return the int represented by the string, or the default if conversion fails\n     * @since 2.1\n     */\n    public static int toInt(String str, int defaultValue) {\n        if(str == null) {\n            return defaultValue;\n        }\n        try {\n            return Integer.parseInt(str);\n        } catch (NumberFormatException nfe) {\n            return defaultValue;\n        }\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>long</code>, returning\n     * <code>zero</code> if the conversion fails.</p>\n     *\n     * <p>If the string is <code>null</code>, <code>zero</code> is returned.</p>\n     *\n     * <pre>\n     *   NumberUtils.toLong(null) = 0L\n     *   NumberUtils.toLong("")   = 0L\n     *   NumberUtils.toLong("1")  = 1L\n     * </pre>\n     *\n     * @param str  the string to convert, may be null\n     * @return the long represented by the string, or <code>0</code> if\n     *  conversion fails\n     * @since 2.1\n     */\n    public static long toLong(String str) {\n        return toLong(str, 0L);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>long</code>, returning a\n     * default value if the conversion fails.</p>\n     *\n     * <p>If the string is <code>null</code>, the default value is returned.</p>\n     *\n     * <pre>\n     *   NumberUtils.toLong(null, 1L) = 1L\n     *   NumberUtils.toLong("", 1L)   = 1L\n     *   NumberUtils.toLong("1", 0L)  = 1L\n     * </pre>\n     *\n     * @param str  the string to convert, may be null\n     * @param defaultValue  the default value\n     * @return the long represented by the string, or the default if conversion fails\n     * @since 2.1\n     */\n    public static long toLong(String str, long defaultValue) {\n        if (str == null) {\n            return defaultValue;\n        }\n        try {\n            return Long.parseLong(str);\n        } catch (NumberFormatException nfe) {\n            return defaultValue;\n        }\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>float</code>, returning\n     * <code>0.0f</code> if the conversion fails.</p>\n     *\n     * <p>If the string <code>str</code> is <code>null</code>,\n     * <code>0.0f</code> is returned.</p>\n     *\n     * <pre>\n     *   NumberUtils.toFloat(null)   = 0.0f\n     *   NumberUtils.toFloat("")     = 0.0f\n     *   NumberUtils.toFloat("1.5")  = 1.5f\n     * </pre>\n     *\n     * @param str the string to convert, may be <code>null</code>\n     * @return the float represented by the string, or <code>0.0f</code>\n     *  if conversion fails\n     * @since 2.1\n     */\n    public static float toFloat(String str) {\n        return toFloat(str, 0.0f);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>float</code>, returning a\n     * default value if the conversion fails.</p>\n     *\n     * <p>If the string <code>str</code> is <code>null</code>, the default\n     * value is returned.</p>\n     *\n     * <pre>\n     *   NumberUtils.toFloat(null, 1.1f)   = 1.0f\n     *   NumberUtils.toFloat("", 1.1f)     = 1.1f\n     *   NumberUtils.toFloat("1.5", 0.0f)  = 1.5f\n     * </pre>\n     *\n     * @param str the string to convert, may be <code>null</code>\n     * @param defaultValue the default value\n     * @return the float represented by the string, or defaultValue\n     *  if conversion fails\n     * @since 2.1\n     */\n    public static float toFloat(String str, float defaultValue) {\n      if (str == null) {\n          return defaultValue;\n      }     \n      try {\n          return Float.parseFloat(str);\n      } catch (NumberFormatException nfe) {\n          return defaultValue;\n      }\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>double</code>, returning\n     * <code>0.0d</code> if the conversion fails.</p>\n     *\n     * <p>If the string <code>str</code> is <code>null</code>,\n     * <code>0.0d</code> is returned.</p>\n     *\n     * <pre>\n     *   NumberUtils.toDouble(null)   = 0.0d\n     *   NumberUtils.toDouble("")     = 0.0d\n     *   NumberUtils.toDouble("1.5")  = 1.5d\n     * </pre>\n     *\n     * @param str the string to convert, may be <code>null</code>\n     * @return the double represented by the string, or <code>0.0d</code>\n     *  if conversion fails\n     * @since 2.1\n     */\n    public static double toDouble(String str) {\n        return toDouble(str, 0.0d);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>double</code>, returning a\n     * default value if the conversion fails.</p>\n     *\n     * <p>If the string <code>str</code> is <code>null</code>, the default\n     * value is returned.</p>\n     *\n     * <pre>\n     *   NumberUtils.toDouble(null, 1.1d)   = 1.1d\n     *   NumberUtils.toDouble("", 1.1d)     = 1.1d\n     *   NumberUtils.toDouble("1.5", 0.0d)  = 1.5d\n     * </pre>\n     *\n     * @param str the string to convert, may be <code>null</code>\n     * @param defaultValue the default value\n     * @return the double represented by the string, or defaultValue\n     *  if conversion fails\n     * @since 2.1\n     */\n    public static double toDouble(String str, double defaultValue) {\n      if (str == null) {\n          return defaultValue;\n      }\n      try {\n          return Double.parseDouble(str);\n      } catch (NumberFormatException nfe) {\n          return defaultValue;\n      }\n    }\n\n     //-----------------------------------------------------------------------\n     /**\n     * <p>Convert a <code>String</code> to a <code>byte</code>, returning\n     * <code>zero</code> if the conversion fails.</p>\n     *\n     * <p>If the string is <code>null</code>, <code>zero</code> is returned.</p>\n     *\n     * <pre>\n     *   NumberUtils.toByte(null) = 0\n     *   NumberUtils.toByte("")   = 0\n     *   NumberUtils.toByte("1")  = 1\n     * </pre>\n     *\n     * @param str  the string to convert, may be null\n     * @return the byte represented by the string, or <code>zero</code> if\n     *  conversion fails\n     * @since 2.5\n     */\n    public static byte toByte(String str) {\n        return toByte(str, (byte) 0);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>byte</code>, returning a\n     * default value if the conversion fails.</p>\n     *\n     * <p>If the string is <code>null</code>, the default value is returned.</p>\n     *\n     * <pre>\n     *   NumberUtils.toByte(null, 1) = 1\n     *   NumberUtils.toByte("", 1)   = 1\n     *   NumberUtils.toByte("1", 0)  = 1\n     * </pre>\n     *\n     * @param str  the string to convert, may be null\n     * @param defaultValue  the default value\n     * @return the byte represented by the string, or the default if conversion fails\n     * @since 2.5\n     */\n    public static byte toByte(String str, byte defaultValue) {\n        if(str == null) {\n            return defaultValue;\n        }\n        try {\n            return Byte.parseByte(str);\n        } catch (NumberFormatException nfe) {\n            return defaultValue;\n        }\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>short</code>, returning\n     * <code>zero</code> if the conversion fails.</p>\n     *\n     * <p>If the string is <code>null</code>, <code>zero</code> is returned.</p>\n     *\n     * <pre>\n     *   NumberUtils.toShort(null) = 0\n     *   NumberUtils.toShort("")   = 0\n     *   NumberUtils.toShort("1")  = 1\n     * </pre>\n     *\n     * @param str  the string to convert, may be null\n     * @return the short represented by the string, or <code>zero</code> if\n     *  conversion fails\n     * @since 2.5\n     */\n    public static short toShort(String str) {\n        return toShort(str, (short) 0);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to an <code>short</code>, returning a\n     * default value if the conversion fails.</p>\n     *\n     * <p>If the string is <code>null</code>, the default value is returned.</p>\n     *\n     * <pre>\n     *   NumberUtils.toShort(null, 1) = 1\n     *   NumberUtils.toShort("", 1)   = 1\n     *   NumberUtils.toShort("1", 0)  = 1\n     * </pre>\n     *\n     * @param str  the string to convert, may be null\n     * @param defaultValue  the default value\n     * @return the short represented by the string, or the default if conversion fails\n     * @since 2.5\n     */\n    public static short toShort(String str, short defaultValue) {\n        if(str == null) {\n            return defaultValue;\n        }\n        try {\n            return Short.parseShort(str);\n        } catch (NumberFormatException nfe) {\n            return defaultValue;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    // must handle Long, Float, Integer, Float, Short,\n    //                  BigDecimal, BigInteger and Byte\n    // useful methods:\n    // Byte.decode(String)\n    // Byte.valueOf(String,int radix)\n    // Byte.valueOf(String)\n    // Double.valueOf(String)\n    // Float.valueOf(String)\n    // Float.valueOf(String)\n    // Integer.valueOf(String,int radix)\n    // Integer.valueOf(String)\n    // Integer.decode(String)\n    // Integer.getInteger(String)\n    // Integer.getInteger(String,int val)\n    // Integer.getInteger(String,Integer val)\n    // Integer.valueOf(String)\n    // Double.valueOf(String)\n    // new Byte(String)\n    // Long.valueOf(String)\n    // Long.getLong(String)\n    // Long.getLong(String,int)\n    // Long.getLong(String,Integer)\n    // Long.valueOf(String,int)\n    // Long.valueOf(String)\n    // Short.valueOf(String)\n    // Short.decode(String)\n    // Short.valueOf(String,int)\n    // Short.valueOf(String)\n    // new BigDecimal(String)\n    // new BigInteger(String)\n    // new BigInteger(String,int radix)\n    // Possible inputs:\n    // 45 45.5 45E7 4.5E7 Hex Oct Binary xxxF xxxD xxxf xxxd\n    // plus minus everything. Prolly more. A lot are not separable.\n\n    /**\n     * <p>Turns a string value into a java.lang.Number.</p>\n     *\n     * <p>If the string starts with <code>0x</code> or <code>-0x</code> (lower or upper case), it\n     * will be interpreted as a hexadecimal integer - or long, if the number of digits after the 0x\n     * prefix is more than 8.\n     * Values with leading <code>0</code>\'s will not be interpreted as octal.</p>\n     *\n     * <p>Then, the value is examined for a type qualifier on the end, i.e. one of\n     * <code>\'f\',\'F\',\'d\',\'D\',\'l\',\'L\'</code>.  If it is found, it starts \n     * trying to create successively larger types from the type specified\n     * until one is found that can represent the value.</p>\n     *\n     * <p>If a type specifier is not found, it will check for a decimal point\n     * and then try successively larger types from <code>Integer</code> to\n     * <code>BigInteger</code> and from <code>Float</code> to\n     * <code>BigDecimal</code>.</p>\n     *\n     * <p>Returns <code>null</code> if the string is <code>null</code>.</p>\n     *\n     * <p>This method does not trim the input string, i.e., strings with leading\n     * or trailing spaces will generate NumberFormatExceptions.</p>\n     *\n     * @param str  String containing a number, may be null\n     * @return Number created from the string (or null if the input is null)\n     * @throws NumberFormatException if the value cannot be converted\n     */\n    public static Number createNumber(String str) throws NumberFormatException {\n        if (str == null) {\n            return null;\n        }\n        if (StringUtils.isBlank(str)) {\n            throw new NumberFormatException("A blank string is not a valid number");\n        }  ', 'aftercode': '            return null;\n        }\n        if (str.startsWith("0x") || str.startsWith("-0x") || str.startsWith("0X") || str.startsWith("-0X")) {\n            int hexDigits = str.length() - 2; // drop 0x\n            if (str.startsWith("-")) { // drop -\n                hexDigits--;\n            }\n            if (hexDigits > 8) { // too many for an int\n                return createLong(str);\n            }\n            return createInteger(str);\n        }   \n        char lastChar = str.charAt(str.length() - 1);\n        String mant;\n        String dec;\n        String exp;\n        int decPos = str.indexOf(\'.\');\n        int expPos = str.indexOf(\'e\') + str.indexOf(\'E\') + 1;\n\n        if (decPos > -1) {\n\n            if (expPos > -1) {\n                if (expPos < decPos || expPos > str.length()) {\n                    throw new NumberFormatException(str + " is not a valid number.");\n                }\n                dec = str.substring(decPos + 1, expPos);\n            } else {\n                dec = str.substring(decPos + 1);\n            }\n            mant = str.substring(0, decPos);\n        } else {\n            if (expPos > -1) {\n                if (expPos > str.length()) {\n                    throw new NumberFormatException(str + " is not a valid number.");\n                }\n                mant = str.substring(0, expPos);\n            } else {\n                mant = str;\n            }\n            dec = null;\n        }\n        if (!Character.isDigit(lastChar) && lastChar != \'.\') {\n            if (expPos > -1 && expPos < str.length() - 1) {\n                exp = str.substring(expPos + 1, str.length() - 1);\n            } else {\n                exp = null;\n            }\n            //Requesting a specific type..\n            String numeric = str.substring(0, str.length() - 1);\n            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);\n            switch (lastChar) {\n                case \'l\' :\n                case \'L\' :\n                    if (dec == null\n                        && exp == null\n                        && (numeric.charAt(0) == \'-\' && isDigits(numeric.substring(1)) || isDigits(numeric))) {\n                        try {\n                            return createLong(numeric);\n                        } catch (NumberFormatException nfe) { // NOPMD\n                            // Too big for a long\n                        }\n                        return createBigInteger(numeric);\n\n                    }\n                    throw new NumberFormatException(str + " is not a valid number.");\n                case \'f\' :\n                case \'F\' :\n                    try {\n                        Float f = NumberUtils.createFloat(numeric);\n                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {\n                            //If it\'s too big for a float or the float value = 0 and the string\n                            //has non-zeros in it, then float does not have the precision we want\n                            return f;\n                        }\n\n                    } catch (NumberFormatException nfe) { // NOPMD\n                        // ignore the bad number\n                    }\n                    //$FALL-THROUGH$\n                case \'d\' :\n                case \'D\' :\n                    try {\n                        Double d = NumberUtils.createDouble(numeric);\n                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {\n                            return d;\n                        }\n                    } catch (NumberFormatException nfe) { // NOPMD\n                        // ignore the bad number\n                    }\n                    try {\n                        return createBigDecimal(numeric);\n                    } catch (NumberFormatException e) { // NOPMD\n                        // ignore the bad number\n                    }\n                    //$FALL-THROUGH$\n                default :\n                    throw new NumberFormatException(str + " is not a valid number.");\n\n            }\n        } else {\n            //User doesn\'t have a preference on the return type, so let\'s start\n            //small and go from there...\n            if (expPos > -1 && expPos < str.length() - 1) {\n                exp = str.substring(expPos + 1, str.length());\n            } else {\n                exp = null;\n            }\n            if (dec == null && exp == null) {\n                //Must be an int,long,bigint\n                try {\n                    return createInteger(str);\n                } catch (NumberFormatException nfe) { // NOPMD\n                    // ignore the bad number\n                }\n                try {\n                    return createLong(str);\n                } catch (NumberFormatException nfe) { // NOPMD\n                    // ignore the bad number\n                }\n                return createBigInteger(str);\n\n            } else {\n                //Must be a float,double,BigDec\n                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);\n                try {\n                    Float f = createFloat(str);\n                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {\n                        return f;\n                    }\n                } catch (NumberFormatException nfe) { // NOPMD\n                    // ignore the bad number\n                }\n                try {\n                    Double d = createDouble(str);\n                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {\n                        return d;\n                    }\n                } catch (NumberFormatException nfe) { // NOPMD\n                    // ignore the bad number\n                }\n\n                return createBigDecimal(str);\n\n            }\n        }\n    }\n\n    /**\n     * <p>Utility method for {@link #createNumber(java.lang.String)}.</p>\n     *\n     * <p>Returns <code>true</code> if s is <code>null</code>.</p>\n     * \n     * @param str  the String to check\n     * @return if it is all zeros or <code>null</code>\n     */\n    private static boolean isAllZeros(String str) {\n        if (str == null) {\n            return true;\n        }\n        for (int i = str.length() - 1; i >= 0; i--) {\n            if (str.charAt(i) != \'0\') {\n                return false;\n            }\n        }\n        return str.length() > 0;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Convert a <code>String</code> to a <code>Float</code>.</p>\n     *\n     * <p>Returns <code>null</code> if the string is <code>null</code>.</p>\n     * \n     * @param str  a <code>String</code> to convert, may be null\n     * @return converted <code>Float</code> (or null if the input is null)\n     * @throws NumberFormatException if the value cannot be converted\n     */\n    public static Float createFloat(String str) {\n        if (str == null) {\n            return null;\n        }\n        return Float.valueOf(str);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>Double</code>.</p>\n     * \n     * <p>Returns <code>null</code> if the string is <code>null</code>.</p>\n     *\n     * @param str  a <code>String</code> to convert, may be null\n     * @return converted <code>Double</code> (or null if the input is null)\n     * @throws NumberFormatException if the value cannot be converted\n     */\n    public static Double createDouble(String str) {\n        if (str == null) {\n            return null;\n        }\n        return Double.valueOf(str);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>Integer</code>, handling\n     * hex and octal notations.</p>\n     *\n     * <p>Returns <code>null</code> if the string is <code>null</code>.</p>\n     * \n     * @param str  a <code>String</code> to convert, may be null\n     * @return converted <code>Integer</code> (or null if the input is null)\n     * @throws NumberFormatException if the value cannot be converted\n     */\n    public static Integer createInteger(String str) {\n        if (str == null) {\n            return null;\n        }\n        // decode() handles 0xAABD and 0777 (hex and octal) as well.\n        return Integer.decode(str);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>Long</code>; \n     * since 3.1 it handles hex and octal notations.</p>\n     * \n     * <p>Returns <code>null</code> if the string is <code>null</code>.</p>\n     *\n     * @param str  a <code>String</code> to convert, may be null\n     * @return converted <code>Long</code> (or null if the input is null)\n     * @throws NumberFormatException if the value cannot be converted\n     */\n    public static Long createLong(String str) {\n        if (str == null) {\n            return null;\n        }\n        return Long.decode(str);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>BigInteger</code>.</p>\n     *\n     * <p>Returns <code>null</code> if the string is <code>null</code>.</p>\n     * \n     * @param str  a <code>String</code> to convert, may be null\n     * @return converted <code>BigInteger</code> (or null if the input is null)\n     * @throws NumberFormatException if the value cannot be converted\n     */\n    public static BigInteger createBigInteger(String str) {\n        if (str == null) {\n            return null;\n        }\n        return new BigInteger(str);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>BigDecimal</code>.</p>\n     * \n     * <p>Returns <code>null</code> if the string is <code>null</code>.</p>\n     *\n     * @param str  a <code>String</code> to convert, may be null\n     * @return converted <code>BigDecimal</code> (or null if the input is null)\n     * @throws NumberFormatException if the value cannot be converted\n     */\n    public static BigDecimal createBigDecimal(String str) {\n        if (str == null) {\n            return null;\n        }\n        // handle JDK1.3.1 bug where "" throws IndexOutOfBoundsException\n        if (StringUtils.isBlank(str)) {\n            throw new NumberFormatException("A blank string is not a valid number");\n        }\n            // this is protection for poorness in java.lang.BigDecimal.\n            // it accepts this as a legal value, but it does not appear \n            // to be in specification of class. OS X Java parses it to \n            // a wrong value.\n        return new BigDecimal(str);\n    }\n\n    // Min in array\n    //--------------------------------------------------------------------\n    /**\n     * <p>Returns the minimum value in an array.</p>\n     * \n     * @param array  an array, must not be null or empty\n     * @return the minimum value in the array\n     * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n     * @throws IllegalArgumentException if <code>array</code> is empty\n     */\n    public static long min(long[] array) {\n        // Validates input\n        if (array == null) {\n            throw new IllegalArgumentException("The Array must not be null");\n        } else if (array.length == 0) {\n            throw new IllegalArgumentException("Array cannot be empty.");\n        }\n    \n        // Finds and returns min\n        long min = array[0];\n        for (int i = 1; i < array.length; i++) {\n            if (array[i] < min) {\n                min = array[i];\n            }\n        }\n    \n        return min;\n    }\n\n    /**\n     * <p>Returns the minimum value in an array.</p>\n     * \n     * @param array  an array, must not be null or empty\n     * @return the minimum value in the array\n     * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n     * @throws IllegalArgumentException if <code>array</code> is empty\n     */\n    public static int min(int[] array) {\n        // Validates input\n        if (array == null) {\n            throw new IllegalArgumentException("The Array must not be null");\n        } else if (array.length == 0) {\n            throw new IllegalArgumentException("Array cannot be empty.");\n        }\n    \n        // Finds and returns min\n        int min = array[0];\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] < min) {\n                min = array[j];\n            }\n        }\n    \n        return min;\n    }\n\n    /**\n     * <p>Returns the minimum value in an array.</p>\n     * \n     * @param array  an array, must not be null or empty\n     * @return the minimum value in the array\n     * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n     * @throws IllegalArgumentException if <code>array</code> is empty\n     */\n    public static short min(short[] array) {\n        // Validates input\n        if (array == null) {\n            throw new IllegalArgumentException("The Array must not be null");\n        } else if (array.length == 0) {\n            throw new IllegalArgumentException("Array cannot be empty.");\n        }\n    \n        // Finds and returns min\n        short min = array[0];\n        for (int i = 1; i < array.length; i++) {\n            if (array[i] < min) {\n                min = array[i];\n            }\n        }\n    \n        return min;\n    }\n\n    /**\n     * <p>Returns the minimum value in an array.</p>\n     * \n     * @param array  an array, must not be null or empty\n     * @return the minimum value in the array\n     * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n     * @throws IllegalArgumentException if <code>array</code> is empty\n     */\n    public static byte min(byte[] array) {\n        // Validates input\n        if (array == null) {\n            throw new IllegalArgumentException("The Array must not be null");\n        } else if (array.length == 0) {\n            throw new IllegalArgumentException("Array cannot be empty.");\n        }\n    \n        // Finds and returns min\n        byte min = array[0];\n        for (int i = 1; i < array.length; i++) {\n            if (array[i] < min) {\n                min = array[i];\n            }\n        }\n    \n        return min;\n    }\n\n     /**\n     * <p>Returns the minimum value in an array.</p>\n     * \n     * @param array  an array, must not be null or empty\n     * @return the minimum value in the array\n     * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n     * @throws IllegalArgumentException if <code>array</code> is empty\n     * @see IEEE754rUtils#min(double[]) IEEE754rUtils for a version of this method that handles NaN differently\n     */\n    public static double min(double[] array) {\n        // Validates input\n        if (array == null) {\n            throw new IllegalArgumentException("The Array must not be null");\n        } else if (array.length == 0) {\n            throw new IllegalArgumentException("Array cannot be empty.");\n        }\n    \n        // Finds and returns min\n        double min = array[0];\n        for (int i = 1; i < array.length; i++) {\n            if (Double.isNaN(array[i])) {\n                return Double.NaN;\n            }\n            if (array[i] < min) {\n                min = array[i];\n            }\n        }\n    \n        return min;\n    }\n\n    /**\n     * <p>Returns the minimum value in an array.</p>\n     * \n     * @param array  an array, must not be null or empty\n     * @return the minimum value in the array\n     * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n     * @throws IllegalArgumentException if <code>array</code> is empty\n     * @see IEEE754rUtils#min(float[]) IEEE754rUtils for a version of this method that handles NaN differently\n     */\n    public static float min(float[] array) {\n        // Validates input\n        if (array == null) {\n            throw new IllegalArgumentException("The Array must not be null");\n        } else if (array.length == 0) {\n            throw new IllegalArgumentException("Array cannot be empty.");\n        }\n    \n        // Finds and returns min\n        float min = array[0];\n        for (int i = 1; i < array.length; i++) {\n            if (Float.isNaN(array[i])) {\n                return Float.NaN;\n            }\n            if (array[i] < min) {\n                min = array[i];\n            }\n        }\n    \n        return min;\n    }\n\n    // Max in array\n    //--------------------------------------------------------------------\n    /**\n     * <p>Returns the maximum value in an array.</p>\n     * \n     * @param array  an array, must not be null or empty\n     * @return the minimum value in the array\n     * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n     * @throws IllegalArgumentException if <code>array</code> is empty\n     */\n    public static long max(long[] array) {\n        // Validates input\n        if (array == null) {\n            throw new IllegalArgumentException("The Array must not be null");\n        } else if (array.length == 0) {\n            throw new IllegalArgumentException("Array cannot be empty.");\n        }\n\n        // Finds and returns max\n        long max = array[0];\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }\n\n    /**\n     * <p>Returns the maximum value in an array.</p>\n     * \n     * @param array  an array, must not be null or empty\n     * @return the minimum value in the array\n     * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n     * @throws IllegalArgumentException if <code>array</code> is empty\n     */\n    public static int max(int[] array) {\n        // Validates input\n        if (array == null) {\n            throw new IllegalArgumentException("The Array must not be null");\n        } else if (array.length == 0) {\n            throw new IllegalArgumentException("Array cannot be empty.");\n        }\n    \n        // Finds and returns max\n        int max = array[0];\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n    \n        return max;\n    }\n\n    /**\n     * <p>Returns the maximum value in an array.</p>\n     * \n     * @param array  an array, must not be null or empty\n     * @return the minimum value in the array\n     * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n     * @throws IllegalArgumentException if <code>array</code> is empty\n     */\n    public static short max(short[] array) {\n        // Validates input\n        if (array == null) {\n            throw new IllegalArgumentException("The Array must not be null");\n        } else if (array.length == 0) {\n            throw new IllegalArgumentException("Array cannot be empty.");\n        }\n    \n        // Finds and returns max\n        short max = array[0];\n        for (int i = 1; i < array.length; i++) {\n            if (array[i] > max) {\n                max = array[i];\n            }\n        }\n    \n        return max;\n    }\n\n    /**\n     * <p>Returns the maximum value in an array.</p>\n     * \n     * @param array  an array, must not be null or empty\n     * @return the minimum value in the array\n     * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n     * @throws IllegalArgumentException if <code>array</code> is empty\n     */\n    public static byte max(byte[] array) {\n        // Validates input\n        if (array == null) {\n            throw new IllegalArgumentException("The Array must not be null");\n        } else if (array.length == 0) {\n            throw new IllegalArgumentException("Array cannot be empty.");\n        }\n    \n        // Finds and returns max\n        byte max = array[0];\n        for (int i = 1; i < array.length; i++) {\n            if (array[i] > max) {\n                max = array[i];\n            }\n        }\n    \n        return max;\n    }\n\n    /**\n     * <p>Returns the maximum value in an array.</p>\n     * \n     * @param array  an array, must not be null or empty\n     * @return the minimum value in the array\n     * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n     * @throws IllegalArgumentException if <code>array</code> is empty\n     * @see IEEE754rUtils#max(double[]) IEEE754rUtils for a version of this method that handles NaN differently\n     */\n    public static double max(double[] array) {\n        // Validates input\n        if (array== null) {\n            throw new IllegalArgumentException("The Array must not be null");\n        } else if (array.length == 0) {\n            throw new IllegalArgumentException("Array cannot be empty.");\n        }\n    \n        // Finds and returns max\n        double max = array[0];\n        for (int j = 1; j < array.length; j++) {\n            if (Double.isNaN(array[j])) {\n                return Double.NaN;\n            }\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n    \n        return max;\n    }\n\n    /**\n     * <p>Returns the maximum value in an array.</p>\n     * \n     * @param array  an array, must not be null or empty\n     * @return the minimum value in the array\n     * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n     * @throws IllegalArgumentException if <code>array</code> is empty\n     * @see IEEE754rUtils#max(float[]) IEEE754rUtils for a version of this method that handles NaN differently\n     */\n    public static float max(float[] array) {\n        // Validates input\n        if (array == null) {\n            throw new IllegalArgumentException("The Array must not be null");\n        } else if (array.length == 0) {\n            throw new IllegalArgumentException("Array cannot be empty.");\n        }\n\n        // Finds and returns max\n        float max = array[0];\n        for (int j = 1; j < array.length; j++) {\n            if (Float.isNaN(array[j])) {\n                return Float.NaN;\n            }\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }\n     \n    // 3 param min\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Gets the minimum of three <code>long</code> values.</p>\n     * \n     * @param a  value 1\n     * @param b  value 2\n     * @param c  value 3\n     * @return  the smallest of the values\n     */\n    public static long min(long a, long b, long c) {\n        if (b < a) {\n            a = b;\n        }\n        if (c < a) {\n            a = c;\n        }\n        return a;\n    }\n\n    /**\n     * <p>Gets the minimum of three <code>int</code> values.</p>\n     * \n     * @param a  value 1\n     * @param b  value 2\n     * @param c  value 3\n     * @return  the smallest of the values\n     */\n    public static int min(int a, int b, int c) {\n        if (b < a) {\n            a = b;\n        }\n        if (c < a) {\n            a = c;\n        }\n        return a;\n    }\n\n    /**\n     * <p>Gets the minimum of three <code>short</code> values.</p>\n     * \n     * @param a  value 1\n     * @param b  value 2\n     * @param c  value 3\n     * @return  the smallest of the values\n     */\n    public static short min(short a, short b, short c) {\n        if (b < a) {\n            a = b;\n        }\n        if (c < a) {\n            a = c;\n        }\n        return a;\n    }\n\n    /**\n     * <p>Gets the minimum of three <code>byte</code> values.</p>\n     * \n     * @param a  value 1\n     * @param b  value 2\n     * @param c  value 3\n     * @return  the smallest of the values\n     */\n    public static byte min(byte a, byte b, byte c) {\n        if (b < a) {\n            a = b;\n        }\n        if (c < a) {\n            a = c;\n        }\n        return a;\n    }\n\n    /**\n     * <p>Gets the minimum of three <code>double</code> values.</p>\n     * \n     * <p>If any value is <code>NaN</code>, <code>NaN</code> is\n     * returned. Infinity is handled.</p>\n     * \n     * @param a  value 1\n     * @param b  value 2\n     * @param c  value 3\n     * @return  the smallest of the values\n     * @see IEEE754rUtils#min(double, double, double) for a version of this method that handles NaN differently\n     */\n    public static double min(double a, double b, double c) {\n        return Math.min(Math.min(a, b), c);\n    }\n\n    /**\n     * <p>Gets the minimum of three <code>float</code> values.</p>\n     * \n     * <p>If any value is <code>NaN</code>, <code>NaN</code> is\n     * returned. Infinity is handled.</p>\n     *\n     * @param a  value 1\n     * @param b  value 2\n     * @param c  value 3\n     * @return  the smallest of the values\n     * @see IEEE754rUtils#min(float, float, float) for a version of this method that handles NaN differently\n     */\n    public static float min(float a, float b, float c) {\n        return Math.min(Math.min(a, b), c);\n    }\n\n    // 3 param max\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Gets the maximum of three <code>long</code> values.</p>\n     * \n     * @param a  value 1\n     * @param b  value 2\n     * @param c  value 3\n     * @return  the largest of the values\n     */\n    public static long max(long a, long b, long c) {\n        if (b > a) {\n            a = b;\n        }\n        if (c > a) {\n            a = c;\n        }\n        return a;\n    }\n\n    /**\n     * <p>Gets the maximum of three <code>int</code> values.</p>\n     * \n     * @param a  value 1\n     * @param b  value 2\n     * @param c  value 3\n     * @return  the largest of the values\n     */\n    public static int max(int a, int b, int c) {\n        if (b > a) {\n            a = b;\n        }\n        if (c > a) {\n            a = c;\n        }\n        return a;\n    }\n\n    /**\n     * <p>Gets the maximum of three <code>short</code> values.</p>\n     * \n     * @param a  value 1\n     * @param b  value 2\n     * @param c  value 3\n     * @return  the largest of the values\n     */\n    public static short max(short a, short b, short c) {\n        if (b > a) {\n            a = b;\n        }\n        if (c > a) {\n            a = c;\n        }\n        return a;\n    }\n\n    /**\n     * <p>Gets the maximum of three <code>byte</code> values.</p>\n     * \n     * @param a  value 1\n     * @param b  value 2\n     * @param c  value 3\n     * @return  the largest of the values\n     */\n    public static byte max(byte a, byte b, byte c) {\n        if (b > a) {\n            a = b;\n        }\n        if (c > a) {\n            a = c;\n        }\n        return a;\n    }\n\n    /**\n     * <p>Gets the maximum of three <code>double</code> values.</p>\n     * \n     * <p>If any value is <code>NaN</code>, <code>NaN</code> is\n     * returned. Infinity is handled.</p>\n     *\n     * @param a  value 1\n     * @param b  value 2\n     * @param c  value 3\n     * @return  the largest of the values\n     * @see IEEE754rUtils#max(double, double, double) for a version of this method that handles NaN differently\n     */\n    public static double max(double a, double b, double c) {\n        return Math.max(Math.max(a, b), c);\n    }\n\n    /**\n     * <p>Gets the maximum of three <code>float</code> values.</p>\n     * \n     * <p>If any value is <code>NaN</code>, <code>NaN</code> is\n     * returned. Infinity is handled.</p>\n     *\n     * @param a  value 1\n     * @param b  value 2\n     * @param c  value 3\n     * @return  the largest of the values\n     * @see IEEE754rUtils#max(float, float, float) for a version of this method that handles NaN differently\n     */\n    public static float max(float a, float b, float c) {\n        return Math.max(Math.max(a, b), c);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Checks whether the <code>String</code> contains only\n     * digit characters.</p>\n     *\n     * <p><code>Null</code> and empty String will return\n     * <code>false</code>.</p>\n     *\n     * @param str  the <code>String</code> to check\n     * @return <code>true</code> if str contains only Unicode numeric\n     */\n    public static boolean isDigits(String str) {\n        if (StringUtils.isEmpty(str)) {\n            return false;\n        }\n        for (int i = 0; i < str.length(); i++) {\n            if (!Character.isDigit(str.charAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * <p>Checks whether the String a valid Java number.</p>\n     *\n     * <p>Valid numbers include hexadecimal marked with the <code>0x</code>\n     * qualifier, scientific notation and numbers marked with a type\n     * qualifier (e.g. 123L).</p>\n     *\n     * <p><code>Null</code> and empty String will return\n     * <code>false</code>.</p>\n     *\n     * @param str  the <code>String</code> to check\n     * @return <code>true</code> if the string is a correctly formatted number\n     */\n    public static boolean isNumber(String str) {\n        if (StringUtils.isEmpty(str)) {\n            return false;\n        }\n        char[] chars = str.toCharArray();\n        int sz = chars.length;\n        boolean hasExp = false;\n        boolean hasDecPoint = false;\n        boolean allowSigns = false;\n        boolean foundDigit = false;\n        // deal with any possible sign up front\n        int start = (chars[0] == \'-\') ? 1 : 0;\n        if (sz > start + 1 && chars[start] == \'0\' && chars[start + 1] == \'x\') {\n            int i = start + 2;\n            if (i == sz) {\n                return false; // str == "0x"\n            }\n            // checking hex (it can\'t be anything else)\n            for (; i < chars.length; i++) {\n                if ((chars[i] < \'0\' || chars[i] > \'9\')\n                    && (chars[i] < \'a\' || chars[i] > \'f\')\n                    && (chars[i] < \'A\' || chars[i] > \'F\')) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        sz--; // don\'t want to loop to the last char, check it afterwords\n              // for type qualifiers\n        int i = start;\n        // loop to the next to last char or to the last char if we need another digit to\n        // make a valid number (e.g. chars[0..5] = "1234E")\n        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {\n            if (chars[i] >= \'0\' && chars[i] <= \'9\') {\n                foundDigit = true;\n                allowSigns = false;\n\n            } else if (chars[i] == \'.\') {\n                if (hasDecPoint || hasExp) {\n                    // two decimal points or dec in exponent   \n                    return false;\n                }\n                hasDecPoint = true;\n            } else if (chars[i] == \'e\' || chars[i] == \'E\') {\n                // we\'ve already taken care of hex.\n                if (hasExp) {\n                    // two E\'s\n                    return false;\n                }\n                if (!foundDigit) {\n                    return false;\n                }\n                hasExp = true;\n                allowSigns = true;\n            } else if (chars[i] == \'+\' || chars[i] == \'-\') {\n                if (!allowSigns) {\n                    return false;\n                }\n                allowSigns = false;\n                foundDigit = false; // we need a digit after the E\n            } else {\n                return false;\n            }\n            i++;\n        }\n        if (i < chars.length) {\n            if (chars[i] >= \'0\' && chars[i] <= \'9\') {\n                // no type qualifier, OK\n                return true;\n            }\n            if (chars[i] == \'e\' || chars[i] == \'E\') {\n                // can\'t have an E at the last byte\n                return false;\n            }\n            if (chars[i] == \'.\') {\n                if (hasDecPoint || hasExp) {\n                    // two decimal points or dec in exponent\n                    return false;\n                }\n                // single trailing decimal point after non-exponent is ok\n                return foundDigit;\n            }\n            if (!allowSigns\n                && (chars[i] == \'d\'\n                    || chars[i] == \'D\'\n                    || chars[i] == \'f\'\n                    || chars[i] == \'F\')) {\n                return foundDigit;\n            }\n            if (chars[i] == \'l\'\n                || chars[i] == \'L\') {\n                // not allowing L with an exponent or decimal point\n                return foundDigit && !hasExp && !hasDecPoint;\n            }\n            // last character is illegal\n            return false;\n        }\n        // allowSigns is true iff the val ends in \'E\'\n        // found digit it to make sure weird stuff like \'.\' and \'1E-\' doesn\'t pass\n        return !allowSigns && foundDigit;\n    }\n\n}', 'tree': 'body IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer BinaryOperation operator -_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MemberReference postfix_operators --_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression MethodInvocation arguments MemberReference member str_ter ^ ^ ^ ^ member createLong_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression MethodInvocation arguments MemberReference member str_ter ^ ^ ^ ^ member createInteger_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ', 'prob': [0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 4, 4, 4, 4, 4, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 4, 4, 4, 4, 4, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 4, 4, 4, 4, 4, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 4, 4, 4, 4, 4, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 4, 4, 4, 4, 4, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 4, 4, 4, 4, 4, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 4, 4, 4, 4, 4, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'mode': 0, 'line': 452, 'isa': False, 'fl_score': 1}, {'bugid': 'Lang-7', 'treeroot': <Searchnode.Node object at 0x7f50f7f9aed0>, 'troot': <Searchnode.Node object at 0x7f50f7f9aed0>, 'oldcode': '        return new BigDecimal(str);', 'filepath': 'buggy/Lang-7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java', 'subroot': <Searchnode.Node object at 0x7f50f7fa0f90>, 'vardic': {'createBigDecimal_ter': 'meth0', 'str_ter': 'par0'}, 'typedic': {'str_ter': 'String'}, 'idss': 'Lang-7', 'classname': 'org.apache.commons.lang3.math.NumberUtils', 'precode': '/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the "License"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage org.apache.commons.lang3.math;\n\nimport java.math.BigDecimal;\nimport java.math.BigInteger;\n\nimport org.apache.commons.lang3.StringUtils;\n\n/**\n * <p>Provides extra functionality for Java Number classes.</p>\n *\n * @since 2.0\n * @version $Id$\n */\npublic class NumberUtils {\n    \n    /** Reusable Long constant for zero. */\n    public static final Long LONG_ZERO = Long.valueOf(0L);\n    /** Reusable Long constant for one. */\n    public static final Long LONG_ONE = Long.valueOf(1L);\n    /** Reusable Long constant for minus one. */\n    public static final Long LONG_MINUS_ONE = Long.valueOf(-1L);\n    /** Reusable Integer constant for zero. */\n    public static final Integer INTEGER_ZERO = Integer.valueOf(0);\n    /** Reusable Integer constant for one. */\n    public static final Integer INTEGER_ONE = Integer.valueOf(1);\n    /** Reusable Integer constant for minus one. */\n    public static final Integer INTEGER_MINUS_ONE = Integer.valueOf(-1);\n    /** Reusable Short constant for zero. */\n    public static final Short SHORT_ZERO = Short.valueOf((short) 0);\n    /** Reusable Short constant for one. */\n    public static final Short SHORT_ONE = Short.valueOf((short) 1);\n    /** Reusable Short constant for minus one. */\n    public static final Short SHORT_MINUS_ONE = Short.valueOf((short) -1);\n    /** Reusable Byte constant for zero. */\n    public static final Byte BYTE_ZERO = Byte.valueOf((byte) 0);\n    /** Reusable Byte constant for one. */\n    public static final Byte BYTE_ONE = Byte.valueOf((byte) 1);\n    /** Reusable Byte constant for minus one. */\n    public static final Byte BYTE_MINUS_ONE = Byte.valueOf((byte) -1);\n    /** Reusable Double constant for zero. */\n    public static final Double DOUBLE_ZERO = Double.valueOf(0.0d);\n    /** Reusable Double constant for one. */\n    public static final Double DOUBLE_ONE = Double.valueOf(1.0d);\n    /** Reusable Double constant for minus one. */\n    public static final Double DOUBLE_MINUS_ONE = Double.valueOf(-1.0d);\n    /** Reusable Float constant for zero. */\n    public static final Float FLOAT_ZERO = Float.valueOf(0.0f);\n    /** Reusable Float constant for one. */\n    public static final Float FLOAT_ONE = Float.valueOf(1.0f);\n    /** Reusable Float constant for minus one. */\n    public static final Float FLOAT_MINUS_ONE = Float.valueOf(-1.0f);\n\n    /**\n     * <p><code>NumberUtils</code> instances should NOT be constructed in standard programming.\n     * Instead, the class should be used as <code>NumberUtils.toInt("6");</code>.</p>\n     *\n     * <p>This constructor is public to permit tools that require a JavaBean instance\n     * to operate.</p>\n     */\n    public NumberUtils() {\n        super();\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Convert a <code>String</code> to an <code>int</code>, returning\n     * <code>zero</code> if the conversion fails.</p>\n     *\n     * <p>If the string is <code>null</code>, <code>zero</code> is returned.</p>\n     *\n     * <pre>\n     *   NumberUtils.toInt(null) = 0\n     *   NumberUtils.toInt("")   = 0\n     *   NumberUtils.toInt("1")  = 1\n     * </pre>\n     *\n     * @param str  the string to convert, may be null\n     * @return the int represented by the string, or <code>zero</code> if\n     *  conversion fails\n     * @since 2.1\n     */\n    public static int toInt(String str) {\n        return toInt(str, 0);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to an <code>int</code>, returning a\n     * default value if the conversion fails.</p>\n     *\n     * <p>If the string is <code>null</code>, the default value is returned.</p>\n     *\n     * <pre>\n     *   NumberUtils.toInt(null, 1) = 1\n     *   NumberUtils.toInt("", 1)   = 1\n     *   NumberUtils.toInt("1", 0)  = 1\n     * </pre>\n     *\n     * @param str  the string to convert, may be null\n     * @param defaultValue  the default value\n     * @return the int represented by the string, or the default if conversion fails\n     * @since 2.1\n     */\n    public static int toInt(String str, int defaultValue) {\n        if(str == null) {\n            return defaultValue;\n        }\n        try {\n            return Integer.parseInt(str);\n        } catch (NumberFormatException nfe) {\n            return defaultValue;\n        }\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>long</code>, returning\n     * <code>zero</code> if the conversion fails.</p>\n     *\n     * <p>If the string is <code>null</code>, <code>zero</code> is returned.</p>\n     *\n     * <pre>\n     *   NumberUtils.toLong(null) = 0L\n     *   NumberUtils.toLong("")   = 0L\n     *   NumberUtils.toLong("1")  = 1L\n     * </pre>\n     *\n     * @param str  the string to convert, may be null\n     * @return the long represented by the string, or <code>0</code> if\n     *  conversion fails\n     * @since 2.1\n     */\n    public static long toLong(String str) {\n        return toLong(str, 0L);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>long</code>, returning a\n     * default value if the conversion fails.</p>\n     *\n     * <p>If the string is <code>null</code>, the default value is returned.</p>\n     *\n     * <pre>\n     *   NumberUtils.toLong(null, 1L) = 1L\n     *   NumberUtils.toLong("", 1L)   = 1L\n     *   NumberUtils.toLong("1", 0L)  = 1L\n     * </pre>\n     *\n     * @param str  the string to convert, may be null\n     * @param defaultValue  the default value\n     * @return the long represented by the string, or the default if conversion fails\n     * @since 2.1\n     */\n    public static long toLong(String str, long defaultValue) {\n        if (str == null) {\n            return defaultValue;\n        }\n        try {\n            return Long.parseLong(str);\n        } catch (NumberFormatException nfe) {\n            return defaultValue;\n        }\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>float</code>, returning\n     * <code>0.0f</code> if the conversion fails.</p>\n     *\n     * <p>If the string <code>str</code> is <code>null</code>,\n     * <code>0.0f</code> is returned.</p>\n     *\n     * <pre>\n     *   NumberUtils.toFloat(null)   = 0.0f\n     *   NumberUtils.toFloat("")     = 0.0f\n     *   NumberUtils.toFloat("1.5")  = 1.5f\n     * </pre>\n     *\n     * @param str the string to convert, may be <code>null</code>\n     * @return the float represented by the string, or <code>0.0f</code>\n     *  if conversion fails\n     * @since 2.1\n     */\n    public static float toFloat(String str) {\n        return toFloat(str, 0.0f);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>float</code>, returning a\n     * default value if the conversion fails.</p>\n     *\n     * <p>If the string <code>str</code> is <code>null</code>, the default\n     * value is returned.</p>\n     *\n     * <pre>\n     *   NumberUtils.toFloat(null, 1.1f)   = 1.0f\n     *   NumberUtils.toFloat("", 1.1f)     = 1.1f\n     *   NumberUtils.toFloat("1.5", 0.0f)  = 1.5f\n     * </pre>\n     *\n     * @param str the string to convert, may be <code>null</code>\n     * @param defaultValue the default value\n     * @return the float represented by the string, or defaultValue\n     *  if conversion fails\n     * @since 2.1\n     */\n    public static float toFloat(String str, float defaultValue) {\n      if (str == null) {\n          return defaultValue;\n      }     \n      try {\n          return Float.parseFloat(str);\n      } catch (NumberFormatException nfe) {\n          return defaultValue;\n      }\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>double</code>, returning\n     * <code>0.0d</code> if the conversion fails.</p>\n     *\n     * <p>If the string <code>str</code> is <code>null</code>,\n     * <code>0.0d</code> is returned.</p>\n     *\n     * <pre>\n     *   NumberUtils.toDouble(null)   = 0.0d\n     *   NumberUtils.toDouble("")     = 0.0d\n     *   NumberUtils.toDouble("1.5")  = 1.5d\n     * </pre>\n     *\n     * @param str the string to convert, may be <code>null</code>\n     * @return the double represented by the string, or <code>0.0d</code>\n     *  if conversion fails\n     * @since 2.1\n     */\n    public static double toDouble(String str) {\n        return toDouble(str, 0.0d);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>double</code>, returning a\n     * default value if the conversion fails.</p>\n     *\n     * <p>If the string <code>str</code> is <code>null</code>, the default\n     * value is returned.</p>\n     *\n     * <pre>\n     *   NumberUtils.toDouble(null, 1.1d)   = 1.1d\n     *   NumberUtils.toDouble("", 1.1d)     = 1.1d\n     *   NumberUtils.toDouble("1.5", 0.0d)  = 1.5d\n     * </pre>\n     *\n     * @param str the string to convert, may be <code>null</code>\n     * @param defaultValue the default value\n     * @return the double represented by the string, or defaultValue\n     *  if conversion fails\n     * @since 2.1\n     */\n    public static double toDouble(String str, double defaultValue) {\n      if (str == null) {\n          return defaultValue;\n      }\n      try {\n          return Double.parseDouble(str);\n      } catch (NumberFormatException nfe) {\n          return defaultValue;\n      }\n    }\n\n     //-----------------------------------------------------------------------\n     /**\n     * <p>Convert a <code>String</code> to a <code>byte</code>, returning\n     * <code>zero</code> if the conversion fails.</p>\n     *\n     * <p>If the string is <code>null</code>, <code>zero</code> is returned.</p>\n     *\n     * <pre>\n     *   NumberUtils.toByte(null) = 0\n     *   NumberUtils.toByte("")   = 0\n     *   NumberUtils.toByte("1")  = 1\n     * </pre>\n     *\n     * @param str  the string to convert, may be null\n     * @return the byte represented by the string, or <code>zero</code> if\n     *  conversion fails\n     * @since 2.5\n     */\n    public static byte toByte(String str) {\n        return toByte(str, (byte) 0);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>byte</code>, returning a\n     * default value if the conversion fails.</p>\n     *\n     * <p>If the string is <code>null</code>, the default value is returned.</p>\n     *\n     * <pre>\n     *   NumberUtils.toByte(null, 1) = 1\n     *   NumberUtils.toByte("", 1)   = 1\n     *   NumberUtils.toByte("1", 0)  = 1\n     * </pre>\n     *\n     * @param str  the string to convert, may be null\n     * @param defaultValue  the default value\n     * @return the byte represented by the string, or the default if conversion fails\n     * @since 2.5\n     */\n    public static byte toByte(String str, byte defaultValue) {\n        if(str == null) {\n            return defaultValue;\n        }\n        try {\n            return Byte.parseByte(str);\n        } catch (NumberFormatException nfe) {\n            return defaultValue;\n        }\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>short</code>, returning\n     * <code>zero</code> if the conversion fails.</p>\n     *\n     * <p>If the string is <code>null</code>, <code>zero</code> is returned.</p>\n     *\n     * <pre>\n     *   NumberUtils.toShort(null) = 0\n     *   NumberUtils.toShort("")   = 0\n     *   NumberUtils.toShort("1")  = 1\n     * </pre>\n     *\n     * @param str  the string to convert, may be null\n     * @return the short represented by the string, or <code>zero</code> if\n     *  conversion fails\n     * @since 2.5\n     */\n    public static short toShort(String str) {\n        return toShort(str, (short) 0);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to an <code>short</code>, returning a\n     * default value if the conversion fails.</p>\n     *\n     * <p>If the string is <code>null</code>, the default value is returned.</p>\n     *\n     * <pre>\n     *   NumberUtils.toShort(null, 1) = 1\n     *   NumberUtils.toShort("", 1)   = 1\n     *   NumberUtils.toShort("1", 0)  = 1\n     * </pre>\n     *\n     * @param str  the string to convert, may be null\n     * @param defaultValue  the default value\n     * @return the short represented by the string, or the default if conversion fails\n     * @since 2.5\n     */\n    public static short toShort(String str, short defaultValue) {\n        if(str == null) {\n            return defaultValue;\n        }\n        try {\n            return Short.parseShort(str);\n        } catch (NumberFormatException nfe) {\n            return defaultValue;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    // must handle Long, Float, Integer, Float, Short,\n    //                  BigDecimal, BigInteger and Byte\n    // useful methods:\n    // Byte.decode(String)\n    // Byte.valueOf(String,int radix)\n    // Byte.valueOf(String)\n    // Double.valueOf(String)\n    // Float.valueOf(String)\n    // Float.valueOf(String)\n    // Integer.valueOf(String,int radix)\n    // Integer.valueOf(String)\n    // Integer.decode(String)\n    // Integer.getInteger(String)\n    // Integer.getInteger(String,int val)\n    // Integer.getInteger(String,Integer val)\n    // Integer.valueOf(String)\n    // Double.valueOf(String)\n    // new Byte(String)\n    // Long.valueOf(String)\n    // Long.getLong(String)\n    // Long.getLong(String,int)\n    // Long.getLong(String,Integer)\n    // Long.valueOf(String,int)\n    // Long.valueOf(String)\n    // Short.valueOf(String)\n    // Short.decode(String)\n    // Short.valueOf(String,int)\n    // Short.valueOf(String)\n    // new BigDecimal(String)\n    // new BigInteger(String)\n    // new BigInteger(String,int radix)\n    // Possible inputs:\n    // 45 45.5 45E7 4.5E7 Hex Oct Binary xxxF xxxD xxxf xxxd\n    // plus minus everything. Prolly more. A lot are not separable.\n\n    /**\n     * <p>Turns a string value into a java.lang.Number.</p>\n     *\n     * <p>If the string starts with <code>0x</code> or <code>-0x</code> (lower or upper case), it\n     * will be interpreted as a hexadecimal integer - or long, if the number of digits after the 0x\n     * prefix is more than 8.\n     * Values with leading <code>0</code>\'s will not be interpreted as octal.</p>\n     *\n     * <p>Then, the value is examined for a type qualifier on the end, i.e. one of\n     * <code>\'f\',\'F\',\'d\',\'D\',\'l\',\'L\'</code>.  If it is found, it starts \n     * trying to create successively larger types from the type specified\n     * until one is found that can represent the value.</p>\n     *\n     * <p>If a type specifier is not found, it will check for a decimal point\n     * and then try successively larger types from <code>Integer</code> to\n     * <code>BigInteger</code> and from <code>Float</code> to\n     * <code>BigDecimal</code>.</p>\n     *\n     * <p>Returns <code>null</code> if the string is <code>null</code>.</p>\n     *\n     * <p>This method does not trim the input string, i.e., strings with leading\n     * or trailing spaces will generate NumberFormatExceptions.</p>\n     *\n     * @param str  String containing a number, may be null\n     * @return Number created from the string (or null if the input is null)\n     * @throws NumberFormatException if the value cannot be converted\n     */\n    public static Number createNumber(String str) throws NumberFormatException {\n        if (str == null) {\n            return null;\n        }\n        if (StringUtils.isBlank(str)) {\n            throw new NumberFormatException("A blank string is not a valid number");\n        }  \n        if (str.startsWith("--")) {\n            return null;\n        }\n        if (str.startsWith("0x") || str.startsWith("-0x") || str.startsWith("0X") || str.startsWith("-0X")) {\n            int hexDigits = str.length() - 2; // drop 0x\n            if (str.startsWith("-")) { // drop -\n                hexDigits--;\n            }\n            if (hexDigits > 8) { // too many for an int\n                return createLong(str);\n            }\n            return createInteger(str);\n        }   \n        char lastChar = str.charAt(str.length() - 1);\n        String mant;\n        String dec;\n        String exp;\n        int decPos = str.indexOf(\'.\');\n        int expPos = str.indexOf(\'e\') + str.indexOf(\'E\') + 1;\n\n        if (decPos > -1) {\n\n            if (expPos > -1) {\n                if (expPos < decPos || expPos > str.length()) {\n                    throw new NumberFormatException(str + " is not a valid number.");\n                }\n                dec = str.substring(decPos + 1, expPos);\n            } else {\n                dec = str.substring(decPos + 1);\n            }\n            mant = str.substring(0, decPos);\n        } else {\n            if (expPos > -1) {\n                if (expPos > str.length()) {\n                    throw new NumberFormatException(str + " is not a valid number.");\n                }\n                mant = str.substring(0, expPos);\n            } else {\n                mant = str;\n            }\n            dec = null;\n        }\n        if (!Character.isDigit(lastChar) && lastChar != \'.\') {\n            if (expPos > -1 && expPos < str.length() - 1) {\n                exp = str.substring(expPos + 1, str.length() - 1);\n            } else {\n                exp = null;\n            }\n            //Requesting a specific type..\n            String numeric = str.substring(0, str.length() - 1);\n            boolean allZeros = isAllZeros(mant) && isAllZeros(exp);\n            switch (lastChar) {\n                case \'l\' :\n                case \'L\' :\n                    if (dec == null\n                        && exp == null\n                        && (numeric.charAt(0) == \'-\' && isDigits(numeric.substring(1)) || isDigits(numeric))) {\n                        try {\n                            return createLong(numeric);\n                        } catch (NumberFormatException nfe) { // NOPMD\n                            // Too big for a long\n                        }\n                        return createBigInteger(numeric);\n\n                    }\n                    throw new NumberFormatException(str + " is not a valid number.");\n                case \'f\' :\n                case \'F\' :\n                    try {\n                        Float f = NumberUtils.createFloat(numeric);\n                        if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {\n                            //If it\'s too big for a float or the float value = 0 and the string\n                            //has non-zeros in it, then float does not have the precision we want\n                            return f;\n                        }\n\n                    } catch (NumberFormatException nfe) { // NOPMD\n                        // ignore the bad number\n                    }\n                    //$FALL-THROUGH$\n                case \'d\' :\n                case \'D\' :\n                    try {\n                        Double d = NumberUtils.createDouble(numeric);\n                        if (!(d.isInfinite() || (d.floatValue() == 0.0D && !allZeros))) {\n                            return d;\n                        }\n                    } catch (NumberFormatException nfe) { // NOPMD\n                        // ignore the bad number\n                    }\n                    try {\n                        return createBigDecimal(numeric);\n                    } catch (NumberFormatException e) { // NOPMD\n                        // ignore the bad number\n                    }\n                    //$FALL-THROUGH$\n                default :\n                    throw new NumberFormatException(str + " is not a valid number.");\n\n            }\n        } else {\n            //User doesn\'t have a preference on the return type, so let\'s start\n            //small and go from there...\n            if (expPos > -1 && expPos < str.length() - 1) {\n                exp = str.substring(expPos + 1, str.length());\n            } else {\n                exp = null;\n            }\n            if (dec == null && exp == null) {\n                //Must be an int,long,bigint\n                try {\n                    return createInteger(str);\n                } catch (NumberFormatException nfe) { // NOPMD\n                    // ignore the bad number\n                }\n                try {\n                    return createLong(str);\n                } catch (NumberFormatException nfe) { // NOPMD\n                    // ignore the bad number\n                }\n                return createBigInteger(str);\n\n            } else {\n                //Must be a float,double,BigDec\n                boolean allZeros = isAllZeros(mant) && isAllZeros(exp);\n                try {\n                    Float f = createFloat(str);\n                    if (!(f.isInfinite() || (f.floatValue() == 0.0F && !allZeros))) {\n                        return f;\n                    }\n                } catch (NumberFormatException nfe) { // NOPMD\n                    // ignore the bad number\n                }\n                try {\n                    Double d = createDouble(str);\n                    if (!(d.isInfinite() || (d.doubleValue() == 0.0D && !allZeros))) {\n                        return d;\n                    }\n                } catch (NumberFormatException nfe) { // NOPMD\n                    // ignore the bad number\n                }\n\n                return createBigDecimal(str);\n\n            }\n        }\n    }\n\n    /**\n     * <p>Utility method for {@link #createNumber(java.lang.String)}.</p>\n     *\n     * <p>Returns <code>true</code> if s is <code>null</code>.</p>\n     * \n     * @param str  the String to check\n     * @return if it is all zeros or <code>null</code>\n     */\n    private static boolean isAllZeros(String str) {\n        if (str == null) {\n            return true;\n        }\n        for (int i = str.length() - 1; i >= 0; i--) {\n            if (str.charAt(i) != \'0\') {\n                return false;\n            }\n        }\n        return str.length() > 0;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Convert a <code>String</code> to a <code>Float</code>.</p>\n     *\n     * <p>Returns <code>null</code> if the string is <code>null</code>.</p>\n     * \n     * @param str  a <code>String</code> to convert, may be null\n     * @return converted <code>Float</code> (or null if the input is null)\n     * @throws NumberFormatException if the value cannot be converted\n     */\n    public static Float createFloat(String str) {\n        if (str == null) {\n            return null;\n        }\n        return Float.valueOf(str);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>Double</code>.</p>\n     * \n     * <p>Returns <code>null</code> if the string is <code>null</code>.</p>\n     *\n     * @param str  a <code>String</code> to convert, may be null\n     * @return converted <code>Double</code> (or null if the input is null)\n     * @throws NumberFormatException if the value cannot be converted\n     */\n    public static Double createDouble(String str) {\n        if (str == null) {\n            return null;\n        }\n        return Double.valueOf(str);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>Integer</code>, handling\n     * hex and octal notations.</p>\n     *\n     * <p>Returns <code>null</code> if the string is <code>null</code>.</p>\n     * \n     * @param str  a <code>String</code> to convert, may be null\n     * @return converted <code>Integer</code> (or null if the input is null)\n     * @throws NumberFormatException if the value cannot be converted\n     */\n    public static Integer createInteger(String str) {\n        if (str == null) {\n            return null;\n        }\n        // decode() handles 0xAABD and 0777 (hex and octal) as well.\n        return Integer.decode(str);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>Long</code>; \n     * since 3.1 it handles hex and octal notations.</p>\n     * \n     * <p>Returns <code>null</code> if the string is <code>null</code>.</p>\n     *\n     * @param str  a <code>String</code> to convert, may be null\n     * @return converted <code>Long</code> (or null if the input is null)\n     * @throws NumberFormatException if the value cannot be converted\n     */\n    public static Long createLong(String str) {\n        if (str == null) {\n            return null;\n        }\n        return Long.decode(str);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>BigInteger</code>.</p>\n     *\n     * <p>Returns <code>null</code> if the string is <code>null</code>.</p>\n     * \n     * @param str  a <code>String</code> to convert, may be null\n     * @return converted <code>BigInteger</code> (or null if the input is null)\n     * @throws NumberFormatException if the value cannot be converted\n     */\n    public static BigInteger createBigInteger(String str) {\n        if (str == null) {\n            return null;\n        }\n        return new BigInteger(str);\n    }\n\n    /**\n     * <p>Convert a <code>String</code> to a <code>BigDecimal</code>.</p>\n     * \n     * <p>Returns <code>null</code> if the string is <code>null</code>.</p>\n     *\n     * @param str  a <code>String</code> to convert, may be null\n     * @return converted <code>BigDecimal</code> (or null if the input is null)\n     * @throws NumberFormatException if the value cannot be converted\n     */\n    public static BigDecimal createBigDecimal(String str) {\n        if (str == null) {\n            return null;\n        }\n        // handle JDK1.3.1 bug where "" throws IndexOutOfBoundsException\n        if (StringUtils.isBlank(str)) {\n            throw new NumberFormatException("A blank string is not a valid number");\n        }\n            // this is protection for poorness in java.lang.BigDecimal.\n            // it accepts this as a legal value, but it does not appear \n            // to be in specification of class. OS X Java parses it to \n            // a wrong value.', 'aftercode': '    }\n\n    // Min in array\n    //--------------------------------------------------------------------\n    /**\n     * <p>Returns the minimum value in an array.</p>\n     * \n     * @param array  an array, must not be null or empty\n     * @return the minimum value in the array\n     * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n     * @throws IllegalArgumentException if <code>array</code> is empty\n     */\n    public static long min(long[] array) {\n        // Validates input\n        if (array == null) {\n            throw new IllegalArgumentException("The Array must not be null");\n        } else if (array.length == 0) {\n            throw new IllegalArgumentException("Array cannot be empty.");\n        }\n    \n        // Finds and returns min\n        long min = array[0];\n        for (int i = 1; i < array.length; i++) {\n            if (array[i] < min) {\n                min = array[i];\n            }\n        }\n    \n        return min;\n    }\n\n    /**\n     * <p>Returns the minimum value in an array.</p>\n     * \n     * @param array  an array, must not be null or empty\n     * @return the minimum value in the array\n     * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n     * @throws IllegalArgumentException if <code>array</code> is empty\n     */\n    public static int min(int[] array) {\n        // Validates input\n        if (array == null) {\n            throw new IllegalArgumentException("The Array must not be null");\n        } else if (array.length == 0) {\n            throw new IllegalArgumentException("Array cannot be empty.");\n        }\n    \n        // Finds and returns min\n        int min = array[0];\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] < min) {\n                min = array[j];\n            }\n        }\n    \n        return min;\n    }\n\n    /**\n     * <p>Returns the minimum value in an array.</p>\n     * \n     * @param array  an array, must not be null or empty\n     * @return the minimum value in the array\n     * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n     * @throws IllegalArgumentException if <code>array</code> is empty\n     */\n    public static short min(short[] array) {\n        // Validates input\n        if (array == null) {\n            throw new IllegalArgumentException("The Array must not be null");\n        } else if (array.length == 0) {\n            throw new IllegalArgumentException("Array cannot be empty.");\n        }\n    \n        // Finds and returns min\n        short min = array[0];\n        for (int i = 1; i < array.length; i++) {\n            if (array[i] < min) {\n                min = array[i];\n            }\n        }\n    \n        return min;\n    }\n\n    /**\n     * <p>Returns the minimum value in an array.</p>\n     * \n     * @param array  an array, must not be null or empty\n     * @return the minimum value in the array\n     * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n     * @throws IllegalArgumentException if <code>array</code> is empty\n     */\n    public static byte min(byte[] array) {\n        // Validates input\n        if (array == null) {\n            throw new IllegalArgumentException("The Array must not be null");\n        } else if (array.length == 0) {\n            throw new IllegalArgumentException("Array cannot be empty.");\n        }\n    \n        // Finds and returns min\n        byte min = array[0];\n        for (int i = 1; i < array.length; i++) {\n            if (array[i] < min) {\n                min = array[i];\n            }\n        }\n    \n        return min;\n    }\n\n     /**\n     * <p>Returns the minimum value in an array.</p>\n     * \n     * @param array  an array, must not be null or empty\n     * @return the minimum value in the array\n     * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n     * @throws IllegalArgumentException if <code>array</code> is empty\n     * @see IEEE754rUtils#min(double[]) IEEE754rUtils for a version of this method that handles NaN differently\n     */\n    public static double min(double[] array) {\n        // Validates input\n        if (array == null) {\n            throw new IllegalArgumentException("The Array must not be null");\n        } else if (array.length == 0) {\n            throw new IllegalArgumentException("Array cannot be empty.");\n        }\n    \n        // Finds and returns min\n        double min = array[0];\n        for (int i = 1; i < array.length; i++) {\n            if (Double.isNaN(array[i])) {\n                return Double.NaN;\n            }\n            if (array[i] < min) {\n                min = array[i];\n            }\n        }\n    \n        return min;\n    }\n\n    /**\n     * <p>Returns the minimum value in an array.</p>\n     * \n     * @param array  an array, must not be null or empty\n     * @return the minimum value in the array\n     * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n     * @throws IllegalArgumentException if <code>array</code> is empty\n     * @see IEEE754rUtils#min(float[]) IEEE754rUtils for a version of this method that handles NaN differently\n     */\n    public static float min(float[] array) {\n        // Validates input\n        if (array == null) {\n            throw new IllegalArgumentException("The Array must not be null");\n        } else if (array.length == 0) {\n            throw new IllegalArgumentException("Array cannot be empty.");\n        }\n    \n        // Finds and returns min\n        float min = array[0];\n        for (int i = 1; i < array.length; i++) {\n            if (Float.isNaN(array[i])) {\n                return Float.NaN;\n            }\n            if (array[i] < min) {\n                min = array[i];\n            }\n        }\n    \n        return min;\n    }\n\n    // Max in array\n    //--------------------------------------------------------------------\n    /**\n     * <p>Returns the maximum value in an array.</p>\n     * \n     * @param array  an array, must not be null or empty\n     * @return the minimum value in the array\n     * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n     * @throws IllegalArgumentException if <code>array</code> is empty\n     */\n    public static long max(long[] array) {\n        // Validates input\n        if (array == null) {\n            throw new IllegalArgumentException("The Array must not be null");\n        } else if (array.length == 0) {\n            throw new IllegalArgumentException("Array cannot be empty.");\n        }\n\n        // Finds and returns max\n        long max = array[0];\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }\n\n    /**\n     * <p>Returns the maximum value in an array.</p>\n     * \n     * @param array  an array, must not be null or empty\n     * @return the minimum value in the array\n     * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n     * @throws IllegalArgumentException if <code>array</code> is empty\n     */\n    public static int max(int[] array) {\n        // Validates input\n        if (array == null) {\n            throw new IllegalArgumentException("The Array must not be null");\n        } else if (array.length == 0) {\n            throw new IllegalArgumentException("Array cannot be empty.");\n        }\n    \n        // Finds and returns max\n        int max = array[0];\n        for (int j = 1; j < array.length; j++) {\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n    \n        return max;\n    }\n\n    /**\n     * <p>Returns the maximum value in an array.</p>\n     * \n     * @param array  an array, must not be null or empty\n     * @return the minimum value in the array\n     * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n     * @throws IllegalArgumentException if <code>array</code> is empty\n     */\n    public static short max(short[] array) {\n        // Validates input\n        if (array == null) {\n            throw new IllegalArgumentException("The Array must not be null");\n        } else if (array.length == 0) {\n            throw new IllegalArgumentException("Array cannot be empty.");\n        }\n    \n        // Finds and returns max\n        short max = array[0];\n        for (int i = 1; i < array.length; i++) {\n            if (array[i] > max) {\n                max = array[i];\n            }\n        }\n    \n        return max;\n    }\n\n    /**\n     * <p>Returns the maximum value in an array.</p>\n     * \n     * @param array  an array, must not be null or empty\n     * @return the minimum value in the array\n     * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n     * @throws IllegalArgumentException if <code>array</code> is empty\n     */\n    public static byte max(byte[] array) {\n        // Validates input\n        if (array == null) {\n            throw new IllegalArgumentException("The Array must not be null");\n        } else if (array.length == 0) {\n            throw new IllegalArgumentException("Array cannot be empty.");\n        }\n    \n        // Finds and returns max\n        byte max = array[0];\n        for (int i = 1; i < array.length; i++) {\n            if (array[i] > max) {\n                max = array[i];\n            }\n        }\n    \n        return max;\n    }\n\n    /**\n     * <p>Returns the maximum value in an array.</p>\n     * \n     * @param array  an array, must not be null or empty\n     * @return the minimum value in the array\n     * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n     * @throws IllegalArgumentException if <code>array</code> is empty\n     * @see IEEE754rUtils#max(double[]) IEEE754rUtils for a version of this method that handles NaN differently\n     */\n    public static double max(double[] array) {\n        // Validates input\n        if (array== null) {\n            throw new IllegalArgumentException("The Array must not be null");\n        } else if (array.length == 0) {\n            throw new IllegalArgumentException("Array cannot be empty.");\n        }\n    \n        // Finds and returns max\n        double max = array[0];\n        for (int j = 1; j < array.length; j++) {\n            if (Double.isNaN(array[j])) {\n                return Double.NaN;\n            }\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n    \n        return max;\n    }\n\n    /**\n     * <p>Returns the maximum value in an array.</p>\n     * \n     * @param array  an array, must not be null or empty\n     * @return the minimum value in the array\n     * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n     * @throws IllegalArgumentException if <code>array</code> is empty\n     * @see IEEE754rUtils#max(float[]) IEEE754rUtils for a version of this method that handles NaN differently\n     */\n    public static float max(float[] array) {\n        // Validates input\n        if (array == null) {\n            throw new IllegalArgumentException("The Array must not be null");\n        } else if (array.length == 0) {\n            throw new IllegalArgumentException("Array cannot be empty.");\n        }\n\n        // Finds and returns max\n        float max = array[0];\n        for (int j = 1; j < array.length; j++) {\n            if (Float.isNaN(array[j])) {\n                return Float.NaN;\n            }\n            if (array[j] > max) {\n                max = array[j];\n            }\n        }\n\n        return max;\n    }\n     \n    // 3 param min\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Gets the minimum of three <code>long</code> values.</p>\n     * \n     * @param a  value 1\n     * @param b  value 2\n     * @param c  value 3\n     * @return  the smallest of the values\n     */\n    public static long min(long a, long b, long c) {\n        if (b < a) {\n            a = b;\n        }\n        if (c < a) {\n            a = c;\n        }\n        return a;\n    }\n\n    /**\n     * <p>Gets the minimum of three <code>int</code> values.</p>\n     * \n     * @param a  value 1\n     * @param b  value 2\n     * @param c  value 3\n     * @return  the smallest of the values\n     */\n    public static int min(int a, int b, int c) {\n        if (b < a) {\n            a = b;\n        }\n        if (c < a) {\n            a = c;\n        }\n        return a;\n    }\n\n    /**\n     * <p>Gets the minimum of three <code>short</code> values.</p>\n     * \n     * @param a  value 1\n     * @param b  value 2\n     * @param c  value 3\n     * @return  the smallest of the values\n     */\n    public static short min(short a, short b, short c) {\n        if (b < a) {\n            a = b;\n        }\n        if (c < a) {\n            a = c;\n        }\n        return a;\n    }\n\n    /**\n     * <p>Gets the minimum of three <code>byte</code> values.</p>\n     * \n     * @param a  value 1\n     * @param b  value 2\n     * @param c  value 3\n     * @return  the smallest of the values\n     */\n    public static byte min(byte a, byte b, byte c) {\n        if (b < a) {\n            a = b;\n        }\n        if (c < a) {\n            a = c;\n        }\n        return a;\n    }\n\n    /**\n     * <p>Gets the minimum of three <code>double</code> values.</p>\n     * \n     * <p>If any value is <code>NaN</code>, <code>NaN</code> is\n     * returned. Infinity is handled.</p>\n     * \n     * @param a  value 1\n     * @param b  value 2\n     * @param c  value 3\n     * @return  the smallest of the values\n     * @see IEEE754rUtils#min(double, double, double) for a version of this method that handles NaN differently\n     */\n    public static double min(double a, double b, double c) {\n        return Math.min(Math.min(a, b), c);\n    }\n\n    /**\n     * <p>Gets the minimum of three <code>float</code> values.</p>\n     * \n     * <p>If any value is <code>NaN</code>, <code>NaN</code> is\n     * returned. Infinity is handled.</p>\n     *\n     * @param a  value 1\n     * @param b  value 2\n     * @param c  value 3\n     * @return  the smallest of the values\n     * @see IEEE754rUtils#min(float, float, float) for a version of this method that handles NaN differently\n     */\n    public static float min(float a, float b, float c) {\n        return Math.min(Math.min(a, b), c);\n    }\n\n    // 3 param max\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Gets the maximum of three <code>long</code> values.</p>\n     * \n     * @param a  value 1\n     * @param b  value 2\n     * @param c  value 3\n     * @return  the largest of the values\n     */\n    public static long max(long a, long b, long c) {\n        if (b > a) {\n            a = b;\n        }\n        if (c > a) {\n            a = c;\n        }\n        return a;\n    }\n\n    /**\n     * <p>Gets the maximum of three <code>int</code> values.</p>\n     * \n     * @param a  value 1\n     * @param b  value 2\n     * @param c  value 3\n     * @return  the largest of the values\n     */\n    public static int max(int a, int b, int c) {\n        if (b > a) {\n            a = b;\n        }\n        if (c > a) {\n            a = c;\n        }\n        return a;\n    }\n\n    /**\n     * <p>Gets the maximum of three <code>short</code> values.</p>\n     * \n     * @param a  value 1\n     * @param b  value 2\n     * @param c  value 3\n     * @return  the largest of the values\n     */\n    public static short max(short a, short b, short c) {\n        if (b > a) {\n            a = b;\n        }\n        if (c > a) {\n            a = c;\n        }\n        return a;\n    }\n\n    /**\n     * <p>Gets the maximum of three <code>byte</code> values.</p>\n     * \n     * @param a  value 1\n     * @param b  value 2\n     * @param c  value 3\n     * @return  the largest of the values\n     */\n    public static byte max(byte a, byte b, byte c) {\n        if (b > a) {\n            a = b;\n        }\n        if (c > a) {\n            a = c;\n        }\n        return a;\n    }\n\n    /**\n     * <p>Gets the maximum of three <code>double</code> values.</p>\n     * \n     * <p>If any value is <code>NaN</code>, <code>NaN</code> is\n     * returned. Infinity is handled.</p>\n     *\n     * @param a  value 1\n     * @param b  value 2\n     * @param c  value 3\n     * @return  the largest of the values\n     * @see IEEE754rUtils#max(double, double, double) for a version of this method that handles NaN differently\n     */\n    public static double max(double a, double b, double c) {\n        return Math.max(Math.max(a, b), c);\n    }\n\n    /**\n     * <p>Gets the maximum of three <code>float</code> values.</p>\n     * \n     * <p>If any value is <code>NaN</code>, <code>NaN</code> is\n     * returned. Infinity is handled.</p>\n     *\n     * @param a  value 1\n     * @param b  value 2\n     * @param c  value 3\n     * @return  the largest of the values\n     * @see IEEE754rUtils#max(float, float, float) for a version of this method that handles NaN differently\n     */\n    public static float max(float a, float b, float c) {\n        return Math.max(Math.max(a, b), c);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * <p>Checks whether the <code>String</code> contains only\n     * digit characters.</p>\n     *\n     * <p><code>Null</code> and empty String will return\n     * <code>false</code>.</p>\n     *\n     * @param str  the <code>String</code> to check\n     * @return <code>true</code> if str contains only Unicode numeric\n     */\n    public static boolean isDigits(String str) {\n        if (StringUtils.isEmpty(str)) {\n            return false;\n        }\n        for (int i = 0; i < str.length(); i++) {\n            if (!Character.isDigit(str.charAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * <p>Checks whether the String a valid Java number.</p>\n     *\n     * <p>Valid numbers include hexadecimal marked with the <code>0x</code>\n     * qualifier, scientific notation and numbers marked with a type\n     * qualifier (e.g. 123L).</p>\n     *\n     * <p><code>Null</code> and empty String will return\n     * <code>false</code>.</p>\n     *\n     * @param str  the <code>String</code> to check\n     * @return <code>true</code> if the string is a correctly formatted number\n     */\n    public static boolean isNumber(String str) {\n        if (StringUtils.isEmpty(str)) {\n            return false;\n        }\n        char[] chars = str.toCharArray();\n        int sz = chars.length;\n        boolean hasExp = false;\n        boolean hasDecPoint = false;\n        boolean allowSigns = false;\n        boolean foundDigit = false;\n        // deal with any possible sign up front\n        int start = (chars[0] == \'-\') ? 1 : 0;\n        if (sz > start + 1 && chars[start] == \'0\' && chars[start + 1] == \'x\') {\n            int i = start + 2;\n            if (i == sz) {\n                return false; // str == "0x"\n            }\n            // checking hex (it can\'t be anything else)\n            for (; i < chars.length; i++) {\n                if ((chars[i] < \'0\' || chars[i] > \'9\')\n                    && (chars[i] < \'a\' || chars[i] > \'f\')\n                    && (chars[i] < \'A\' || chars[i] > \'F\')) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        sz--; // don\'t want to loop to the last char, check it afterwords\n              // for type qualifiers\n        int i = start;\n        // loop to the next to last char or to the last char if we need another digit to\n        // make a valid number (e.g. chars[0..5] = "1234E")\n        while (i < sz || (i < sz + 1 && allowSigns && !foundDigit)) {\n            if (chars[i] >= \'0\' && chars[i] <= \'9\') {\n                foundDigit = true;\n                allowSigns = false;\n\n            } else if (chars[i] == \'.\') {\n                if (hasDecPoint || hasExp) {\n                    // two decimal points or dec in exponent   \n                    return false;\n                }\n                hasDecPoint = true;\n            } else if (chars[i] == \'e\' || chars[i] == \'E\') {\n                // we\'ve already taken care of hex.\n                if (hasExp) {\n                    // two E\'s\n                    return false;\n                }\n                if (!foundDigit) {\n                    return false;\n                }\n                hasExp = true;\n                allowSigns = true;\n            } else if (chars[i] == \'+\' || chars[i] == \'-\') {\n                if (!allowSigns) {\n                    return false;\n                }\n                allowSigns = false;\n                foundDigit = false; // we need a digit after the E\n            } else {\n                return false;\n            }\n            i++;\n        }\n        if (i < chars.length) {\n            if (chars[i] >= \'0\' && chars[i] <= \'9\') {\n                // no type qualifier, OK\n                return true;\n            }\n            if (chars[i] == \'e\' || chars[i] == \'E\') {\n                // can\'t have an E at the last byte\n                return false;\n            }\n            if (chars[i] == \'.\') {\n                if (hasDecPoint || hasExp) {\n                    // two decimal points or dec in exponent\n                    return false;\n                }\n                // single trailing decimal point after non-exponent is ok\n                return foundDigit;\n            }\n            if (!allowSigns\n                && (chars[i] == \'d\'\n                    || chars[i] == \'D\'\n                    || chars[i] == \'f\'\n                    || chars[i] == \'F\')) {\n                return foundDigit;\n            }\n            if (chars[i] == \'l\'\n                || chars[i] == \'L\') {\n                // not allowing L with an exponent or decimal point\n                return foundDigit && !hasExp && !hasDecPoint;\n            }\n            // last character is illegal\n            return false;\n        }\n        // allowSigns is true iff the val ends in \'E\'\n        // found digit it to make sure weird stuff like \'.\' and \'1E-\' doesn\'t pass\n        return !allowSigns && foundDigit;\n    }\n\n}', 'tree': 'MethodDeclaration modifiers public_ter ^ static_ter ^ ^ return_type ReferenceType name BigDecimal_ter ^ ^ ^ ^ name meth0 ^ ^ parameters FormalParameter type ReferenceType name String_ter ^ ^ ^ ^ name par0 ^ ^ ^ ^ body IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ', 'prob': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], 'mode': 0, 'line': 725, 'isa': False, 'fl_score': 1}]
before@0 batch0 x: 0: root ^  ; []
after@0 batch0 x: 0: root ^  ; []
before@0 batch1 x: 0: root ^  ; []
after@0 batch1 x: 0: root ^  ; []
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root member-member startsWith_ter ^ ^  ^ ^ ; ['copy-member']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root qualifier-qualifier str_ter ^ ^  ^ ^ ; ['copy-qualifier']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root member-member startsWith_ter ^ ^  ^ ^ ; ['copy-member']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
copynode 0:  root parameters ^ ^ ; ['root -> parameters']
copynode 0:  root MemberReference-MemberReference member par0 ^ ^ ^  ^ ^ ; ['copy-MemberReference']
copynode 0:  root par0 ^ ^ ; ['copy-FormalParameter']
before@1 batch0 x: -14.133199691772461: root return_type ^ ^  ; ['root -> return_type']
after@1 batch0 x: -14.133199691772461: root return_type ^ ^  ; ['root -> return_type']
before@1 batch1 x: -13.080692291259766: root par0 ^ ^  ; ['copy-FormalParameter']
after@1 batch1 x: -13.080692291259766: root par0 ^ ^  ; ['copy-FormalParameter']
copynode -0.002572922967374325:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -0.002572922967374325:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -0.002572922967374325:  root modified ^ member-member startsWith_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -0.002572922967374325:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -0.002572922967374325:  root modified ^ qualifier-qualifier str_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-qualifier']
copynode -6.1210479736328125:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -0.002572922967374325:  root modified ^ BreakStatement_ter ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter']
copynode -0.002572922967374325:  root modified ^ WhileStatement ^ ^ ; ['root -> modified', 'root -> WhileStatement']
copynode -0.002572922967374325:  root modified ^ member-member startsWith_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -6.1210479736328125:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -0.002572922967374325:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-Literal']
copynode -0.002572922967374325:  root modified ^ control ^ ^ ; ['root -> modified', 'root -> control']
copynode -8.72465991973877:  root member-member startsWith_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown']
copynode -6.1210479736328125:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -6.1210479736328125:  root add ^ WhileStatement ^ ^ ; ['root -> add', 'root -> WhileStatement']
copynode -6.1210479736328125:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -11.675119400024414:  root qualifier-qualifier str_ter ^ ^  unknown ^ ^ ^ ; ['copy-qualifier', 'start -> unknown']
copynode -6.1210479736328125:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -6.1210479736328125:  root add ^ ^ ; ['root -> add', 'root -> End']
copynode -12.585283279418945:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -12.446675300598145:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -6.1210479736328125:  root add ^ return_type ^ ^ ; ['root -> add', 'root -> return_type']
copynode -6.1210479736328125:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -6.1210479736328125:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -8.72465991973877:  root member-member startsWith_ter ^ ^  isBlank_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -8.72465991973877:  root member-member startsWith_ter ^ ^  get_ter ^ ^ ^ ; ['copy-member', 'member -> get_ter']
copynode -13.067009925842285:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -11.675119400024414:  root qualifier-qualifier str_ter ^ ^  StringUtils_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -8.72465991973877:  root member-member startsWith_ter ^ ^  meth0 ^ ^ ^ ; ['copy-member', 'member -> meth0']
copynode -8.72465991973877:  root member-member startsWith_ter ^ ^  getName_ter ^ ^ ^ ; ['copy-member', 'member -> getName_ter']
copynode -13.72244644165039:  root member-member startsWith_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown']
copynode -8.72465991973877:  root member-member startsWith_ter ^ ^  isBlank_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.446675300598145:  root StatementExpression expression MemberReference postfix_operators --_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -8.72465991973877:  root member-member startsWith_ter ^ ^  toString_ter ^ ^ ^ ; ['copy-member', 'member -> toString_ter']
copynode -11.675119400024414:  root qualifier-qualifier str_ter ^ ^  StringUtils_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -14.133199691772461:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -11.675119400024414:  root qualifier-qualifier str_ter ^ ^  StringUtils_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -8.72465991973877:  root member-member startsWith_ter ^ ^  add_ter ^ ^ ^ ; ['copy-member', 'member -> add_ter']
copynode -11.675119400024414:  root qualifier-qualifier str_ter ^ ^  StringUtils_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -8.72465991973877:  root member-member startsWith_ter ^ ^  startsWith_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -11.675119400024414:  root qualifier-qualifier str_ter ^ ^  StringUtils_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -8.72465991973877:  root member-member startsWith_ter ^ ^  debug_ter ^ ^ ^ ; ['copy-member', 'member -> debug_ter']
copynode -11.675119400024414:  root qualifier-qualifier str_ter ^ ^  StringUtils_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -11.675119400024414:  root qualifier-qualifier str_ter ^ ^  str_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -11.675119400024414:  root qualifier-qualifier str_ter ^ ^  StringUtils_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -11.675119400024414:  root qualifier-qualifier str_ter ^ ^  StringUtils_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier']
copynode -14.133199691772461:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -13.067009925842285:  root ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -13.067009925842285:  root ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -13.067009925842285:  root ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -13.067009925842285:  root ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -13.72244644165039:  root member-member startsWith_ter ^ ^  get_ter ^ ^ ^ ; ['copy-member', 'member -> get_ter']
copynode -13.72244644165039:  root member-member startsWith_ter ^ ^  meth0 ^ ^ ^ ; ['copy-member', 'member -> meth0']
copynode -13.067009925842285:  root ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -13.067009925842285:  root ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -13.067009925842285:  root ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -13.067009925842285:  root ReturnStatement expression MethodInvocation arguments MemberReference member str_ter ^ ^ ^ ^ member createInteger_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -13.067009925842285:  root ReturnStatement expression MethodInvocation arguments MemberReference member str_ter ^ ^ ^ ^ member createLong_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -13.72244644165039:  root member-member startsWith_ter ^ ^  add_ter ^ ^ ^ ; ['copy-member', 'member -> add_ter']
copynode -13.72244644165039:  root member-member startsWith_ter ^ ^  isBlank_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -13.72244644165039:  root member-member startsWith_ter ^ ^  toString_ter ^ ^ ^ ; ['copy-member', 'member -> toString_ter']
copynode -13.72244644165039:  root member-member startsWith_ter ^ ^  startsWith_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -13.72244644165039:  root member-member startsWith_ter ^ ^  getName_ter ^ ^ ^ ; ['copy-member', 'member -> getName_ter']
copynode -13.72244644165039:  root member-member startsWith_ter ^ ^  isBlank_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -13.72244644165039:  root member-member startsWith_ter ^ ^  isBlank_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.585283279418945:  root IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MemberReference postfix_operators --_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.585283279418945:  root IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression MethodInvocation arguments MemberReference member str_ter ^ ^ ^ ^ member createLong_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.585283279418945:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -12.585283279418945:  root IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.585283279418945:  root IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.585283279418945:  root IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.585283279418945:  root IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.585283279418945:  root IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.585283279418945:  root IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.446675300598145:  root StatementExpression unknown ^ ^ ^ ; ['root -> StatementExpression', 'start -> unknown']
copynode -14.133199691772461:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -14.133199691772461:  root return_type loc0 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -12.446675300598145:  root StatementExpression loc0 ^ ^ ^ ; ['root -> StatementExpression', 'copy-VariableDeclarator']
copynode -12.446675300598145:  root StatementExpression label ^ expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> label expression']
copynode -0.1616983711719513:  root modified ^ ReturnStatement ^ ^ ; ['root -> modified', 'root -> ReturnStatement']
copynode -0.1616983711719513:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -1.9067697525024414:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -1.9067697525024414:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -1.9067697525024414:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -1.9067697525024414:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -1.9067697525024414:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -1.9067697525024414:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -1.9067697525024414:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter']
copynode -0.1616983711719513:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -1.9067697525024414:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter']
copynode -1.9067697525024414:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -1.9067697525024414:  root add ^ WhileStatement ^ ^ ; ['root -> add', 'root -> WhileStatement']
copynode -9.220074653625488:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -9.233124732971191:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -0.1616983711719513:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -9.950575828552246:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -10.392523765563965:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -0.1616983711719513:  root modified ^ member-member par0 ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -0.1616983711719513:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -0.1616983711719513:  root modified ^ ReturnStatement_ter ^ ^ ; ['root -> modified', 'root -> ReturnStatement_ter']
copynode -9.233124732971191:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -11.158162117004395:  root parameters FormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter']
copynode -0.1616983711719513:  root modified ^ add ^ ^ ; ['root -> modified', 'root -> add']
copynode -11.858172416687012:  root MemberReference-MemberReference member par0 ^ ^ ^  member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member']
copynode -0.1616983711719513:  root modified ^ ContinueStatement_ter ^ ^ ; ['root -> modified', 'root -> ContinueStatement_ter']
copynode -9.220074653625488:  root ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -0.1616983711719513:  root modified ^ control ^ ^ ; ['root -> modified', 'root -> control']
copynode -11.158162117004395:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End']
copynode -11.858172416687012:  root MemberReference-MemberReference member par0 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier member']
copynode -11.858172416687012:  root MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -9.233124732971191:  root return_type ReferenceType name BigDecimal_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'copy-return_type']
copynode -11.158162117004395:  root parameters MemberReference ^ ^ ^ ; ['root -> parameters', 'parameters -> MemberReference']
copynode -11.858172416687012:  root MemberReference-MemberReference member par0 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -11.158162117004395:  root parameters InferredFormalParameter ^ ^ ^ ; ['root -> parameters', 'parameters -> InferredFormalParameter']
copynode -11.158162117004395:  root parameters FormalParameter type ReferenceType name String_ter ^ ^ ^ ^ name par0 ^ ^ ^ ^ ^ ; ['root -> parameters', 'copy-parameters']
copynode -11.858172416687012:  root MemberReference-MemberReference member par0 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> selectors member']
copynode -9.233124732971191:  root return_type par0 ^ ^ ^ ; ['root -> return_type', 'copy-FormalParameter']
copynode -10.392523765563965:  root StatementExpression par0 ^ ^ ^ ; ['root -> StatementExpression', 'copy-FormalParameter']
copynode -9.220074653625488:  root ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -11.858172416687012:  root MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -11.158162117004395:  root parameters Cast ^ ^ ^ ; ['root -> parameters', 'parameters -> Cast']
copynode -9.950575828552246:  root IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -9.220074653625488:  root ReturnStatement par0 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-FormalParameter']
copynode -9.950575828552246:  root IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -11.158162117004395:  root parameters par0 ^ ^ ^ ; ['root -> parameters', 'copy-FormalParameter']
copynode -11.858172416687012:  root MemberReference-MemberReference member par0 ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -10.392523765563965:  root StatementExpression unknown ^ ^ ^ ; ['root -> StatementExpression', 'start -> unknown']
copynode -11.858172416687012:  root MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -9.950575828552246:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -9.950575828552246:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -11.858172416687012:  root MemberReference-MemberReference member par0 ^ ^ ^  postfix_operators ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> postfix_operators selectors member']
copynode -9.220074653625488:  root ReturnStatement unknown ^ ^ ^ ; ['root -> ReturnStatement', 'start -> unknown']
copynode -9.950575828552246:  root IfStatement condition ^ then_statement ^ else_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement else_statement']
copynode -11.858172416687012:  root MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> prefix_operators qualifier selectors member']
copynode -9.950575828552246:  root IfStatement par0 ^ ^ ^ ; ['root -> IfStatement', 'copy-FormalParameter']
copynode -9.233124732971191:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -10.392523765563965:  root StatementExpression label ^ expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> label expression']
copynode -11.158162117004395:  root parameters unknown ^ ^ ^ ; ['root -> parameters', 'start -> unknown']
before@2 batch0 x: -32.985758781433105: root StatementExpression label ^ expression ^ ^ ^  ; ['root -> StatementExpression', 'StatementExpression -> label expression']
after@2 batch0 x: -32.985758781433105: root StatementExpression label ^ expression ^ ^ ^  ; ['root -> StatementExpression', 'StatementExpression -> label expression']
before@2 batch1 x: -30.552023887634277: root parameters unknown ^ ^ ^  ; ['root -> parameters', 'start -> unknown']
after@2 batch1 x: -30.552023887634277: root parameters unknown ^ ^ ^  ; ['root -> parameters', 'start -> unknown']
copynode -1.5698975613340735:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -1.8024022867903113:  root modified ^ member-member startsWith_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -4.57750406768173:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -1.8024022867903113:  root modified ^ member-member startsWith_ter ^ ^  isBlank_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -5.231551080010831:  root modified ^ qualifier-qualifier str_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown']
copynode -1.8024022867903113:  root modified ^ member-member startsWith_ter ^ ^  getName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> getName_ter']
copynode -6.519469857215881:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -6.618670373223722:  root modified ^ BreakStatement_ter ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter', 'root -> End']
copynode -1.8024022867903113:  root modified ^ member-member startsWith_ter ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> get_ter']
copynode -6.7939480831846595:  root modified ^ WhileStatement condition ^ ^ ^ ; ['root -> modified', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -6.856034188531339:  root modified ^ member-member startsWith_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -1.8024022867903113:  root modified ^ member-member startsWith_ter ^ ^  toString_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> toString_ter']
copynode -1.8024022867903113:  root modified ^ member-member startsWith_ter ^ ^  isBlank_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -1.8024022867903113:  root modified ^ member-member startsWith_ter ^ ^  startsWith_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -5.231551080010831:  root modified ^ qualifier-qualifier str_ter ^ ^  StringUtils_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -1.8024022867903113:  root modified ^ member-member startsWith_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -4.57750406768173:  root modified ^ StatementExpression expression MemberReference postfix_operators --_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -7.5871938755735755:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value']
copynode -5.231551080010831:  root modified ^ qualifier-qualifier str_ter ^ ^  StringUtils_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -7.500218987464905:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -7.944596200250089:  root modified ^ control EnhancedForControl ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl']
copynode -5.231551080010831:  root modified ^ qualifier-qualifier str_ter ^ ^  StringUtils_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -5.231551080010831:  root modified ^ qualifier-qualifier str_ter ^ ^  StringUtils_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -1.8024022867903113:  root modified ^ member-member startsWith_ter ^ ^  size_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> size_ter']
copynode -1.8024022867903113:  root modified ^ member-member startsWith_ter ^ ^  add_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> add_ter']
copynode -5.231551080010831:  root modified ^ qualifier-qualifier str_ter ^ ^  StringUtils_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -5.231551080010831:  root modified ^ qualifier-qualifier str_ter ^ ^  StringUtils_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -8.792625963687897:  root member-member startsWith_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown', 'root -> End']
copynode -7.500218987464905:  root add ^ StatementExpression expression MemberReference postfix_operators --_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -8.982988119125366:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -5.231551080010831:  root modified ^ qualifier-qualifier str_ter ^ ^  StringUtils_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -5.231551080010831:  root modified ^ qualifier-qualifier str_ter ^ ^  StringUtils_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -5.231551080010831:  root modified ^ qualifier-qualifier str_ter ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0']
copynode -6.856034188531339:  root modified ^ member-member startsWith_ter ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> get_ter']
copynode -6.856034188531339:  root modified ^ member-member startsWith_ter ^ ^  getName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> getName_ter']
copynode -8.792625963687897:  root member-member startsWith_ter ^ ^  unknown ^ ^ StatementExpression ^ ^ ; ['copy-member', 'start -> unknown', 'root -> StatementExpression']
copynode -6.856034188531339:  root modified ^ member-member startsWith_ter ^ ^  startsWith_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -6.856034188531339:  root modified ^ member-member startsWith_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -6.856034188531339:  root modified ^ member-member startsWith_ter ^ ^  isBlank_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -11.2374587059021:  root add ^ WhileStatement condition ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -6.856034188531339:  root modified ^ member-member startsWith_ter ^ ^  toString_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> toString_ter']
copynode -8.982988119125366:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.856034188531339:  root modified ^ member-member startsWith_ter ^ ^  isBlank_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -6.856034188531339:  root modified ^ member-member startsWith_ter ^ ^  isBlank_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -8.982988119125366:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.856034188531339:  root modified ^ member-member startsWith_ter ^ ^  isBlank_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -8.982988119125366:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.618670373223722:  root modified ^ BreakStatement_ter ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter', 'root -> StatementExpression']
copynode -11.936849117279053:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -7.5871938755735755:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  prefix_operators ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value']
copynode -8.792625963687897:  root member-member startsWith_ter ^ ^  unknown ^ ^ IfStatement ^ ^ ; ['copy-member', 'start -> unknown', 'root -> IfStatement']
copynode -8.982988119125366:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -7.5871938755735755:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  selectors ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> selectors value']
copynode -6.618670373223722:  root modified ^ BreakStatement_ter ^ member-member startsWith_ter ^ ^  ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter', 'copy-member']
copynode -12.29193639755249:  root qualifier-qualifier str_ter ^ ^  unknown ^ ^ ^ ; ['copy-qualifier', 'start -> unknown', 'root -> End']
copynode -12.493804454803467:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -8.982988119125366:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -8.982988119125366:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -8.982988119125366:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -12.667705118656158:  root StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -12.916847229003906:  root member-member startsWith_ter ^ ^  isBlank_ter ^ ^ ^ ; ['copy-member', 'copy-member', 'root -> End']
copynode -6.618670373223722:  root modified ^ BreakStatement_ter ^ IfStatement ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter', 'root -> IfStatement']
copynode -8.792625963687897:  root member-member startsWith_ter ^ ^  unknown ^ ^ ReturnStatement ^ ^ ; ['copy-member', 'start -> unknown', 'root -> ReturnStatement']
copynode -12.733135223388672:  root add ^ return_type ReferenceType ^ ^ ^ ; ['root -> add', 'root -> return_type', 'return_type -> ReferenceType']
copynode -13.040573596954346:  root member-member startsWith_ter ^ ^  get_ter ^ ^ ^ ; ['copy-member', 'member -> get_ter', 'root -> End']
copynode -12.864945888519287:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -12.586592219187878:  root IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -8.982988119125366:  root add ^ ReturnStatement expression MethodInvocation arguments MemberReference member str_ter ^ ^ ^ ^ member createInteger_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -13.365625381469727:  root qualifier-qualifier str_ter ^ ^  StringUtils_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -7.944596200250089:  root modified ^ control ForControl ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> ForControl']
copynode -12.810994625091553:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -13.649227619171143:  root member-member startsWith_ter ^ ^  meth0 ^ ^ ^ ; ['copy-member', 'member -> meth0', 'root -> End']
copynode -8.792625963687897:  root member-member startsWith_ter ^ ^  unknown ^ ^ ContinueStatement_ter ^ ^ ; ['copy-member', 'start -> unknown', 'root -> ContinueStatement_ter']
copynode -12.586592219187878:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -8.982988119125366:  root add ^ ReturnStatement expression MethodInvocation arguments MemberReference member str_ter ^ ^ ^ ^ member createLong_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -8.792625963687897:  root member-member startsWith_ter ^ ^  unknown ^ ^ ReturnStatement_ter ^ ^ ; ['copy-member', 'start -> unknown', 'root -> ReturnStatement_ter']
copynode -13.223474323749542:  root ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -13.870668888092041:  root member-member startsWith_ter ^ ^  getName_ter ^ ^ ^ ; ['copy-member', 'member -> getName_ter', 'root -> End']
copynode -7.5871938755735755:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  prefix_operators ^ selectors ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators selectors value']
copynode -14.01483154296875:  root member-member startsWith_ter ^ ^  isBlank_ter ^ ^ ^ ; ['copy-member', 'copy-member', 'root -> End']
copynode -13.223474323749542:  root ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -14.102899074554443:  root StatementExpression expression MemberReference postfix_operators --_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -14.16441011428833:  root member-member startsWith_ter ^ ^  toString_ter ^ ^ ^ ; ['copy-member', 'member -> toString_ter', 'root -> End']
copynode -12.864945888519287:  root add ^ LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer BinaryOperation operator -_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -12.667705118656158:  root StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -7.5871938755735755:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -12.29193639755249:  root qualifier-qualifier str_ter ^ ^  unknown ^ ^ StatementExpression ^ ^ ; ['copy-qualifier', 'start -> unknown', 'root -> StatementExpression']
copynode -1.5698975613340735:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MemberReference postfix_operators --_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'copy-IfStatement']
copynode -6.618670373223722:  root modified ^ BreakStatement_ter ^ ReturnStatement_ter ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter', 'root -> ReturnStatement_ter']
copynode -14.434202194213867:  root qualifier-qualifier str_ter ^ ^  StringUtils_ter ^ ^ ^ ; ['copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -12.29193639755249:  root qualifier-qualifier str_ter ^ ^  unknown ^ ^ IfStatement ^ ^ ; ['copy-qualifier', 'start -> unknown', 'root -> IfStatement']
copynode -6.618670373223722:  root modified ^ BreakStatement_ter ^ ReturnStatement ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter', 'root -> ReturnStatement']
copynode -1.5698975613340735:  root modified ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression MethodInvocation arguments MemberReference member str_ter ^ ^ ^ ^ member createLong_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'copy-IfStatement']
copynode -7.5871938755735755:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'copy-Literal']
copynode -13.904827892780304:  root member-member startsWith_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown', 'root -> End']
copynode -1.5698975613340735:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'copy-IfStatement']
copynode -1.5698975613340735:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'copy-IfStatement']
copynode -0.24918430298566818:  root modified ^ ReturnStatement expression ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -2.6726731657981873:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -2.6553416550159454:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -3.094307780265808:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -3.543537974357605:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -0.24918430298566818:  root modified ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -2.6553416550159454:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -3.543537974357605:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.296847343444824:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -2.6553416550159454:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -2.6553416550159454:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -6.949009895324707:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -7.256339073181152:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -7.83327579498291:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> End']
copynode -8.066533118486404:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -8.190886497497559:  root add ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> End']
copynode -8.374547004699707:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -2.6553416550159454:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -8.522215843200684:  root add ^ WhileStatement condition ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -9.249195527285337:  root ReturnStatement expression ClassCreator ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator']
copynode -7.256339073181152:  root add ^ control par0 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter']
copynode -6.296847343444824:  root add ^ ReturnStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement']
copynode -9.455529227852821:  root return_type ReferenceType name BigDecimal_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -9.249195527285337:  root ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -9.249195527285337:  root ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -9.950960233138176:  root IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -10.432486228644848:  root StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -6.949009895324707:  root add ^ LocalVariableDeclaration modifiers ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators']
copynode -9.455529227852821:  root return_type ReferenceType name BigDecimal_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -10.839348822832108:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -10.660365134477615:  root modified ^ member-member par0 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -9.950960233138176:  root IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -10.963929206132889:  root modified ^ ReturnStatement_ter ^ ^ ; ['root -> modified', 'root -> ReturnStatement_ter', 'root -> End']
copynode -6.296847343444824:  root add ^ ReturnStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression']
copynode -9.455529227852821:  root return_type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -11.188641667366028:  root return_type BasicType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'BasicType -> name']
copynode -9.455529227852821:  root return_type ReferenceType name String_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType']
copynode -9.249195527285337:  root ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -6.949009895324707:  root add ^ LocalVariableDeclaration par0 ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-FormalParameter']
copynode -7.256339073181152:  root add ^ control ForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl']
copynode -11.726992636919022:  root modified ^ add ^ ^ ; ['root -> modified', 'root -> add', 'root -> End']
copynode -7.83327579498291:  root add ^ BreakStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> IfStatement']
copynode -2.6553416550159454:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators ^ qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -11.247149266302586:  root parameters FormalParameter type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> type name']
copynode -11.247149266302586:  root parameters FormalParameter modifiers ^ type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> modifiers type name']
copynode -11.919914294034243:  root MemberReference-MemberReference member par0 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -10.432486228644848:  root StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -6.296847343444824:  root add ^ ReturnStatement_ter ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement']
copynode -9.455529227852821:  root return_type ReferenceType name ^ arguments ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name arguments']
copynode -7.83327579498291:  root add ^ BreakStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> StatementExpression']
copynode -12.395496398210526:  root modified ^ ContinueStatement_ter ^ ^ ; ['root -> modified', 'root -> ContinueStatement_ter', 'root -> End']
copynode -2.6553416550159454:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier selectors member']
copynode -10.660365134477615:  root modified ^ member-member par0 ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -9.950960233138176:  root IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -8.190886497497559:  root add ^ ContinueStatement_ter ^ IfStatement ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> IfStatement']
copynode -3.094307780265808:  root add ^ StatementExpression par0 ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-FormalParameter']
copynode -6.949009895324707:  root add ^ LocalVariableDeclaration annotations ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> annotations type declarators']
copynode -12.845024108886719:  root ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -0.24918430298566818:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -9.455529227852821:  root return_type ReferenceType name ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'ReferenceType -> name']
copynode -2.6553416550159454:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators selectors member']
copynode -13.11108973622322:  root modified ^ control EnhancedForControl ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl']
copynode -7.256339073181152:  root add ^ control ForControl_ter ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> ForControl_ter']
copynode -9.249195527285337:  root ReturnStatement expression ArrayCreator ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ArrayCreator']
copynode -10.432486228644848:  root StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -9.249195527285337:  root ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -8.190886497497559:  root add ^ ContinueStatement_ter ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> StatementExpression']
copynode -9.950960233138176:  root IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.83327579498291:  root add ^ BreakStatement_ter ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> ReturnStatement']
copynode -9.950960233138176:  root IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -2.6553416550159454:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  postfix_operators ^ selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators selectors member']
copynode -11.919914294034243:  root MemberReference-MemberReference member par0 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -3.543537974357605:  root add ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -6.296847343444824:  root add ^ ReturnStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> BreakStatement_ter']
copynode -11.726992636919022:  root modified ^ add ^ ReturnStatement ^ ^ ; ['root -> modified', 'root -> add', 'root -> ReturnStatement']
copynode -6.949009895324707:  root add ^ LocalVariableDeclaration modifiers ^ annotations ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers annotations type declarators']
copynode -8.190886497497559:  root add ^ ContinueStatement_ter ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ContinueStatement_ter', 'root -> ReturnStatement']
copynode -10.432486228644848:  root StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -6.296847343444824:  root add ^ ReturnStatement_ter ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ReturnStatement_ter']
copynode -8.374547004699707:  root add ^ AssertStatement condition ^ value ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition value']
copynode -6.296847343444824:  root add ^ ReturnStatement_ter ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> ContinueStatement_ter']
copynode -11.919914294034243:  root MemberReference-MemberReference member par0 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -13.77965235710144:  root parameters ^ ^ ; ['root -> parameters', 'parameters -> End', 'root -> End']
copynode -10.432486228644848:  root StatementExpression expression This ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -11.247149266302586:  root parameters FormalParameter annotations ^ type ^ name ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'FormalParameter -> annotations type name']
copynode -2.6726731657981873:  root add ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ then_statement BlockStatement statements ThrowStatement expression ClassCreator type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -7.83327579498291:  root add ^ BreakStatement_ter ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> BreakStatement_ter']
copynode -9.249195527285337:  root ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'copy-expression']
copynode -2.6726731657981873:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'copy-IfStatement']
copynode -13.77965235710144:  root parameters ^ ReturnStatement ^ ^ ; ['root -> parameters', 'parameters -> End', 'root -> ReturnStatement']
copynode -9.950960233138176:  root IfStatement condition This ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -11.247149266302586:  root parameters FormalParameter type ReferenceType name String_ter ^ ^ ^ ^ name par0 ^ ^ ^ ^ ^ ; ['root -> parameters', 'parameters -> FormalParameter', 'copy-FormalParameter']
copynode -9.249195527285337:  root ReturnStatement expression TernaryExpression ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression']
copynode -11.188641667366028:  root return_type BasicType name ^ dimensions ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType', 'BasicType -> name dimensions']
copynode -7.83327579498291:  root add ^ BreakStatement_ter ^ ContinueStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> ContinueStatement_ter']
copynode -9.249195527285337:  root ReturnStatement expression ClassCreator type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'copy-expression']
copynode -6.296847343444824:  root add ^ ReturnStatement_ter ^ control ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> control']
before@3 batch0 x: -14.9933842709288: root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'copy-IfStatement']
after@3 batch0 x: -14.9933842709288: root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ then_statement BlockStatement statements ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'copy-IfStatement']
before@3 batch1 x: -15.272167205810547: root add ^ ReturnStatement_ter ^ control ^ ^  ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> control']
after@3 batch1 x: -15.272167205810547: root add ^ ReturnStatement_ter ^ control ^ ^  ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> control']
copynode -1.8831771155819297:  root modified ^ member-member startsWith_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -1.570306294306647:  root modified ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -1.570306294306647:  root modified ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -4.643659039400518:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -1.570306294306647:  root modified ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -5.340558796189725:  root modified ^ member-member startsWith_ter ^ ^  isBlank_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -5.87206372525543:  root modified ^ qualifier-qualifier str_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -6.257986336015165:  root modified ^ member-member startsWith_ter ^ ^  getName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> getName_ter', 'root -> End']
copynode -1.570306294306647:  root modified ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -6.761724739335477:  root modified ^ member-member startsWith_ter ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> get_ter', 'root -> End']
copynode -7.0974859138950706:  root modified ^ member-member startsWith_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -7.134548454545438:  root modified ^ member-member startsWith_ter ^ ^  toString_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> toString_ter', 'root -> End']
copynode -7.219445972703397:  root modified ^ member-member startsWith_ter ^ ^  isBlank_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -7.25881555583328:  root modified ^ member-member startsWith_ter ^ ^  startsWith_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -7.274736552499235:  root modified ^ qualifier-qualifier str_ter ^ ^  StringUtils_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -7.360946922563016:  root modified ^ member-member startsWith_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
copynode -6.520081528287847:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -7.367008118890226:  root modified ^ StatementExpression expression MemberReference postfix_operators --_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.802208921872079:  root modified ^ WhileStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MethodInvocation']
copynode -7.615497975610197:  root modified ^ qualifier-qualifier str_ter ^ ^  StringUtils_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -6.520081528287847:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -7.614354436285794:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.802208921872079:  root modified ^ WhileStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation']
copynode -7.742354899644852:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -1.570306294306647:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -1.570306294306647:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -8.060197218321264:  root modified ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -1.570306294306647:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -1.570306294306647:  root modified ^ IfStatement condition Cast ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast']
copynode -1.570306294306647:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -8.279945760034025:  root modified ^ qualifier-qualifier str_ter ^ ^  StringUtils_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -1.570306294306647:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -8.335663228295743:  root modified ^ qualifier-qualifier str_ter ^ ^  StringUtils_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -4.643659039400518:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -8.553451805375516:  root modified ^ member-member startsWith_ter ^ ^  size_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> size_ter', 'root -> End']
copynode -6.520081528287847:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -8.849826126359403:  root modified ^ member-member startsWith_ter ^ ^  add_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> add_ter', 'root -> End']
copynode -8.862804799340665:  root modified ^ qualifier-qualifier str_ter ^ ^  StringUtils_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -8.874998479150236:  root modified ^ qualifier-qualifier str_ter ^ ^  StringUtils_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -9.071965456008911:  root add ^ StatementExpression expression MemberReference postfix_operators --_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -6.802208921872079:  root modified ^ WhileStatement condition MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MemberReference']
copynode -9.440109639428556:  root modified ^ qualifier-qualifier str_ter ^ ^  StringUtils_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -9.507370381616056:  root modified ^ qualifier-qualifier str_ter ^ ^  StringUtils_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -7.742354899644852:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -9.69112482573837:  root modified ^ qualifier-qualifier str_ter ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0', 'root -> End']
copynode -7.614354436285794:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -6.520081528287847:  root add ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -9.43937286734581:  root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -6.520081528287847:  root add ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -6.520081528287847:  root add ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -10.557322888635099:  root modified ^ member-member startsWith_ter ^ ^  get_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> get_ter', 'root -> End']
copynode -10.573502927087247:  root modified ^ member-member startsWith_ter ^ ^  getName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> getName_ter', 'root -> End']
copynode -9.43937286734581:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.520081528287847:  root add ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -7.614354436285794:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value true_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> true_ter']
copynode -7.742354899644852:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -6.520081528287847:  root add ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -10.876769840717316:  root member-member startsWith_ter ^ ^  unknown ^ ^ StatementExpression expression ^ ^ ^ ; ['copy-member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -4.643659039400518:  root modified ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -6.520081528287847:  root add ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -11.142191796563566:  root modified ^ member-member startsWith_ter ^ ^  startsWith_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.520081528287847:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -11.172955899499357:  root modified ^ member-member startsWith_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
copynode -9.43937286734581:  root add ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -11.231732278130949:  root modified ^ member-member startsWith_ter ^ ^  isBlank_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -11.258567242883146:  root modified ^ member-member startsWith_ter ^ ^  toString_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> toString_ter', 'root -> End']
copynode -7.614354436285794:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value false_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> false_ter']
copynode -11.353564739227295:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -11.505419640801847:  root modified ^ member-member startsWith_ter ^ ^  isBlank_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -11.531052499078214:  root modified ^ member-member startsWith_ter ^ ^  isBlank_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -9.071965456008911:  root add ^ StatementExpression expression MemberReference postfix_operators --_ter ^ ^ member loc0 ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> IfStatement']
copynode -11.619384288787842:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -11.675822167657316:  root modified ^ member-member startsWith_ter ^ ^  isBlank_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -4.643659039400518:  root modified ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -7.614354436285794:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value 0_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> 0_ter']
copynode -11.76664662361145:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -11.83743420150131:  root modified ^ BreakStatement_ter ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -1.8831771155819297:  root modified ^ member-member startsWith_ter ^ ^  unknown ^ ^ StatementExpression ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> StatementExpression']
copynode -4.643659039400518:  root modified ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -6.802208921872079:  root modified ^ WhileStatement condition This ^ ^ ^ ^ ; ['root -> modified', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> This']
copynode -12.125137150287628:  root member-member startsWith_ter ^ ^  unknown ^ ^ IfStatement condition ^ ^ ^ ; ['copy-member', 'start -> unknown', 'root -> IfStatement', 'IfStatement -> condition']
copynode -9.071965456008911:  root add ^ StatementExpression expression MemberReference postfix_operators --_ter ^ ^ member loc0 ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> StatementExpression']
copynode -11.25464484281838:  root add ^ WhileStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MethodInvocation']
copynode -12.161172151565552:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -12.25774899031967:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  selectors MethodInvocation ^ ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> selectors value', 'selectors -> MethodInvocation']
copynode -12.410344033502042:  root modified ^ BreakStatement_ter ^ member-member startsWith_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'root -> BreakStatement_ter', 'copy-member', 'start -> unknown']
copynode -12.096875577233732:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  prefix_operators -_ter ^ ^ value ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> prefix_operators value', 'prefix_operators -> -_ter']
copynode -11.25464484281838:  root add ^ WhileStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation']
copynode -12.690497875213623:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -12.712867021560669:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -9.071965456008911:  root add ^ StatementExpression expression MemberReference postfix_operators --_ter ^ ^ member loc0 ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> ReturnStatement']
copynode -12.837552547454834:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -11.25464484281838:  root add ^ WhileStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MemberReference']
copynode -0.2540513430722058:  root modified ^ ReturnStatement expression ClassCreator ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator']
copynode -0.2540513430722058:  root modified ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -0.2540513430722058:  root modified ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -3.1274110600352287:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -2.672912447465933:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -2.735828973352909:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -2.672912447465933:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -0.2540513430722058:  root modified ^ ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -2.735828973352909:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -2.735828973352909:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -3.6422615572810173:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -2.735828973352909:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -3.6422615572810173:  root add ^ ReturnStatement expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference']
copynode -0.2540513430722058:  root modified ^ ReturnStatement expression TernaryExpression ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression']
copynode -3.1274110600352287:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -0.2540513430722058:  root modified ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -2.672912447465933:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -0.2540513430722058:  root modified ^ ReturnStatement expression Cast ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Cast']
copynode -5.619783096015453:  root modified ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -5.914364218711853:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -2.672912447465933:  root add ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -3.6422615572810173:  root add ^ ReturnStatement expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation']
copynode -3.1274110600352287:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -3.6422615572810173:  root add ^ ReturnStatement expression ClassCreator ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator']
copynode -5.753414899110794:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier par0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -2.672912447465933:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -0.2540513430722058:  root modified ^ ReturnStatement expression ArrayCreator ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ArrayCreator']
copynode -0.2540513430722058:  root modified ^ ReturnStatement expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> SuperMethodInvocation']
copynode -0.2540513430722058:  root modified ^ ReturnStatement expression This ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This']
copynode -2.735828973352909:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -2.735828973352909:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -3.1274110600352287:  root add ^ StatementExpression expression SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation']
copynode -7.005218151956797:  root add ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -5.753414899110794:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -3.6422615572810173:  root add ^ ReturnStatement expression BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation']
copynode -3.1274110600352287:  root add ^ StatementExpression expression This ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This']
copynode -6.97175458073616:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  postfix_operators ++_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -6.9156308472156525:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators -_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter']
copynode -7.55726283788681:  root add ^ control EnhancedForControl var ^ iterable ^ ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable']
copynode -2.672912447465933:  root add ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -3.6422615572810173:  root add ^ ReturnStatement expression ArrayCreator ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ArrayCreator']
copynode -6.97175458073616:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  postfix_operators --_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> --_ter']
copynode -5.753414899110794:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier par1 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1']
copynode -2.672912447465933:  root add ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -6.9156308472156525:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators !_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -2.672912447465933:  root add ^ IfStatement condition Cast ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast']
copynode -2.735828973352909:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member meth0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> meth0']
copynode -8.453009158372879:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  selectors ArraySelector ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector']
copynode -5.753414899110794:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier StringUtils_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier']
copynode -8.073272505775094:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -2.735828973352909:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member e_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> e_ter']
copynode -3.1274110600352287:  root add ^ StatementExpression expression Cast ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast']
copynode -6.9156308472156525:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators ~_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ~_ter']
copynode -2.735828973352909:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par3']
copynode -3.6422615572810173:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'copy-expression']
copynode -3.6422615572810173:  root add ^ ReturnStatement expression This_ter ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This_ter']
copynode -8.073272505775094:  root modified ^ StatementExpression expression ClassCreator ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> ClassCreator']
copynode -8.441478550434113:  root add ^ AssertStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> BinaryOperation']
copynode -2.735828973352909:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -3.6422615572810173:  root add ^ ReturnStatement expression TernaryExpression ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression']
copynode -8.52825074782595:  root add ^ WhileStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation']
copynode -5.753414899110794:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier loc0 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc0']
copynode -5.914364218711853:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> IfStatement']
copynode -8.52825074782595:  root add ^ WhileStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MethodInvocation']
copynode -3.6422615572810173:  root add ^ ReturnStatement expression ClassCreator type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'copy-expression']
copynode -8.441478550434113:  root add ^ AssertStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MethodInvocation']
copynode -6.9156308472156525:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators ++_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> ++_ter']
copynode -3.1274110600352287:  root add ^ StatementExpression expression ClassCreator ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> ClassCreator']
copynode -8.441478550434113:  root add ^ AssertStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition', 'condition -> MemberReference']
copynode -2.672912447465933:  root add ^ IfStatement condition ClassReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> ClassReference']
copynode -8.073272505775094:  root modified ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -8.52825074782595:  root add ^ WhileStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MemberReference']
copynode -10.29967338964343:  root ReturnStatement expression ClassCreator type ^ arguments ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments']
copynode -10.478158950805664:  root add ^ ReturnStatement_ter ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> IfStatement', 'IfStatement -> condition']
copynode -8.453009158372879:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  selectors MethodInvocation ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> MethodInvocation']
copynode -5.914364218711853:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> StatementExpression']
copynode -2.672912447465933:  root add ^ IfStatement condition SuperMethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> SuperMethodInvocation']
copynode -3.1274110600352287:  root add ^ StatementExpression expression SuperConstructorInvocation_ter ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperConstructorInvocation_ter']
copynode -10.66963417455554:  root ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -10.696021630690666:  root IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -10.660437058657408:  root ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -10.411547183990479:  root add ^ control par0 ^ ^ ^ ; ['root -> add', 'root -> control', 'copy-FormalParameter', 'root -> End']
copynode -3.1274110600352287:  root add ^ StatementExpression expression BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> BinaryOperation']
copynode -6.9156308472156525:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators --_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> --_ter']
copynode -10.766461849212646:  root add ^ LocalVariableDeclaration modifiers final_ter ^ ^ type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> modifiers type declarators', 'modifiers -> final_ter']
copynode -10.628427162766457:  root return_type ReferenceType name BigDecimal_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType', 'root -> End']
copynode -10.86487378180027:  root modified ^ member-member par0 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -8.453009158372879:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  selectors MemberReference ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> MemberReference']
copynode -10.78770412504673:  root return_type ReferenceType name BigDecimal_ter ^ ^ ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType', 'copy-ReferenceType', 'root -> End']
copynode -10.755839042365551:  root StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -11.069563388824463:  root add ^ ReturnStatement_ter ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -6.97175458073616:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> End']
copynode -5.753414899110794:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier loc1 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc1']
copynode -3.1274110600352287:  root add ^ StatementExpression expression SuperConstructorInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperConstructorInvocation']
before@4 batch0 x: -12.933152290061116: root add ^ WhileStatement condition MemberReference ^ ^ ^ ^  ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MemberReference']
after@4 batch0 x: -12.933152290061116: root add ^ WhileStatement condition MemberReference ^ ^ ^ ^  ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MemberReference']
before@4 batch1 x: -11.258991412818432: root add ^ StatementExpression expression SuperConstructorInvocation ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperConstructorInvocation']
after@4 batch1 x: -11.258991412818432: root add ^ StatementExpression expression SuperConstructorInvocation ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperConstructorInvocation']
copynode -2.172731750353705:  root modified ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.507494204386603:  root modified ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.668133177794516:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.172731750353705:  root modified ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -4.892465823038947:  root modified ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -2.172731750353705:  root modified ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -2.172731750353705:  root modified ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -2.172731750353705:  root modified ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -2.172731750353705:  root modified ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -2.172731750353705:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.892465823038947:  root modified ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -6.619324200495612:  root modified ^ IfStatement condition This selectors ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors']
copynode -2.172731750353705:  root modified ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -2.172731750353705:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.892465823038947:  root modified ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -2.507494204386603:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.668133177794516:  root modified ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -2.172731750353705:  root modified ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member']
copynode -2.507494204386603:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.811819707043469:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value null_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -7.730166562658269:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.41824325080961:  root modified ^ WhileStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.82653786893934:  root modified ^ WhileStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -8.023787968500983:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -8.027869694575202:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -8.073654167994391:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.363137372594792:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -8.252212517603766:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -6.619324200495612:  root modified ^ IfStatement condition This qualifier ^ selectors ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> qualifier selectors']
copynode -7.982224613428116:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -8.319091790064704:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -8.202615254267585:  root modified ^ IfStatement condition Cast type ^ expression ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast', 'Cast -> type expression']
copynode -8.524675770662725:  root modified ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -4.668133177794516:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -8.83988095150562:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -7.363137372594792:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.619324200495612:  root modified ^ IfStatement condition This prefix_operators ^ selectors ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> prefix_operators selectors']
copynode -9.327401897870004:  root modified ^ WhileStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -4.668133177794516:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -9.597670704126358:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -4.668133177794516:  root modified ^ StatementExpression expression MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.41824325080961:  root modified ^ WhileStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.668133177794516:  root modified ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.363137372594792:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -10.067715470679104:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value <string>_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> <string>_ter', 'root -> End']
copynode -7.982224613428116:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.892465823038947:  root modified ^ IfStatement condition MemberReference prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators qualifier member']
copynode -10.255000680685043:  root add ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -7.363137372594792:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -10.237109907728154:  root add ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.363137372594792:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -10.366578825574834:  root add ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -10.574611276388168:  root add ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -7.982224613428116:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.41824325080961:  root modified ^ WhileStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.363137372594792:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -8.83988095150562:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -7.41824325080961:  root modified ^ WhileStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -10.722880189307034:  root modified ^ Literal-Literal value <string>_ter ^ ^ ^  value true_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-Literal', 'Literal -> value', 'value -> true_ter', 'root -> End']
copynode -10.446399458509404:  root add ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -4.892465823038947:  root modified ^ IfStatement condition MemberReference selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> selectors member']
copynode -7.363137372594792:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -8.069081478752196:  root modified ^ control EnhancedForControl var VariableDeclaration ^ ^ iterable ^ ^ ^ ^ ; ['root -> modified', 'root -> control', 'control -> EnhancedForControl', 'EnhancedForControl -> var iterable', 'var -> VariableDeclaration']
copynode -7.41824325080961:  root modified ^ WhileStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -10.641918190580327:  root add ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -4.668133177794516:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -4.668133177794516:  root modified ^ StatementExpression expression MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -10.867381364107132:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -7.982224613428116:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -7.730166562658269:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -10.999313831329346:  root member-member startsWith_ter ^ ^  unknown ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['copy-member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -0.5834093843586743:  root modified ^ ReturnStatement expression ClassCreator type ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments']
copynode -2.2669876967556775:  root modified ^ ReturnStatement expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.6690799151547253:  root modified ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -3.5074107337131863:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.5443129912018776:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -3.4311796352267265:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.2669876967556775:  root modified ^ ReturnStatement expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -0.5834093843586743:  root modified ^ ReturnStatement expression ClassCreator type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type']
copynode -4.279870167840272:  root modified ^ ReturnStatement expression BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.457732774317265:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -4.489329911768436:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -4.517917029559612:  root add ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -3.580757825387991:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.597850419580936:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -4.698884144891053:  root modified ^ ReturnStatement expression TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -4.669053487479687:  root add ^ ReturnStatement expression MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member']
copynode -4.908032111823559:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -4.965074673760682:  root modified ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -5.13368620024994:  root modified ^ ReturnStatement expression Cast type ^ expression ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Cast', 'Cast -> type expression']
copynode -0.5834093843586743:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'copy-ClassCreator']
copynode -3.4311796352267265:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -0.5834093843586743:  root modified ^ ReturnStatement expression ClassCreator selectors ^ type ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> selectors type arguments']
copynode -3.580757825387991:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -0.5834093843586743:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'copy-ClassCreator']
copynode -2.6690799151547253:  root modified ^ ReturnStatement expression MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.097491114152945:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -3.4311796352267265:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.097491114152945:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -3.580757825387991:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -3.4311796352267265:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -2.2669876967556775:  root modified ^ ReturnStatement expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.580757825387991:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.161886863410473:  root add ^ StatementExpression expression MemberReference postfix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member']
copynode -3.580757825387991:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.580757825387991:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -6.014821343123913:  root add ^ ReturnStatement expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.334367781877518:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -6.309384636580944:  root add ^ ReturnStatement expression ClassCreator type ^ arguments ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments']
copynode -6.6257382784970105:  root modified ^ ReturnStatement expression This selectors ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This', 'This -> selectors']
copynode -3.580757825387991:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -0.5834093843586743:  root modified ^ ReturnStatement expression ClassCreator selectors ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> selectors type']
copynode -6.003868191255606:  root add ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -6.802217103540897:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par2', 'root -> End']
copynode -3.580757825387991:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -6.884431459009647:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -6.558545247185975:  root modified ^ ReturnStatement expression SuperMethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> arguments member']
copynode -6.50110735045746:  root modified ^ ReturnStatement expression ArrayCreator type ^ dimensions ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ArrayCreator', 'ArrayCreator -> type dimensions initializer']
copynode -6.404827206148184:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> ReturnStatement']
copynode -6.003868191255606:  root add ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> ReturnStatement']
copynode -2.2669876967556775:  root modified ^ ReturnStatement expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -2.2669876967556775:  root modified ^ ReturnStatement expression MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -2.2669876967556775:  root modified ^ ReturnStatement expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -3.580757825387991:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member']
copynode -2.2669876967556775:  root modified ^ ReturnStatement expression MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -7.2679591700434685:  root add ^ ReturnStatement expression BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.318777732551098:  root add ^ StatementExpression expression This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> This', 'This -> selectors']
copynode -4.669053487479687:  root add ^ ReturnStatement expression MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> qualifier member']
copynode -2.2669876967556775:  root modified ^ ReturnStatement expression MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -7.337601751089096:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  postfix_operators ++_ter ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter', 'member -> par0']
copynode -3.580757825387991:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -6.50110735045746:  root modified ^ ReturnStatement expression ArrayCreator type ^ dimensions ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ArrayCreator', 'ArrayCreator -> type dimensions']
copynode -6.404827206148184:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> End']
copynode -7.450895816087723:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators -_ter ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> par0']
copynode -6.912188224494457:  root add ^ StatementExpression expression SuperMethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> member']
copynode -6.912188224494457:  root add ^ StatementExpression expression SuperMethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> arguments member']
copynode -6.558545247185975:  root modified ^ ReturnStatement expression SuperMethodInvocation member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> member']
copynode -7.012861122842878:  root add ^ LocalVariableDeclaration type ReferenceType name BigDecimal_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -6.014821343123913:  root add ^ ReturnStatement expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.014821343123913:  root add ^ ReturnStatement expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.097491114152945:  root add ^ IfStatement condition MemberReference qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.850281565202749:  root add ^ IfStatement condition This selectors ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors']
copynode -3.4311796352267265:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -6.309384636580944:  root add ^ ReturnStatement expression ClassCreator type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type']
copynode -7.012861122842878:  root add ^ LocalVariableDeclaration type ReferenceType name BigDecimal_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -7.012861122842878:  root add ^ LocalVariableDeclaration type ReferenceType name String_ter ^ ^ ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -8.37763026356697:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par1', 'start -> unknown']
copynode -3.4311796352267265:  root add ^ StatementExpression expression MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -8.30643942952156:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  postfix_operators --_ter ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> --_ter', 'member -> par0']
copynode -6.003868191255606:  root add ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> IfStatement']
copynode -8.632220841944218:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member meth0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> meth0', 'root -> End']
copynode -7.9958949610590935:  root add ^ ReturnStatement expression ArrayCreator type ^ dimensions ^ initializer ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ArrayCreator', 'ArrayCreator -> type dimensions initializer']
copynode -8.53356221318245:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators !_ter ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> par0']
copynode -6.003868191255606:  root add ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> StatementExpression']
copynode -3.5074107337131863:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -8.70934346318245:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  selectors ArraySelector index ^ ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member', 'selectors -> ArraySelector', 'ArraySelector -> index']
copynode -7.9958949610590935:  root add ^ ReturnStatement expression ArrayCreator type ^ dimensions ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ArrayCreator', 'ArrayCreator -> type dimensions']
copynode -4.279870167840272:  root modified ^ ReturnStatement expression BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'copy-BinaryOperation']
copynode -8.906917192041874:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member e_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> e_ter', 'root -> End']
copynode -8.71823337674141:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier StringUtils_ter ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -3.4311796352267265:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -8.560410349382437:  root add ^ IfStatement condition Cast type ^ expression ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast', 'Cast -> type expression']
copynode -8.930788688361645:  root add ^ StatementExpression expression Cast type ^ expression ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Cast', 'Cast -> type expression']
copynode -8.413037149919546:  root add ^ IfStatement condition Literal selectors ^ value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal', 'Literal -> selectors value']
copynode -9.059218980371952:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par3', 'root -> End']
before@5 batch0 x: -11.077054306864738: root member-member startsWith_ter ^ ^  unknown ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^  ; ['copy-member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
after@5 batch0 x: -11.077054306864738: root member-member startsWith_ter ^ ^  unknown ^ ^ StatementExpression expression MethodInvocation ^ ^ ^ ^  ; ['copy-member', 'start -> unknown', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
before@5 batch1 x: -9.059619305684464: root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par3 ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par3', 'root -> End']
after@5 batch1 x: -9.059619305684464: root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  member par3 ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> par3', 'root -> End']
copynode -2.5208117409492843:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -2.5208117409492843:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -2.4481786123360507:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -2.4481786123360507:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -2.4481786123360507:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -4.798346870287787:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -2.4481786123360507:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -2.4481786123360507:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -2.4481786123360507:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.148636840924155:  root modified ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -2.4481786123360507:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -2.4481786123360507:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -2.4481786123360507:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -2.4481786123360507:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -2.5208117409492843:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -6.450706832751166:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -4.77487173024565:  root modified ^ StatementExpression expression MethodInvocation qualifier StringUtils_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -2.5208117409492843:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -4.77487173024565:  root modified ^ StatementExpression expression MethodInvocation qualifier str_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.77487173024565:  root modified ^ StatementExpression expression MethodInvocation qualifier str_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.77487173024565:  root modified ^ StatementExpression expression MethodInvocation qualifier str_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -7.193440788134467:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -7.217159622057807:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -6.865708225115668:  root modified ^ IfStatement condition MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -4.77487173024565:  root modified ^ StatementExpression expression MethodInvocation qualifier str_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.77487173024565:  root modified ^ StatementExpression expression MethodInvocation qualifier str_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.944993578537833:  root modified ^ IfStatement condition This selectors MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MethodInvocation']
copynode -5.544680707796942:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -7.463051789149176:  root modified ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -7.519168131693732:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -4.77487173024565:  root modified ^ StatementExpression expression MethodInvocation qualifier str_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.760547035082709:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown']
copynode -7.659782760485541:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier selectors member', 'prefix_operators -> !_ter']
copynode -7.690589182719123:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -5.544680707796942:  root modified ^ IfStatement condition MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -6.2050765684689395:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier']
copynode -6.008083694323432:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -5.544680707796942:  root modified ^ IfStatement condition MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.760547035082709:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier']
copynode -5.760547035082709:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier']
copynode -4.77487173024565:  root modified ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -4.77487173024565:  root modified ^ StatementExpression expression MethodInvocation qualifier str_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.77487173024565:  root modified ^ StatementExpression expression MethodInvocation qualifier str_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.944993578537833:  root modified ^ IfStatement condition This selectors MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -6.008083694323432:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -6.008083694323432:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -2.5208117409492843:  root modified ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -5.544680707796942:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member str_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -8.332623042806517:  root modified ^ IfStatement condition Cast type ReferenceType ^ ^ expression ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast', 'Cast -> type expression', 'type -> ReferenceType']
copynode -6.2050765684689395:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier']
copynode -2.5208117409492843:  root modified ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -5.760547035082709:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier']
copynode -7.851854492910206:  root modified ^ WhileStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.760547035082709:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier']
copynode -8.524925962643465:  root modified ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -5.760547035082709:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier']
copynode -7.812503420573194:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.2050765684689395:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier']
copynode -7.851854492910206:  root modified ^ WhileStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> WhileStatement', 'WhileStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -6.2050765684689395:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'start -> unknown']
copynode -6.008083694323432:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -6.008083694323432:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -5.760547035082709:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier']
copynode -6.2050765684689395:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier']
copynode -6.008083694323432:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -5.544680707796942:  root modified ^ IfStatement condition MethodInvocation arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> Literal']
copynode -5.760547035082709:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier']
copynode -5.544680707796942:  root modified ^ IfStatement condition MethodInvocation arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.2050765684689395:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier']
copynode -5.760547035082709:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier']
copynode -5.760547035082709:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier']
copynode -6.2050765684689395:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier']
copynode -0.6412350055761635:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType ^ ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType']
copynode -2.559770927298814:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -2.7146009844727814:  root modified ^ ReturnStatement expression MemberReference member par0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.138918474782258:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType']
copynode -3.516046420423663:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -3.9350265418179333:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -3.8539099618792534:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -4.292992922011763:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -4.523376551456749:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -2.559770927298814:  root modified ^ ReturnStatement expression MethodInvocation qualifier StringUtils_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -4.908233834299608:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -3.516046420423663:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -4.531411259187735:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -4.968860886059701:  root modified ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -4.701582209672779:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation']
copynode -5.204029962886125:  root modified ^ ReturnStatement expression Cast type ReferenceType ^ ^ expression ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Cast', 'Cast -> type expression', 'type -> ReferenceType']
copynode -5.2094746385701:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'copy-ClassCreator', 'root -> End']
copynode -4.749195829033852:  root add ^ ReturnStatement expression MemberReference member par0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.8539099618792534:  root add ^ StatementExpression expression MethodInvocation qualifier StringUtils_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -5.3771672998555005:  root modified ^ ReturnStatement expression ClassCreator selectors MethodInvocation ^ ^ type ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation']
copynode -5.564214781392366:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'copy-ClassCreator', 'root -> End']
copynode -2.7146009844727814:  root modified ^ ReturnStatement expression MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -3.9350265418179333:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -5.527396409524954:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -2.559770927298814:  root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -5.91684558869747:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -5.937304704202688:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -4.749195829033852:  root add ^ ReturnStatement expression MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -3.8539099618792534:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -6.0409465953707695:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.798320189584047:  root modified ^ ReturnStatement expression MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -3.516046420423663:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.246671073138714:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.84010717154888:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.531411259187735:  root add ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.225787131799734:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.531411259187735:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -3.516046420423663:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -6.423123567117727:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -6.449466645717621:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -3.516046420423663:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -5.86628495901823:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -4.701582209672779:  root modified ^ ReturnStatement expression TernaryExpression condition MemberReference ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MemberReference']
copynode -6.500647850334644:  root add ^ ReturnStatement expression ClassCreator type ReferenceType ^ ^ arguments ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType']
copynode -6.058311835397035:  root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -4.701582209672779:  root modified ^ ReturnStatement expression TernaryExpression condition MethodInvocation ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MethodInvocation']
copynode -3.9350265418179333:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.246671073138714:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.708001688588411:  root modified ^ ReturnStatement expression ClassCreator selectors MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> selectors type', 'selectors -> MethodInvocation']
copynode -4.749195829033852:  root add ^ ReturnStatement expression MemberReference member par1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -5.246671073138714:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.8169774699345:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter']
copynode -6.244043231010437:  root add ^ StatementExpression expression MemberReference postfix_operators ++_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -6.438473932445049:  root add ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -3.516046420423663:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter']
copynode -2.7146009844727814:  root modified ^ ReturnStatement expression MemberReference member par1 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -6.961627915967256:  root modified ^ ReturnStatement expression ArrayCreator type ReferenceType ^ ^ dimensions ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> ReferenceType']
copynode -6.646330297458917:  root modified ^ ReturnStatement expression This selectors MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -6.9278360162861645:  root modified ^ ReturnStatement expression SuperMethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> arguments member', 'copy-arguments']
copynode -2.559770927298814:  root modified ^ ReturnStatement expression MethodInvocation qualifier LOG_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> LOG_ter']
copynode -6.6962234664097195:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0']
copynode -6.994835272897035:  root modified ^ ReturnStatement expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.082412139046937:  root modified ^ ReturnStatement expression MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -6.358864753259695:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -3.9350265418179333:  root modified ^ ReturnStatement expression MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -4.292992922011763:  root modified ^ ReturnStatement expression BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -6.965319542898214:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.158701865686453:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -6.244043231010437:  root add ^ StatementExpression expression MemberReference postfix_operators --_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> --_ter']
copynode -6.058311835397035:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -6.968737154020346:  root add ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -5.86628495901823:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -4.968860886059701:  root modified ^ ReturnStatement expression Literal value <string>_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -2.559770927298814:  root modified ^ ReturnStatement expression MethodInvocation qualifier par1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par1']
copynode -5.798320189584047:  root modified ^ ReturnStatement expression MemberReference qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0']
copynode -5.84010717154888:  root add ^ IfStatement condition MemberReference member par0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -2.559770927298814:  root modified ^ ReturnStatement expression MethodInvocation qualifier Math_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> Math_ter']
copynode -7.46552123175934:  root modified ^ ReturnStatement expression MethodInvocation selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation']
copynode -4.523376551456749:  root add ^ ReturnStatement expression Literal value <string>_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -5.527396409524954:  root add ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -7.288009062875062:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'start -> unknown']
copynode -7.553231656551361:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  postfix_operators ++_ter ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter', 'member -> par0', 'root -> End']
copynode -7.0953239356167614:  root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0']
copynode -7.402588538825512:  root add ^ ReturnStatement expression MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -3.8539099618792534:  root add ^ StatementExpression expression MethodInvocation qualifier par1 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par1']
copynode -7.617317215073854:  root modified ^ ReturnStatement expression ArrayCreator type ReferenceType ^ ^ dimensions ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ArrayCreator', 'ArrayCreator -> type dimensions', 'type -> ReferenceType']
copynode -7.620289176702499:  root modified ^ MemberReference-MemberReference member par0 ^ ^ ^  prefix_operators -_ter ^ ^ member par0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter', 'member -> par0', 'root -> End']
copynode -4.292992922011763:  root modified ^ ReturnStatement expression BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -7.290748879313469:  root add ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
before@6 batch0 x: -9.093550794466864: root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier']
after@6 batch0 x: -9.093550794466864: root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier']
before@6 batch1 x: -7.630886599421501: root add ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
after@6 batch1 x: -7.630886599421501: root add ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -3.2036382003570907:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -3.321945254399907:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation']
copynode -3.2036382003570907:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -3.321945254399907:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -5.200642329349648:  root modified ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -4.081232630356681:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -4.081232630356681:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -4.081232630356681:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -4.801576093945187:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier str_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -4.725025974854361:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -4.081232630356681:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -4.081232630356681:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -4.956387125595938:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.116160236939322:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.179659449204337:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.348051630600821:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.39500125561608:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -6.350135986402165:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -4.725025974854361:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -4.76547130261315:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -4.725025974854361:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -4.76547130261315:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -4.725025974854361:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -4.956387125595938:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -5.435516916855704:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -4.76547130261315:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -6.700262252881657:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -5.179659449204337:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -5.116160236939322:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -5.348051630600821:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -4.801576093945187:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier StringUtils_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -5.116160236939322:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -5.39500125561608:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -4.956387125595938:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -5.179659449204337:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -4.801576093945187:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier str_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -5.675806604966056:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -5.348051630600821:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -5.435516916855704:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -7.392904513224494:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.081232630356681:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -5.39500125561608:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -3.2036382003570907:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference']
copynode -4.801576093945187:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier str_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -4.725025974854361:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -5.435516916855704:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -7.464920590107795:  root modified ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -4.801576093945187:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -4.081232630356681:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -4.801576093945187:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier str_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -3.321945254399907:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference']
copynode -4.081232630356681:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -7.6438065699185245:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown', 'selectors -> MethodInvocation']
copynode -5.675806604966056:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -4.801576093945187:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier str_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -7.352383576973807:  root modified ^ IfStatement condition This selectors MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.956387125595938:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -6.496167802251875:  root modified ^ StatementExpression expression MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -4.725025974854361:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -5.675806604966056:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation']
copynode -6.350135986402165:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -6.740621232427657:  root modified ^ StatementExpression expression MethodInvocation qualifier str_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -4.081232630356681:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -7.810038678988349:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ selectors MethodInvocation ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier', 'selectors -> MethodInvocation']
copynode -4.76547130261315:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -4.801576093945187:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier str_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -4.801576093945187:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier str_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -7.8644112280453555:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation']
copynode -6.740621232427657:  root modified ^ StatementExpression expression MethodInvocation qualifier str_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -4.801576093945187:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier StringUtils_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -7.897053592547309:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation']
copynode -7.181529664434493:  root modified ^ StatementExpression expression MethodInvocation qualifier str_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -7.155679368413985:  root modified ^ StatementExpression expression MethodInvocation qualifier str_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -4.725025974854361:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -4.76547130261315:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -8.065102421387564:  root modified ^ IfStatement condition This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -7.350295686163008:  root modified ^ StatementExpression expression MethodInvocation qualifier str_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
copynode -0.6413338349520927:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -2.7946652588434517:  root modified ^ ReturnStatement expression MemberReference member par0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -2.7470935438759625:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -4.139020403919858:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -4.156399384824908:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -4.33096380578354:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -4.578000837005675:  root add ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -4.4819812648929656:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference']
copynode -4.939999883863493:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -4.885493621695787:  root modified ^ ReturnStatement expression MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -5.073897703550756:  root modified ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -5.1814287467859685:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.028566972105182:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -5.204815860837698:  root modified ^ ReturnStatement expression Cast type ReferenceType name BigDecimal_ter ^ ^ ^ ^ expression ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -5.389034166932106:  root add ^ ReturnStatement expression MemberReference member par0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -4.400728993117809:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.4080840651877224:  root modified ^ ReturnStatement expression ClassCreator selectors MethodInvocation arguments ^ member ^ ^ ^ type ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.610100690741092:  root modified ^ ReturnStatement expression MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -5.651810661423951:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -0.6413338349520927:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -2.7470935438759625:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments ClassCreator ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> ClassCreator']
copynode -2.7470935438759625:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -4.400728993117809:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -5.945831194519997:  root add ^ ReturnStatement expression MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -6.049896888434887:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -6.087083034217358:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -5.060377745641745:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -0.6413338349520927:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name ^ arguments ^ ^ ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'ReferenceType -> name arguments']
copynode -5.838332085622824:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -4.400728993117809:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -0.6413338349520927:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -0.6413338349520927:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name ^ ^ ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'ReferenceType -> name']
copynode -4.4819812648929656:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation']
copynode -5.9265095225855475:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.08119835027901:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -4.156399384824908:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -5.060377745641745:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -5.060377745641745:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -5.398098938167095:  root add ^ StatementExpression expression MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference']
copynode -6.497795002069324:  root modified ^ ReturnStatement expression TernaryExpression condition MemberReference member ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MemberReference', 'MemberReference -> member']
copynode -5.942058249129332:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.293397134853876:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement']
copynode -6.500889814851689:  root add ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -6.372587815611041:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -6.649298183619976:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.164985566152609:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement']
copynode -4.400728993117809:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal']
copynode -6.578035966027528:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -6.452910081236041:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference']
copynode -5.398098938167095:  root add ^ StatementExpression expression MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -6.753444686532021:  root add ^ ReturnStatement expression MemberReference member par1 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -6.7819415256381035:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -6.739284672308713:  root modified ^ ReturnStatement expression ClassCreator selectors MethodInvocation arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> selectors type', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.42781111712975:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par0']
copynode -4.156399384824908:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl']
copynode -4.400728993117809:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -6.947464887518436:  root modified ^ ReturnStatement expression MemberReference member par1 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> member', 'member -> par1', 'root -> End']
copynode -6.976639986503869:  root modified ^ ReturnStatement expression This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -2.7470935438759625:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -6.962996958056465:  root modified ^ ReturnStatement expression ArrayCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ dimensions ^ initializer ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ArrayCreator', 'ArrayCreator -> type dimensions initializer', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -5.978588812053204:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference']
copynode -6.511275038588792:  root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -7.072347000706941:  root modified ^ ReturnStatement expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -7.0364456462993985:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation']
copynode -6.511892096605152:  root modified ^ ReturnStatement expression TernaryExpression condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.997760236728936:  root modified ^ ReturnStatement expression SuperMethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> arguments member', 'copy-arguments', 'member -> meth0']
copynode -6.864407197324908:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference']
copynode -7.0980601000919705:  root add ^ IfStatement condition MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -5.838332085622824:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member isEmpty_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'member -> isEmpty_ter']
copynode -6.214255898012198:  root add ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -5.840277299750596:  root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference']
copynode -7.238728158175945:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -7.163216363391257:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -5.9265095225855475:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member par0 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'member -> par0']
copynode -7.299437782727182:  root modified ^ ReturnStatement expression Literal value <string>_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> <string>_ter', 'root -> End']
copynode -5.942058249129332:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier StringUtils_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'copy-qualifier']
copynode -4.4819812648929656:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'copy-operandl']
copynode -4.33096380578354:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'member -> meth0']
copynode -7.133621307555586:  root modified ^ ReturnStatement expression BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -0.6413338349520927:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name String_ter ^ ^ ^ ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -5.978588812053204:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal']
copynode -7.389246479142457:  root modified ^ ReturnStatement expression MemberReference qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MemberReference', 'MemberReference -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -6.214255898012198:  root add ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -5.398098938167095:  root add ^ StatementExpression expression MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -4.400728993117809:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -2.7470935438759625:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
before@7 batch0 x: -8.084586762823164: root modified ^ StatementExpression expression MethodInvocation qualifier str_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
after@7 batch0 x: -8.084586762823164: root modified ^ StatementExpression expression MethodInvocation qualifier str_ter ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal']
before@7 batch1 x: -7.526840553153306: root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
after@7 batch1 x: -7.526840553153306: root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -3.6267099722172134:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -3.678903524472844:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.3822279020096175:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.666501943662297:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.678903524472844:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -3.6267099722172134:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.4583980671013705:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.018258892640006:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member']
copynode -6.311243974312674:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.390378080948722:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value']
copynode -6.349983059510123:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member']
copynode -6.451839291199576:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.525925361260306:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.53392251644982:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.299199895176571:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'copy-qualifier', 'copy-arguments']
copynode -6.637824617966544:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.678730093582999:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.771005236252677:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.6267099722172134:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.3822279020096175:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.3822279020096175:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -3.6267099722172134:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.008549057587516:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value']
copynode -6.153539024933707:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.022465430840384:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value']
copynode -6.71336849842919:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member']
copynode -6.916376554116141:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.3822279020096175:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator -_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.0967117181862704:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value']
copynode -3.678903524472844:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.741652571305167:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member']
copynode -4.666501943662297:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.666501943662297:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.146562420472037:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value']
copynode -7.143853985413443:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value']
copynode -3.678903524472844:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -3.6267099722172134:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -3.678903524472844:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -3.6267099722172134:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -3.678903524472844:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -3.678903524472844:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.153539024933707:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.6267099722172134:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.666501943662297:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator -_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.486464583023917:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value']
copynode -7.3882556787575595:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.925173126801383:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'copy-member']
copynode -7.50122889195336:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value']
copynode -7.519554762577172:  root modified ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -3.678903524472844:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.6267099722172134:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.44758971844567:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member']
copynode -5.4583980671013705:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.117851213726681:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier StringUtils_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'copy-qualifier', 'copy-arguments']
copynode -3.6267099722172134:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -3.678903524472844:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.549577557190787:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member']
copynode -7.432674375071656:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.786253773316275:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.741942071355879:  root modified ^ StatementExpression expression MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.688179705932271:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.658262096985709:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member']
copynode -7.670799820392858:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'start -> unknown', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.839858912862837:  root modified ^ StatementExpression expression MethodInvocation qualifier str_ter ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value']
copynode -6.8880842557991855:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.3822279020096175:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.3822279020096175:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.8880842557991855:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.839403931691777:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.4776622100616805:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.920001112855971:  root modified ^ StatementExpression expression MethodInvocation qualifier str_ter ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value']
copynode -6.740775667771231:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.786253773316275:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.937232517637312:  root modified ^ StatementExpression expression MethodInvocation qualifier str_ter ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value']
copynode -7.852835618599784:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.899835609830916:  root modified ^ StatementExpression expression MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.634286944463383:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.882234326272737:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'copy-qualifier', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.9861051185871474:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -0.658783539882279:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference']
copynode -0.658783539882279:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation']
copynode -0.658783539882279:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-arguments']
copynode -0.658783539882279:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-arguments']
copynode -4.156342439426226:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type', 'type -> ReferenceType', 'copy-ReferenceType', 'root -> End']
copynode -4.397222817628062:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.425994560588151:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -2.8730415259487927:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> valueOf_ter']
copynode -0.658783539882279:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments Literal ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal']
copynode -4.8993348949588835:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.215965912429965:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -2.8730415259487927:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> meth0']
copynode -4.982648586723371:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.429449371993542:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.04241479979828:  root modified ^ ReturnStatement expression MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'start -> unknown']
copynode -2.8730415259487927:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> get_ter']
copynode -0.658783539882279:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-arguments']
copynode -5.6588861481286585:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.205921390559524:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -0.658783539882279:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments Cast ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Cast']
copynode -2.8730415259487927:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> add_ter']
copynode -5.984103546012193:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -0.658783539882279:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments This_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> This_ter']
copynode -5.8924224541842705:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-arguments']
copynode -5.551316559780389:  root modified ^ ReturnStatement expression ClassCreator selectors MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ type ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -2.8730415259487927:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'copy-member']
copynode -5.319411549717188:  root modified ^ ReturnStatement expression Cast type ReferenceType name BigDecimal_ter ^ ^ ^ ^ expression MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation']
copynode -0.658783539882279:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation']
copynode -5.947482452262193:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> ClassCreator', 'copy-ClassCreator']
copynode -6.111118031665683:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -5.319411549717188:  root modified ^ ReturnStatement expression Cast type ReferenceType name BigDecimal_ter ^ ^ ^ ^ expression MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference']
copynode -6.213477866476751:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ arguments ^ ^ ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name']
copynode -6.348234579651034:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.302756087607122:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-arguments']
copynode -6.303445594137884:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name']
copynode -2.8730415259487927:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> append_ter']
copynode -6.407552747739828:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.243473230613745:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement']
copynode -6.513446442782879:  root add ^ StatementExpression expression MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.982648586723371:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.6321821964666015:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.7177539323456585:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -5.205921390559524:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -6.715427689254284:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value']
copynode -6.739421591846622:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.685500722378492:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.575341576244682:  root modified ^ ReturnStatement expression TernaryExpression condition MemberReference member par0 ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.808862276375294:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -6.337502466980368:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.692740290178335:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -0.658783539882279:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments TernaryExpression ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> TernaryExpression']
copynode -2.8730415259487927:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> equals_ter']
copynode -7.067946658004075:  root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -6.358543769209064:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.33887492933718:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> ReturnStatement']
copynode -6.979537748033181:  root modified ^ ReturnStatement expression This selectors MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.6180104079976445:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.1453799908049405:  root modified ^ ReturnStatement expression SuperMethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> SuperMethodInvocation', 'SuperMethodInvocation -> arguments member', 'copy-arguments', 'member -> meth0', 'root -> End']
copynode -7.159011945812381:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.894387872176594:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> par0', 'start -> unknown']
copynode -7.242451891768724:  root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.04241479979828:  root modified ^ ReturnStatement expression MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'member -> add_ter']
copynode -5.04241479979828:  root modified ^ ReturnStatement expression MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member']
copynode -7.05582308024168:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.123772545470274:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.271257266402245:  root add ^ StatementExpression expression MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> End']
copynode -6.878843300510198:  root modified ^ ReturnStatement expression ClassCreator selectors MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> selectors type', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.551316559780389:  root modified ^ ReturnStatement expression ClassCreator selectors MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ type ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.33887492933718:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -6.750135891139507:  root add ^ StatementExpression expression MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'start -> unknown']
copynode -6.894408360807574:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'copy-operandl', 'copy-operandr']
copynode -7.410705283749849:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'member -> meth0', 'root -> End']
copynode -7.232456772340811:  root add ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'start -> unknown']
copynode -7.138164298143238:  root modified ^ ReturnStatement expression TernaryExpression condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -7.434464904014021:  root modified ^ ReturnStatement expression BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
before@8 batch0 x: -7.989966069057118: root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
after@8 batch0 x: -7.989966069057118: root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
before@8 batch1 x: -7.4510109112598: root modified ^ ReturnStatement expression BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
after@8 batch1 x: -7.4510109112598: root modified ^ ReturnStatement expression BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -4.123216543986928:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation']
copynode -4.2102536602760665:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation']
copynode -4.740887407853734:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -5.294203703000676:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation']
copynode -5.586329736455809:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.3890817507053725:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation']
copynode -4.740887407853734:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -5.040720556571614:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -5.040720556571614:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.175274618610274:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'root -> End']
copynode -6.400918248749804:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -6.562146388634574:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'root -> End']
copynode -4.123216543986928:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation']
copynode -6.400030740245711:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.615939684852492:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.2102536602760665:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr']
copynode -6.67611233209027:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.679633103951346:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.700478778395336:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'copy-qualifier', 'copy-arguments', 'copy-member']
copynode -6.776252903684508:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.814918213232886:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.123216543986928:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr']
copynode -7.061045610054862:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'root -> End']
copynode -6.844762597873341:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation']
copynode -7.032838745682966:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -7.0441393057699315:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -7.133302711590659:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member str_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'root -> End']
copynode -4.2102536602760665:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MemberReference']
copynode -7.122134715958964:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -7.094642840966117:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.951957498386037:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation']
copynode -6.897450928285252:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation']
copynode -7.161322109110188:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -6.877034668519627:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation']
copynode -7.169981497048866:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -4.2102536602760665:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr']
copynode -4.2102536602760665:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation']
copynode -7.034553193196189:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -4.123216543986928:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr']
copynode -7.129700605466496:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation']
copynode -7.192128126218449:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation']
copynode -7.12084556062473:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator -_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation']
copynode -4.2102536602760665:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr']
copynode -7.219705377414357:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation']
copynode -7.21584871847881:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation']
copynode -4.740887407853734:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -7.135936920240056:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator >_ter ^ ^ operandl MemberReference member loc0 ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation']
copynode -7.157350723340642:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation']
copynode -7.217127744748723:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation']
copynode -7.514136993035208:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'copy-member', 'root -> End']
copynode -7.497191440023016:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -5.040720556571614:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -4.123216543986928:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MemberReference']
copynode -7.520024745434057:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -7.285328809812199:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation']
copynode -7.237210218503606:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation']
copynode -4.123216543986928:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr']
copynode -7.607735448225867:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'root -> End']
copynode -7.317733560397755:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation']
copynode -7.614182674034964:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference qualifier unknown ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -7.700891875370871:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'root -> End']
copynode -7.374344055249821:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator -_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ member length_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation']
copynode -7.561088357761037:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation']
copynode -7.811853625520598:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'root -> End']
copynode -7.723833528056275:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -5.040720556571614:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -7.506161831959616:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.677387491974514:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier StringUtils_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'copy-qualifier', 'copy-arguments', 'copy-member']
copynode -7.844777584541589:  root modified ^ StatementExpression expression MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -5.3890817507053725:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation']
copynode -4.740887407853734:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -7.687235776975285:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation']
copynode -7.916508529975545:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.294203703000676:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr']
copynode -7.935118610039353:  root modified ^ StatementExpression expression MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -7.951835244894028:  root modified ^ StatementExpression expression MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -7.973984454467427:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.914852973714005:  root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -1.1935660091548925:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.042816981425858:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-arguments', 'root -> End']
copynode -2.2160574046283728:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.2160574046283728:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.4455765334278112:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-arguments', 'root -> End']
copynode -2.2160574046283728:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> member']
copynode -4.468642488587648:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> valueOf_ter', 'root -> End']
copynode -4.412112267440534:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.560886963954545:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value']
copynode -2.2160574046283728:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.914278554264456:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.2563489829190075:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> meth0', 'root -> End']
copynode -5.227781492038048:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.285788571331068:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation']
copynode -5.6053896700032055:  root modified ^ ReturnStatement expression MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -5.612324849236757:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> get_ter', 'root -> End']
copynode -1.1935660091548925:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.686617478480912:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-arguments', 'root -> End']
copynode -5.79132403479889:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> add_ter', 'root -> End']
copynode -2.2160574046283728:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.7138999490998685:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -5.470521200448275:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -2.2160574046283728:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -6.006801718598581:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-arguments', 'root -> End']
copynode -5.988758159801364:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.053798571694642:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'copy-member', 'root -> End']
copynode -6.063890084376908:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.108682513702661:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> ClassCreator', 'copy-ClassCreator', 'arguments -> End']
copynode -6.0083118681795895:  root modified ^ ReturnStatement expression ClassCreator selectors MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ type ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -6.272110257297754:  root modified ^ ReturnStatement expression Cast type ReferenceType name BigDecimal_ter ^ ^ ^ ^ expression MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference', 'MemberReference -> member']
copynode -5.727659806361771:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments Cast type ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Cast', 'Cast -> type expression']
copynode -6.0594714023172855:  root modified ^ ReturnStatement expression Cast type ReferenceType name BigDecimal_ter ^ ^ ^ ^ expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.422377379363752:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-arguments', 'root -> End']
copynode -6.429939107722021:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name', 'copy-arguments']
copynode -5.686764888931066:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference']
copynode -6.477795973885804:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member append_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> append_ter', 'root -> End']
copynode -6.3559246675431496:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'copy-arguments']
copynode -6.48853056759981:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.992676362147904:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments This_ter ^ MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> This_ter', 'arguments -> MemberReference']
copynode -2.2160574046283728:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member']
copynode -6.563182711601257:  root add ^ StatementExpression expression MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.721467451192439:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -2.2160574046283728:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -6.718059876468033:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -6.751023322096444:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.0648816977627575:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> equals_ter', 'root -> End']
copynode -6.5580248820915585:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -7.0185400096088415:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -4.412112267440534:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.422099263159907:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -5.686764888931066:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -6.896879660431296:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -7.271905079949647:  root modified ^ ReturnStatement expression MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'member -> add_ter', 'root -> End']
copynode -7.29529418097809:  root modified ^ ReturnStatement expression MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'copy-member', 'root -> End']
copynode -6.7815095745027065:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -7.172099854549742:  root add ^ IfStatement condition BinaryOperation operator <_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> <_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.694439717321075:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -7.082206562845386:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -7.351668894756585:  root modified ^ ReturnStatement expression ClassCreator selectors MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ type ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.259010322857648:  root modified ^ ReturnStatement expression MethodInvocation qualifier par0 ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.686764888931066:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal']
copynode -6.69131753394322:  root add ^ StatementExpression expression Assignment expressionl MemberReference member unknown ^ ^ ^ ^ value MethodInvocation ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'value -> MethodInvocation']
copynode -7.377683691680431:  root add ^ StatementExpression expression MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -6.5580248820915585:  root add ^ IfStatement condition MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -4.412112267440534:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1']
before@9 batch0 x: -8.041737806692254: root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
after@9 batch0 x: -8.041737806692254: root modified ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
before@9 batch1 x: -7.506659300750471: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1']
after@9 batch1 x: -7.506659300750471: root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -4.441622827842366:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.582612489059102:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.663266584917437:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -5.3895208283211105:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -5.923855934932362:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -5.840118531777989:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -5.951211188628804:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -5.662323807075154:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.702541713311803:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.634371929510962:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -6.739993278577458:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'root -> End']
copynode -6.700728357478511:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -5.840118531777989:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -6.790318154904526:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'copy-qualifier', 'copy-arguments', 'copy-member', 'root -> End']
copynode -5.702541713311803:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.662323807075154:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.3895208283211105:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -6.7458680725540034:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -6.746947102888953:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -6.893093739345204:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'root -> End']
copynode -6.630835686519276:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.8391388661111705:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -6.8775788701022975:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -5.951211188628804:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -7.238225166394841:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'root -> End']
copynode -7.1846132284845226:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -4.441622827842366:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.923855934932362:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -7.3983084305073135:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'root -> End']
copynode -4.582612489059102:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.4622301502968185:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'root -> End']
copynode -7.241010133817326:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.579220209911:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'root -> End']
copynode -6.433959487534594:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal']
copynode -7.1571249409462325:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.433959487534594:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference']
copynode -6.433959487534594:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -7.892552630219143:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier StringUtils_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'copy-qualifier', 'copy-arguments', 'copy-member', 'root -> End']
copynode -7.882061593874823:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -7.96815008361591:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'root -> End']
copynode -7.54309002001537:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -7.9647791243041866:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> MethodInvocation']
copynode -4.441622827842366:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -8.031635910912883:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> MethodInvocation']
copynode -5.662323807075154:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.476314787461888:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -7.070884930610191:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal']
copynode -7.081958966969978:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal']
copynode -7.537253473594319:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -4.582612489059102:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.159972388937604:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal']
copynode -5.702541713311803:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.070884930610191:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -7.081958966969978:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -6.433959487534594:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MethodInvocation']
copynode -7.476314787461888:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -7.904444013431203:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -7.198589320934843:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal']
copynode -7.207896674692165:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal']
copynode -7.070884930610191:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference']
copynode -7.081958966969978:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference']
copynode -5.702541713311803:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.537253473594319:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -5.662323807075154:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.159972388937604:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -7.198589320934843:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -7.159972388937604:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference']
copynode -7.068747688725125:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.207896674692165:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -7.198589320934843:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference']
copynode -1.2057019013300305:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.22330544864235:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -3.3209369031101232:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -4.146961912265397:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.538412810987211:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr']
copynode -4.565828756647534:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -1.2057019013300305:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -4.818462952724076:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -3.22330544864235:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -5.379531296654022:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr']
copynode -4.965868546161801:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr']
copynode -5.6819879261165624:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -5.905095541384071:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -1.2057019013300305:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -3.3209369031101232:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier StringUtils_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -4.565828756647534:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -5.833365782847977:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -3.3209369031101232:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -5.572860067579313:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.971950158229447:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0']
copynode -6.311145409694291:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments Cast type ReferenceType ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Cast', 'Cast -> type expression', 'type -> ReferenceType']
copynode -6.292423397768289:  root modified ^ ReturnStatement expression ClassCreator selectors MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ type ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'selectors -> End']
copynode -4.818462952724076:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.299952529370785:  root modified ^ ReturnStatement expression Cast type ReferenceType name BigDecimal_ter ^ ^ ^ ^ expression MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.445140296345926:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'ReferenceType -> name', 'copy-name', 'copy-arguments', 'root -> End']
copynode -3.22330544864235:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier StringUtils_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -6.160528681924916:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -6.466083996463567:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.913781929761171:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -6.516383172696806:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'copy-arguments', 'copy-arguments']
copynode -4.965868546161801:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -6.366535846143961:  root modified ^ ReturnStatement expression Cast type ReferenceType name BigDecimal_ter ^ ^ ^ ^ expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -4.965868546161801:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -6.687940522780991:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments This_ter ^ MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> This_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.620939514352358:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -6.8533260761760175:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.845356568446732:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation']
copynode -4.538412810987211:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -6.034945363178849:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference']
copynode -6.727596863856888:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors arguments member', 'start -> unknown']
copynode -5.572860067579313:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.818462952724076:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.034945363178849:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -4.538412810987211:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -7.304300840944052:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'start -> unknown']
copynode -4.146961912265397:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation member meth0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'member -> meth0']
copynode -7.163086684173322:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -7.192834586589015:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -7.3921169568784535:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value']
copynode -7.367572818417102:  root modified ^ ReturnStatement expression ClassCreator selectors MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ type ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
before@10 batch0 x: -8.525671478069853: root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference']
after@10 batch0 x: -8.525671478069853: root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference']
before@10 batch1 x: -7.410868136910722: root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'member -> meth0', 'root -> End']
after@10 batch1 x: -7.410868136910722: root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member meth0 ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'member -> meth0', 'root -> End']
copynode -4.589909408881795:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -4.723147262528073:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -5.743066851689946:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.735560686036479:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.268141512467992:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.484507147863042:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.527670358016621:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.580082450702321:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -6.666151289537083:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -6.805774812295567:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -6.8096929534222:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -6.705671728297602:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.263834808662068:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -7.4363927586819045:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -7.605797651864123:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value']
copynode -6.784975771501195:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.60630333860172:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.810226504399907:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.970329736068379:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.767025831795763:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.778288725472521:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member']
copynode -6.908668045594823:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.908668045594823:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -6.916487917944323:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.8214659995283:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.954684064432513:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -8.030183826282155:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.8214659995283:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.916487917944323:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.818179026886355:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.954684064432513:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -8.194969747855794:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -7.357638154819142:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.769281507178675:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.818179026886355:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -8.250390517234337:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value']
copynode -8.268262224912178:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value']
copynode -8.338911180093419:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -8.338177879049908:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value']
copynode -6.818179026886355:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -8.38870668009622:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value']
copynode -8.39125582081033:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value']
copynode -6.8214659995283:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -8.431415919854771:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -7.948835097893607:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -8.447638128593098:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -7.563839767768513:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -8.491048146679532:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -8.400489317893516:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.769281507178675:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -8.409659701108467:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -8.486127097799908:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -8.37882233102573:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.769281507178675:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -6.769281507178675:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -8.525671478069853:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -8.443118606403004:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -8.089646816893946:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.916487917944323:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -8.157422066375148:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.252651878341567:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -1.2392428989842301:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference']
copynode -1.2392428989842301:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -1.2392428989842301:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation']
copynode -1.2392428989842301:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal']
copynode -3.437465071430779:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -3.4785545316844946:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -4.227814741185284:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End']
copynode -1.2392428989842301:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ This_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> This_ter']
copynode -4.720922963446355:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> ReturnStatement']
copynode -1.2392428989842301:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation']
copynode -4.905374334412045:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments Literal value null_ter ^ ^ ^ MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> MemberReference']
copynode -5.251313313594437:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -5.083107306374586:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference']
copynode -3.437465071430779:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -1.2392428989842301:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Cast ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Cast']
copynode -5.647240831051022:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> End']
copynode -4.227814741185284:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation member unknown ^ ^ ^ MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> MemberReference']
copynode -1.2392428989842301:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ This ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> This']
copynode -5.918546881061047:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.147288515916443:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member isBlank_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'root -> End']
copynode -6.180557891479111:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation']
copynode -3.437465071430779:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -6.054011091342545:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier StringUtils_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -3.4785545316844946:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member size_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'member -> size_ter']
copynode -5.418083528740681:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> End']
copynode -5.418083528740681:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> ReturnStatement']
copynode -6.342254698742181:  root modified ^ ReturnStatement expression ClassCreator selectors MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ type ReferenceType ^ ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'selectors -> End', 'type -> ReferenceType']
copynode -6.3475607223808765:  root modified ^ ReturnStatement expression Cast type ReferenceType name BigDecimal_ter ^ ^ ^ ^ expression MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference', 'MemberReference -> member', 'member -> par0', 'root -> End']
copynode -6.346096977344132:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.064765767412609:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference']
copynode -1.2392428989842301:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ TernaryExpression ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> TernaryExpression']
copynode -5.303776964297867:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference']
copynode -6.534907817593194:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'ReferenceType -> name arguments', 'copy-name', 'copy-arguments', 'copy-arguments', 'root -> End']
copynode -3.4785545316844946:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'member -> getName_ter']
copynode -6.57290311018005:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -1.2392428989842301:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ClassReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> ClassReference']
copynode -3.4785545316844946:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member toString_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'member -> toString_ter']
copynode -6.700506014502025:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments This_ter ^ MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> This_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.651901338249445:  root modified ^ ReturnStatement expression Cast type ReferenceType name BigDecimal_ter ^ ^ ^ ^ expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -6.670948459301144:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -6.175266926977201:  root add ^ StatementExpression expression Assignment expressionl MemberReference member par0 ^ ^ ^ ^ value MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'value -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -4.720922963446355:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> End']
copynode -3.4785545316844946:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'member -> length_ter']
copynode -6.467333040884114:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference']
copynode -6.866813784930855:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -4.905374334412045:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End']
copynode -5.303776964297867:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal']
copynode -6.319802680736757:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments Cast type ReferenceType name BigDecimal_ter ^ ^ ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -6.88974111713469:  root modified ^ ReturnStatement expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -3.437465071430779:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -6.4668648091465:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'copy-arguments']
copynode -3.4785545316844946:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member isEmpty_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'member -> isEmpty_ter']
copynode -6.4910409157164395:  root modified ^ ReturnStatement expression MethodInvocation arguments MemberReference member par0 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.8788417202740675:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.083107306374586:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
before@11 batch0 x: -8.816747375472914: root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
after@11 batch0 x: -8.816747375472914: root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
before@11 batch1 x: -7.148271157158888: root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
after@11 batch1 x: -7.148271157158888: root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -5.798286259814631:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -5.784544796391856:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.311765269085299:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.536976364150178:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.834460795565974:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -6.578580327972304:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.675515410199296:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -7.616664713888895:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -7.916524115658831:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.858897242404055:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.072352871939074:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.076592475816142:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.084000752016436:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.085850809409749:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -8.129513890191447:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.131724820181262:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.141142860695254:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.185778901621234:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.236367226287257:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.244677559181582:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.26516260736389:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -8.282361267774832:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -8.362545863434207:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.353224275342654:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -7.92249978025211:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -8.424319297715556:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.440010928257834:  root modified ^ IfStatement condition MethodInvocation qualifier StringUtils_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.400876600004267:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -8.406632222875487:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -8.516566277190577:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.50610227388097:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.62725925509585:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.518084111332428:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.641238332435023:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.95884228189243:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -8.58825989504112:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.73325872485293:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -8.641472372866701:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.7739157534088:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.797650874301326:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -7.95884228189243:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -8.816747375472914:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.485936377837788:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -7.92249978025211:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -8.601329822733533:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -7.6919242783333175:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -8.663794492080342:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -7.672017042234074:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -2.2187975521519547:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -2.9103736753895646:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'root -> End']
copynode -3.0197561855748063:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value']
copynode -2.991840350194252:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -3.8244067875057226:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End']
copynode -2.991840350194252:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.528882212689496:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'root -> End']
copynode -2.991840350194252:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> member']
copynode -4.623977529568947:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ This_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> This_ter', 'arguments -> End']
copynode -5.098436224026955:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.191112146931118:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments Literal value null_ter ^ ^ ^ MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.296946986331022:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.952560590332723:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -5.28881714095769:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'arguments -> End']
copynode -5.539299130192376:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -2.2187975521519547:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -5.621480810208595:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Cast type ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Cast', 'Cast -> type expression']
copynode -3.7094055411726004:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> valueOf_ter']
copynode -2.991840350194252:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.786729044964886:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation member unknown ^ ^ ^ MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.789270269437111:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ This selectors ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> This', 'This -> selectors']
copynode -4.952560590332723:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -5.970940157305449:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr']
copynode -3.8244067875057226:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> MemberReference']
copynode -6.342612330947304:  root modified ^ ReturnStatement expression ClassCreator selectors MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'selectors -> End', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -6.243279501548386:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member size_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'member -> size_ter', 'arguments -> End']
copynode -6.358572357086814:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.3872574728302425:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -2.991840350194252:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -6.422225820584572:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ TernaryExpression condition ^ if_true ^ if_false ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> TernaryExpression', 'TernaryExpression -> condition if_true if_false']
copynode -6.235624670734978:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier StringUtils_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End']
copynode -6.437273725619889:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.259235541088856:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -6.564200445762253:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'member -> getName_ter', 'arguments -> End']
copynode -6.2104946521430975:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -3.7094055411726004:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> equals_ter']
copynode -4.623977529568947:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ This_ter ^ Literal ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> This_ter', 'arguments -> Literal']
copynode -4.623977529568947:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ This_ter ^ MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> This_ter', 'arguments -> MemberReference']
copynode -6.730263992896653:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member toString_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'member -> toString_ter', 'arguments -> End']
copynode -6.911550329285092:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'root -> End']
copynode -6.905728809288121:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -3.7094055411726004:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> get_ter']
copynode -6.931725010028458:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0', 'arguments -> Literal', 'Literal -> value']
copynode -6.910483366344124:  root modified ^ ReturnStatement expression TernaryExpression condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ if_true ^ if_false ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> TernaryExpression', 'TernaryExpression -> condition if_true if_false', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr']
copynode -6.863644882789231:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'member -> length_ter', 'arguments -> End']
copynode -6.761941103730351:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.669697629971779:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ClassReference type ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> ClassReference', 'ClassReference -> type']
copynode -6.2104946521430975:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.148271157158888:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'root -> End']
before@12 batch0 x: -9.175825779035222: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
after@12 batch0 x: -9.175825779035222: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
before@12 batch1 x: -7.148487962738727: root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'root -> End']
after@12 batch1 x: -7.148487962738727: root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'root -> End']
copynode -5.970463202043902:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -5.970463202043902:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -6.518516481562983:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -6.518516481562983:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -7.681221550970804:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -5.970463202043902:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal']
copynode -6.798038211360108:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -6.798038211360108:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -6.850116678222548:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -6.850116678222548:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr']
copynode -7.990300807810854:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -6.798038211360108:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal']
copynode -6.850116678222548:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal']
copynode -6.518516481562983:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal']
copynode -8.3284907542984:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -8.345254144340288:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -8.413930086127948:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -8.467094551480841:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -8.467493534728419:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -8.617204087495338:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -8.63088409107877:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -8.69417100091232:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -8.770771864510607:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -8.802382533147465:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -2.254905356778181:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -3.954234421005822:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'root -> End']
copynode -3.0255132492020493:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -2.254905356778181:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.0255132492020493:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter']
copynode -4.123385178609169:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -3.936665343804634:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -2.254905356778181:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -3.0255132492020493:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter']
copynode -4.849417435689247:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.939244049353874:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ This_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> This_ter', 'arguments -> End', 'root -> End']
copynode -3.0255132492020493:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -5.203388201291091:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments Literal value null_ter ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.936665343804634:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'start -> unknown']
copynode -5.309885441078222:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.390022020539618:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'arguments -> End', 'root -> End']
copynode -5.118246753452695:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter']
copynode -5.5555081420898205:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.325560645884252:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -5.606489049954689:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference qualifier unknown ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -5.7700142289832:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Cast type ReferenceType ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Cast', 'Cast -> type expression', 'type -> ReferenceType']
copynode -5.7972229511797195:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation member unknown ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.785108923664666:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> valueOf_ter', 'arguments -> End']
copynode -5.896736207170761:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ This selectors MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference']
copynode -6.122195290154195:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -4.123385178609169:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier StringUtils_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -2.254905356778181:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -3.0255132492020493:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -2.254905356778181:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2']
copynode -6.288098737350083:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.349740223638946:  root modified ^ ReturnStatement expression ClassCreator selectors MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'selectors -> End', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-arguments']
copynode -6.376332536092377:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member size_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'member -> size_ter', 'arguments -> End', 'root -> End']
copynode -6.400438023018069:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -3.936665343804634:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier StringUtils_ter ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier']
copynode -4.123385178609169:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> par0']
copynode -6.515339851132012:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier StringUtils_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End', 'root -> End']
copynode -6.705804422250367:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'member -> getName_ter', 'arguments -> End', 'root -> End']
copynode -6.72496877865342:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ This_ter ^ Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> This_ter', 'arguments -> Literal', 'Literal -> value']
copynode -6.724001526585198:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> equals_ter', 'arguments -> End']
copynode -6.823637830777443:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ This_ter ^ MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> This_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.868389010182:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member toString_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'member -> toString_ter', 'arguments -> End', 'root -> End']
copynode -5.792353379292763:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -3.936665343804634:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par1 ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1']
copynode -6.919725273488439:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -6.988270587971783:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member length_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'member -> length_ter', 'arguments -> End', 'root -> End']
copynode -6.992718426976353:  root modified ^ ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -6.6281351547077065:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -6.426380860371864:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0']
copynode -7.009078609509743:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ClassReference type ReferenceType ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> ClassReference', 'ClassReference -> type', 'type -> ReferenceType']
copynode -6.921457886448479:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> get_ter', 'arguments -> End']
copynode -5.792353379292763:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
before@13 batch0 x: -8.881335538520943: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
after@13 batch0 x: -8.881335538520943: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
before@13 batch1 x: -7.0557838554814225: root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
after@13 batch1 x: -7.0557838554814225: root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.823594794317614:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation']
copynode -6.979528353258502:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation']
copynode -7.383090794726741:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation']
copynode -7.54300302331103:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation']
copynode -7.737550302117597:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member']
copynode -7.8723525262321346:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value']
copynode -7.905737486376893:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation']
copynode -7.918207612528931:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation']
copynode -7.971550651534926:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation']
copynode -7.973553367599379:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation']
copynode -8.060537721670698:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -8.296553817286622:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value']
copynode -8.322344132408034:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value']
copynode -8.355526030703913:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value']
copynode -8.881335538520943:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.823594794317614:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> BinaryOperation']
copynode -6.979528353258502:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> BinaryOperation']
copynode -8.384573166898917:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member']
copynode -8.47059645288391:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member']
copynode -8.47059645288391:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member']
copynode -8.524282910570037:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member']
copynode -8.384573166898917:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member']
copynode -8.524282910570037:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member']
copynode -8.401084671437275:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member']
copynode -2.5860694784059888:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -4.064347582621849:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End']
copynode -4.320289983166731:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -4.396401840014732:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End']
copynode -4.539593114270247:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -4.4630098815396195:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -4.606946426196373:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End']
copynode -4.913490864200867:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End']
copynode -5.02365811423806:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -5.251700895125396:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments Literal value null_ter ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -5.384255303753889:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -5.662173138684011:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -4.4347273881867295:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference']
copynode -4.4347273881867295:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -5.873719244948006:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> valueOf_ter', 'arguments -> End', 'root -> End']
copynode -4.4347273881867295:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -5.859421545392252:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation member unknown ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -5.569420595405973:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference']
copynode -6.138582858009613:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ This selectors MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member']
copynode -5.619846282279468:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -6.287233485592878:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End']
copynode -6.2850890930130845:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -6.376120328583056:  root modified ^ ReturnStatement expression ClassCreator selectors MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> selectors type arguments', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'selectors -> End', 'type -> ReferenceType', 'copy-ReferenceType', 'copy-arguments', 'root -> End']
copynode -6.270422114743269:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End']
copynode -6.454869945751852:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -2.5860694784059888:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member unknown ^ ^ ^ MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference']
copynode -6.468461560769356:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier StringUtils_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown']
copynode -6.329548973342753:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -5.776116477543837:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Cast type ReferenceType name BigDecimal_ter ^ ^ ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -4.4347273881867295:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation']
copynode -6.811485320082284:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> equals_ter', 'arguments -> End', 'root -> End']
copynode -6.871629464192665:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.619846282279468:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference']
copynode -6.999445388777531:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value']
copynode -7.019074320545769:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> get_ter', 'arguments -> End', 'root -> End']
copynode -6.999468075795448:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation']
copynode -5.776116477543837:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Cast type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ expression ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType']
copynode -7.0557838554814225:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -6.968800830407417:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown']
copynode -5.569420595405973:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation']
copynode -4.4347273881867295:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal']
before@14 batch0 x: -9.798346529423725: root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member']
after@14 batch0 x: -9.798346529423725: root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member']
before@14 batch1 x: -7.187451320452965: root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal']
after@14 batch1 x: -7.187451320452965: root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal']
copynode -7.809637023776304:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.918874681636225:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -8.106303788430523:  root modified ^ IfStatement condition MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.342796080454718:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -8.399902135774028:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -8.364975110336673:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -6.9431530690635554:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.9431530690635554:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.101723351224791:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.9431530690635554:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.101723351224791:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.101723351224791:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.9431530690635554:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.9431530690635554:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.476529308303725:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.101723351224791:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.476529308303725:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.637493089481723:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.9431530690635554:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.101723351224791:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.476529308303725:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.637493089481723:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.101723351224791:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.9431530690635554:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -2.6173209126427537:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'root -> End']
copynode -4.093828185214079:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> End', 'root -> End']
copynode -4.393808184875525:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'root -> End']
copynode -4.433244417174137:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value false_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> false_ter', 'arguments -> End', 'root -> End']
copynode -4.583116761161364:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par1 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End', 'root -> End']
copynode -4.644193845553673:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value true_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> true_ter', 'arguments -> End', 'root -> End']
copynode -4.630323069854057:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End']
copynode -4.942180060534156:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> End', 'root -> End']
copynode -5.060117411179817:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End', 'root -> End']
copynode -5.296099243903882:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments Literal value null_ter ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> null_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'root -> End']
copynode -5.425212929709232:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member unknown ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'root -> End']
copynode -5.667782739023096:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -5.66825576381234:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.92436093998549:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation member unknown ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'root -> End']
copynode -6.089876730678952:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.323595239533461:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member par2 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par2', 'arguments -> End', 'root -> End']
copynode -6.324003289206303:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'root -> End']
copynode -6.143116815699614:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.3847582179441815:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member loc0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc0', 'arguments -> End', 'root -> End']
copynode -6.509555359589285:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'root -> End']
copynode -6.546535386456526:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member unknown ^ ^ ^ MemberReference member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.627098637385643:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier StringUtils_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End']
copynode -6.642686772844172:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -6.939439354217029:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.004498122012592:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -7.114703125072992:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'arguments -> End']
copynode -6.756483989520348:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.136827694936073:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End']
copynode -7.187451320452965:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value']
copynode -7.051212220205343:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.939406308098114:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.721053349072463:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Cast type ReferenceType name BigDecimal_ter ^ ^ ^ ^ expression MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference']
copynode -7.070677982861525:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Cast type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ expression MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference']
copynode -5.787699776454247:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> valueOf_ter']
copynode -7.1441045000538:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.721053349072463:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Cast type ReferenceType name BigDecimal_ter ^ ^ ^ ^ expression MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation']
copynode -5.66825576381234:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
before@15 batch0 x: -9.518208191439044: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
after@15 batch0 x: -9.518208191439044: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
before@15 batch1 x: -8.026179986758507: root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
after@15 batch1 x: -8.026179986758507: root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MemberReference qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> qualifier member']
copynode -7.968986571475398:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation']
copynode -8.456482396170031:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation']
copynode -8.441750482365023:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation']
copynode -8.468483403965365:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation']
copynode -8.692972586199176:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -8.803844974085223:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -8.832182802900206:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -8.843874619051348:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -8.857722081884276:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -8.89753440831555:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -8.96500246290816:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -8.98764650587691:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -9.19104523275746:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -9.193537630781066:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -9.240750738128554:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -9.253251270100009:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -9.296768829866778:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -9.300288119062316:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -9.32538921450032:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -9.327855304523837:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -9.504683413251769:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -9.518208191439044:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -4.654594010426081:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> End', 'root -> End']
copynode -5.711634278515703:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -6.330280809415854:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End']
copynode -6.656517118899501:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier StringUtils_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'copy-qualifier', 'start -> unknown', 'arguments -> End', 'root -> End']
copynode -6.687439668676234:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'root -> End']
copynode -6.112057449980057:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.05406476346252:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -7.14132927612809:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation arguments MemberReference member par0 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'arguments -> End', 'root -> End']
copynode -7.160042271701968:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par1 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par1', 'start -> unknown', 'arguments -> End', 'root -> End']
copynode -5.769813294275082:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -7.190875502754352:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter']
copynode -7.152526187463081:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -7.34586170570401:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation arguments MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -7.385625528389937:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Cast type ReferenceType name BigDecimal_ter ^ ^ ^ ^ expression MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference', 'MemberReference -> member']
copynode -6.112057449980057:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -7.5329874029703205:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Cast type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ expression MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference', 'MemberReference -> member']
copynode -7.603365498347557:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> valueOf_ter', 'arguments -> End']
copynode -7.2694086122646695:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.829141338108457:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0']
copynode -6.112057449980057:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.928357826764113:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Cast type ReferenceType name BigDecimal_ter ^ ^ ^ ^ expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.769813294275082:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
before@16 batch0 x: -9.519523219030816: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
after@16 batch0 x: -9.519523219030816: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 8_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
before@16 batch1 x: -8.28926825032977: root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
after@16 batch1 x: -8.28926825032977: root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1']
copynode -8.038226940378081:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -8.523737840994727:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -8.530515123798978:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -8.509489957883488:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -8.038226940378081:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.463763220919645:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End']
copynode -7.314121003015316:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -7.323407950330875:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> Literal', 'Literal -> value', 'value -> <string>_ter', 'arguments -> End']
copynode -7.625866333706654:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments', 'member -> valueOf_ter', 'arguments -> End', 'root -> End']
copynode -6.748494687242783:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr']
copynode -6.748494687242783:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal']
copynode -7.9264732885494595:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier par0 ^ ^ selectors MethodInvocation member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier selectors member', 'qualifier -> par0', 'selectors -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'selectors -> End']
copynode -7.451663518542773:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Cast type ReferenceType name BigDecimal_ter ^ ^ ^ ^ expression MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.748494687242783:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference']
copynode -7.6052721610612934:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Cast type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ expression MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.28926825032977:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par1', 'arguments -> End']
copynode -7.475007655782974:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'copy-operandr']
copynode -7.475007655782974:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal']
copynode -8.266905056530959:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Cast type ReferenceType name BigDecimal_ter ^ ^ ^ ^ expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -8.094337721107877:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
before@17 batch0 x: -9.506004409107845: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
after@17 batch0 x: -9.506004409107845: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'copy-operandr', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
before@17 batch1 x: -8.894719798801816: root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
after@17 batch1 x: -8.894719798801816: root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown']
copynode -8.866579808935057:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -9.231780462607276:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -9.241975118115079:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -9.318691556050908:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -9.493780829652678:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier str_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member startsWith_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -6.5058870154753095:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ This selectors MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> This', 'This -> selectors', 'selectors -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'selectors -> End', 'arguments -> End', 'root -> End']
copynode -7.712446811361588:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'arguments -> End']
copynode -7.860124650163925:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value']
copynode -8.041737104053027:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Cast type ReferenceType name BigDecimal_ter ^ ^ ^ ^ expression MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -8.214113297624863:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member']
copynode -8.309614466721541:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Cast type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ expression MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -8.427448692484177:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'copy-operandr', 'arguments -> End']
copynode -8.454724135561264:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value']
copynode -8.830444859559066:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Cast type ReferenceType name BigDecimal_ter ^ ^ ^ ^ expression MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -8.894719798801816:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'copy-operandr']
copynode -7.37675672279147:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'member -> equals_ter']
copynode -8.894719798801816:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'operandr -> Literal']
copynode -7.37675672279147:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'member -> valueOf_ter']
copynode -8.894719798801816:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'operandr -> MemberReference']
before@18 batch1 x: -10.220989306209958: root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'operandr -> MemberReference']
after@18 batch1 x: -10.220989306209958: root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'operandr -> MemberReference']
copynode -7.738323324112571:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'copy-operandr', 'arguments -> End', 'root -> End']
copynode -8.080461563760764:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Cast type ReferenceType name BigDecimal_ter ^ ^ ^ ^ expression MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'root -> End']
copynode -7.86548001760093:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -8.354841830427176:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ Cast type ReferenceType name NumberFormatException_ter ^ ^ ^ ^ expression MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> Cast', 'Cast -> type expression', 'type -> ReferenceType', 'copy-ReferenceType', 'expression -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'root -> End']
copynode -8.450867290361202:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'copy-operandr', 'arguments -> End', 'root -> End']
copynode -8.45949870136974:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -8.3105023677781:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -9.938991267918027:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'copy-operandr', 'arguments -> End']
copynode -7.86548001760093:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter']
copynode -8.3105023677781:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0']
copynode -10.036363179548061:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'member -> equals_ter', 'arguments -> End']
copynode -10.06944652342645:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'operandr -> Literal', 'Literal -> value']
copynode -10.152337605817593:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'member -> valueOf_ter', 'arguments -> End']
before@19 batch1 x: -10.179058640016592: root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'member -> valueOf_ter', 'arguments -> End']
after@19 batch1 x: -10.179058640016592: root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'member -> valueOf_ter', 'arguments -> End']
copynode -8.196323794065393:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End']
copynode -8.81173148540256:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End']
copynode -8.833246427340782:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -9.968793415217078:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'copy-operandr', 'arguments -> End', 'root -> End']
copynode -9.989507985053933:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End']
copynode -10.026039439006126:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End']
copynode -10.06824835644511:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member equals_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'member -> equals_ter', 'arguments -> End', 'root -> End']
copynode -10.179058640016592:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ MethodInvocation qualifier unknown ^ ^ arguments MemberReference member par0 ^ ^ ^ ^ member valueOf_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'member -> valueOf_ter', 'arguments -> End', 'root -> End']
copynode -10.074586005634046:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> 1_ter']
before@20 batch1 x: -10.375452073043562: root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> 1_ter']
after@20 batch1 x: -10.375452073043562: root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> 1_ter']
copynode -8.223606853498495:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'root -> End']
copynode -8.8372995180398:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par1 ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par1', 'operandr -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'root -> End']
copynode -8.862233779145754:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member unknown ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'root -> End']
copynode -10.016810829503811:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> Literal', 'Literal -> value', 'value -> 0_ter', 'arguments -> End', 'root -> End']
copynode -10.053235645158566:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MemberReference member par0 ^ ^ ^ ^ operandr MemberReference member par0 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> par0', 'operandr -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> End', 'root -> End']
copynode -10.375452073043562:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End']
before@21 batch1 x: -10.406489582484937: root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End']
after@21 batch1 x: -10.406489582484937: root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End']
copynode -10.406489582484937:  root modified ^ ReturnStatement expression ClassCreator type ReferenceType name BigDecimal_ter ^ ^ ^ ^ arguments MemberReference member par0 ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier par0 ^ ^ member unknown ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> ClassCreator', 'ClassCreator -> type arguments', 'type -> ReferenceType', 'copy-ReferenceType', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> par0', 'arguments -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> +_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> par0', 'start -> unknown', 'operandr -> Literal', 'Literal -> value', 'value -> 1_ter', 'arguments -> End', 'root -> End']
method
str_ter {'hexDigits_ter': 'int'}
str_ter LONG_ZERO
str_ter LONG_ONE
str_ter LONG_MINUS_ONE
str_ter INTEGER_ZERO
str_ter INTEGER_ONE
str_ter INTEGER_MINUS_ONE
str_ter SHORT_ZERO
str_ter SHORT_ONE
str_ter SHORT_MINUS_ONE
str_ter BYTE_ZERO
str_ter BYTE_ONE
str_ter BYTE_MINUS_ONE
str_ter DOUBLE_ZERO
str_ter DOUBLE_ONE
str_ter DOUBLE_MINUS_ONE
str_ter FLOAT_ZERO
str_ter FLOAT_ONE
str_ter FLOAT_MINUS_ONE
7 
int  toInt startsWith_ter
int  toInt startsWith_ter
long  toLong startsWith_ter
long  toLong startsWith_ter
float  toFloat startsWith_ter
float  toFloat startsWith_ter
double  toDouble startsWith_ter
double  toDouble startsWith_ter
byte  toByte startsWith_ter
byte  toByte startsWith_ter
short  toShort startsWith_ter
short  toShort startsWith_ter
Number  createNumber startsWith_ter
boolean  isAllZeros startsWith_ter
Float  createFloat startsWith_ter
Double  createDouble startsWith_ter
Integer  createInteger startsWith_ter
Long  createLong startsWith_ter
BigInteger  createBigInteger startsWith_ter
BigDecimal  createBigDecimal startsWith_ter
long  min startsWith_ter
int  min startsWith_ter
short  min startsWith_ter
byte  min startsWith_ter
double  min startsWith_ter
float  min startsWith_ter
long  max startsWith_ter
int  max startsWith_ter
short  max startsWith_ter
byte  max startsWith_ter
double  max startsWith_ter
float  max startsWith_ter
long  min startsWith_ter
int  min startsWith_ter
short  min startsWith_ter
byte  min startsWith_ter
double  min startsWith_ter
float  min startsWith_ter
long  max startsWith_ter
int  max startsWith_ter
short  max startsWith_ter
byte  max startsWith_ter
double  max startsWith_ter
float  max startsWith_ter
boolean  isDigits startsWith_ter
boolean  isNumber startsWith_ter
method
7 
method
7 
6 str_ter
method
str_ter {'str_ter': 'String'}
7 String
method
7 
int  toInt 
int  toInt 
long  toLong 
long  toLong 
float  toFloat 
float  toFloat 
double  toDouble 
double  toDouble 
byte  toByte 
byte  toByte 
short  toShort 
short  toShort 
Number  createNumber 
boolean  isAllZeros 
Float  createFloat 
Double  createDouble 
Integer  createInteger 
Long  createLong 
BigInteger  createBigInteger 
BigDecimal  createBigDecimal 
long  min 
int  min 
short  min 
byte  min 
double  min 
float  min 
long  max 
int  max 
short  max 
byte  max 
double  max 
float  max 
long  min 
int  min 
short  min 
byte  min 
double  min 
float  min 
long  max 
int  max 
short  max 
byte  max 
double  max 
float  max 
boolean  isDigits 
boolean  isNumber 
6 str_ter
method
7 
6 str_ter
method
7 
6 str_ter
method
str_ter {'str_ter': 'String'}
7 String
method
7 
method
7 
method
7 
int  toInt 
int  toInt 
long  toLong 
long  toLong 
float  toFloat 
float  toFloat 
double  toDouble 
double  toDouble 
byte  toByte 
byte  toByte 
short  toShort 
short  toShort 
Number  createNumber 
boolean  isAllZeros 
Float  createFloat 
Double  createDouble 
Integer  createInteger 
Long  createLong 
BigInteger  createBigInteger 
BigDecimal  createBigDecimal 
long  min 
int  min 
short  min 
byte  min 
double  min 
float  min 
long  max 
int  max 
short  max 
byte  max 
double  max 
float  max 
long  min 
int  min 
short  min 
byte  min 
double  min 
float  min 
long  max 
int  max 
short  max 
byte  max 
double  max 
float  max 
boolean  isDigits 
boolean  isNumber 
method
StringUtils_ter {'str_ter': 'String'}
StringUtils_ter LONG_ZERO
StringUtils_ter LONG_ONE
StringUtils_ter LONG_MINUS_ONE
StringUtils_ter INTEGER_ZERO
StringUtils_ter INTEGER_ONE
StringUtils_ter INTEGER_MINUS_ONE
StringUtils_ter SHORT_ZERO
StringUtils_ter SHORT_ONE
StringUtils_ter SHORT_MINUS_ONE
StringUtils_ter BYTE_ZERO
StringUtils_ter BYTE_ONE
StringUtils_ter BYTE_MINUS_ONE
StringUtils_ter DOUBLE_ZERO
StringUtils_ter DOUBLE_ONE
StringUtils_ter DOUBLE_MINUS_ONE
StringUtils_ter FLOAT_ZERO
StringUtils_ter FLOAT_ONE
StringUtils_ter FLOAT_MINUS_ONE
7 
int  toInt 
int  toInt 
long  toLong 
long  toLong 
float  toFloat 
float  toFloat 
double  toDouble 
double  toDouble 
byte  toByte 
byte  toByte 
short  toShort 
short  toShort 
Number  createNumber 
boolean  isAllZeros 
Float  createFloat 
Double  createDouble 
Integer  createInteger 
Long  createLong 
BigInteger  createBigInteger 
BigDecimal  createBigDecimal 
long  min 
int  min 
short  min 
byte  min 
double  min 
float  min 
long  max 
int  max 
short  max 
byte  max 
double  max 
float  max 
long  min 
int  min 
short  min 
byte  min 
double  min 
float  min 
long  max 
int  max 
short  max 
byte  max 
double  max 
float  max 
boolean  isDigits 
boolean  isNumber 
method
7 
method
7 
method
7 
method
7 
method
7 
method
7 
int  toInt 
int  toInt 
long  toLong 
long  toLong 
float  toFloat 
float  toFloat 
double  toDouble 
double  toDouble 
byte  toByte 
byte  toByte 
short  toShort 
short  toShort 
Number  createNumber 
boolean  isAllZeros 
Float  createFloat 
Double  createDouble 
Integer  createInteger 
Long  createLong 
BigInteger  createBigInteger 
BigDecimal  createBigDecimal 
long  min 
int  min 
short  min 
byte  min 
double  min 
float  min 
long  max 
int  max 
short  max 
byte  max 
double  max 
float  max 
long  min 
int  min 
short  min 
byte  min 
double  min 
float  min 
long  max 
int  max 
short  max 
byte  max 
double  max 
float  max 
boolean  isDigits 
boolean  isNumber 
method
7 
int  toInt 
int  toInt 
long  toLong 
long  toLong 
float  toFloat 
float  toFloat 
double  toDouble 
double  toDouble 
byte  toByte 
byte  toByte 
short  toShort 
short  toShort 
Number  createNumber 
boolean  isAllZeros 
Float  createFloat 
Double  createDouble 
Integer  createInteger 
Long  createLong 
BigInteger  createBigInteger 
BigDecimal  createBigDecimal 
long  min 
int  min 
short  min 
byte  min 
double  min 
float  min 
long  max 
int  max 
short  max 
byte  max 
double  max 
float  max 
long  min 
int  min 
short  min 
byte  min 
double  min 
float  min 
long  max 
int  max 
short  max 
byte  max 
double  max 
float  max 
boolean  isDigits 
boolean  isNumber 
method
7 
int  toInt 
int  toInt 
long  toLong 
long  toLong 
float  toFloat 
float  toFloat 
double  toDouble 
double  toDouble 
byte  toByte 
byte  toByte 
short  toShort 
short  toShort 
Number  createNumber 
boolean  isAllZeros 
Float  createFloat 
Double  createDouble 
Integer  createInteger 
Long  createLong 
BigInteger  createBigInteger 
BigDecimal  createBigDecimal 
long  min 
int  min 
short  min 
byte  min 
double  min 
float  min 
long  max 
int  max 
short  max 
byte  max 
double  max 
float  max 
long  min 
int  min 
short  min 
byte  min 
double  min 
float  min 
long  max 
int  max 
short  max 
byte  max 
double  max 
float  max 
boolean  isDigits 
boolean  isNumber 
6 str_ter
method
7 
method
StringUtils_ter {'str_ter': 'String'}
StringUtils_ter LONG_ZERO
StringUtils_ter LONG_ONE
StringUtils_ter LONG_MINUS_ONE
StringUtils_ter INTEGER_ZERO
StringUtils_ter INTEGER_ONE
StringUtils_ter INTEGER_MINUS_ONE
StringUtils_ter SHORT_ZERO
StringUtils_ter SHORT_ONE
StringUtils_ter SHORT_MINUS_ONE
StringUtils_ter BYTE_ZERO
StringUtils_ter BYTE_ONE
StringUtils_ter BYTE_MINUS_ONE
StringUtils_ter DOUBLE_ZERO
StringUtils_ter DOUBLE_ONE
StringUtils_ter DOUBLE_MINUS_ONE
StringUtils_ter FLOAT_ZERO
StringUtils_ter FLOAT_ONE
StringUtils_ter FLOAT_MINUS_ONE
7 
method
StringUtils_ter {'str_ter': 'String'}
StringUtils_ter LONG_ZERO
StringUtils_ter LONG_ONE
StringUtils_ter LONG_MINUS_ONE
StringUtils_ter INTEGER_ZERO
StringUtils_ter INTEGER_ONE
StringUtils_ter INTEGER_MINUS_ONE
StringUtils_ter SHORT_ZERO
StringUtils_ter SHORT_ONE
StringUtils_ter SHORT_MINUS_ONE
StringUtils_ter BYTE_ZERO
StringUtils_ter BYTE_ONE
StringUtils_ter BYTE_MINUS_ONE
StringUtils_ter DOUBLE_ZERO
StringUtils_ter DOUBLE_ONE
StringUtils_ter DOUBLE_MINUS_ONE
StringUtils_ter FLOAT_ZERO
StringUtils_ter FLOAT_ONE
StringUtils_ter FLOAT_MINUS_ONE
7 
method
str_ter {'str_ter': 'String'}
7 String
stderr: Check out program version: Lang-7b......................................... OK
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Running ant (export.dir.src.classes)....................................... OK

  0%|          | 0/1 [00:00<?, ?it/s]/root/projects/Recoder-bwk/run.py:527: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  tmpdepth = np.array(tmpdepth)
/root/envs/recoder/lib/python3.7/site-packages/torch/nn/functional.py:1340: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
Traceback (most recent call last):
  File "/root/projects/Recoder-bwk/run.py", line 1143, in solveone
    tcodes = solveUnknown(ans[i][j], vardic, typedic, rrdicts, classname, mode)
  File "/root/projects/Recoder-bwk/run.py", line 1023, in solveUnknown
    for x in classbody[0]['fields']:
KeyError: 'fields'
100%|██████████| 1/1 [00:33<00:00, 33.63s/it]100%|██████████| 1/1 [00:33<00:00, 33.63s/it]
