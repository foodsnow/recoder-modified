stdout: LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member JANUARY_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.JANUARY)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member FEBRUARY_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.FEBRUARY)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MARCH_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.MARCH)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member APRIL_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.APRIL)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MAY_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.MAY)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member JUNE_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.JUNE)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member JULY_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.JULY)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member AUGUST_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.AUGUST)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member SEPTEMBER_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.SEPTEMBER)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member OCTOBER_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.OCTOBER)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member NOVEMBER_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.NOVEMBER)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member DECEMBER_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.DECEMBER)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MONDAY_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.MONDAY)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member TUESDAY_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.TUESDAY)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member WEDNESDAY_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.WEDNESDAY)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member THURSDAY_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.THURSDAY)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member FRIDAY_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.FRIDAY)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member SATURDAY_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.SATURDAY)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member SUNDAY_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.SUNDAY)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member AM_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.AM)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member PM_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.PM)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member BC_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.BC)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member BCE_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.BCE)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member AD_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.AD)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member CE_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.CE)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_SECOND_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.MILLIS_PER_SECOND)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member SECONDS_PER_MINUTE_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.SECONDS_PER_MINUTE)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_MINUTE_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.MILLIS_PER_MINUTE)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MINUTES_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.MINUTES_PER_HOUR)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member SECONDS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.SECONDS_PER_HOUR)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.MILLIS_PER_HOUR)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member HOURS_PER_DAY_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.HOURS_PER_DAY)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MINUTES_PER_DAY_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.MINUTES_PER_DAY)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member SECONDS_PER_DAY_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.SECONDS_PER_DAY)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_DAY_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.MILLIS_PER_DAY)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member DAYS_PER_WEEK_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.DAYS_PER_WEEK)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member HOURS_PER_WEEK_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.HOURS_PER_WEEK)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MINUTES_PER_WEEK_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.MINUTES_PER_WEEK)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member SECONDS_PER_WEEK_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.SECONDS_PER_WEEK)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_WEEK_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.MILLIS_PER_WEEK)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 1_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (1 * DateTimeConstants.MILLIS_PER_HOUR)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (2 * DateTimeConstants.MILLIS_PER_HOUR)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 0_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (0 * DateTimeConstants.MILLIS_PER_HOUR)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator +_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant + (3 * DateTimeConstants.MILLIS_PER_HOUR)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member earlierOrLater_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((earlierOrLater - (3 * DateTimeConstants.MILLIS_PER_HOUR)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments MemberReference member instant_ter ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal(instant);

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((3 * DateTimeConstants.MILLIS_PER_HOUR));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator -_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 - DateTimeConstants.MILLIS_PER_HOUR)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.MILLIS_PER_HOUR)), 0);

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference member instant_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * instant)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant / (3 * DateTimeConstants.MILLIS_PER_HOUR)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * MILLIS_PER_HOUR)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator *_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant * (3 * DateTimeConstants.MILLIS_PER_HOUR)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ MemberReference member earlierOrLater_ter ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.MILLIS_PER_HOUR)), earlierOrLater);

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator %_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant % (3 * DateTimeConstants.MILLIS_PER_HOUR)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments MemberReference member local_ter ^ ^ ^ Literal value false_ter ^ ^ ^ TernaryExpression condition MemberReference member earlierOrLater_ter ^ ^ ^ ^ if_true MemberReference member instantAfter_ter ^ ^ ^ ^ if_false MemberReference member instantBefore_ter ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal(local, false, (earlierOrLater)?instantAfter:instantBefore);

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.MILLIS_PER_HOUR)), 1);

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference member earlierOrLater_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * earlierOrLater)));

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
final long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.MILLIS_PER_HOUR)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal();

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ Literal value 2_ter ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.MILLIS_PER_HOUR)), 2);

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator <=_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant <= (3 * DateTimeConstants.MILLIS_PER_HOUR)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((3 * (3 * DateTimeConstants.MILLIS_PER_HOUR)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator +_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 + DateTimeConstants.MILLIS_PER_HOUR)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ Literal value 3_ter ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.MILLIS_PER_HOUR)), 3);

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instantBefore_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instantBefore - (3 * DateTimeConstants.MILLIS_PER_HOUR)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator /_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((3 / (3 * DateTimeConstants.MILLIS_PER_HOUR)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MemberReference member instant_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = instant;

StatementExpression expression MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ 
convertUTCToLocal((instant - (3 * DateTimeConstants.MILLIS_PER_HOUR)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value false_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (false * DateTimeConstants.MILLIS_PER_HOUR)));

IfStatement condition MethodInvocation member isFixed_ter ^ ^ ^ ^ ^ 
ReturnStatement expression MemberReference member instant_ter ^ ^ ^ ^ ^ 
if(isFixed()){
return instant;}
LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator -_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member instant_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant - (3 * DateTimeConstants.instant)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator >>_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant >> (3 * DateTimeConstants.MILLIS_PER_HOUR)));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator *_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant * DateTimeConstants.MILLIS_PER_HOUR));

IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member earlierOrLater_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
ReturnStatement expression MemberReference member instant_ter ^ ^ ^ ^ ^ 
if((earlierOrLater == null)){
return instant;}
LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator /_ter ^ ^ operandl MemberReference member instant_ter ^ ^ ^ ^ operandr MemberReference qualifier DateTimeConstants_ter ^ ^ member MILLIS_PER_HOUR_ter ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((instant / DateTimeConstants.MILLIS_PER_HOUR));

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name instantBefore_ter ^ ^ initializer MethodInvocation arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 3_ter ^ ^ ^ ^ operandr MemberReference member instant_ter ^ ^ ^ ^ ^ ^ member convertUTCToLocal_ter ^ ^ ^ ^ ^ ^ ^ 
long instantBefore = convertUTCToLocal((3 * instant));

stderr: 