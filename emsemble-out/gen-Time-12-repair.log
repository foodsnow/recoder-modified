stdout: LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier YEAR_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(YEAR.YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MONTH_OF_YEAR_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(MONTH_OF_YEAR.YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier DAY_OF_MONTH_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(DAY_OF_MONTH.YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier iHash_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(iHash.YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member size_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(size().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member hashCode_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(hashCode().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getEra_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getEra().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getCenturyOfEra_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getCenturyOfEra().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getYearOfEra_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getYearOfEra().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getYearOfCentury_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getYearOfCentury().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getYear_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getYear().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getWeekyear_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getWeekyear().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getMonthOfYear_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getMonthOfYear().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getWeekOfWeekyear_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getWeekOfWeekyear().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getDayOfYear_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getDayOfYear().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getDayOfMonth_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getDayOfMonth().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getDayOfWeek_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getDayOfWeek().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference member MONTH_OF_YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(MONTH_OF_YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference member DAY_OF_MONTH_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(DAY_OF_MONTH);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference member iHash_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(iHash);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference member calendar_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(calendar);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(Calendar.YEAR);

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
long yearOfEra = calendar.get(Calendar.YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(0);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member fromCalendarFields_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.fromCalendarFields(Calendar.YEAR);

ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ 
if (true) { return null; }

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member MONTH_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(Calendar.MONTH);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier yearOfEra_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = yearOfEra.get(Calendar.YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member DAY_OF_MONTH_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(Calendar.DAY_OF_MONTH);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get();

LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
final int yearOfEra = calendar.get(Calendar.YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(calendar.YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier par1 ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = .get(Calendar.YEAR);


LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference member yearOfEra_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(yearOfEra);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(1);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member DAY_OF_MONTH_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(calendar.get(Calendar.DAY_OF_MONTH));

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer Cast type BasicType name int_ter ^ ^ ^ ^ expression MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = (int)calendar.get(Calendar.YEAR);

IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member calendar_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ 
if((calendar == null)){
return null;}
LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference member MONTH_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(MONTH);

ReturnStatement expression MemberReference member calendar_ter ^ ^ ^ ^ ^ 
if (true) { return calendar; }

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member MONTH_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get((calendar.get(Calendar.MONTH) + 1));

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member calendar_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(Calendar.calendar);

ReturnStatement_ter ^ 
if (true) { return;
 }

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation arguments MemberReference member calendar_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = get(calendar);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MemberReference member calendar_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar;

StatementExpression expression MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ 
calendar.get(Calendar.YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(Calendar.YEAR, Calendar.YEAR);

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member calendar_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((calendar != null)){

IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member calendar_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((calendar == null)){

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments This_ter ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(this);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = Calendar.YEAR;

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MethodInvocation qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(Calendar.YEAR());

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member MONTH_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(calendar.get(Calendar.MONTH));

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.add(Calendar.YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get("null");

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member debug_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.debug(Calendar.YEAR);

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments MemberReference member yearOfEra_ter ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member MONTH_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member DAY_OF_MONTH_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
if (true) { return new LocalDate(yearOfEra, (calendar.get(Calendar.MONTH) + 1), calendar.get(Calendar.DAY_OF_MONTH)); }

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate((date.getYear() + 0), (date.getMonth() + 1), date.getDate());

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate((date.getYear() + 2), (date.getMonth() + 1), date.getDate());

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate((date.getYear() + 1900), (date.getMonth() + 0), date.getDate());

ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ ^ ^ 
return (date.getYear() + 1900);

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate((date.getYear() + 1900), (date.getMonth() + 2), date.getDate());

ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ 
return (date.getMonth() + 1);

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member fromDateFields_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate((date.getYear() + 1900), (date.getMonth() + 1), date.fromDateFields());

ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ 
if (true) { return null; }

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member fromDateFields_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate((date.getYear() + 1900), (date.fromDateFields() + 1), date.getDate());

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate((date.getYear() + 1900), (date.getMonth() + 1), date.getDate());

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value false_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate((date.getYear() + false), (date.getMonth() + 1), date.getDate());

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate((date.getYear() + -1), (date.getMonth() + 1), date.getDate());

ReturnStatement expression MemberReference member date_ter ^ ^ ^ ^ ^ 
return date;

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate((date.getYear() + 1900), date.getDate());

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate(date.getDate(), date.getDate());

ReturnStatement_ter ^ 
if (true) { return;
 }

ReturnStatement expression MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ ^ 
return date.getDate();

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate((date.getMonth() + 1), date.getDate());

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator -_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate((date.getYear() + 1900), (date.getMonth() - 1), date.getDate());

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member fromDateFields_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate((date.fromDateFields() + 1900), (date.getMonth() + 1), date.getDate());

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate(date.getDate());

IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member date_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((date == null)){

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate((date.getYear() + 1900));

ReturnStatement expression MemberReference member date_ter ^ ^ ^ ^ ^ 
if (true) { return date; }

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getName_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate((date.getYear() + 1900), (date.getMonth() + 1), date.getName());

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate((date.getYear() + null), (date.getMonth() + 1), date.getDate());

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate((date.getMonth() + 1));

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate(date.getDate(), date.getDate(), date.getDate());

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate((date.getYear() + 1900), date.getDate(), date.getDate());

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate((date.getYear() + "null"), (date.getMonth() + 1), date.getDate());

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments MemberReference member date_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate(date);

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getName_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate((date.getYear() + 1900), (date.getName() + 1), date.getDate());

ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ ^ ^ 
return ((date.getYear() + 1900) + 1900);

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate((date.getMonth() + 1), date.getDate(), date.getDate());

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate();

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value true_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate((date.getYear() + true), (date.getMonth() + 1), date.getDate());

IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member date_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ 
if((date == null)){
return null;}
ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate((date.getYear() + 1), (date.getMonth() + 1), date.getDate());

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate((date.getYear() + 1900), (date.getMonth() + 1), date.getMonth());

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments Literal value <string>_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate("null");

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments MemberReference member date_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate(date, date.getDate());

ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ ^ ^ 
return ((date.getMonth() + 1) + 1900);

ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr MemberReference member date_ter ^ ^ ^ ^ ^ ^ ^ 
return (date.getYear() + date);

ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ ^ ^ ^ 
return (date.getYear() + date.getDate());

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate((date.getYear() + 1900), (date.getMonth() + 1900), date.getDate());

ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ ^ ^ 
return (date.getDate() + 1900);

ReturnStatement expression ClassCreator type ReferenceType name LocalDate_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ MemberReference member date_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDate((date.getYear() + 1900), date);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier YEAR_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(YEAR.YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MONTH_OF_YEAR_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(MONTH_OF_YEAR.YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier DAY_OF_MONTH_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(DAY_OF_MONTH.YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MILLIS_OF_DAY_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(MILLIS_OF_DAY.YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member size_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(size().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getEra_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getEra().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getCenturyOfEra_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getCenturyOfEra().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getYearOfEra_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getYearOfEra().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getYearOfCentury_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getYearOfCentury().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getYear_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getYear().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getWeekyear_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getWeekyear().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getMonthOfYear_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getMonthOfYear().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getWeekOfWeekyear_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getWeekOfWeekyear().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getDayOfYear_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getDayOfYear().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getDayOfMonth_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getDayOfMonth().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getDayOfWeek_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getDayOfWeek().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getHourOfDay_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getHourOfDay().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getMinuteOfHour_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getMinuteOfHour().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getSecondOfMinute_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getSecondOfMinute().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getMillisOfSecond_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getMillisOfSecond().YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getMillisOfDay_ter ^ ^ ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(getMillisOfDay().YEAR);

LocalVariableDeclaration type BasicType name long_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
long yearOfEra = calendar.get(Calendar.YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(Calendar.YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference member MONTH_OF_YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(MONTH_OF_YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference member DAY_OF_MONTH_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(DAY_OF_MONTH);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference member MILLIS_OF_DAY_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(MILLIS_OF_DAY);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference member calendar_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(calendar);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member fromCalendarFields_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.fromCalendarFields(Calendar.YEAR);

ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ 
if (true) { return null; }

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments Literal value 0_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(0);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get();

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier yearOfEra_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = yearOfEra.get(Calendar.YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier par1 ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = .get(Calendar.YEAR);


LocalVariableDeclaration modifiers final_ter ^ ^ type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
final int yearOfEra = calendar.get(Calendar.YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(calendar.YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference member yearOfEra_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(yearOfEra);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member MONTH_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get((calendar.get(Calendar.MONTH) + 1));

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments Literal value 1_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(1);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(Calendar.YEAR, Calendar.YEAR);

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments MemberReference member yearOfEra_ter ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member MONTH_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member DAY_OF_MONTH_ter ^ ^ ^ ^ member get_ter ^ ^ ^ MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member HOUR_OF_DAY_ter ^ ^ ^ ^ member get_ter ^ ^ ^ MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member MINUTE_ter ^ ^ ^ ^ member get_ter ^ ^ ^ MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member SECOND_ter ^ ^ ^ ^ member get_ter ^ ^ ^ MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member MILLISECOND_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
if (true) { return new LocalDateTime(yearOfEra, (calendar.get(Calendar.MONTH) + 1), calendar.get(Calendar.DAY_OF_MONTH), calendar.get(Calendar.HOUR_OF_DAY), calendar.get(Calendar.MINUTE), calendar.get(Calendar.SECOND), calendar.get(Calendar.MILLISECOND)); }

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member MONTH_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(Calendar.MONTH);

ReturnStatement expression MemberReference member calendar_ter ^ ^ ^ ^ ^ 
if (true) { return calendar; }

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member DAY_OF_MONTH_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(Calendar.DAY_OF_MONTH);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer Cast type BasicType name int_ter ^ ^ ^ ^ expression MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = (int)calendar.get(Calendar.YEAR);

IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member calendar_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ 
if((calendar == null)){
return null;}
ReturnStatement_ter ^ 
if (true) { return;
 }

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member debug_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.debug(Calendar.YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MemberReference member calendar_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar;

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member HOUR_OF_DAY_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(Calendar.HOUR_OF_DAY);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member max_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.max(Calendar.YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member DAY_OF_MONTH_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(calendar.get(Calendar.DAY_OF_MONTH));

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.add(Calendar.YEAR);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member MILLISECOND_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(Calendar.MILLISECOND);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation arguments MemberReference member calendar_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = get(calendar);

IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member calendar_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((calendar != null)){

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference member MONTH_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(MONTH);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member MINUTE_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(calendar.get(Calendar.MINUTE));

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member SECOND_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(calendar.get(Calendar.SECOND));

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member SECOND_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(Calendar.SECOND);

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member HOUR_OF_DAY_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(calendar.get(Calendar.HOUR_OF_DAY));

StatementExpression expression MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ 
calendar.get(Calendar.YEAR);

IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member calendar_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((calendar == null)){

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference qualifier Calendar_ter ^ ^ member MONTH_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(calendar.get(Calendar.MONTH));

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MemberReference qualifier Calendar_ter ^ ^ member YEAR_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = Calendar.YEAR;

LocalVariableDeclaration type BasicType name int_ter ^ ^ ^ ^ declarators VariableDeclarator name yearOfEra_ter ^ ^ initializer MethodInvocation qualifier calendar_ter ^ ^ arguments MemberReference member SECOND_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
int yearOfEra = calendar.get(SECOND);

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 0), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) % 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 2), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) % 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1) % 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 0) % 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 2) % 1000));

ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ ^ ^ 
return (date.getYear() + 1900);

ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ ^ 
return (date.getMonth() + 1);

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getName_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getName(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) % 1000));

ReturnStatement expression BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ 
return (((int)(date.getTime() % 1000) + 1000) % 1000);

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator <=_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) <= 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getName_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getMinutes(), date.getName(), (((int)(date.getTime() % 1000) + 1000) % 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getName_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getName(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) % 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator -_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) - 1000));

ReturnStatement expression BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ 
return ((int)(date.getTime() % 1000) + 1000);

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator >=_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) >= 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getName_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), (((int)(date.getName() % 1000) + 1000) % 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) % 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member fromDateFields_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.fromDateFields(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) % 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1000), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) % 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member fromDateFields_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getMinutes(), date.fromDateFields(), (((int)(date.getTime() % 1000) + 1000) % 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getName_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getName(), date.getHours(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) % 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member fromDateFields_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getHours(), date.fromDateFields(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) % 1000));

ReturnStatement_ter ^ 
if (true) { return;
 }

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member toString_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.toString(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) % 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) + 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator >_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) > 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getMinutes(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) % 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getSeconds(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) % 1000));

ReturnStatement expression Literal value null_ter ^ ^ ^ ^ ^ 
if (true) { return null; }

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1900) % 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member fromDateFields_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.fromDateFields(), date.getHours(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) % 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator >>_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) >> 1000));

IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member date_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ 
if((date == null)){

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getTime(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) % 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator ==_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) == 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value <string>_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + "null"), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) % 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getMinutes(), date.getMinutes(), (((int)(date.getTime() % 1000) + 1000) % 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getMonth(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) % 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator <_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) < 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member fromDateFields_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), (((int)(date.fromDateFields() % 1000) + 1000) % 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getSeconds(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) % 1000));

IfStatement condition BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ 
if(((int)(date.getTime() % 1000) + 1000)){

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value false_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + false), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) % 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member toString_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getHours(), date.toString(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) % 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member toString_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getMinutes(), date.toString(), (((int)(date.getTime() % 1000) + 1000) % 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getDate(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) % 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getSeconds_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + null), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), (((int)(date.getTime() % 1000) + 1000) % 1000));

ReturnStatement expression ClassCreator type ReferenceType name LocalDateTime_ter ^ ^ ^ ^ arguments BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getYear_ter ^ ^ ^ ^ operandr Literal value 1900_ter ^ ^ ^ ^ ^ BinaryOperation operator +_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getMonth_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getDate_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getMinutes_ter ^ ^ ^ MethodInvocation qualifier date_ter ^ ^ member getHours_ter ^ ^ ^ BinaryOperation operator %_ter ^ ^ operandl BinaryOperation operator +_ter ^ ^ operandl Cast type BasicType name int_ter ^ ^ ^ ^ expression BinaryOperation operator %_ter ^ ^ operandl MethodInvocation qualifier date_ter ^ ^ member getTime_ter ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ operandr Literal value 1000_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ 
arg 
arg 
return new LocalDateTime((date.getYear() + 1900), (date.getMonth() + 1), date.getDate(), date.getHours(), date.getMinutes(), date.getHours(), (((int)(date.getTime() % 1000) + 1000) % 1000));

stderr: 