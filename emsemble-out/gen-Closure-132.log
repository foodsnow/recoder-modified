stdout: else_statement -> BlockStatement
using GPU
p
path com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax
tryMinimizeIf
Position(line=636, column=11)
FOUND IT!
[{'bugid': 'Closure-132', 'treeroot': <Searchnode.Node object at 0x7f8b3041aad0>, 'troot': <Searchnode.Node object at 0x7f8b1e4643d0>, 'oldcode': "          if (areNodesEqualForInlining(lhs, elseOp.getFirstChild()) &&\n              // if LHS has side effects, don't proceed [since the optimization\n              // evaluates LHS before cond]\n              // NOTE - there are some circumstances where we can\n              // proceed even if there are side effects...\n              !mayEffectMutableState(lhs)) {", 'filepath': 'buggy/Closure-132/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java', 'subroot': <Searchnode.Node object at 0x7f8b2d4e78d0>, 'vardic': {'tryMinimizeIf_ter': 'meth0', 'thenOp_ter': 'loc0', 'elseOp_ter': 'loc1', 'lhs_ter': 'loc2', 'assignName_ter': 'loc3', 'thenExpr_ter': 'loc4', 'elseExpr_ter': 'loc5', 'hookNode_ter': 'loc6', 'assign_ter': 'loc7', 'expr_ter': 'loc9', 'thenBranchIsVar_ter': 'loc10', 'elseBranchIsExpressionBlock_ter': 'loc14'}, 'typedic': {'thenOp_ter': 'Node', 'elseOp_ter': 'Node', 'lhs_ter': 'Node', 'assignName_ter': 'Node', 'thenExpr_ter': 'Node', 'elseExpr_ter': 'Node', 'hookNode_ter': 'Node', 'assign_ter': 'Node', 'expr_ter': 'Node', 'thenBranchIsVar_ter': 'boolean', 'elseBranchIsExpressionBlock_ter': 'boolean'}, 'idss': 'Closure-132', 'classname': 'com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax', 'precode': '/*\n * Copyright 2010 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npackage com.google.javascript.jscomp;\n\nimport com.google.common.base.Joiner;\nimport com.google.common.base.Preconditions;\nimport com.google.common.base.Predicate;\nimport com.google.common.collect.ImmutableSet;\nimport com.google.javascript.jscomp.CodingConvention.Bind;\nimport com.google.javascript.rhino.IR;\nimport com.google.javascript.rhino.Node;\nimport com.google.javascript.rhino.Token;\nimport com.google.javascript.rhino.jstype.TernaryValue;\n\nimport java.util.regex.Pattern;\n\n/**\n * A peephole optimization that minimizes code by simplifying conditional\n * expressions, replacing IFs with HOOKs, replacing object constructors\n * with literals, and simplifying returns.\n *\n */\nclass PeepholeSubstituteAlternateSyntax\n  extends AbstractPeepholeOptimization {\n\n  private static final int AND_PRECEDENCE = NodeUtil.precedence(Token.AND);\n  private static final int OR_PRECEDENCE = NodeUtil.precedence(Token.OR);\n  private static final int NOT_PRECEDENCE = NodeUtil.precedence(Token.NOT);\n  private static final CodeGenerator REGEXP_ESCAPER =\n      CodeGenerator.forCostEstimation(\n          null /* blow up if we try to produce code */);\n\n  private final boolean late;\n\n  private final int STRING_SPLIT_OVERHEAD = ".split(\'.\')".length();\n\n  static final DiagnosticType INVALID_REGULAR_EXPRESSION_FLAGS =\n    DiagnosticType.warning(\n        "JSC_INVALID_REGULAR_EXPRESSION_FLAGS",\n        "Invalid flags to RegExp constructor: {0}");\n\n  static final Predicate<Node> DONT_TRAVERSE_FUNCTIONS_PREDICATE\n      = new Predicate<Node>() {\n    @Override\n    public boolean apply(Node input) {\n      return !input.isFunction();\n    }\n  };\n\n  /**\n   * @param late When late is false, this mean we are currently running before\n   * most of the other optimizations. In this case we would avoid optimizations\n   * that would make the code harder to analyze (such as using string splitting,\n   * merging statements with commas, etc). When this is true, we would\n   * do anything to minimize for size.\n   */\n  PeepholeSubstituteAlternateSyntax(boolean late) {\n    this.late = late;\n  }\n\n  /**\n   * Tries apply our various peephole minimizations on the passed in node.\n   */\n  @Override\n  @SuppressWarnings("fallthrough")\n  public Node optimizeSubtree(Node node) {\n    switch(node.getType()) {\n      case Token.RETURN: {\n        Node result = tryRemoveRedundantExit(node);\n        if (result != node) {\n          return result;\n        }\n        result = tryReplaceExitWithBreak(node);\n        if (result != node) {\n          return result;\n        }\n        return tryReduceReturn(node);\n      }\n\n      case Token.THROW: {\n        Node result = tryRemoveRedundantExit(node);\n        if (result != node) {\n          return result;\n        }\n        return tryReplaceExitWithBreak(node);\n      }\n\n      // TODO(johnlenz): Maybe remove redundant BREAK and CONTINUE. Overlaps\n      // with MinimizeExitPoints.\n\n      case Token.NOT:\n        tryMinimizeCondition(node.getFirstChild());\n        return tryMinimizeNot(node);\n\n      case Token.IF:\n        tryMinimizeCondition(node.getFirstChild());\n        return tryMinimizeIf(node);\n\n      case Token.EXPR_RESULT:\n        tryMinimizeCondition(node.getFirstChild());\n        return node;\n\n      case Token.HOOK:\n        tryMinimizeCondition(node.getFirstChild());\n        return node;\n\n      case Token.WHILE:\n      case Token.DO:\n        tryMinimizeCondition(NodeUtil.getConditionExpression(node));\n        return node;\n\n      case Token.FOR:\n        if (!NodeUtil.isForIn(node)) {\n          tryJoinForCondition(node);\n          tryMinimizeCondition(NodeUtil.getConditionExpression(node));\n        }\n        return node;\n\n      case Token.TRUE:\n      case Token.FALSE:\n        return reduceTrueFalse(node);\n\n      case Token.NEW:\n        node = tryFoldStandardConstructors(node);\n        if (!node.isCall()) {\n          return node;\n        }\n        // Fall through on purpose because tryFoldStandardConstructors() may\n        // convert a NEW node into a CALL node\n      case Token.CALL:\n        Node result =  tryFoldLiteralConstructor(node);\n        if (result == node) {\n          result = tryFoldSimpleFunctionCall(node);\n          if (result == node) {\n            result = tryFoldImmediateCallToBoundFunction(node);\n          }\n        }\n        return result;\n\n      case Token.COMMA:\n        return trySplitComma(node);\n\n      case Token.NAME:\n        return tryReplaceUndefined(node);\n\n      case Token.BLOCK:\n        return tryReplaceIf(node);\n\n      case Token.ARRAYLIT:\n        return tryMinimizeArrayLiteral(node);\n\n      default:\n        return node; //Nothing changed\n    }\n  }\n\n  private void tryJoinForCondition(Node n) {\n    if (!late) {\n      return;\n    }\n\n    Node block = n.getLastChild();\n    Node maybeIf = block.getFirstChild();\n    if (maybeIf != null && maybeIf.isIf()) {\n      Node maybeBreak = maybeIf.getChildAtIndex(1).getFirstChild();\n      if (maybeBreak != null && maybeBreak.isBreak()\n          && !maybeBreak.hasChildren()) {\n\n        // Preserve the IF ELSE expression is there is one.\n        if (maybeIf.getChildCount() == 3) {\n          block.replaceChild(maybeIf,\n              maybeIf.getLastChild().detachFromParent());\n        } else {\n          block.removeFirstChild();\n        }\n\n        Node ifCondition = maybeIf.removeFirstChild();\n        Node fixedIfCondition = IR.not(ifCondition)\n            .srcref(ifCondition);\n\n        // OK, join the IF expression with the FOR expression\n        Node forCondition = NodeUtil.getConditionExpression(n);\n        if (forCondition.isEmpty()) {\n          n.replaceChild(forCondition, fixedIfCondition);\n        } else {\n          Node replacement = new Node(Token.AND);\n          n.replaceChild(forCondition, replacement);\n          replacement.addChildToBack(forCondition);\n          replacement.addChildToBack(fixedIfCondition);\n        }\n\n        reportCodeChange();\n      }\n    }\n  }\n\n  private Node tryFoldSimpleFunctionCall(Node n) {\n    Preconditions.checkState(n.isCall());\n    Node callTarget = n.getFirstChild();\n    if (callTarget != null && callTarget.isName() &&\n          callTarget.getString().equals("String")) {\n      // Fold String(a) to \'\' + (a) on immutable literals,\n      // which allows further optimizations\n      //\n      // We can\'t do this in the general case, because String(a) has\n      // slightly different semantics than \'\' + (a). See\n      // http://code.google.com/p/closure-compiler/issues/detail?id=759\n      Node value = callTarget.getNext();\n      if (value != null && value.getNext() == null &&\n          NodeUtil.isImmutableValue(value)) {\n        Node addition = IR.add(\n            IR.string("").srcref(callTarget),\n            value.detachFromParent());\n        n.getParent().replaceChild(n, addition);\n        reportCodeChange();\n        return addition;\n      }\n    }\n    return n;\n  }\n\n  private Node tryFoldImmediateCallToBoundFunction(Node n) {\n    // Rewriting "(fn.bind(a,b))()" to "fn.call(a,b)" makes it inlinable\n    Preconditions.checkState(n.isCall());\n    Node callTarget = n.getFirstChild();\n    Bind bind = getCodingConvention().describeFunctionBind(callTarget, false);\n    if (bind != null) {\n      // replace the call target\n      bind.target.detachFromParent();\n      n.replaceChild(callTarget, bind.target);\n      callTarget = bind.target;\n\n      // push the parameters\n      addParameterAfter(bind.parameters, callTarget);\n\n      // add the this value before the parameters if necessary\n      if (bind.thisValue != null && !NodeUtil.isUndefined(bind.thisValue)) {\n        // rewrite from "fn(a, b)" to "fn.call(thisValue, a, b)"\n        Node newCallTarget = IR.getprop(\n            callTarget.cloneTree(),\n            IR.string("call").srcref(callTarget));\n        n.replaceChild(callTarget, newCallTarget);\n        n.addChildAfter(bind.thisValue.cloneTree(), newCallTarget);\n        n.putBooleanProp(Node.FREE_CALL, false);\n      } else {\n        n.putBooleanProp(Node.FREE_CALL, true);\n      }\n      reportCodeChange();\n    }\n    return n;\n  }\n\n  private void addParameterAfter(Node parameterList, Node after) {\n    if (parameterList != null) {\n      // push the last parameter to the head of the list first.\n      addParameterAfter(parameterList.getNext(), after);\n      after.getParent().addChildAfter(parameterList.cloneTree(), after);\n    }\n  }\n\n  private Node trySplitComma(Node n) {\n    if (late) {\n      return n;\n    }\n    Node parent = n.getParent();\n    Node left = n.getFirstChild();\n    Node right = n.getLastChild();\n\n    if (parent.isExprResult()\n        && !parent.getParent().isLabel()) {\n      // split comma\n      n.detachChildren();\n      // Replace the original expression with the left operand.\n      parent.replaceChild(n, left);\n      // Add the right expression afterward.\n      Node newStatement = IR.exprResult(right);\n      newStatement.copyInformationFrom(n);\n\n      //This modifies outside the subtree, which is not\n      //desirable in a peephole optimization.\n      parent.getParent().addChildAfter(newStatement, parent);\n      reportCodeChange();\n      return left;\n    } else {\n      return n;\n    }\n  }\n\n  /**\n   * Use "return x?1:2;" in place of "if(x)return 1;return 2;"\n   */\n  private Node tryReplaceIf(Node n) {\n\n    for (Node child = n.getFirstChild();\n         child != null; child = child.getNext()){\n      if (child.isIf()){\n        Node cond = child.getFirstChild();\n        Node thenBranch = cond.getNext();\n        Node elseBranch = thenBranch.getNext();\n        Node nextNode = child.getNext();\n\n        if (nextNode != null && elseBranch == null\n            && isReturnBlock(thenBranch)\n            && nextNode.isIf()) {\n          Node nextCond = nextNode.getFirstChild();\n          Node nextThen = nextCond.getNext();\n          Node nextElse = nextThen.getNext();\n          if (thenBranch.isEquivalentToTyped(nextThen)) {\n            // Transform\n            //   if (x) return 1; if (y) return 1;\n            // to\n            //   if (x||y) return 1;\n            child.detachFromParent();\n            child.detachChildren();\n            Node newCond = new Node(Token.OR, cond);\n            nextNode.replaceChild(nextCond, newCond);\n            newCond.addChildToBack(nextCond);\n            reportCodeChange();\n          } else if (nextElse != null\n              && thenBranch.isEquivalentToTyped(nextElse)) {\n            // Transform\n            //   if (x) return 1; if (y) foo() else return 1;\n            // to\n            //   if (!x&&y) foo() else return 1;\n            child.detachFromParent();\n            child.detachChildren();\n            Node newCond = new Node(Token.AND,\n                IR.not(cond).srcref(cond));\n            nextNode.replaceChild(nextCond, newCond);\n            newCond.addChildToBack(nextCond);\n            reportCodeChange();\n          }\n        } else if (nextNode != null && elseBranch == null &&\n            isReturnBlock(thenBranch) && isReturnExpression(nextNode)) {\n          Node thenExpr = null;\n          // if(x)return; return 1 -> return x?void 0:1\n          if (isReturnExpressBlock(thenBranch)) {\n            thenExpr = getBlockReturnExpression(thenBranch);\n            thenExpr.detachFromParent();\n          } else {\n            thenExpr = NodeUtil.newUndefinedNode(child);\n          }\n\n          Node elseExpr = nextNode.getFirstChild();\n\n          cond.detachFromParent();\n          elseExpr.detachFromParent();\n\n          Node returnNode = IR.returnNode(\n                                IR.hook(cond, thenExpr, elseExpr)\n                                    .srcref(child));\n          n.replaceChild(child, returnNode);\n          n.removeChild(nextNode);\n          reportCodeChange();\n        } else if (elseBranch != null && statementMustExitParent(thenBranch)) {\n          child.removeChild(elseBranch);\n          n.addChildAfter(elseBranch, child);\n          reportCodeChange();\n        }\n      }\n    }\n    return n;\n  }\n\n  private boolean statementMustExitParent(Node n) {\n    switch (n.getType()) {\n      case Token.THROW:\n      case Token.RETURN:\n        return true;\n      case Token.BLOCK:\n        if (n.hasChildren()) {\n          Node child = n.getLastChild();\n          return statementMustExitParent(child);\n        }\n        return false;\n      // TODO(johnlenz): handle TRY/FINALLY\n      case Token.FUNCTION:\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Use "void 0" in place of "undefined"\n   */\n  private Node tryReplaceUndefined(Node n) {\n    // TODO(johnlenz): consider doing this as a normalization.\n    if (isASTNormalized()\n        && NodeUtil.isUndefined(n)\n        && !NodeUtil.isLValue(n)) {\n      Node replacement = NodeUtil.newUndefinedNode(n);\n      n.getParent().replaceChild(n, replacement);\n      reportCodeChange();\n      return replacement;\n    }\n    return n;\n  }\n\n  /**\n   * Reduce "return undefined" or "return void 0" to simply "return".\n   *\n   * @return The original node, maybe simplified.\n   */\n  private Node tryReduceReturn(Node n) {\n    Node result = n.getFirstChild();\n\n    if (result != null) {\n      switch (result.getType()) {\n        case Token.VOID:\n          Node operand = result.getFirstChild();\n          if (!mayHaveSideEffects(operand)) {\n            n.removeFirstChild();\n            reportCodeChange();\n          }\n          break;\n        case Token.NAME:\n          String name = result.getString();\n          if (name.equals("undefined")) {\n            n.removeFirstChild();\n            reportCodeChange();\n          }\n          break;\n      }\n    }\n\n    return n;\n  }\n\n  /**\n   * Replace duplicate exits in control structures.  If the node following\n   * the exit node expression has the same effect as exit node, the node can\n   * be replaced or removed.\n   * For example:\n   *   "while (a) {return f()} return f();" ==> "while (a) {break} return f();"\n   *   "while (a) {throw \'ow\'} throw \'ow\';" ==> "while (a) {break} throw \'ow\';"\n   *\n   * @param n An follow control exit expression (a THROW or RETURN node)\n   * @return The replacement for n, or the original if no change was made.\n   */\n  private Node tryReplaceExitWithBreak(Node n) {\n    Node result = n.getFirstChild();\n\n    // Find the enclosing control structure, if any, that a "break" would exit\n    // from.\n    Node breakTarget = n;\n    for (;!ControlFlowAnalysis.isBreakTarget(breakTarget, null /* no label */);\n        breakTarget = breakTarget.getParent()) {\n      if (breakTarget.isFunction() || breakTarget.isScript()) {\n        // No break target.\n        return n;\n      }\n    }\n\n    Node follow = ControlFlowAnalysis.computeFollowNode(breakTarget);\n\n    // Skip pass all the finally blocks because both the break and return will\n    // also trigger all the finally blocks. However, the order of execution is\n    // slightly changed. Consider:\n    //\n    // return a() -> finally { b() } -> return a()\n    //\n    // which would call a() first. However, changing the first return to a\n    // break will result in calling b().\n\n    Node prefinallyFollows = follow;\n    follow = skipFinallyNodes(follow);\n\n    if (prefinallyFollows != follow) {\n      // There were finally clauses\n      if (!isPure(result)) {\n        // Can\'t defer the exit\n        return n;\n      }\n    }\n\n    if (follow == null && (n.isThrow() || result != null)) {\n      // Can\'t complete remove a throw here or a return with a result.\n      return n;\n    }\n\n    // When follow is null, this mean the follow of a break target is the\n    // end of a function. This means a break is same as return.\n    if (follow == null || areMatchingExits(n, follow)) {\n      Node replacement = IR.breakNode();\n      n.getParent().replaceChild(n, replacement);\n      this.reportCodeChange();\n      return replacement;\n    }\n\n    return n;\n  }\n\n  /**\n   * Remove duplicate exits.  If the node following the exit node expression\n   * has the same effect as exit node, the node can be removed.\n   * For example:\n   *   "if (a) {return f()} return f();" ==> "if (a) {} return f();"\n   *   "if (a) {throw \'ow\'} throw \'ow\';" ==> "if (a) {} throw \'ow\';"\n   *\n   * @param n An follow control exit expression (a THROW or RETURN node)\n   * @return The replacement for n, or the original if no change was made.\n   */\n  private Node tryRemoveRedundantExit(Node n) {\n    Node exitExpr = n.getFirstChild();\n\n    Node follow = ControlFlowAnalysis.computeFollowNode(n);\n\n    // Skip pass all the finally blocks because both the fall through and return\n    // will also trigger all the finally blocks.\n    Node prefinallyFollows = follow;\n    follow = skipFinallyNodes(follow);\n    if (prefinallyFollows != follow) {\n      // There were finally clauses\n      if (!isPure(exitExpr)) {\n        // Can\'t replace the return\n        return n;\n      }\n    }\n\n    if (follow == null && (n.isThrow() || exitExpr != null)) {\n      // Can\'t complete remove a throw here or a return with a result.\n      return n;\n    }\n\n    // When follow is null, this mean the follow of a break target is the\n    // end of a function. This means a break is same as return.\n    if (follow == null || areMatchingExits(n, follow)) {\n      n.detachFromParent();\n      reportCodeChange();\n      return null;\n    }\n\n    return n;\n  }\n\n  /**\n   * @return Whether the expression does not produces and can not be affected\n   * by side-effects.\n   */\n  boolean isPure(Node n) {\n    return n == null\n        || (!NodeUtil.canBeSideEffected(n)\n            && !mayHaveSideEffects(n));\n  }\n\n  /**\n   * @return n or the node following any following finally nodes.\n   */\n  Node skipFinallyNodes(Node n) {\n    while (n != null && NodeUtil.isTryFinallyNode(n.getParent(), n)) {\n      n = ControlFlowAnalysis.computeFollowNode(n);\n    }\n    return n;\n  }\n\n  /**\n   * Check whether one exit can be replaced with another. Verify:\n   * 1) They are identical expressions\n   * 2) If an exception is possible that the statements, the original\n   * and the potential replacement are in the same exception handler.\n   */\n  boolean areMatchingExits(Node nodeThis, Node nodeThat) {\n    return nodeThis.isEquivalentTo(nodeThat)\n        && (!isExceptionPossible(nodeThis)\n            || getExceptionHandler(nodeThis) == getExceptionHandler(nodeThat));\n  }\n\n  boolean isExceptionPossible(Node n) {\n    // TODO(johnlenz): maybe use ControlFlowAnalysis.mayThrowException?\n    Preconditions.checkState(n.isReturn()\n        || n.isThrow());\n    return n.isThrow()\n        || (n.hasChildren()\n            && !NodeUtil.isLiteralValue(n.getLastChild(), true));\n  }\n\n  Node getExceptionHandler(Node n) {\n    return ControlFlowAnalysis.getExceptionHandler(n);\n  }\n\n  /**\n   * Try to minimize NOT nodes such as !(x==y).\n   *\n   * Returns the replacement for n or the original if no change was made\n   */\n  private Node tryMinimizeNot(Node n) {\n    Node parent = n.getParent();\n\n    Node notChild = n.getFirstChild();\n    // negative operator of the current one : == -> != for instance.\n    int complementOperator;\n    switch (notChild.getType()) {\n      case Token.EQ:\n        complementOperator = Token.NE;\n        break;\n      case Token.NE:\n        complementOperator = Token.EQ;\n        break;\n      case Token.SHEQ:\n        complementOperator = Token.SHNE;\n        break;\n      case Token.SHNE:\n        complementOperator = Token.SHEQ;\n        break;\n      // GT, GE, LT, LE are not handled in this because !(x<NaN) != x>=NaN.\n      default:\n        return n;\n    }\n    Node newOperator = n.removeFirstChild();\n    newOperator.setType(complementOperator);\n    parent.replaceChild(n, newOperator);\n    reportCodeChange();\n    return newOperator;\n  }\n\n  /**\n   * Try turning IF nodes into smaller HOOKs\n   *\n   * Returns the replacement for n or the original if no replacement was\n   * necessary.\n   */\n  private Node tryMinimizeIf(Node n) {\n\n    Node parent = n.getParent();\n\n    Node cond = n.getFirstChild();\n\n    /* If the condition is a literal, we\'ll let other\n     * optimizations try to remove useless code.\n     */\n    if (NodeUtil.isLiteralValue(cond, true)) {\n      return n;\n    }\n\n    Node thenBranch = cond.getNext();\n    Node elseBranch = thenBranch.getNext();\n\n    if (elseBranch == null) {\n      if (isFoldableExpressBlock(thenBranch)) {\n        Node expr = getBlockExpression(thenBranch);\n        if (!late && isPropertyAssignmentInExpression(expr)) {\n          // Keep opportunities for CollapseProperties such as\n          // a.longIdentifier || a.longIdentifier = ... -> var a = ...;\n          // until CollapseProperties has been run.\n          return n;\n        }\n\n        if (cond.isNot()) {\n          // if(!x)bar(); -> x||bar();\n          if (isLowerPrecedenceInExpression(cond, OR_PRECEDENCE) &&\n              isLowerPrecedenceInExpression(expr.getFirstChild(),\n                  OR_PRECEDENCE)) {\n            // It\'s not okay to add two sets of parentheses.\n            return n;\n          }\n\n          Node or = IR.or(\n              cond.removeFirstChild(),\n              expr.removeFirstChild()).srcref(n);\n          Node newExpr = NodeUtil.newExpr(or);\n          parent.replaceChild(n, newExpr);\n          reportCodeChange();\n\n          return newExpr;\n        }\n\n        // if(x)foo(); -> x&&foo();\n        if (isLowerPrecedenceInExpression(cond, AND_PRECEDENCE) &&\n            isLowerPrecedenceInExpression(expr.getFirstChild(),\n                AND_PRECEDENCE)) {\n          // One additional set of parentheses is worth the change even if\n          // there is no immediate code size win. However, two extra pair of\n          // {}, we would have to think twice. (unless we know for sure the\n          // we can further optimize its parent.\n          return n;\n        }\n\n        n.removeChild(cond);\n        Node and = IR.and(cond, expr.removeFirstChild()).srcref(n);\n        Node newExpr = NodeUtil.newExpr(and);\n        parent.replaceChild(n, newExpr);\n        reportCodeChange();\n\n        return newExpr;\n      } else {\n\n        // Try to combine two IF-ELSE\n        if (NodeUtil.isStatementBlock(thenBranch) &&\n            thenBranch.hasOneChild()) {\n          Node innerIf = thenBranch.getFirstChild();\n\n          if (innerIf.isIf()) {\n            Node innerCond = innerIf.getFirstChild();\n            Node innerThenBranch = innerCond.getNext();\n            Node innerElseBranch = innerThenBranch.getNext();\n\n            if (innerElseBranch == null &&\n                 !(isLowerPrecedenceInExpression(cond, AND_PRECEDENCE) &&\n                   isLowerPrecedenceInExpression(innerCond, AND_PRECEDENCE))) {\n              n.detachChildren();\n              n.addChildToBack(\n                  IR.and(\n                      cond,\n                      innerCond.detachFromParent())\n                      .srcref(cond));\n              n.addChildrenToBack(innerThenBranch.detachFromParent());\n              reportCodeChange();\n              // Not worth trying to fold the current IF-ELSE into && because\n              // the inner IF-ELSE wasn\'t able to be folded into && anyways.\n              return n;\n            }\n          }\n        }\n      }\n\n      return n;\n    }\n\n    /* TODO(dcc) This modifies the siblings of n, which is undesirable for a\n     * peephole optimization. This should probably get moved to another pass.\n     */\n    tryRemoveRepeatedStatements(n);\n\n    // if(!x)foo();else bar(); -> if(x)bar();else foo();\n    // An additional set of curly braces isn\'t worth it.\n    if (cond.isNot() && !consumesDanglingElse(elseBranch)) {\n      n.replaceChild(cond, cond.removeFirstChild());\n      n.removeChild(thenBranch);\n      n.addChildToBack(thenBranch);\n      reportCodeChange();\n      return n;\n    }\n\n    // if(x)return 1;else return 2; -> return x?1:2;\n    if (isReturnExpressBlock(thenBranch) && isReturnExpressBlock(elseBranch)) {\n      Node thenExpr = getBlockReturnExpression(thenBranch);\n      Node elseExpr = getBlockReturnExpression(elseBranch);\n      n.removeChild(cond);\n      thenExpr.detachFromParent();\n      elseExpr.detachFromParent();\n\n      // note - we ignore any cases with "return;", technically this\n      // can be converted to "return undefined;" or some variant, but\n      // that does not help code size.\n      Node returnNode = IR.returnNode(\n                            IR.hook(cond, thenExpr, elseExpr)\n                                .srcref(n));\n      parent.replaceChild(n, returnNode);\n      reportCodeChange();\n      return returnNode;\n    }\n\n    boolean thenBranchIsExpressionBlock = isFoldableExpressBlock(thenBranch);\n    boolean elseBranchIsExpressionBlock = isFoldableExpressBlock(elseBranch);\n\n    if (thenBranchIsExpressionBlock && elseBranchIsExpressionBlock) {\n      Node thenOp = getBlockExpression(thenBranch).getFirstChild();\n      Node elseOp = getBlockExpression(elseBranch).getFirstChild();\n      if (thenOp.getType() == elseOp.getType()) {\n        // if(x)a=1;else a=2; -> a=x?1:2;\n        if (NodeUtil.isAssignmentOp(thenOp)) {\n          Node lhs = thenOp.getFirstChild();', 'aftercode': '\n            n.removeChild(cond);\n            Node assignName = thenOp.removeFirstChild();\n            Node thenExpr = thenOp.removeFirstChild();\n            Node elseExpr = elseOp.getLastChild();\n            elseOp.removeChild(elseExpr);\n\n            Node hookNode = IR.hook(cond, thenExpr, elseExpr).srcref(n);\n            Node assign = new Node(thenOp.getType(), assignName, hookNode)\n                              .srcref(thenOp);\n            Node expr = NodeUtil.newExpr(assign);\n            parent.replaceChild(n, expr);\n            reportCodeChange();\n\n            return expr;\n          }\n        }\n      }\n      // if(x)foo();else bar(); -> x?foo():bar()\n      n.removeChild(cond);\n      thenOp.detachFromParent();\n      elseOp.detachFromParent();\n      Node expr = IR.exprResult(\n          IR.hook(cond, thenOp, elseOp).srcref(n));\n      parent.replaceChild(n, expr);\n      reportCodeChange();\n      return expr;\n    }\n\n    boolean thenBranchIsVar = isVarBlock(thenBranch);\n    boolean elseBranchIsVar = isVarBlock(elseBranch);\n\n    // if(x)var y=1;else y=2  ->  var y=x?1:2\n    if (thenBranchIsVar && elseBranchIsExpressionBlock &&\n        getBlockExpression(elseBranch).getFirstChild().isAssign()) {\n\n      Node var = getBlockVar(thenBranch);\n      Node elseAssign = getBlockExpression(elseBranch).getFirstChild();\n\n      Node name1 = var.getFirstChild();\n      Node maybeName2 = elseAssign.getFirstChild();\n\n      if (name1.hasChildren()\n          && maybeName2.isName()\n          && name1.getString().equals(maybeName2.getString())) {\n        Node thenExpr = name1.removeChildren();\n        Node elseExpr = elseAssign.getLastChild().detachFromParent();\n        cond.detachFromParent();\n        Node hookNode = IR.hook(cond, thenExpr, elseExpr)\n                            .srcref(n);\n        var.detachFromParent();\n        name1.addChildrenToBack(hookNode);\n        parent.replaceChild(n, var);\n        reportCodeChange();\n        return var;\n      }\n\n    // if(x)y=1;else var y=2  ->  var y=x?1:2\n    } else if (elseBranchIsVar && thenBranchIsExpressionBlock &&\n        getBlockExpression(thenBranch).getFirstChild().isAssign()) {\n\n      Node var = getBlockVar(elseBranch);\n      Node thenAssign = getBlockExpression(thenBranch).getFirstChild();\n\n      Node maybeName1 = thenAssign.getFirstChild();\n      Node name2 = var.getFirstChild();\n\n      if (name2.hasChildren()\n          && maybeName1.isName()\n          && maybeName1.getString().equals(name2.getString())) {\n        Node thenExpr = thenAssign.getLastChild().detachFromParent();\n        Node elseExpr = name2.removeChildren();\n        cond.detachFromParent();\n        Node hookNode = IR.hook(cond, thenExpr, elseExpr)\n                            .srcref(n);\n        var.detachFromParent();\n        name2.addChildrenToBack(hookNode);\n        parent.replaceChild(n, var);\n        reportCodeChange();\n\n        return var;\n      }\n    }\n\n    return n;\n  }\n\n  /**\n   * Try to remove duplicate statements from IF blocks. For example:\n   *\n   * if (a) {\n   *   x = 1;\n   *   return true;\n   * } else {\n   *   x = 2;\n   *   return true;\n   * }\n   *\n   * becomes:\n   *\n   * if (a) {\n   *   x = 1;\n   * } else {\n   *   x = 2;\n   * }\n   * return true;\n   *\n   * @param n The IF node to examine.\n   */\n  private void tryRemoveRepeatedStatements(Node n) {\n    Preconditions.checkState(n.isIf());\n\n    Node parent = n.getParent();\n    if (!NodeUtil.isStatementBlock(parent)) {\n      // If the immediate parent is something like a label, we\n      // can\'t move the statement, so bail.\n      return;\n    }\n\n    Node cond = n.getFirstChild();\n    Node trueBranch = cond.getNext();\n    Node falseBranch = trueBranch.getNext();\n    Preconditions.checkNotNull(trueBranch);\n    Preconditions.checkNotNull(falseBranch);\n\n    while (true) {\n      Node lastTrue = trueBranch.getLastChild();\n      Node lastFalse = falseBranch.getLastChild();\n      if (lastTrue == null || lastFalse == null\n          || !areNodesEqualForInlining(lastTrue, lastFalse)) {\n        break;\n      }\n      lastTrue.detachFromParent();\n      lastFalse.detachFromParent();\n      parent.addChildAfter(lastTrue, n);\n      reportCodeChange();\n    }\n  }\n\n  /**\n   * @return Whether the node is a block with a single statement that is\n   *     an expression.\n   */\n  private boolean isFoldableExpressBlock(Node n) {\n    if (n.isBlock()) {\n      if (n.hasOneChild()) {\n        Node maybeExpr = n.getFirstChild();\n        if (maybeExpr.isExprResult()) {\n          // IE has a bug where event handlers behave differently when\n          // their return value is used vs. when their return value is in\n          // an EXPR_RESULT. It\'s pretty freaking weird. See:\n          // http://code.google.com/p/closure-compiler/issues/detail?id=291\n          // We try to detect this case, and not fold EXPR_RESULTs\n          // into other expressions.\n          if (maybeExpr.getFirstChild().isCall()) {\n            Node calledFn = maybeExpr.getFirstChild().getFirstChild();\n\n            // We only have to worry about methods with an implicit \'this\'\n            // param, or this doesn\'t happen.\n            if (calledFn.isGetElem()) {\n              return false;\n            } else if (calledFn.isGetProp() &&\n                       calledFn.getLastChild().getString().startsWith("on")) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n        return false;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @return The expression node.\n   */\n  private Node getBlockExpression(Node n) {\n    Preconditions.checkState(isFoldableExpressBlock(n));\n    return n.getFirstChild();\n  }\n\n  /**\n   * @return Whether the node is a block with a single statement that is\n   *     an return with or without an expression.\n   */\n  private boolean isReturnBlock(Node n) {\n    if (n.isBlock()) {\n      if (n.hasOneChild()) {\n        Node first = n.getFirstChild();\n        return first.isReturn();\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @return Whether the node is a block with a single statement that is\n   *     an return.\n   */\n  private boolean isReturnExpressBlock(Node n) {\n    if (n.isBlock()) {\n      if (n.hasOneChild()) {\n        Node first = n.getFirstChild();\n        if (first.isReturn()) {\n          return first.hasOneChild();\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @return Whether the node is a single return statement.\n   */\n  private boolean isReturnExpression(Node n) {\n    if (n.isReturn()) {\n      return n.hasOneChild();\n    }\n    return false;\n  }\n\n  /**\n   * @return The expression that is part of the return.\n   */\n  private Node getBlockReturnExpression(Node n) {\n    Preconditions.checkState(isReturnExpressBlock(n));\n    return n.getFirstChild().getFirstChild();\n  }\n\n  /**\n   * @return Whether the node is a block with a single statement that is\n   *     a VAR declaration of a single variable.\n   */\n  private boolean isVarBlock(Node n) {\n    if (n.isBlock()) {\n      if (n.hasOneChild()) {\n        Node first = n.getFirstChild();\n        if (first.isVar()) {\n          return first.hasOneChild();\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @return The var node.\n   */\n  private Node getBlockVar(Node n) {\n    Preconditions.checkState(isVarBlock(n));\n    return n.getFirstChild();\n  }\n\n  /**\n   * Does a statement consume a \'dangling else\'? A statement consumes\n   * a \'dangling else\' if an \'else\' token following the statement\n   * would be considered by the parser to be part of the statement.\n   */\n  private boolean consumesDanglingElse(Node n) {\n    while (true) {\n      switch (n.getType()) {\n        case Token.IF:\n          if (n.getChildCount() < 3) {\n            return true;\n          }\n          // This IF node has no else clause.\n          n = n.getLastChild();\n          continue;\n        case Token.WITH:\n        case Token.WHILE:\n        case Token.FOR:\n          n = n.getLastChild();\n          continue;\n        default:\n          return false;\n      }\n    }\n  }\n\n  /**\n   * Does the expression contain an operator with lower precedence than\n   * the argument?\n   */\n  private boolean isLowerPrecedenceInExpression(Node n,\n      final int precedence) {\n    Predicate<Node> isLowerPrecedencePredicate = new Predicate<Node>() {\n      @Override\n      public boolean apply(Node input) {\n        return NodeUtil.precedence(input.getType()) < precedence;\n      }\n    };\n\n    return NodeUtil.has(n, isLowerPrecedencePredicate,\n        DONT_TRAVERSE_FUNCTIONS_PREDICATE);\n  }\n\n  /**\n   * Whether the node type has lower precedence than "precedence"\n   */\n  private boolean isLowerPrecedence(Node n, final int precedence) {\n    return NodeUtil.precedence(n.getType()) < precedence;\n  }\n\n  /**\n   * Whether the node type has higher precedence than "precedence"\n   */\n  private boolean isHigherPrecedence(Node n, final int precedence) {\n    return NodeUtil.precedence(n.getType()) > precedence;\n  }\n  /**\n   * Does the expression contain a property assignment?\n   */\n  private boolean isPropertyAssignmentInExpression(Node n) {\n    Predicate<Node> isPropertyAssignmentInExpressionPredicate =\n        new Predicate<Node>() {\n      @Override\n      public boolean apply(Node input) {\n        return (input.isGetProp() &&\n            input.getParent().isAssign());\n      }\n    };\n\n    return NodeUtil.has(n, isPropertyAssignmentInExpressionPredicate,\n        DONT_TRAVERSE_FUNCTIONS_PREDICATE);\n  }\n\n  /**\n   * Try to minimize conditions expressions, as there are additional\n   * assumptions that can be made when it is known that the final result\n   * is a boolean.\n   *\n   * The following transformations are done recursively:\n   *   !(x||y) --> !x&&!y\n   *   !(x&&y) --> !x||!y\n   *   !!x     --> x\n   * Thus:\n   *   !(x&&!y) --> !x||!!y --> !x||y\n   *\n   *   Returns the replacement for n, or the original if no change was made\n   */\n  private Node tryMinimizeCondition(Node n) {\n    Node parent = n.getParent();\n\n    switch (n.getType()) {\n      case Token.NOT:\n        Node first = n.getFirstChild();\n        switch (first.getType()) {\n          case Token.NOT: {\n              Node newRoot = first.removeFirstChild();\n              parent.replaceChild(n, newRoot);\n              reportCodeChange();\n              // No need to traverse, tryMinimizeCondition is called on the\n              // NOT children are handled below.\n              return newRoot;\n            }\n          case Token.AND:\n          case Token.OR: {\n              // !(!x && !y) --> x || y\n              // !(!x || !y) --> x && y\n              // !(!x && y) --> x || !y\n              // !(!x || y) --> x && !y\n              // !(x && !y) --> !x || y\n              // !(x || !y) --> !x && y\n              // !(x && y) --> !x || !y\n              // !(x || y) --> !x && !y\n              Node leftParent = first.getFirstChild();\n              Node rightParent = first.getLastChild();\n              Node left, right;\n\n              // Check special case when such transformation cannot reduce\n              // due to the added ()\n              // It only occurs when both of expressions are not NOT expressions\n              if (!leftParent.isNot()\n                  && !rightParent.isNot()) {\n                // If an expression has higher precedence than && or ||,\n                // but lower precedence than NOT, an additional () is needed\n                // Thus we do not preceed\n                int op_precedence = NodeUtil.precedence(first.getType());\n                if ((isLowerPrecedence(leftParent, NOT_PRECEDENCE)\n                    && isHigherPrecedence(leftParent, op_precedence))\n                    || (isLowerPrecedence(rightParent, NOT_PRECEDENCE)\n                    && isHigherPrecedence(rightParent, op_precedence))) {\n                  return n;\n                }\n              }\n\n              if (leftParent.isNot()) {\n                left = leftParent.removeFirstChild();\n              } else {\n                leftParent.detachFromParent();\n                left = IR.not(leftParent).srcref(leftParent);\n              }\n              if (rightParent.isNot()) {\n                right = rightParent.removeFirstChild();\n              } else {\n                rightParent.detachFromParent();\n                right = IR.not(rightParent).srcref(rightParent);\n              }\n\n              int newOp = (first.isAnd()) ? Token.OR : Token.AND;\n              Node newRoot = new Node(newOp, left, right);\n              parent.replaceChild(n, newRoot);\n              reportCodeChange();\n              // No need to traverse, tryMinimizeCondition is called on the\n              // AND and OR children below.\n              return newRoot;\n            }\n\n           default:\n             TernaryValue nVal = NodeUtil.getPureBooleanValue(first);\n             if (nVal != TernaryValue.UNKNOWN) {\n               boolean result = nVal.not().toBoolean(true);\n               int equivalentResult = result ? 1 : 0;\n               return maybeReplaceChildWithNumber(n, parent, equivalentResult);\n             }\n        }\n        // No need to traverse, tryMinimizeCondition is called on the NOT\n        // children in the general case in the main post-order traversal.\n        return n;\n\n      case Token.OR:\n      case Token.AND: {\n        Node left = n.getFirstChild();\n        Node right = n.getLastChild();\n\n        // Because the expression is in a boolean context minimize\n        // the children, this can\'t be done in the general case.\n        left = tryMinimizeCondition(left);\n        right = tryMinimizeCondition(right);\n\n        // Remove useless conditionals\n        // Handle four cases:\n        //   x || false --> x\n        //   x || true  --> true\n        //   x && true --> x\n        //   x && false  --> false\n        TernaryValue rightVal = NodeUtil.getPureBooleanValue(right);\n        if (NodeUtil.getPureBooleanValue(right) != TernaryValue.UNKNOWN) {\n          int type = n.getType();\n          Node replacement = null;\n          boolean rval = rightVal.toBoolean(true);\n\n          // (x || FALSE) => x\n          // (x && TRUE) => x\n          if (type == Token.OR && !rval ||\n              type == Token.AND && rval) {\n            replacement = left;\n          } else if (!mayHaveSideEffects(left)) {\n            replacement = right;\n          }\n\n          if (replacement != null) {\n            n.detachChildren();\n            parent.replaceChild(n, replacement);\n            reportCodeChange();\n            return replacement;\n          }\n        }\n        return n;\n      }\n\n      case Token.HOOK: {\n        Node condition = n.getFirstChild();\n        Node trueNode = n.getFirstChild().getNext();\n        Node falseNode = n.getLastChild();\n\n        // Because the expression is in a boolean context minimize\n        // the result children, this can\'t be done in the general case.\n        // The condition is handled in the general case in #optimizeSubtree\n        trueNode = tryMinimizeCondition(trueNode);\n        falseNode = tryMinimizeCondition(falseNode);\n\n        // Handle four cases:\n        //   x ? true : false --> x\n        //   x ? false : true --> !x\n        //   x ? true : y     --> x || y\n        //   x ? y : false    --> x && y\n        Node replacement = null;\n        TernaryValue trueNodeVal = NodeUtil.getPureBooleanValue(trueNode);\n        TernaryValue falseNodeVal = NodeUtil.getPureBooleanValue(falseNode);\n        if (trueNodeVal == TernaryValue.TRUE\n            && falseNodeVal == TernaryValue.FALSE) {\n          // Remove useless conditionals, keep the condition\n          condition.detachFromParent();\n          replacement = condition;\n        } else if (trueNodeVal == TernaryValue.FALSE\n            && falseNodeVal == TernaryValue.TRUE) {\n          // Remove useless conditionals, keep the condition\n          condition.detachFromParent();\n          replacement = IR.not(condition);\n        } else if (trueNodeVal == TernaryValue.TRUE) {\n          // Remove useless true case.\n          n.detachChildren();\n          replacement = IR.or(condition, falseNode);\n        } else if (falseNodeVal == TernaryValue.FALSE) {\n          // Remove useless false case\n          n.detachChildren();\n          replacement = IR.and(condition, trueNode);\n        }\n\n        if (replacement != null) {\n          parent.replaceChild(n, replacement);\n          n = replacement;\n          reportCodeChange();\n        }\n\n        return n;\n      }\n\n      default:\n        // while(true) --> while(1)\n        TernaryValue nVal = NodeUtil.getPureBooleanValue(n);\n        if (nVal != TernaryValue.UNKNOWN) {\n          boolean result = nVal.toBoolean(true);\n          int equivalentResult = result ? 1 : 0;\n          return maybeReplaceChildWithNumber(n, parent, equivalentResult);\n        }\n        // We can\'t do anything else currently.\n        return n;\n    }\n  }\n\n  /**\n   * Replaces a node with a number node if the new number node is not equivalent\n   * to the current node.\n   *\n   * Returns the replacement for n if it was replaced, otherwise returns n.\n   */\n  private Node maybeReplaceChildWithNumber(Node n, Node parent, int num) {\n    Node newNode = IR.number(num);\n    if (!newNode.isEquivalentTo(n)) {\n      parent.replaceChild(n, newNode);\n      reportCodeChange();\n\n      return newNode;\n    }\n\n    return n;\n  }\n\n  private static final ImmutableSet<String> STANDARD_OBJECT_CONSTRUCTORS =\n    // String, Number, and Boolean functions return non-object types, whereas\n    // new String, new Number, and new Boolean return object types, so don\'t\n    // include them here.\n    ImmutableSet.of(\n      "Object",\n      "Array",\n      "RegExp",\n      "Error"\n      );\n\n  /**\n   * Fold "new Object()" to "Object()".\n   */\n  private Node tryFoldStandardConstructors(Node n) {\n    Preconditions.checkState(n.isNew());\n\n    // If name normalization has been run then we know that\n    // new Object() does in fact refer to what we think it is\n    // and not some custom-defined Object().\n    if (isASTNormalized()) {\n      if (n.getFirstChild().isName()) {\n        String className = n.getFirstChild().getString();\n        if (STANDARD_OBJECT_CONSTRUCTORS.contains(className)) {\n          n.setType(Token.CALL);\n          n.putBooleanProp(Node.FREE_CALL, true);\n          reportCodeChange();\n        }\n      }\n    }\n\n    return n;\n  }\n\n  /**\n   * Replaces a new Array or Object node with an object literal, unless the\n   * call to Array or Object is to a local function with the same name.\n   */\n  private Node tryFoldLiteralConstructor(Node n) {\n    Preconditions.checkArgument(n.isCall()\n        || n.isNew());\n\n    Node constructorNameNode = n.getFirstChild();\n\n    Node newLiteralNode = null;\n\n    // We require the AST to be normalized to ensure that, say,\n    // Object() really refers to the built-in Object constructor\n    // and not a user-defined constructor with the same name.\n\n    if (isASTNormalized() && Token.NAME == constructorNameNode.getType()) {\n\n      String className = constructorNameNode.getString();\n\n      if ("RegExp".equals(className)) {\n        // "RegExp("boo", "g")" --> /boo/g\n        return tryFoldRegularExpressionConstructor(n);\n      } else {\n        boolean constructorHasArgs = constructorNameNode.getNext() != null;\n\n        if ("Object".equals(className) && !constructorHasArgs) {\n          // "Object()" --> "{}"\n          newLiteralNode = IR.objectlit();\n        } else if ("Array".equals(className)) {\n          // "Array(arg0, arg1, ...)" --> "[arg0, arg1, ...]"\n          Node arg0 = constructorNameNode.getNext();\n          FoldArrayAction action = isSafeToFoldArrayConstructor(arg0);\n\n          if (action == FoldArrayAction.SAFE_TO_FOLD_WITH_ARGS ||\n              action == FoldArrayAction.SAFE_TO_FOLD_WITHOUT_ARGS) {\n            newLiteralNode = IR.arraylit();\n            n.removeChildren();\n            if (action == FoldArrayAction.SAFE_TO_FOLD_WITH_ARGS) {\n              newLiteralNode.addChildrenToFront(arg0);\n            }\n          }\n        }\n\n        if (newLiteralNode != null) {\n          n.getParent().replaceChild(n, newLiteralNode);\n          reportCodeChange();\n          return newLiteralNode;\n        }\n      }\n    }\n    return n;\n  }\n\n  private static enum FoldArrayAction {\n    NOT_SAFE_TO_FOLD, SAFE_TO_FOLD_WITH_ARGS, SAFE_TO_FOLD_WITHOUT_ARGS}\n\n  /**\n   * Checks if it is safe to fold Array() constructor into []. It can be\n   * obviously done, if the initial constructor has either no arguments or\n   * at least two. The remaining case may be unsafe since Array(number)\n   * actually reserves memory for an empty array which contains number elements.\n   */\n  private FoldArrayAction isSafeToFoldArrayConstructor(Node arg) {\n    FoldArrayAction action = FoldArrayAction.NOT_SAFE_TO_FOLD;\n\n    if (arg == null) {\n      action = FoldArrayAction.SAFE_TO_FOLD_WITHOUT_ARGS;\n    } else if (arg.getNext() != null) {\n      action = FoldArrayAction.SAFE_TO_FOLD_WITH_ARGS;\n    } else {\n      switch (arg.getType()) {\n        case Token.STRING:\n          // "Array(\'a\')" --> "[\'a\']"\n          action = FoldArrayAction.SAFE_TO_FOLD_WITH_ARGS;\n          break;\n        case Token.NUMBER:\n          // "Array(0)" --> "[]"\n          if (arg.getDouble() == 0) {\n            action = FoldArrayAction.SAFE_TO_FOLD_WITHOUT_ARGS;\n          }\n          break;\n        case Token.ARRAYLIT:\n          // "Array([args])" --> "[[args]]"\n          action = FoldArrayAction.SAFE_TO_FOLD_WITH_ARGS;\n          break;\n        default:\n      }\n    }\n    return action;\n  }\n\n  private Node tryFoldRegularExpressionConstructor(Node n) {\n    Node parent = n.getParent();\n    Node constructor = n.getFirstChild();\n    Node pattern = constructor.getNext();  // e.g.  ^foobar$\n    Node flags = null != pattern ? pattern.getNext() : null;  // e.g. gi\n\n    if (null == pattern || (null != flags && null != flags.getNext())) {\n      // too few or too many arguments\n      return n;\n    }\n\n    if (// is pattern folded\n        pattern.isString()\n        // make sure empty pattern doesn\'t fold to //\n        && !"".equals(pattern.getString())\n\n        // NOTE(nicksantos): Make sure that the regexp isn\'t longer than\n        // 100 chars, or it blows up the regexp parser in Opera 9.2.\n        && pattern.getString().length() < 100\n\n        && (null == flags || flags.isString())\n        // don\'t escape patterns with Unicode escapes since Safari behaves badly\n        // (read can\'t parse or crashes) on regex literals with Unicode escapes\n        && (isEcmaScript5OrGreater()\n            || !containsUnicodeEscape(pattern.getString()))) {\n\n      // Make sure that / is escaped, so that it will fit safely in /brackets/\n      // and make sure that no LineTerminatorCharacters appear literally inside\n      // the pattern.\n      // pattern is a string value with \\\\ and similar already escaped\n      pattern = makeForwardSlashBracketSafe(pattern);\n\n      Node regexLiteral;\n      if (null == flags || "".equals(flags.getString())) {\n        // fold to /foobar/\n        regexLiteral = IR.regexp(pattern);\n      } else {\n        // fold to /foobar/gi\n        if (!areValidRegexpFlags(flags.getString())) {\n          report(INVALID_REGULAR_EXPRESSION_FLAGS, flags);\n          return n;\n        }\n        if (!areSafeFlagsToFold(flags.getString())) {\n          return n;\n        }\n        n.removeChild(flags);\n        regexLiteral = IR.regexp(pattern, flags);\n      }\n\n      parent.replaceChild(n, regexLiteral);\n      reportCodeChange();\n      return regexLiteral;\n    }\n\n    return n;\n  }\n\n  private Node reduceTrueFalse(Node n) {\n    if (late) {\n      Node not = IR.not(IR.number(n.isTrue() ? 0 : 1));\n      not.copyInformationFromForTree(n);\n      n.getParent().replaceChild(n, not);\n      reportCodeChange();\n      return not;\n    }\n    return n;\n  }\n\n  private Node tryMinimizeArrayLiteral(Node n) {\n    boolean allStrings = true;\n    for (Node cur = n.getFirstChild(); cur != null; cur = cur.getNext()) {\n      if (!cur.isString()) {\n        allStrings = false;\n      }\n    }\n\n    if (allStrings) {\n      return tryMinimizeStringArrayLiteral(n);\n    } else {\n      return n;\n    }\n  }\n\n  private Node tryMinimizeStringArrayLiteral(Node n) {\n    if(!late) {\n      return n;\n    }\n\n    int numElements = n.getChildCount();\n    // We save two bytes per element.\n    int saving = numElements * 2 - STRING_SPLIT_OVERHEAD;\n    if (saving <= 0) {\n      return n;\n    }\n\n    String[] strings = new String[n.getChildCount()];\n    int idx = 0;\n    for (Node cur = n.getFirstChild(); cur != null; cur = cur.getNext()) {\n      strings[idx++] = cur.getString();\n    }\n\n    // These delimiters are chars that appears a lot in the program therefore\n    // probably have a small Huffman encoding.\n    String delimiter = pickDelimiter(strings);\n    if (delimiter != null) {\n      String template = Joiner.on(delimiter).join(strings);\n      Node call = IR.call(\n          IR.getprop(\n              IR.string(template),\n              IR.string("split")),\n          IR.string("" + delimiter));\n      call.copyInformationFromForTree(n);\n      n.getParent().replaceChild(n, call);\n      reportCodeChange();\n      return call;\n    }\n    return n;\n  }\n\n  /**\n   * Find a delimiter that does not occur in the given strings\n   * @param strings The strings that must be separated.\n   * @return a delimiter string or null\n   */\n  private String pickDelimiter(String[] strings) {\n    boolean allLength1 = true;\n    for (String s : strings) {\n      if (s.length() != 1) {\n        allLength1 = false;\n        break;\n      }\n    }\n\n    if (allLength1) {\n      return "";\n    }\n\n    String[] delimiters = new String[]{" ", ";", ",", "{", "}", null};\n    int i = 0;\n    NEXT_DELIMITER: for (;delimiters[i] != null; i++) {\n      for (String cur : strings) {\n        if (cur.contains(delimiters[i])) {\n          continue NEXT_DELIMITER;\n        }\n      }\n      break;\n    }\n    return delimiters[i];\n  }\n\n  private static final Pattern REGEXP_FLAGS_RE = Pattern.compile("^[gmi]*$");\n\n  /**\n   * are the given flags valid regular expression flags?\n   * JavaScript recognizes several suffix flags for regular expressions,\n   * \'g\' - global replace, \'i\' - case insensitive, \'m\' - multi-line.\n   * They are case insensitive, and JavaScript does not recognize the extended\n   * syntax mode, single-line mode, or expression replacement mode from Perl 5.\n   */\n  private static boolean areValidRegexpFlags(String flags) {\n    return REGEXP_FLAGS_RE.matcher(flags).matches();\n  }\n\n  /**\n   * are the given flags safe to fold?\n   * We don\'t fold the regular expression if global (\'g\') flag is on,\n   * because in this case it isn\'t really a constant: its \'lastIndex\'\n   * property contains the state of last execution, so replacing\n   * \'new RegExp(\'foobar\',\'g\')\' with \'/foobar/g\' may change the behavior of\n   * the program if the RegExp is used inside a loop, for example.\n   * <p>\n   * ECMAScript 5 explicitly disallows pooling of regular expression literals so\n   * in ECMAScript 5, {@code /foo/g} and {@code new RegExp(\'foo\', \'g\')} are\n   * equivalent.\n   * From section 7.8.5:\n   * "Then each time the literal is evaluated, a new object is created as if by\n   * the expression new RegExp(Pattern, Flags) where RegExp is the standard\n   * built-in constructor with that name."\n   */\n  private boolean areSafeFlagsToFold(String flags) {\n    return isEcmaScript5OrGreater() || flags.indexOf(\'g\') < 0;\n  }\n\n  /**\n   * returns a string node that can safely be rendered inside /brackets/.\n   */\n  private static Node makeForwardSlashBracketSafe(Node n) {\n    String s = n.getString();\n    // sb contains everything in s[0:pos]\n    StringBuilder sb = null;\n    int pos = 0;\n    boolean isEscaped = false, inCharset = false;\n    for (int i = 0; i < s.length(); ++i) {\n      char ch = s.charAt(i);\n      switch (ch) {\n        case \'\\\\\':\n          isEscaped = !isEscaped;\n          continue;\n        case \'/\':\n          // Escape a literal forward slash if it is not already escaped and is\n          // not inside a character set.\n          //     new RegExp(\'/\') -> /\\//\n          // but the following do not need extra escaping\n          //     new RegExp(\'\\\\/\') -> /\\//\n          //     new RegExp(\'[/]\') -> /[/]/\n          if (!isEscaped && !inCharset) {\n            if (null == sb) { sb = new StringBuilder(s.length() + 16); }\n            sb.append(s, pos, i).append(\'\\\\\');\n            pos = i;\n          }\n          break;\n        case \'[\':\n          if (!isEscaped) {\n            inCharset = true;\n          }\n          break;\n        case \']\':\n          if (!isEscaped) {\n            inCharset = false;\n          }\n          break;\n        case \'\\r\': case \'\\n\': case \'\\u2028\': case \'\\u2029\':\n          // LineTerminators cannot appear raw inside a regular\n          // expression literal.\n          // They can\'t appear legally in a quoted string, but when\n          // the quoted string from\n          //     new RegExp(\'\\n\')\n          // reaches here, the quoting has been removed.\n          // Requote just these code-points.\n          if (null == sb) { sb = new StringBuilder(s.length() + 16); }\n          if (isEscaped) {\n            sb.append(s, pos, i - 1);\n          } else {\n            sb.append(s, pos, i);\n          }\n          switch (ch) {\n            case \'\\r\': sb.append("\\\\r"); break;\n            case \'\\n\': sb.append("\\\\n"); break;\n            case \'\\u2028\': sb.append("\\\\u2028"); break;\n            case \'\\u2029\': sb.append("\\\\u2029"); break;\n          }\n          pos = i + 1;\n          break;\n      }\n      isEscaped = false;\n    }\n\n    if (null == sb) { return n.cloneTree(); }\n\n    sb.append(s, pos, s.length());\n    return IR.string(sb.toString()).srcref(n);\n  }\n\n  /**\n   * true if the JavaScript string would contain a Unicode escape when written\n   * out as the body of a regular expression literal.\n   */\n  static boolean containsUnicodeEscape(String s) {\n    String esc = REGEXP_ESCAPER.regexpEscape(s);\n    for (int i = -1; (i = esc.indexOf("\\\\u", i + 1)) >= 0;) {\n      int nSlashes = 0;\n      while (i - nSlashes > 0 && \'\\\\\' == esc.charAt(i - nSlashes - 1)) {\n        ++nSlashes;\n      }\n      // if there are an even number of slashes before the \\ u then it is a\n      // Unicode literal.\n      if (0 == (nSlashes & 1)) { return true; }\n    }\n    return false;\n  }\n}', 'tree': 'body IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member thenBranchIsExpressionBlock_ter ^ ^ ^ ^ operandr MemberReference member loc14 ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ arguments MemberReference member thenBranch_ter ^ ^ ^ ^ member getBlockExpression_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ arguments MemberReference member elseBranch_ter ^ ^ ^ ^ member getBlockExpression_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getType_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member isAssignmentOp_ter ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier n_ter ^ ^ arguments MemberReference member cond_ter ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member removeFirstChild_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member removeFirstChild_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getLastChild_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier IR_ter ^ ^ selectors MethodInvocation arguments MemberReference member n_ter ^ ^ ^ ^ member srcref_ter ^ ^ ^ ^ arguments MemberReference member cond_ter ^ ^ ^ MemberReference member loc4 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member hook_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer ClassCreator selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member srcref_ter ^ ^ ^ ^ type ReferenceType name Node_ter ^ ^ ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ member getType_ter ^ ^ ^ MemberReference member loc3 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member newExpr_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier parent_ter ^ ^ arguments MemberReference member n_ter ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member replaceChild_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation member reportCodeChange_ter ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc9 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier n_ter ^ ^ arguments MemberReference member cond_ter ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member detachFromParent_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member detachFromParent_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier IR_ter ^ ^ arguments MethodInvocation qualifier IR_ter ^ ^ selectors MethodInvocation arguments MemberReference member n_ter ^ ^ ^ ^ member srcref_ter ^ ^ ^ ^ arguments MemberReference member cond_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member hook_ter ^ ^ ^ ^ member exprResult_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier parent_ter ^ ^ arguments MemberReference member n_ter ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member replaceChild_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation member reportCodeChange_ter ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc9 ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc10 ^ ^ initializer MethodInvocation arguments MemberReference member thenBranch_ter ^ ^ ^ ^ member isVarBlock_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc14 ^ ^ initializer MethodInvocation arguments MemberReference member elseBranch_ter ^ ^ ^ ^ member isFoldableExpressBlock_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc14 ^ ^ initializer MethodInvocation arguments MemberReference member elseBranch_ter ^ ^ ^ ^ member isFoldableExpressBlock_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc14 ^ ^ initializer MethodInvocation arguments MemberReference member elseBranch_ter ^ ^ ^ ^ member isFoldableExpressBlock_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type BasicType name boolean_ter ^ ^ ^ ^ declarators VariableDeclarator name loc14 ^ ^ initializer MethodInvocation arguments MemberReference member elseBranch_ter ^ ^ ^ ^ member isFoldableExpressBlock_ter ^ ^ ^ ^ ^ ^ ^ ^ ', 'prob': [0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'mode': 0, 'line': 777, 'isa': False, 'fl_score': 1}]
before@0 batch0 x: 0: root ^  ; []
after@0 batch0 x: 0: root ^  ; []
copynode 0:  root modified ^ ^ ; ['root -> modified']
copynode 0:  root add ^ ^ ; ['root -> add']
copynode 0:  root ^ ; ['root -> End']
copynode 0:  root member-member areNodesEqualForInlining_ter ^ ^  ^ ^ ; ['copy-member']
copynode 0:  root IfStatement ^ ^ ; ['root -> IfStatement']
copynode 0:  root member-member mayEffectMutableState_ter ^ ^  ^ ^ ; ['copy-member']
copynode 0:  root ReturnStatement ^ ^ ; ['root -> ReturnStatement']
copynode 0:  root member-member getFirstChild_ter ^ ^  ^ ^ ; ['copy-member']
copynode 0:  root return_type ^ ^ ; ['root -> return_type']
copynode 0:  root StatementExpression ^ ^ ; ['root -> StatementExpression']
before@1 batch0 x: -12.956847190856934: root StatementExpression ^ ^  ; ['root -> StatementExpression']
after@1 batch0 x: -12.956847190856934: root StatementExpression ^ ^  ; ['root -> StatementExpression']
copynode -0.040938250720500946:  root modified ^ IfStatement ^ ^ ; ['root -> modified', 'root -> IfStatement']
copynode -0.040938250720500946:  root modified ^ member-member areNodesEqualForInlining_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -0.040938250720500946:  root modified ^ member-member mayEffectMutableState_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -0.040938250720500946:  root modified ^ member-member getFirstChild_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-member']
copynode -0.040938250720500946:  root modified ^ qualifier-qualifier loc1 ^ ^  ^ ^ ; ['root -> modified', 'copy-qualifier']
copynode -3.2191057205200195:  root add ^ IfStatement ^ ^ ; ['root -> add', 'root -> IfStatement']
copynode -3.2191057205200195:  root add ^ StatementExpression ^ ^ ; ['root -> add', 'root -> StatementExpression']
copynode -0.040938250720500946:  root modified ^ operator-operator &&_ter ^ ^  ^ ^ ; ['root -> modified', 'copy-operator']
copynode -0.040938250720500946:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.040938250720500946:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  ^ ^ ; ['root -> modified', 'copy-MemberReference']
copynode -0.040938250720500946:  root modified ^ StatementExpression ^ ^ ; ['root -> modified', 'root -> StatementExpression']
copynode -3.2191057205200195:  root add ^ ReturnStatement ^ ^ ; ['root -> add', 'root -> ReturnStatement']
copynode -3.2191057205200195:  root add ^ LocalVariableDeclaration ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration']
copynode -3.2191057205200195:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter']
copynode -3.2191057205200195:  root add ^ control ^ ^ ; ['root -> add', 'root -> control']
copynode -0.040938250720500946:  root modified ^ ^ ; ['root -> modified', 'root -> End']
copynode -3.2191057205200195:  root add ^ AssertStatement ^ ^ ; ['root -> add', 'root -> AssertStatement']
copynode -3.2191057205200195:  root add ^ WhileStatement ^ ^ ; ['root -> add', 'root -> WhileStatement']
copynode -3.2191057205200195:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter']
copynode -3.2191057205200195:  root add ^ member-member areNodesEqualForInlining_ter ^ ^  ^ ^ ; ['root -> add', 'copy-member']
copynode -12.370734214782715:  root IfStatement condition ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition']
copynode -12.34673023223877:  root member-member areNodesEqualForInlining_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown']
copynode -12.426148414611816:  root member-member mayEffectMutableState_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown']
copynode -12.444842338562012:  root ReturnStatement expression ^ ^ ^ ; ['root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -12.643465042114258:  root member-member getFirstChild_ter ^ ^  unknown ^ ^ ^ ; ['copy-member', 'start -> unknown']
copynode -12.956847190856934:  root StatementExpression expression ^ ^ ^ ; ['root -> StatementExpression', 'StatementExpression -> expression']
copynode -12.737217903137207:  root return_type ReferenceType ^ ^ ^ ; ['root -> return_type', 'return_type -> ReferenceType']
copynode -12.737217903137207:  root return_type BasicType ^ ^ ^ ; ['root -> return_type', 'return_type -> BasicType']
copynode -12.444842338562012:  root ReturnStatement expression MemberReference member loc9 ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -12.444842338562012:  root ReturnStatement expression MemberReference member loc9 ^ ^ ^ ^ ^ ^ ; ['root -> ReturnStatement', 'copy-ReturnStatement']
copynode -12.643465042114258:  root member-member getFirstChild_ter ^ ^  getName_ter ^ ^ ^ ; ['copy-member', 'member -> getName_ter']
copynode -12.643465042114258:  root member-member getFirstChild_ter ^ ^  meth0 ^ ^ ^ ; ['copy-member', 'member -> meth0']
copynode -12.426148414611816:  root member-member mayEffectMutableState_ter ^ ^  meth0 ^ ^ ^ ; ['copy-member', 'member -> meth0']
copynode -12.34673023223877:  root member-member areNodesEqualForInlining_ter ^ ^  meth0 ^ ^ ^ ; ['copy-member', 'member -> meth0']
copynode -12.643465042114258:  root member-member getFirstChild_ter ^ ^  getFirstChild_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.643465042114258:  root member-member getFirstChild_ter ^ ^  getFirstChild_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.643465042114258:  root member-member getFirstChild_ter ^ ^  getLastChild_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.643465042114258:  root member-member getFirstChild_ter ^ ^  getType_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.643465042114258:  root member-member getFirstChild_ter ^ ^  getType_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.643465042114258:  root member-member getFirstChild_ter ^ ^  getFirstChild_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.426148414611816:  root member-member mayEffectMutableState_ter ^ ^  isAssignmentOp_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.643465042114258:  root member-member getFirstChild_ter ^ ^  getType_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.34673023223877:  root member-member areNodesEqualForInlining_ter ^ ^  isAssignmentOp_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.426148414611816:  root member-member mayEffectMutableState_ter ^ ^  getBlockExpression_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.426148414611816:  root member-member mayEffectMutableState_ter ^ ^  removeFirstChild_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.426148414611816:  root member-member mayEffectMutableState_ter ^ ^  removeFirstChild_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.34673023223877:  root member-member areNodesEqualForInlining_ter ^ ^  getBlockExpression_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.426148414611816:  root member-member mayEffectMutableState_ter ^ ^  srcref_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.34673023223877:  root member-member areNodesEqualForInlining_ter ^ ^  srcref_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.426148414611816:  root member-member mayEffectMutableState_ter ^ ^  srcref_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.34673023223877:  root member-member areNodesEqualForInlining_ter ^ ^  srcref_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.34673023223877:  root member-member areNodesEqualForInlining_ter ^ ^  removeFirstChild_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.34673023223877:  root member-member areNodesEqualForInlining_ter ^ ^  reportCodeChange_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.956847190856934:  root StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -12.426148414611816:  root member-member mayEffectMutableState_ter ^ ^  getBlockExpression_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.34673023223877:  root member-member areNodesEqualForInlining_ter ^ ^  debug_ter ^ ^ ^ ; ['copy-member', 'member -> debug_ter']
copynode -12.426148414611816:  root member-member mayEffectMutableState_ter ^ ^  getFirstChild_ter ^ ^ ^ ; ['copy-member', 'copy-member']
copynode -12.956847190856934:  root StatementExpression expression MethodInvocation qualifier parent_ter ^ ^ arguments MemberReference member n_ter ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member replaceChild_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -12.956847190856934:  root StatementExpression expression MethodInvocation member reportCodeChange_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -12.956847190856934:  root StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member detachFromParent_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -12.34673023223877:  root member-member areNodesEqualForInlining_ter ^ ^  add_ter ^ ^ ^ ; ['copy-member', 'member -> add_ter']
copynode -12.956847190856934:  root StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member detachFromParent_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -12.956847190856934:  root StatementExpression expression MethodInvocation qualifier n_ter ^ ^ arguments MemberReference member cond_ter ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -12.956847190856934:  root StatementExpression expression MethodInvocation qualifier n_ter ^ ^ arguments MemberReference member cond_ter ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -12.956847190856934:  root StatementExpression expression MethodInvocation member reportCodeChange_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -12.956847190856934:  root StatementExpression expression MethodInvocation qualifier parent_ter ^ ^ arguments MemberReference member n_ter ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member replaceChild_ter ^ ^ ^ ^ ^ ^ ; ['root -> StatementExpression', 'copy-StatementExpression']
copynode -12.370734214782715:  root IfStatement condition MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member isAssignmentOp_ter ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier n_ter ^ ^ arguments MemberReference member cond_ter ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member removeFirstChild_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member removeFirstChild_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getLastChild_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier IR_ter ^ ^ selectors MethodInvocation arguments MemberReference member n_ter ^ ^ ^ ^ member srcref_ter ^ ^ ^ ^ arguments MemberReference member cond_ter ^ ^ ^ MemberReference member loc4 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member hook_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer ClassCreator selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member srcref_ter ^ ^ ^ ^ type ReferenceType name Node_ter ^ ^ ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ member getType_ter ^ ^ ^ MemberReference member loc3 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member newExpr_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier parent_ter ^ ^ arguments MemberReference member n_ter ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member replaceChild_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation member reportCodeChange_ter ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc9 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.370734214782715:  root IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier n_ter ^ ^ arguments MemberReference member cond_ter ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member removeFirstChild_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member removeFirstChild_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getLastChild_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier IR_ter ^ ^ selectors MethodInvocation arguments MemberReference member n_ter ^ ^ ^ ^ member srcref_ter ^ ^ ^ ^ arguments MemberReference member cond_ter ^ ^ ^ MemberReference member loc4 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member hook_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer ClassCreator selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member srcref_ter ^ ^ ^ ^ type ReferenceType name Node_ter ^ ^ ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ member getType_ter ^ ^ ^ MemberReference member loc3 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member newExpr_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier parent_ter ^ ^ arguments MemberReference member n_ter ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member replaceChild_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation member reportCodeChange_ter ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc9 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.370734214782715:  root IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getType_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member isAssignmentOp_ter ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier n_ter ^ ^ arguments MemberReference member cond_ter ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member removeFirstChild_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member removeFirstChild_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getLastChild_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier IR_ter ^ ^ selectors MethodInvocation arguments MemberReference member n_ter ^ ^ ^ ^ member srcref_ter ^ ^ ^ ^ arguments MemberReference member cond_ter ^ ^ ^ MemberReference member loc4 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member hook_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer ClassCreator selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member srcref_ter ^ ^ ^ ^ type ReferenceType name Node_ter ^ ^ ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ member getType_ter ^ ^ ^ MemberReference member loc3 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member newExpr_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier parent_ter ^ ^ arguments MemberReference member n_ter ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member replaceChild_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation member reportCodeChange_ter ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc9 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.370734214782715:  root IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member thenBranchIsExpressionBlock_ter ^ ^ ^ ^ operandr MemberReference member loc14 ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc0 ^ ^ initializer MethodInvocation selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ arguments MemberReference member thenBranch_ter ^ ^ ^ ^ member getBlockExpression_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ arguments MemberReference member elseBranch_ter ^ ^ ^ ^ member getBlockExpression_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getType_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements IfStatement condition MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member isAssignmentOp_ter ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier n_ter ^ ^ arguments MemberReference member cond_ter ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member removeFirstChild_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member removeFirstChild_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getLastChild_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier IR_ter ^ ^ selectors MethodInvocation arguments MemberReference member n_ter ^ ^ ^ ^ member srcref_ter ^ ^ ^ ^ arguments MemberReference member cond_ter ^ ^ ^ MemberReference member loc4 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member hook_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer ClassCreator selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member srcref_ter ^ ^ ^ ^ type ReferenceType name Node_ter ^ ^ ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ member getType_ter ^ ^ ^ MemberReference member loc3 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member newExpr_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier parent_ter ^ ^ arguments MemberReference member n_ter ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member replaceChild_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation member reportCodeChange_ter ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc9 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier n_ter ^ ^ arguments MemberReference member cond_ter ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member detachFromParent_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member detachFromParent_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier IR_ter ^ ^ arguments MethodInvocation qualifier IR_ter ^ ^ selectors MethodInvocation arguments MemberReference member n_ter ^ ^ ^ ^ member srcref_ter ^ ^ ^ ^ arguments MemberReference member cond_ter ^ ^ ^ MemberReference member loc0 ^ ^ ^ MemberReference member loc1 ^ ^ ^ ^ member hook_ter ^ ^ ^ ^ member exprResult_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier parent_ter ^ ^ arguments MemberReference member n_ter ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member replaceChild_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation member reportCodeChange_ter ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc9 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> IfStatement', 'copy-IfStatement']
copynode -12.737217903137207:  root return_type unknown ^ ^ ^ ; ['root -> return_type', 'start -> unknown']
copynode -12.370734214782715:  root IfStatement unknown ^ ^ ^ ; ['root -> IfStatement', 'start -> unknown']
copynode -12.370734214782715:  root IfStatement condition ^ then_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement']
copynode -12.444842338562012:  root ReturnStatement unknown ^ ^ ^ ; ['root -> ReturnStatement', 'start -> unknown']
copynode -12.737217903137207:  root return_type loc1 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -12.737217903137207:  root return_type loc5 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -12.737217903137207:  root return_type loc0 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -12.737217903137207:  root return_type loc7 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -12.737217903137207:  root return_type loc4 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -12.737217903137207:  root return_type loc3 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -12.370734214782715:  root IfStatement condition ^ then_statement ^ else_statement ^ ^ ^ ; ['root -> IfStatement', 'IfStatement -> condition then_statement else_statement']
copynode -12.737217903137207:  root return_type loc6 ^ ^ ^ ; ['root -> return_type', 'copy-VariableDeclarator']
copynode -12.444842338562012:  root ReturnStatement loc6 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -12.444842338562012:  root ReturnStatement loc5 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -12.444842338562012:  root ReturnStatement loc9 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -12.444842338562012:  root ReturnStatement loc2 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -12.444842338562012:  root ReturnStatement loc7 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -12.444842338562012:  root ReturnStatement loc3 ^ ^ ^ ; ['root -> ReturnStatement', 'copy-VariableDeclarator']
copynode -12.370734214782715:  root IfStatement loc3 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -12.370734214782715:  root IfStatement loc4 ^ ^ ^ ; ['root -> IfStatement', 'copy-VariableDeclarator']
before@2 batch0 x: -35.30416011810303: root IfStatement loc4 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
after@2 batch0 x: -35.30416011810303: root IfStatement loc4 ^ ^ ^  ; ['root -> IfStatement', 'copy-VariableDeclarator']
copynode -0.5473568364977837:  root modified ^ IfStatement condition ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition']
copynode -2.1140478774905205:  root modified ^ member-member areNodesEqualForInlining_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -2.219433657824993:  root modified ^ member-member mayEffectMutableState_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -2.514843814074993:  root modified ^ member-member getFirstChild_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown']
copynode -3.7015572786331177:  root add ^ IfStatement condition ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition']
copynode -4.2360841035842896:  root add ^ StatementExpression expression ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -4.440542094409466:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -4.4933046028018:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member']
copynode -4.406715743243694:  root modified ^ operator-operator &&_ter ^ ^  ||_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ||_ter']
copynode -3.4706572219729424:  root modified ^ qualifier-qualifier loc1 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown']
copynode -2.514843814074993:  root modified ^ member-member getFirstChild_ter ^ ^  getName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> getName_ter']
copynode -3.4706572219729424:  root modified ^ qualifier-qualifier loc1 ^ ^  loc3 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc3']
copynode -2.514843814074993:  root modified ^ member-member getFirstChild_ter ^ ^  getFirstChild_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.4706572219729424:  root modified ^ qualifier-qualifier loc1 ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0']
copynode -4.406715743243694:  root modified ^ operator-operator &&_ter ^ ^  &&_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> &&_ter']
copynode -2.514843814074993:  root modified ^ member-member getFirstChild_ter ^ ^  getFirstChild_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.514843814074993:  root modified ^ member-member getFirstChild_ter ^ ^  getType_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -6.1640943214297295:  root modified ^ StatementExpression expression ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression']
copynode -2.514843814074993:  root modified ^ member-member getFirstChild_ter ^ ^  getLastChild_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.4706572219729424:  root modified ^ qualifier-qualifier loc1 ^ ^  loc6 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc6']
copynode -2.514843814074993:  root modified ^ member-member getFirstChild_ter ^ ^  getType_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.4706572219729424:  root modified ^ qualifier-qualifier loc1 ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par0']
copynode -2.514843814074993:  root modified ^ member-member getFirstChild_ter ^ ^  getType_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.514843814074993:  root modified ^ member-member getFirstChild_ter ^ ^  getFirstChild_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.219433657824993:  root modified ^ member-member mayEffectMutableState_ter ^ ^  getBlockExpression_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.4706572219729424:  root modified ^ qualifier-qualifier loc1 ^ ^  loc5 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc5']
copynode -3.4706572219729424:  root modified ^ qualifier-qualifier loc1 ^ ^  loc1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc1']
copynode -2.1140478774905205:  root modified ^ member-member areNodesEqualForInlining_ter ^ ^  isAssignmentOp_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.4706572219729424:  root modified ^ qualifier-qualifier loc1 ^ ^  par1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par1']
copynode -2.219433657824993:  root modified ^ member-member mayEffectMutableState_ter ^ ^  isAssignmentOp_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.514843814074993:  root modified ^ member-member getFirstChild_ter ^ ^  getFirstChild_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.1140478774905205:  root modified ^ member-member areNodesEqualForInlining_ter ^ ^  getBlockExpression_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -3.4706572219729424:  root modified ^ qualifier-qualifier loc1 ^ ^  NodeUtil_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -2.1140478774905205:  root modified ^ member-member areNodesEqualForInlining_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -3.4706572219729424:  root modified ^ qualifier-qualifier loc1 ^ ^  IR_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier']
copynode -2.219433657824993:  root modified ^ member-member mayEffectMutableState_ter ^ ^  removeFirstChild_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.1140478774905205:  root modified ^ member-member areNodesEqualForInlining_ter ^ ^  srcref_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.219433657824993:  root modified ^ member-member mayEffectMutableState_ter ^ ^  removeFirstChild_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.219433657824993:  root modified ^ member-member mayEffectMutableState_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0']
copynode -2.219433657824993:  root modified ^ member-member mayEffectMutableState_ter ^ ^  srcref_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.1140478774905205:  root modified ^ member-member areNodesEqualForInlining_ter ^ ^  srcref_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.219433657824993:  root modified ^ member-member mayEffectMutableState_ter ^ ^  getBlockExpression_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.1140478774905205:  root modified ^ member-member areNodesEqualForInlining_ter ^ ^  reportCodeChange_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.1140478774905205:  root modified ^ member-member areNodesEqualForInlining_ter ^ ^  getBlockExpression_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.1140478774905205:  root modified ^ member-member areNodesEqualForInlining_ter ^ ^  removeFirstChild_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.219433657824993:  root modified ^ member-member mayEffectMutableState_ter ^ ^  srcref_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.1140478774905205:  root modified ^ member-member areNodesEqualForInlining_ter ^ ^  detachFromParent_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -2.219433657824993:  root modified ^ member-member mayEffectMutableState_ter ^ ^  reportCodeChange_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member']
copynode -4.440542094409466:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -4.440542094409466:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -4.4933046028018:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member']
copynode -4.4933046028018:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  qualifier ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member']
copynode -8.257467269897461:  root add ^ LocalVariableDeclaration type ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators']
copynode -8.199604034423828:  root add ^ ReturnStatement expression ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression']
copynode -4.440542094409466:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -4.2360841035842896:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.2360841035842896:  root add ^ StatementExpression expression MethodInvocation qualifier parent_ter ^ ^ arguments MemberReference member n_ter ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member replaceChild_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.2360841035842896:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member detachFromParent_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.2360841035842896:  root add ^ StatementExpression expression MethodInvocation member reportCodeChange_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.4933046028018:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  postfix_operators ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member']
copynode -4.2360841035842896:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member detachFromParent_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.2360841035842896:  root add ^ StatementExpression expression MethodInvocation qualifier n_ter ^ ^ arguments MemberReference member cond_ter ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.440542094409466:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -4.2360841035842896:  root add ^ StatementExpression expression MethodInvocation qualifier n_ter ^ ^ arguments MemberReference member cond_ter ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.2360841035842896:  root add ^ StatementExpression expression MethodInvocation member reportCodeChange_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.2360841035842896:  root add ^ StatementExpression expression MethodInvocation qualifier parent_ter ^ ^ arguments MemberReference member n_ter ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member replaceChild_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -8.199604034423828:  root add ^ ReturnStatement expression MemberReference member loc9 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -9.614459991455078:  root add ^ ReturnStatement_ter ^ ^ ; ['root -> add', 'root -> ReturnStatement_ter', 'root -> End']
copynode -4.4933046028018:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  selectors ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> selectors member']
copynode -8.199604034423828:  root add ^ ReturnStatement expression MemberReference member loc9 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement']
copynode -9.804052352905273:  root add ^ control EnhancedForControl ^ ^ ^ ; ['root -> add', 'root -> control', 'control -> EnhancedForControl']
copynode -10.462587356567383:  root add ^ AssertStatement condition ^ ^ ^ ; ['root -> add', 'root -> AssertStatement', 'AssertStatement -> condition']
copynode -10.584543228149414:  root add ^ WhileStatement condition ^ ^ ^ ; ['root -> add', 'root -> WhileStatement', 'WhileStatement -> condition']
copynode -4.406715743243694:  root modified ^ operator-operator &&_ter ^ ^  ==_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ==_ter']
copynode -10.870100021362305:  root add ^ BreakStatement_ter ^ ^ ; ['root -> add', 'root -> BreakStatement_ter', 'root -> End']
copynode -4.406715743243694:  root modified ^ operator-operator &&_ter ^ ^  !=_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> !=_ter']
copynode -4.406715743243694:  root modified ^ operator-operator &&_ter ^ ^  >_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> >_ter']
copynode -0.5473568364977837:  root modified ^ IfStatement condition MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member isAssignmentOp_ter ^ ^ ^ ^ then_statement BlockStatement statements LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier n_ter ^ ^ arguments MemberReference member cond_ter ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member removeFirstChild_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member removeFirstChild_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getLastChild_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier IR_ter ^ ^ selectors MethodInvocation arguments MemberReference member n_ter ^ ^ ^ ^ member srcref_ter ^ ^ ^ ^ arguments MemberReference member cond_ter ^ ^ ^ MemberReference member loc4 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member hook_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer ClassCreator selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member srcref_ter ^ ^ ^ ^ type ReferenceType name Node_ter ^ ^ ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ member getType_ter ^ ^ ^ MemberReference member loc3 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member newExpr_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier parent_ter ^ ^ arguments MemberReference member n_ter ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member replaceChild_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation member reportCodeChange_ter ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc9 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'copy-IfStatement']
copynode -8.257467269897461:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc2 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -11.417556762695312:  root add ^ member-member areNodesEqualForInlining_ter ^ ^  unknown ^ ^ ^ ; ['root -> add', 'copy-member', 'start -> unknown']
copynode -0.5473568364977837:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ then_statement BlockStatement statements StatementExpression expression MethodInvocation qualifier n_ter ^ ^ arguments MemberReference member cond_ter ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member removeFirstChild_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member removeFirstChild_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getLastChild_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier IR_ter ^ ^ selectors MethodInvocation arguments MemberReference member n_ter ^ ^ ^ ^ member srcref_ter ^ ^ ^ ^ arguments MemberReference member cond_ter ^ ^ ^ MemberReference member loc4 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member hook_ter ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc7 ^ ^ initializer ClassCreator selectors MethodInvocation arguments MemberReference member loc0 ^ ^ ^ ^ member srcref_ter ^ ^ ^ ^ type ReferenceType name Node_ter ^ ^ ^ ^ arguments MethodInvocation qualifier loc0 ^ ^ member getType_ter ^ ^ ^ MemberReference member loc3 ^ ^ ^ MemberReference member loc6 ^ ^ ^ ^ ^ ^ ^ ^ ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc9 ^ ^ initializer MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member loc7 ^ ^ ^ ^ member newExpr_ter ^ ^ ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation qualifier parent_ter ^ ^ arguments MemberReference member n_ter ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member replaceChild_ter ^ ^ ^ ^ ^ StatementExpression expression MethodInvocation member reportCodeChange_ter ^ ^ ^ ^ ^ ReturnStatement expression MemberReference member loc9 ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'copy-IfStatement']
copynode -6.1640943214297295:  root modified ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.406715743243694:  root modified ^ operator-operator &&_ter ^ ^  <_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> <_ter']
copynode -6.1640943214297295:  root modified ^ StatementExpression expression MethodInvocation qualifier parent_ter ^ ^ arguments MemberReference member n_ter ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member replaceChild_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.1640943214297295:  root modified ^ StatementExpression expression MethodInvocation member reportCodeChange_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.1640943214297295:  root modified ^ StatementExpression expression MethodInvocation qualifier n_ter ^ ^ arguments MemberReference member cond_ter ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.1640943214297295:  root modified ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member detachFromParent_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -4.406715743243694:  root modified ^ operator-operator &&_ter ^ ^  +_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> +_ter']
copynode -8.257467269897461:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc1 ^ ^ initializer MethodInvocation selectors MethodInvocation member getFirstChild_ter ^ ^ ^ ^ arguments MemberReference member elseBranch_ter ^ ^ ^ ^ member getBlockExpression_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -6.1640943214297295:  root modified ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member detachFromParent_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.1640943214297295:  root modified ^ StatementExpression expression MethodInvocation qualifier n_ter ^ ^ arguments MemberReference member cond_ter ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -6.1640943214297295:  root modified ^ StatementExpression expression MethodInvocation member reportCodeChange_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -8.257467269897461:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc3 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member removeFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -6.1640943214297295:  root modified ^ StatementExpression expression MethodInvocation qualifier parent_ter ^ ^ arguments MemberReference member n_ter ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member replaceChild_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'copy-StatementExpression']
copynode -8.257467269897461:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc5 ^ ^ initializer MethodInvocation qualifier loc1 ^ ^ member getLastChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -8.257467269897461:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc4 ^ ^ initializer MethodInvocation qualifier loc0 ^ ^ member removeFirstChild_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -4.406715743243694:  root modified ^ operator-operator &&_ter ^ ^  |_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> |_ter']
copynode -8.257467269897461:  root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier IR_ter ^ ^ selectors MethodInvocation arguments MemberReference member n_ter ^ ^ ^ ^ member srcref_ter ^ ^ ^ ^ arguments MemberReference member cond_ter ^ ^ ^ MemberReference member loc4 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member hook_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
before@3 batch0 x: -12.508840560913086: root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier IR_ter ^ ^ selectors MethodInvocation arguments MemberReference member n_ter ^ ^ ^ ^ member srcref_ter ^ ^ ^ ^ arguments MemberReference member cond_ter ^ ^ ^ MemberReference member loc4 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member hook_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
after@3 batch0 x: -12.508840560913086: root add ^ LocalVariableDeclaration type ReferenceType name Node_ter ^ ^ ^ ^ declarators VariableDeclarator name loc6 ^ ^ initializer MethodInvocation qualifier IR_ter ^ ^ selectors MethodInvocation arguments MemberReference member n_ter ^ ^ ^ ^ member srcref_ter ^ ^ ^ ^ arguments MemberReference member cond_ter ^ ^ ^ MemberReference member loc4 ^ ^ ^ MemberReference member loc5 ^ ^ ^ ^ member hook_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> add', 'root -> LocalVariableDeclaration', 'copy-LocalVariableDeclaration']
copynode -0.5480271961423568:  root modified ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -0.5480271961423568:  root modified ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -2.2126523181796074:  root modified ^ member-member areNodesEqualForInlining_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -2.329414688050747:  root modified ^ member-member mayEffectMutableState_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -2.8641248866915703:  root modified ^ member-member getFirstChild_ter ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-member', 'start -> unknown', 'root -> End']
copynode -4.301596418023109:  root add ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -3.7021031081094407:  root add ^ IfStatement condition BinaryOperation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation']
copynode -4.639052890241146:  root modified ^ operator-operator &&_ter ^ ^  ||_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> ||_ter', 'root -> End']
copynode -3.7021031081094407:  root add ^ IfStatement condition MethodInvocation ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation']
copynode -4.705300085246563:  root modified ^ qualifier-qualifier loc1 ^ ^  unknown ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'start -> unknown', 'root -> End']
copynode -5.24720823019743:  root modified ^ member-member getFirstChild_ter ^ ^  getName_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> getName_ter', 'root -> End']
copynode -5.496063821017742:  root modified ^ qualifier-qualifier loc1 ^ ^  loc3 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc3', 'root -> End']
copynode -4.528841286897659:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -4.570842355489731:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -5.6083835288882256:  root modified ^ member-member getFirstChild_ter ^ ^  getFirstChild_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -0.5480271961423568:  root modified ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -3.7021031081094407:  root add ^ IfStatement condition MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference']
copynode -5.8347192928195:  root modified ^ qualifier-qualifier loc1 ^ ^  loc0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc0', 'root -> End']
copynode -6.014087192714214:  root modified ^ operator-operator &&_ter ^ ^  &&_ter ^ ^ ^ ; ['root -> modified', 'copy-operator', 'operator -> &&_ter', 'root -> End']
copynode -6.100019805133343:  root modified ^ member-member getFirstChild_ter ^ ^  getFirstChild_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.104858748614788:  root modified ^ member-member getFirstChild_ter ^ ^  getType_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.189836459234357:  root modified ^ StatementExpression expression MethodInvocation ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation']
copynode -6.3379672691226006:  root modified ^ member-member getFirstChild_ter ^ ^  getLastChild_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.359743706882:  root modified ^ qualifier-qualifier loc1 ^ ^  loc6 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc6', 'root -> End']
copynode -6.3788512870669365:  root modified ^ member-member getFirstChild_ter ^ ^  getType_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.491562478244305:  root modified ^ qualifier-qualifier loc1 ^ ^  par0 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par0', 'root -> End']
copynode -6.533884398639202:  root modified ^ member-member getFirstChild_ter ^ ^  getType_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -4.570842355489731:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -4.301596418023109:  root add ^ StatementExpression expression Assignment ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment']
copynode -4.528841286897659:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.780741088092327:  root modified ^ member-member getFirstChild_ter ^ ^  getFirstChild_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.831894747912884:  root modified ^ member-member mayEffectMutableState_ter ^ ^  getBlockExpression_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -6.924988619983196:  root modified ^ qualifier-qualifier loc1 ^ ^  loc5 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc5', 'root -> End']
copynode -6.935621850192547:  root modified ^ qualifier-qualifier loc1 ^ ^  loc1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> loc1', 'root -> End']
copynode -6.973757617175579:  root modified ^ member-member areNodesEqualForInlining_ter ^ ^  isAssignmentOp_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -4.528841286897659:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -6.988154046237469:  root modified ^ qualifier-qualifier loc1 ^ ^  par1 ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'qualifier -> par1', 'root -> End']
copynode -4.570842355489731:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.004868380725384:  root modified ^ member-member mayEffectMutableState_ter ^ ^  isAssignmentOp_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -7.046457640826702:  root modified ^ member-member getFirstChild_ter ^ ^  getFirstChild_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -7.054383151233196:  root modified ^ member-member areNodesEqualForInlining_ter ^ ^  getBlockExpression_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -7.094144456088543:  root modified ^ qualifier-qualifier loc1 ^ ^  NodeUtil_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -7.144508711993694:  root modified ^ member-member areNodesEqualForInlining_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
copynode -7.158975474536419:  root modified ^ qualifier-qualifier loc1 ^ ^  IR_ter ^ ^ ^ ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -7.215691439807415:  root modified ^ member-member mayEffectMutableState_ter ^ ^  removeFirstChild_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -7.218966357409954:  root modified ^ member-member areNodesEqualForInlining_ter ^ ^  srcref_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -7.286520831286907:  root modified ^ member-member mayEffectMutableState_ter ^ ^  removeFirstChild_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -7.334450118243694:  root modified ^ member-member mayEffectMutableState_ter ^ ^  meth0 ^ ^ ^ ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
copynode -7.373947970569134:  root modified ^ member-member mayEffectMutableState_ter ^ ^  srcref_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -7.44752012938261:  root modified ^ member-member areNodesEqualForInlining_ter ^ ^  srcref_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -7.462782256305218:  root modified ^ member-member mayEffectMutableState_ter ^ ^  getBlockExpression_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -7.508669726550579:  root modified ^ member-member areNodesEqualForInlining_ter ^ ^  reportCodeChange_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -4.570842355489731:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member cond_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.6883534118533134:  root modified ^ member-member areNodesEqualForInlining_ter ^ ^  getBlockExpression_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -7.708636157214642:  root modified ^ member-member areNodesEqualForInlining_ter ^ ^  removeFirstChild_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -7.713419787585735:  root modified ^ member-member mayEffectMutableState_ter ^ ^  srcref_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -0.5480271961423568:  root modified ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -4.570842355489731:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member cond_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.764811389148235:  root modified ^ member-member areNodesEqualForInlining_ter ^ ^  detachFromParent_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -4.528841286897659:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member cond_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.80423628538847:  root modified ^ member-member mayEffectMutableState_ter ^ ^  reportCodeChange_ter ^ ^ ^ ; ['root -> modified', 'copy-member', 'copy-member', 'root -> End']
copynode -4.528841286897659:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member cond_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.528841286897659:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member cond_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.528841286897659:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -4.570842355489731:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member cond_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.570842355489731:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.528841286897659:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0']
copynode -4.570842355489731:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3']
copynode -4.570842355489731:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member thenBranch_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.570842355489731:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member elseBranch_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.301596418023109:  root add ^ StatementExpression expression MemberReference ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MemberReference']
copynode -4.528841286897659:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member cond_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -4.528841286897659:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member elseBranch_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member']
copynode -7.946737639605999:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  qualifier loc2 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc2']
copynode -7.893293730914593:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators -_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter']
copynode -8.475578784942627:  root add ^ LocalVariableDeclaration type ReferenceType ^ ^ declarators ^ ^ ^ ; ['root -> add', 'root -> LocalVariableDeclaration', 'LocalVariableDeclaration -> type declarators', 'type -> ReferenceType']
copynode -0.5480271961423568:  root modified ^ IfStatement condition MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member isAssignmentOp_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -8.110978953540325:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  qualifier loc2 ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'qualifier -> loc2']
copynode -7.97358476370573:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators -_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> -_ter']
copynode -7.893293730914593:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators !_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -7.97358476370573:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  prefix_operators !_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -8.897156834602356:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ arguments MemberReference member loc5 ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -3.7021031081094407:  root add ^ IfStatement condition This ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> This']
copynode -9.121146321296692:  root add ^ StatementExpression expression MethodInvocation qualifier parent_ter ^ ^ arguments MemberReference member n_ter ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member replaceChild_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -9.160218358039856:  root add ^ StatementExpression expression MethodInvocation qualifier loc0 ^ ^ member detachFromParent_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -3.7021031081094407:  root add ^ IfStatement condition MethodInvocation qualifier NodeUtil_ter ^ ^ arguments MemberReference member loc0 ^ ^ ^ ^ member isAssignmentOp_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -9.17821991443634:  root add ^ StatementExpression expression MethodInvocation member reportCodeChange_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -0.5480271961423568:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getType_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'copy-condition']
copynode -9.20826256275177:  root add ^ StatementExpression expression MethodInvocation qualifier loc1 ^ ^ member detachFromParent_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -9.288237690925598:  root add ^ StatementExpression expression MethodInvocation qualifier n_ter ^ ^ arguments MemberReference member cond_ter ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -9.286988377571106:  root add ^ StatementExpression expression MethodInvocation qualifier n_ter ^ ^ arguments MemberReference member cond_ter ^ ^ ^ ^ member removeChild_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -8.837090909481049:  root add ^ ReturnStatement expression Literal ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'ReturnStatement -> expression', 'expression -> Literal']
copynode -9.43877923488617:  root add ^ ReturnStatement expression MemberReference member loc9 ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> ReturnStatement', 'copy-ReturnStatement', 'root -> End']
copynode -9.387892842292786:  root add ^ StatementExpression expression MethodInvocation member reportCodeChange_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -8.842762343585491:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  postfix_operators ++_ter ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> postfix_operators member', 'postfix_operators -> ++_ter']
copynode -9.412089467048645:  root add ^ StatementExpression expression MethodInvocation qualifier parent_ter ^ ^ arguments MemberReference member n_ter ^ ^ ^ MemberReference member loc9 ^ ^ ^ ^ member replaceChild_ter ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'copy-StatementExpression', 'root -> End']
copynode -8.110978953540325:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  qualifier unknown ^ ^ member ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> qualifier member', 'start -> unknown']
copynode -3.7021031081094407:  root add ^ IfStatement condition Literal ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Literal']
copynode -0.5480271961423568:  root modified ^ IfStatement condition Cast ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast']
before@4 batch0 x: -9.667962231847923: root modified ^ IfStatement condition Cast ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast']
after@4 batch0 x: -9.667962231847923: root modified ^ IfStatement condition Cast ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> Cast']
copynode -1.230037727567833:  root modified ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -1.267908134672325:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -1.267908134672325:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -1.267908134672325:  root modified ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -1.230037727567833:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.438255160988774:  root add ^ IfStatement condition BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -1.267908134672325:  root modified ^ IfStatement condition MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -4.4331822991371155:  root add ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.516545385122299:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2', 'root -> End']
copynode -5.6072350442409515:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc2 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc2', 'root -> End']
copynode -1.267908134672325:  root modified ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.4331822991371155:  root add ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -4.4331822991371155:  root add ^ StatementExpression expression MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.745639004919212:  root modified ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -4.686260074318852:  root add ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -1.267908134672325:  root modified ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.750785797776189:  root add ^ IfStatement condition MemberReference member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member']
copynode -4.686260074318852:  root add ^ IfStatement condition MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.597148984670639:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -6.627069965004921:  root add ^ StatementExpression expression Assignment expressionl ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type']
copynode -6.70882323384285:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc1 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc1', 'root -> End']
copynode -5.750785797776189:  root add ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -4.686260074318852:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member']
copynode -1.267908134672325:  root modified ^ IfStatement condition MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -4.4331822991371155:  root add ^ StatementExpression expression MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member']
copynode -1.267908134672325:  root modified ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -1.267908134672325:  root modified ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.9875116646289825:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -6.996830075979233:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member unknown ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -6.229907551780343:  root modified ^ StatementExpression expression MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.686260074318852:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -4.686260074318852:  root add ^ IfStatement condition MethodInvocation member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member']
copynode -5.745639004919212:  root modified ^ IfStatement condition MemberReference prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -1.267908134672325:  root modified ^ IfStatement condition MethodInvocation selectors ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> selectors member']
copynode -7.571918576955795:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member cond_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -4.686260074318852:  root add ^ IfStatement condition MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.229907551780343:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.7197438180446625:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member cond_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -4.686260074318852:  root add ^ IfStatement condition MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -7.7683649361133575:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member cond_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -4.686260074318852:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member']
copynode -7.838870078325272:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member cond_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -7.8459711372852325:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member cond_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -1.230037727567833:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member thenBranchIsExpressionBlock_ter ^ ^ ^ ^ operandr MemberReference member loc14 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -7.892680197954178:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3', 'root -> End']
copynode -7.921163648366928:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member cond_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -4.686260074318852:  root add ^ IfStatement condition MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -8.017582029104233:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -8.023587256669998:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc0 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -8.049932569265366:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc3 ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc3', 'root -> End']
copynode -8.117698758840561:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member thenBranch_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -8.177089780569077:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member elseBranch_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -1.230037727567833:  root modified ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getType_ter ^ ^ ^ ^ operandr MethodInvocation qualifier loc1 ^ ^ member getType_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation']
copynode -8.247971564531326:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member cond_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -6.229907551780343:  root modified ^ StatementExpression expression MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -8.2734594643116:  root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member elseBranch_ter ^ ^ ^ ^ ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'copy-member', 'root -> End']
copynode -6.229907551780343:  root modified ^ StatementExpression expression MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -4.4331822991371155:  root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
before@5 batch0 x: -8.409739077091217: root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
after@5 batch0 x: -8.409739077091217: root add ^ StatementExpression expression MethodInvocation qualifier ^ selectors ^ member ^ ^ ^ ^ ^  ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier selectors member']
copynode -1.2859508219989948:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -1.9791711356374435:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -2.2181429054471664:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -4.23157242796151:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -1.2859508219989948:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -4.1024592306348495:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -4.445308737398591:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -5.346328773710411:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter']
copynode -4.1024592306348495:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -4.445308737398591:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -4.1024592306348495:  root modified ^ IfStatement condition MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -4.445308737398591:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.423533022403717:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2']
copynode -5.6331177141400985:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.312475242826622:  root modified ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.985279658052605:  root modified ^ IfStatement condition MemberReference member loc2 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.159916132630315:  root add ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2']
copynode -5.9529882073402405:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2']
copynode -6.627589017734863:  root add ^ StatementExpression expression Assignment expressionl MemberReference ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference']
copynode -6.739779859723058:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -6.335439175309148:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -5.725954592227936:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.847623914422002:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter']
copynode -6.895944633695763:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -6.916429081175011:  root modified ^ IfStatement condition MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -6.894207537174225:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -4.1024592306348495:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -7.039347806945443:  root modified ^ StatementExpression expression MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -7.069519370736089:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -6.862488785001915:  root modified ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2']
copynode -4.445308737398591:  root add ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -5.985279658052605:  root modified ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.295047849358525:  root add ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -7.46096102258889:  root modified ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -7.559824028227013:  root modified ^ IfStatement condition MethodInvocation selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> selectors member', 'selectors -> MethodInvocation']
copynode -7.63817516900599:  root modified ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -5.423533022403717:  root add ^ StatementExpression expression MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.419983118714299:  root add ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -4.1024592306348495:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member n_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -7.812946408928838:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -7.875772037717979:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member thenBranchIsExpressionBlock_ter ^ ^ ^ ^ operandr MemberReference member loc14 ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -4.445308737398591:  root add ^ IfStatement condition BinaryOperation operator >_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> >_ter']
copynode -7.92531403893372:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter']
copynode -6.419983118714299:  root add ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2']
before@6 batch0 x: -8.018182428029831: root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc0 ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
after@6 batch0 x: -8.018182428029831: root modified ^ MemberReference-MemberReference member loc2 ^ ^ ^  member loc0 ^ ^ ^ ^  ; ['root -> modified', 'copy-MemberReference', 'MemberReference -> member', 'member -> loc0', 'root -> End']
copynode -1.3148760191979818:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -1.3148760191979818:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -1.3148760191979818:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -1.3148760191979818:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference']
copynode -5.237677374097984:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.323151819349732:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -5.41187016031472:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -4.954177302483004:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation']
copynode -4.954177302483004:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -4.954177302483004:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl']
copynode -5.3484583889949135:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference']
copynode -5.904940166685265:  root modified ^ IfStatement condition MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.463888296100777:  root modified ^ IfStatement condition MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -6.533908286306541:  root modified ^ IfStatement condition MemberReference member loc2 ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'root -> End']
copynode -5.323151819349732:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -5.3484583889949135:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments']
copynode -5.792434148432221:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -5.792434148432221:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -6.559204280376434:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown']
copynode -6.649485301808454:  root add ^ StatementExpression expression Assignment expressionl MemberReference member ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member']
copynode -6.558437496365514:  root add ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown']
copynode -6.1777965351357125:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -6.751443922519684:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.41187016031472:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
copynode -6.93816127255559:  root add ^ StatementExpression expression MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -1.3148760191979818:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl This ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> This']
copynode -6.7435232938150875:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.330692270013969:  root modified ^ IfStatement condition MethodInvocation qualifier unknown ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown', 'copy-arguments']
copynode -6.746712505759206:  root add ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -7.305741646501701:  root modified ^ IfStatement condition MemberReference member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'root -> End']
copynode -6.266259729862213:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2', 'arguments -> MemberReference']
copynode -7.127245166513603:  root modified ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown']
copynode -5.3484583889949135:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation']
copynode -7.031436004850548:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -6.1777965351357125:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -6.8489157851436175:  root add ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier loc2 ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier member', 'prefix_operators -> !_ter', 'qualifier -> loc2']
copynode -5.41187016031472:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
copynode -6.897982385882642:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -1.3148760191979818:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getType_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -1.3148760191979818:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl Cast ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> Cast']
before@7 batch0 x: -7.883108078676742: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl Cast ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> Cast']
after@7 batch0 x: -7.883108078676742: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl Cast ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> Cast']
copynode -2.1077783100190572:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -2.1077783100190572:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -2.7622162692132406:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation']
copynode -2.5839517705026083:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -2.5839517705026083:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -2.7622162692132406:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -2.5839517705026083:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.5839517705026083:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -2.5839517705026083:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -2.5839517705026083:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.246623337443452:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -2.7622162692132406:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'copy-operandr']
copynode -5.090915381151717:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.7693205996765755:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -5.872058668348473:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -2.5839517705026083:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation selectors ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> selectors arguments member']
copynode -2.5839517705026083:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -2.5839517705026083:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.415543893526774:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.981838268402498:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.609561674238648:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.619921810925007:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown', 'root -> End']
copynode -6.38107137120096:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl', 'operandr -> MethodInvocation']
copynode -2.5839517705026083:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators ^ selectors ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators selectors member']
copynode -5.090915381151717:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> prefix_operators member']
copynode -6.788078465673607:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member', 'root -> End']
copynode -5.981838268402498:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -6.441707291814964:  root modified ^ IfStatement condition MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference']
copynode -6.581291297625285:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments', 'start -> unknown']
copynode -6.684323751018383:  root add ^ StatementExpression expression Assignment expressionl MemberReference member loc2 ^ ^ ^ ^ value ^ type ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> Assignment', 'Assignment -> expressionl value type', 'expressionl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.7720220609917305:  root add ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.775054009631276:  root add ^ StatementExpression expression MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -2.7622162692132406:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MemberReference']
copynode -7.313030540943146:  root add ^ StatementExpression expression MethodInvocation qualifier loc2 ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> add', 'root -> StatementExpression', 'StatementExpression -> expression', 'expression -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.399006196472328:  root modified ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown', 'root -> End']
copynode -6.553786389471497:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.966644329193514:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -7.229527199349832:  root add ^ IfStatement condition MemberReference prefix_operators !_ter ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter', 'start -> unknown', 'root -> End']
copynode -7.523982145998161:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -5.966644329193514:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -6.61688404524466:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.7137044667615555:  root add ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown', 'root -> End']
copynode -6.7137044667615555:  root add ^ IfStatement condition MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ ^ StatementExpression ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown', 'root -> StatementExpression']
copynode -7.190307556826156:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> This', 'This -> selectors']
before@8 batch0 x: -7.703064619738143: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> This', 'This -> selectors']
after@8 batch0 x: -7.703064619738143: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl This selectors ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> This', 'This -> selectors']
copynode -2.669271289545577:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -2.9652125827851705:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation']
copynode -3.1071429841103964:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -4.149096070963424:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter']
copynode -2.9652125827851705:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -4.384437143045943:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.1071429841103964:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -2.9652125827851705:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -5.243303834635299:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -5.343031107622664:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'copy-operandr', 'root -> End']
copynode -4.306700288492721:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -4.306700288492721:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.372004687029403:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -3.1071429841103964:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -2.669271289545577:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -5.319172300572973:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference']
copynode -3.1071429841103964:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -4.81786733790068:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation']
copynode -5.777948230446782:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -4.81786733790068:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation']
copynode -4.81786733790068:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr']
copynode -3.1071429841103964:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation selectors ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> selectors arguments member']
copynode -4.782835542398971:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -5.960445939737838:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation selectors MethodInvocation ^ ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> selectors arguments member', 'selectors -> MethodInvocation']
copynode -4.306700288492721:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -5.259557782846969:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation']
copynode -5.259557782846969:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation']
copynode -6.20699554606108:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -6.427522632468026:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -5.319172300572973:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation']
copynode -6.528697353962343:  root modified ^ IfStatement condition BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -3.1071429841103964:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators selectors arguments member']
copynode -5.259557782846969:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr']
copynode -3.1071429841103964:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> member']
copynode -3.1071429841103964:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators selectors member']
copynode -6.1303907029214315:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier loc2 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2']
copynode -6.734908878046554:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ selectors ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators selectors member', 'prefix_operators -> !_ter']
copynode -6.780255495745223:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference prefix_operators !_ter ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> prefix_operators member', 'prefix_operators -> !_ter']
copynode -4.306700288492721:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -6.624523180478718:  root add ^ IfStatement condition BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -3.1071429841103964:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.910487332555931:  root modified ^ IfStatement condition MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.782835542398971:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier n_ter ^ ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'copy-qualifier']
copynode -3.1071429841103964:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.384437143045943:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.782835542398971:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier loc2 ^ ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'qualifier -> loc2']
copynode -7.067225346516352:  root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -2.9652125827851705:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MemberReference']
before@9 batch0 x: -7.334605579235358: root modified ^ member-member mayEffectMutableState_ter ^ ^  meth0 ^ ^ ^  ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
after@9 batch0 x: -7.334605579235358: root modified ^ member-member mayEffectMutableState_ter ^ ^  meth0 ^ ^ ^  ; ['root -> modified', 'copy-member', 'member -> meth0', 'root -> End']
copynode -2.7203411340597086:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -2.7203411340597086:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -2.7203411340597086:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -4.12201064749388:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter']
copynode -3.461737542587798:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -4.388773917395156:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.042002200323623:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'root -> End']
copynode -4.471849247056525:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -4.471849247056525:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -4.151225746085402:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments']
copynode -4.151225746085402:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference']
copynode -5.576665579515975:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.768403469759505:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -3.461737542587798:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -3.461737542587798:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.461737542587798:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.8664130346733145:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.905839263636153:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -6.038881003099959:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'root -> End']
copynode -5.962313234049361:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.768403469759505:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation']
copynode -2.7203411340597086:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference']
copynode -6.057614862162154:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation selectors MethodInvocation ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> selectors arguments member', 'selectors -> MethodInvocation']
copynode -4.151225746085402:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation']
copynode -5.958384320081677:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal']
copynode -5.645422517496627:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -6.1722911290708:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation selectors MethodInvocation arguments ^ member ^ ^ ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> selectors arguments member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.375397979456466:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.698513745504897:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MethodInvocation']
copynode -4.151225746085402:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments']
copynode -5.698513745504897:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -6.6016479126992635:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ selectors ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators selectors arguments member', 'prefix_operators -> !_ter']
copynode -6.616254388529342:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'root -> End']
copynode -6.626775323587935:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ selectors ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators selectors member', 'prefix_operators -> !_ter']
copynode -3.461737542587798:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -2.7203411340597086:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier loc0 ^ ^ member getType_ter ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -5.782869874674361:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation']
copynode -6.241437613207381:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.726640283304732:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.73683017102303:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators selectors member', 'prefix_operators -> !_ter', 'selectors -> MethodInvocation']
copynode -5.782869874674361:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl']
copynode -4.768403469759505:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.245577831927221:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ qualifier loc2 ^ ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'qualifier -> loc2']
copynode -5.922501146036666:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -6.9608960740151815:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'root -> End']
copynode -3.461737542587798:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> member']
copynode -6.62187534495024:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.645422517496627:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'copy-member']
copynode -6.99636059923796:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'root -> End']
copynode -6.5116767065483145:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.245577831927221:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ qualifier unknown ^ ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'start -> unknown']
copynode -6.641358374792617:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier loc2 ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2', 'start -> unknown']
copynode -6.926728270191234:  root modified ^ IfStatement condition MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.434722124773543:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation member unknown ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'copy-operandr']
before@10 batch0 x: -7.094750222750008: root modified ^ qualifier-qualifier loc1 ^ ^  NodeUtil_ter ^ ^ ^  ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
after@10 batch0 x: -7.094750222750008: root modified ^ qualifier-qualifier loc1 ^ ^  NodeUtil_ter ^ ^ ^  ; ['root -> modified', 'copy-qualifier', 'copy-qualifier', 'root -> End']
copynode -4.326141863304656:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter']
copynode -3.888032245624345:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation']
copynode -3.9695479154470377:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -3.9695479154470377:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -4.41419972962467:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -4.12453947000904:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference']
copynode -4.12453947000904:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation']
copynode -3.888032245624345:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -3.7993532895925455:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -5.546075404097792:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.586325661453884:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -3.7993532895925455:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -3.888032245624345:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'copy-operandr']
copynode -5.738934694963973:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.777363448578399:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -3.7993532895925455:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -5.255808754998725:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation']
copynode -5.168465479451697:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -3.7993532895925455:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -4.12453947000904:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments']
copynode -4.41419972962467:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -4.41419972962467:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -5.3316207532188855:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments', 'start -> unknown']
copynode -6.137970614421647:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.285783126892056:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value']
copynode -5.168465479451697:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -3.7993532895925455:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.41419972962467:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -5.3316207532188855:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments', 'copy-member']
copynode -6.232321723538917:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation selectors MethodInvocation arguments ^ member ^ ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> selectors arguments member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.102164565760177:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.598652302462142:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr', 'root -> End']
copynode -5.255808754998725:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> BinaryOperation']
copynode -5.3316207532188855:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments', 'copy-member']
copynode -5.891407109971624:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -5.800438552338164:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.081150583166163:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -3.7993532895925455:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.629039224877488:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ selectors MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators selectors member', 'prefix_operators -> !_ter', 'selectors -> MethodInvocation']
copynode -6.310963808733504:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'copy-operandr']
copynode -6.233352125098463:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -4.12453947000904:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments']
copynode -6.604787743126508:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ selectors MethodInvocation ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators selectors arguments member', 'prefix_operators -> !_ter', 'selectors -> MethodInvocation']
copynode -6.955512582499068:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'copy-MethodInvocation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter']
copynode -6.986849933105987:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -5.168465479451697:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -5.84016838594107:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.9777533106389455:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown']
copynode -5.255808754998725:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'copy-operandl']
copynode -6.457158117729705:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation selectors MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> selectors arguments member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
before@11 batch0 x: -7.067966685805004: root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments', 'start -> unknown', 'root -> End']
after@11 batch0 x: -7.067966685805004: root modified ^ IfStatement condition MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -4.546663272369187:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.307690357498359:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -4.327940500283148:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference']
copynode -5.39730291365413:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -4.861247825610917:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation']
copynode -5.556511548755225:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -4.327940500283148:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation']
copynode -4.408113765704911:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators ^ arguments ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member']
copynode -5.749834055255633:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -5.920426535594743:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter']
copynode -5.383854722313117:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.982890295970719:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -4.408113765704911:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -5.231851955119055:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -4.861247825610917:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -5.231851955119055:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -5.7136421065661125:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference']
copynode -5.73561005591182:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'copy-operandr', 'copy-operandr']
copynode -6.2966007803916:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -4.861247825610917:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation']
copynode -4.408113765704911:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -6.200054546061438:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -6.236973318445962:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -4.408113765704911:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -6.227324605395552:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments', 'start -> unknown', 'copy-operandr']
copynode -6.763350694614928:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.111267467204016:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ||_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter', 'operandl -> MethodInvocation']
copynode -4.546663272369187:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ||_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ||_ter']
copynode -5.718125390994828:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments']
copynode -5.538435983646195:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier unknown ^ ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier arguments member', 'start -> unknown']
copynode -6.853997229773086:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -4.546663272369187:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -6.509878535929602:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -4.327940500283148:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments']
copynode -5.73561005591182:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'copy-operandr', 'operandr -> MethodInvocation']
copynode -5.718125390994828:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.512867629935499:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments', 'copy-member', 'copy-operandr']
copynode -5.7136421065661125:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation']
copynode -6.7555702702957205:  root modified ^ IfStatement condition MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -7.050658478576224:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> member', 'start -> unknown', 'root -> End']
copynode -6.0329805367509834:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments', 'start -> unknown']
copynode -7.061214356857818:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation selectors MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> selectors arguments member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.363065107900184:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.8424259393359534:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ selectors MethodInvocation arguments ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators selectors member', 'prefix_operators -> !_ter', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member']
copynode -6.535092278558295:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation selectors MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> selectors arguments member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -6.0329805367509834:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments', 'copy-member']
copynode -6.599043606955092:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference']
copynode -6.363065107900184:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
before@12 batch0 x: -7.187687500554603: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
after@12 batch0 x: -7.187687500554603: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.380480206513312:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.318581763363909:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -5.8844317674520425:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter']
copynode -4.8488139092805795:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -4.8488139092805795:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl']
copynode -4.8488139092805795:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation']
copynode -6.285131800163072:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -6.284468398604076:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.7061143046594225:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference']
copynode -6.391887712466996:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.721298611664679:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.331658164912369:  root add ^ IfStatement condition BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> add', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'root -> End']
copynode -5.898300612519961:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference']
copynode -5.927825247577857:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference']
copynode -6.709922599780839:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -6.71709913056111:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments', 'start -> unknown', 'copy-operandr', 'root -> End']
copynode -6.133834528911393:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'copy-operandr']
copynode -5.497800174343865:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -6.283465762797277:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.497800174343865:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -5.898300612519961:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation']
copynode -5.497800174343865:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -5.621078479278367:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member']
copynode -7.0229484442970715:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments', 'copy-member', 'copy-operandr', 'root -> End']
copynode -7.01979522703914:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.776232272561174:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.0202254533651285:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference']
copynode -5.7061143046594225:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation']
copynode -7.081377362541389:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -5.9221621784963645:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments']
copynode -5.721298611664679:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -6.905353105568793:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments', 'start -> unknown']
copynode -7.140058850578498:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments', 'copy-member', 'root -> End']
copynode -5.621078479278367:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ arguments ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier arguments member']
copynode -7.133516057569068:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation selectors MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> selectors arguments member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.9221621784963645:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference']
copynode -7.1857209198060445:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.927825247577857:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -6.8992214083555155:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -7.08563730790047:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation selectors MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> selectors arguments member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.133834528911393:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'operandr -> MethodInvocation']
copynode -6.819542336452287:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'copy-arguments', 'start -> unknown']
copynode -5.98498759692302:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ qualifier loc2 ^ ^ arguments ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter', 'qualifier -> loc2']
copynode -6.667420330632012:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'copy-operandr']
copynode -5.927825247577857:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MethodInvocation']
copynode -7.042908535513561:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
before@13 batch0 x: -7.564266608271282: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
after@13 batch0 x: -7.564266608271282: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.394354215764906:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -5.509563792205881:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference']
copynode -6.319527102110442:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.509563792205881:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation']
copynode -6.138351100671571:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -6.082740801561158:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation']
copynode -6.63586416299222:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.719957399356645:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -6.711747502617072:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.887104312132578:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference ^ ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference']
copynode -6.993555295455735:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ qualifier ^ arguments ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators qualifier arguments member', 'prefix_operators -> !_ter']
copynode -7.0453849315526895:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.134793302917387:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments', 'start -> unknown', 'root -> End']
copynode -6.735714855778497:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -6.846955361950677:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -7.1961423191824:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.031618224631529:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.082740801561158:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation']
copynode -6.486836290860083:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -6.138351100671571:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation']
copynode -5.887104312132578:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation ^ ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation']
copynode -7.36718462704448:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -6.301762600603979:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.422207105148118:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -6.921646082948428:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.113880432152655:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
copynode -7.197341405029874:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.961491528141778:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation']
copynode -6.422207105148118:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -7.163452756765764:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation selectors MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> selectors arguments member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.746438999834936:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -5.509563792205881:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -7.058458817598876:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -6.486836290860083:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference']
copynode -7.033381462271791:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference']
copynode -5.887104312132578:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments']
copynode -5.945834773767274:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.564266608271282:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -7.111194375494961:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'copy-arguments', 'start -> unknown']
copynode -5.394354215764906:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
before@14 batch0 x: -7.898372999334242: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
after@14 batch0 x: -7.898372999334242: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc1']
copynode -6.260812092281412:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -5.784399441385176:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference']
copynode -6.9850179349887185:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.559607851959299:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -5.784399441385176:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -6.726686381443869:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -7.282109040010255:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -5.784399441385176:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation']
copynode -7.061565836134832:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.592585223901551:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -7.209055595623795:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -7.4265555804013275:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown']
copynode -7.4166197424638085:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -7.397883673373144:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -6.338825182465371:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.389382898050826:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -7.717816567921545:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -6.338825182465371:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -7.30640770791797:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation']
copynode -7.768066227610689:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.240231396805029:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference']
copynode -7.6962905651307665:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -7.41019593476085:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -7.5141731381299905:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -6.592585223901551:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter']
copynode -6.661906512628775:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.288432276749518:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown']
copynode -7.156421455729287:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.556501169863623:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -6.559607851959299:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.621280062652659:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
copynode -7.200972947466653:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.317594686697703:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -5.784399441385176:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ Literal ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> Literal']
copynode -7.5392659131321125:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation selectors MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> selectors arguments member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference']
copynode -7.492763035173994:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -6.661906512628775:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.592585223901551:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
before@15 batch0 x: -8.378854888665956: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
after@15 batch0 x: -8.378854888665956: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -6.582808903360274:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.1450201158295386:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -7.000366131949704:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -6.288951717026066:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.2525352469529025:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -7.42799772619037:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -7.2125163589953445:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'start -> unknown']
copynode -7.597798011207487:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'arguments -> End']
copynode -7.685610847023781:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -7.821446241985541:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.337686439219397:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference']
copynode -7.743350224045571:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -6.288951717026066:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -7.458554111944977:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference']
copynode -8.085356092953589:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -7.30390303483:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'copy-MethodInvocation']
copynode -7.695428162056487:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal']
copynode -8.016922148119193:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -7.293260793376248:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -7.627133945177775:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member']
copynode -8.224226911726873:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -8.256814170337748:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.672588099900167:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
copynode -8.297082356119063:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ Literal value ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> Literal', 'Literal -> value']
copynode -8.29910002386896:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation selectors MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ arguments ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> selectors arguments member', 'selectors -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.877845761773642:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member']
copynode -7.293260793376248:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -8.256601918197703:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
copynode -8.372196229349356:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -8.281234899710398:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
copynode -7.337686439219397:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation']
copynode -7.742647974693682:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -8.133218619215768:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier loc2 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2']
copynode -7.30390303483:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -7.2125163589953445:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
copynode -8.280530127871316:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation qualifier loc2 ^ ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc2']
copynode -8.367911629553419:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
copynode -8.378854888665956:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
before@16 batch0 x: -8.866517144429963: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
after@16 batch0 x: -8.866517144429963: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference']
copynode -7.591267190582585:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -7.710769641387742:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.740933231019881:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -7.309688646055292:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member']
copynode -6.6178054240881465:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -7.349520455289166:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference ^ ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference']
copynode -7.932684739294928:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -8.050134324061219:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -8.10175496264128:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value']
copynode -7.997381768829655:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -8.152394393633585:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.7053356996621005:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
copynode -8.095908156537917:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End']
copynode -7.82726256683236:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -8.288023223343771:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'copy-operandr']
copynode -6.6178054240881465:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -7.9454300565994345:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
copynode -8.25318843050627:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -8.143588574777823:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -8.510642466542777:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'copy-operandr']
copynode -8.765661529207136:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.349520455289166:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation ^ ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation']
copynode -8.14368961303262:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -7.309688646055292:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member']
copynode -8.568575519777369:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown']
copynode -8.856680028315168:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.866517144429963:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.848742777656298:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -8.604549775074702:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown']
copynode -8.689365475380328:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -8.14368961303262:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -8.570991413842421:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
copynode -8.7223840271472:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1']
copynode -8.542954902339261:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MethodInvocation']
copynode -7.82726256683236:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.7053356996621005:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
before@17 batch0 x: -9.198987804993521: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
after@17 batch0 x: -9.198987804993521: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
copynode -7.8137784783612005:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.953563402581494:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member ^ ^ ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member']
copynode -7.935177746170666:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -8.11021517048357:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -8.183534436568152:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'root -> End']
copynode -7.689323499507736:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.730126909154933:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -8.489861642185133:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'copy-operandr', 'root -> End']
copynode -8.3788596256054:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'copy-operandr']
copynode -8.628867121587973:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.641340223548468:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'copy-operandr', 'root -> End']
copynode -8.144912697083782:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
copynode -8.553784313553479:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -8.558192090538796:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'copy-operandr']
copynode -8.805445272184443:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.777257721114438:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -7.689323499507736:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -8.838110703683924:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'arguments -> End']
copynode -9.080708043824416:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.078514541091863:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -8.897056395362597:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -9.198987804993521:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.91066403145669:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'arguments -> End']
copynode -8.238165191316511:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member']
copynode -9.1063011502265:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown']
copynode -9.144761250761803:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'copy-operandr']
copynode -8.595552682119887:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal']
copynode -8.238165191316511:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown']
copynode -7.9680460739764385:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -8.144912697083782:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
copynode -7.730126909154933:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -8.889133935037535:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
before@18 batch0 x: -9.586359863344114: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
after@18 batch0 x: -9.586359863344114: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator ==_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -8.199246599979233:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.540418998745736:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'copy-operandr', 'root -> End']
copynode -8.648423291451763:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.730563567427453:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'copy-operandr', 'root -> End']
copynode -8.409258178609889:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal']
copynode -8.838658407039475:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.008339079970028:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -8.14948699082015:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr']
copynode -8.14948699082015:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation']
copynode -9.238970807695296:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'copy-member', 'root -> End']
copynode -9.109257424774114:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -9.260147995257284:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'arguments -> End']
copynode -9.309553743747529:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'copy-operandr', 'root -> End']
copynode -8.658031391853001:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'start -> unknown']
copynode -9.314655660826247:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value']
copynode -9.3591347252368:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'copy-MethodInvocation', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -8.008339079970028:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.989573261875194:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -9.50239095807774:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'root -> End']
copynode -8.895893443084788:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -7.989573261875194:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -9.40211689955322:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -8.810454650956672:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -8.14948699082015:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation']
before@19 batch0 x: -9.714164944540244: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation']
after@19 batch0 x: -9.714164944540244: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation']
copynode -8.764361075300258:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value']
copynode -8.847982915991452:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -9.315019953006413:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member unknown ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'start -> unknown', 'root -> End']
copynode -9.334934135142248:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -9.424669655913021:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -9.101945491682272:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr', 'copy-operandr']
copynode -9.533380556560587:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member unknown ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MethodInvocation', 'MethodInvocation -> qualifier member', 'qualifier -> loc1', 'start -> unknown', 'arguments -> End', 'copy-member', 'root -> End']
copynode -9.484502098697703:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End']
copynode -9.553258202213328:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End']
copynode -9.714164944540244:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'copy-BinaryOperation']
copynode -9.300047049822751:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
copynode -9.709194167691749:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal']
copynode -9.573963408533018:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
copynode -9.107641311537009:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -9.300047049822751:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
before@20 batch0 x: -10.521410832705442: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
after@20 batch0 x: -10.521410832705442: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
copynode -8.772347239020746:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -9.435191812168341:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -9.410266210499685:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'copy-BinaryOperation', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation']
copynode -10.244399651128333:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value']
copynode -10.189069660555106:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr']
copynode -10.32866240030853:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'copy-operandr']
copynode -9.630796290177386:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
copynode -9.649333006876986:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -9.649333006876986:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member']
copynode -10.50426063145278:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr']
copynode -9.630796290177386:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
before@21 batch0 x: -10.764547444123309: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
after@21 batch0 x: -10.764547444123309: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member']
copynode -8.810628858569544:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation']
copynode -10.251135797880124:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter']
copynode -10.368265750061255:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'copy-BinaryOperation', 'copy-operandr', 'root -> End']
copynode -10.432802383962553:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> arguments member', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'copy-operandr', 'root -> End']
copynode -8.810628858569544:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation']
copynode -10.43333063198952:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'copy-operandr']
copynode -10.470615810889285:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'copy-operandr']
copynode -10.510900921362918:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'copy-operandr']
copynode -10.643677609215956:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'root -> End']
copynode -8.810628858569544:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr']
before@22 batch0 x: -10.778240886691492: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr']
after@22 batch0 x: -10.778240886691492: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr']
copynode -10.54418270214228:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member loc2 ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> End', 'copy-member', 'copy-operandr', 'root -> End']
copynode -10.582792810339015:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'copy-operandr', 'root -> End']
copynode -10.452709761622828:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr']
copynode -10.619185364979785:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ MemberReference member unknown ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> MethodInvocation', 'MethodInvocation -> prefix_operators arguments member', 'prefix_operators -> !_ter', 'arguments -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'arguments -> MemberReference', 'MemberReference -> member', 'start -> unknown', 'arguments -> End', 'copy-member', 'copy-operandr', 'root -> End']
copynode -10.354257249913644:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr']
copynode -9.459894624713343:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier ^ member ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -9.459894624713343:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
before@23 batch0 x: -11.38355108833639: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
after@23 batch0 x: -11.38355108833639: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation', 'copy-MethodInvocation']
copynode -10.819685125432443:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr', 'copy-operandr']
copynode -10.592462149623316:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter']
copynode -10.592462149623316:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator ==_ter ^ ^ operandl ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> ==_ter']
copynode -11.38355108833639:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr']
before@24 batch0 x: -11.775281009438913: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr']
after@24 batch0 x: -11.775281009438913: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr']
copynode -11.061655068479013:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl MethodInvocation arguments MemberReference member loc2 ^ ^ ^ MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ member areNodesEqualForInlining_ter ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'copy-operandl', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -11.231969204905909:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference']
copynode -11.775281009438913:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'copy-operandr']
copynode -11.231969204905909:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
before@25 batch0 x: -12.240989056590479: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
after@25 batch0 x: -12.240989056590479: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation']
copynode -11.75411537027685:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member']
copynode -11.912618396047037:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier loc1 ^ ^ member getFirstChild_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation prefix_operators !_ter ^ ^ arguments MemberReference member loc2 ^ ^ ^ ^ member mayEffectMutableState_ter ^ ^ ^ ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> MethodInvocation', 'copy-MethodInvocation', 'copy-operandr', 'copy-operandr', 'root -> End']
copynode -12.240989056590479:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
before@26 batch0 x: -13.200695720675867: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
after@26 batch0 x: -13.200695720675867: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MethodInvocation qualifier ^ member ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MethodInvocation', 'MethodInvocation -> qualifier member']
copynode -11.78130802436499:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2']
copynode -11.78130802436499:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
before@27 batch0 x: -13.541234462696593: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
after@27 batch0 x: -13.541234462696593: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member unknown ^ ^ ^ ^ operandr ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'start -> unknown']
copynode -12.844220488506835:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal']
copynode -12.844220488506835:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference']
before@28 batch0 x: -14.046482413250487: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference']
after@28 batch0 x: -14.046482413250487: root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^  ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference']
copynode -13.446539252239745:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value']
copynode -14.046482413250487:  root modified ^ IfStatement condition BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator &&_ter ^ ^ operandl BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr Literal value null_ter ^ ^ ^ ^ ^ ^ operandr BinaryOperation operator !=_ter ^ ^ operandl MemberReference member loc2 ^ ^ ^ ^ operandr MemberReference member ^ ^ ^ ^ ^ ^ ^ operandr ^ ^ ^ operandr ^ ^ ^ ^ ^ ; ['root -> modified', 'root -> IfStatement', 'IfStatement -> condition', 'condition -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> &&_ter', 'operandl -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> Literal', 'Literal -> value', 'value -> null_ter', 'operandr -> BinaryOperation', 'BinaryOperation -> operator operandl operandr', 'operator -> !=_ter', 'operandl -> MemberReference', 'MemberReference -> member', 'member -> loc2', 'operandr -> MemberReference', 'MemberReference -> member']
method
except
method
7 
Node  optimizeSubtree mayEffectMutableState_ter
None  tryJoinForCondition mayEffectMutableState_ter
Node  tryFoldSimpleFunctionCall mayEffectMutableState_ter
Node  tryFoldImmediateCallToBoundFunction mayEffectMutableState_ter
None  addParameterAfter mayEffectMutableState_ter
Node  trySplitComma mayEffectMutableState_ter
Node  tryReplaceIf mayEffectMutableState_ter
boolean  statementMustExitParent mayEffectMutableState_ter
Node  tryReplaceUndefined mayEffectMutableState_ter
Node  tryReduceReturn mayEffectMutableState_ter
Node  tryReplaceExitWithBreak mayEffectMutableState_ter
Node  tryRemoveRedundantExit mayEffectMutableState_ter
boolean  isPure mayEffectMutableState_ter
Node  skipFinallyNodes mayEffectMutableState_ter
boolean  areMatchingExits mayEffectMutableState_ter
boolean  isExceptionPossible mayEffectMutableState_ter
Node  getExceptionHandler mayEffectMutableState_ter
Node  tryMinimizeNot mayEffectMutableState_ter
Node  tryMinimizeIf mayEffectMutableState_ter
None  tryRemoveRepeatedStatements mayEffectMutableState_ter
boolean  isFoldableExpressBlock mayEffectMutableState_ter
Node  getBlockExpression mayEffectMutableState_ter
boolean  isReturnBlock mayEffectMutableState_ter
boolean  isReturnExpressBlock mayEffectMutableState_ter
boolean  isReturnExpression mayEffectMutableState_ter
Node  getBlockReturnExpression mayEffectMutableState_ter
boolean  isVarBlock mayEffectMutableState_ter
Node  getBlockVar mayEffectMutableState_ter
boolean  consumesDanglingElse mayEffectMutableState_ter
boolean  isLowerPrecedenceInExpression mayEffectMutableState_ter
boolean  isLowerPrecedence mayEffectMutableState_ter
boolean  isHigherPrecedence mayEffectMutableState_ter
boolean  isPropertyAssignmentInExpression mayEffectMutableState_ter
Node  tryMinimizeCondition mayEffectMutableState_ter
Node  maybeReplaceChildWithNumber mayEffectMutableState_ter
Node  tryFoldStandardConstructors mayEffectMutableState_ter
Node  tryFoldLiteralConstructor mayEffectMutableState_ter
FoldArrayAction  isSafeToFoldArrayConstructor mayEffectMutableState_ter
Node  tryFoldRegularExpressionConstructor mayEffectMutableState_ter
Node  reduceTrueFalse mayEffectMutableState_ter
Node  tryMinimizeArrayLiteral mayEffectMutableState_ter
Node  tryMinimizeStringArrayLiteral mayEffectMutableState_ter
String  pickDelimiter mayEffectMutableState_ter
boolean  areValidRegexpFlags mayEffectMutableState_ter
boolean  areSafeFlagsToFold mayEffectMutableState_ter
Node  makeForwardSlashBracketSafe mayEffectMutableState_ter
boolean  containsUnicodeEscape mayEffectMutableState_ter
method
elseOp_ter {'thenOp_ter': 'Node', 'elseOp_ter': 'Node', 'lhs_ter': 'Node', 'assignName_ter': 'Node', 'thenExpr_ter': 'Node', 'elseExpr_ter': 'Node', 'hookNode_ter': 'Node', 'assign_ter': 'Node', 'expr_ter': 'Node', 'thenBranchIsVar_ter': 'boolean', 'elseBranchIsExpressionBlock_ter': 'boolean'}
7 Node
String Node propToString getFirstChild_ter
Node Node newNumber getFirstChild_ter
Node Node newNumber getFirstChild_ter
Node Node newString getFirstChild_ter
Node Node newString getFirstChild_ter
Node Node newString getFirstChild_ter
Node Node newString getFirstChild_ter
int Node getType getFirstChild_ter
None Node setType getFirstChild_ter
boolean Node hasChildren getFirstChild_ter
Node Node getFirstChild getFirstChild_ter
Node Node getLastChild getFirstChild_ter
Node Node getNext getFirstChild_ter
Node Node getChildBefore getFirstChild_ter
Node Node getChildAtIndex getFirstChild_ter
int Node getIndexOfChild getFirstChild_ter
Node Node getLastSibling getFirstChild_ter
None Node addChildToFront getFirstChild_ter
None Node addChildToBack getFirstChild_ter
None Node addChildrenToFront getFirstChild_ter
None Node addChildrenToBack getFirstChild_ter
None Node addChildBefore getFirstChild_ter
None Node addChildAfter getFirstChild_ter
None Node addChildrenAfter getFirstChild_ter
None Node removeChild getFirstChild_ter
None Node replaceChild getFirstChild_ter
None Node replaceChildAfter getFirstChild_ter
PropListItem Node lookupProperty getFirstChild_ter
Node Node clonePropsFrom getFirstChild_ter
None Node removeProp getFirstChild_ter
PropListItem Node removeProp getFirstChild_ter
Object Node getProp getFirstChild_ter
boolean Node getBooleanProp getFirstChild_ter
int Node getIntProp getFirstChild_ter
int Node getExistingIntProp getFirstChild_ter
None Node putProp getFirstChild_ter
None Node putBooleanProp getFirstChild_ter
None Node putIntProp getFirstChild_ter
PropListItem Node createProp getFirstChild_ter
PropListItem Node createProp getFirstChild_ter
int Node getSortedPropTypes getFirstChild_ter
double Node getDouble getFirstChild_ter
None Node setDouble getFirstChild_ter
String Node getString getFirstChild_ter
None Node setString getFirstChild_ter
String Node toString getFirstChild_ter
String Node toString getFirstChild_ter
None Node toString getFirstChild_ter
String Node toStringTree getFirstChild_ter
String Node toStringTreeImpl getFirstChild_ter
None Node appendStringTree getFirstChild_ter
None Node toStringTreeHelper getFirstChild_ter
None Node setStaticSourceFile getFirstChild_ter
None Node setSourceFileForTesting getFirstChild_ter
String Node getSourceFileName getFirstChild_ter
StaticSourceFile Node getStaticSourceFile getFirstChild_ter
None Node setInputId getFirstChild_ter
InputId Node getInputId getFirstChild_ter
boolean Node isFromExterns getFirstChild_ter
int Node getLength getFirstChild_ter
None Node setLength getFirstChild_ter
int Node getLineno getFirstChild_ter
int Node getCharno getFirstChild_ter
int Node getSourceOffset getFirstChild_ter
int Node getSourcePosition getFirstChild_ter
None Node setLineno getFirstChild_ter
None Node setCharno getFirstChild_ter
None Node setSourceEncodedPosition getFirstChild_ter
None Node setSourceEncodedPositionForTree getFirstChild_ter
int Node mergeLineCharNo getFirstChild_ter
int Node extractLineno getFirstChild_ter
int Node extractCharno getFirstChild_ter
Iterable Node children getFirstChild_ter
Iterable Node siblings getFirstChild_ter
PropListItem Node getPropListHeadForTesting getFirstChild_ter
Node Node getParent getFirstChild_ter
Node Node getAncestor getFirstChild_ter
AncestorIterable Node getAncestors getFirstChild_ter
boolean Node hasOneChild getFirstChild_ter
boolean Node hasMoreThanOneChild getFirstChild_ter
int Node getChildCount getFirstChild_ter
boolean Node hasChild getFirstChild_ter
String Node checkTreeEquals getFirstChild_ter
NodeMismatch Node checkTreeEqualsImpl getFirstChild_ter
NodeMismatch Node checkTreeTypeAwareEqualsImpl getFirstChild_ter
boolean Node isEquivalentTo getFirstChild_ter
boolean Node isEquivalentToTyped getFirstChild_ter
boolean Node isEquivalentTo getFirstChild_ter
String Node getQualifiedName getFirstChild_ter
boolean Node isQualifiedName getFirstChild_ter
boolean Node isUnscopedQualifiedName getFirstChild_ter
Node Node detachFromParent getFirstChild_ter
Node Node removeFirstChild getFirstChild_ter
Node Node removeChildren getFirstChild_ter
None Node detachChildren getFirstChild_ter
Node Node removeChildAfter getFirstChild_ter
Node Node cloneNode getFirstChild_ter
Node Node cloneTree getFirstChild_ter
Node Node copyInformationFrom getFirstChild_ter
Node Node copyInformationFromForTree getFirstChild_ter
Node Node useSourceInfoFrom getFirstChild_ter
Node Node srcref getFirstChild_ter
Node Node useSourceInfoFromForTree getFirstChild_ter
Node Node srcrefTree getFirstChild_ter
Node Node useSourceInfoIfMissingFrom getFirstChild_ter
Node Node useSourceInfoIfMissingFromForTree getFirstChild_ter
JSType Node getJSType getFirstChild_ter
None Node setJSType getFirstChild_ter
FileLevelJsDocBuilder Node getJsDocBuilderForNode getFirstChild_ter
JSDocInfo Node getJSDocInfo getFirstChild_ter
Node Node setJSDocInfo getFirstChild_ter
None Node setVarArgs getFirstChild_ter
boolean Node isVarArgs getFirstChild_ter
None Node setOptionalArg getFirstChild_ter
boolean Node isOptionalArg getFirstChild_ter
None Node setIsSyntheticBlock getFirstChild_ter
boolean Node isSyntheticBlock getFirstChild_ter
None Node setDirectives getFirstChild_ter
Set Node getDirectives getFirstChild_ter
None Node addSuppression getFirstChild_ter
None Node setWasEmptyNode getFirstChild_ter
boolean Node wasEmptyNode getFirstChild_ter
None Node setSideEffectFlags getFirstChild_ter
None Node setSideEffectFlags getFirstChild_ter
int Node getSideEffectFlags getFirstChild_ter
boolean Node isOnlyModifiesThisCall getFirstChild_ter
boolean Node isNoSideEffectsCall getFirstChild_ter
boolean Node isLocalResultCall getFirstChild_ter
boolean Node areBitFlagsSet getFirstChild_ter
boolean Node isQuotedString getFirstChild_ter
None Node setQuotedString getFirstChild_ter
boolean Node isAdd getFirstChild_ter
boolean Node isAnd getFirstChild_ter
boolean Node isArrayLit getFirstChild_ter
boolean Node isAssign getFirstChild_ter
boolean Node isAssignAdd getFirstChild_ter
boolean Node isBlock getFirstChild_ter
boolean Node isBreak getFirstChild_ter
boolean Node isCall getFirstChild_ter
boolean Node isCase getFirstChild_ter
boolean Node isCast getFirstChild_ter
boolean Node isCatch getFirstChild_ter
boolean Node isComma getFirstChild_ter
boolean Node isContinue getFirstChild_ter
boolean Node isDebugger getFirstChild_ter
boolean Node isDec getFirstChild_ter
boolean Node isDefaultCase getFirstChild_ter
boolean Node isDelProp getFirstChild_ter
boolean Node isDo getFirstChild_ter
boolean Node isEmpty getFirstChild_ter
boolean Node isExprResult getFirstChild_ter
boolean Node isFalse getFirstChild_ter
boolean Node isFor getFirstChild_ter
boolean Node isFunction getFirstChild_ter
boolean Node isGetterDef getFirstChild_ter
boolean Node isGetElem getFirstChild_ter
boolean Node isGetProp getFirstChild_ter
boolean Node isHook getFirstChild_ter
boolean Node isIf getFirstChild_ter
boolean Node isIn getFirstChild_ter
boolean Node isInc getFirstChild_ter
boolean Node isInstanceOf getFirstChild_ter
boolean Node isLabel getFirstChild_ter
boolean Node isLabelName getFirstChild_ter
boolean Node isName getFirstChild_ter
boolean Node isNE getFirstChild_ter
boolean Node isNew getFirstChild_ter
boolean Node isNot getFirstChild_ter
boolean Node isNull getFirstChild_ter
boolean Node isNumber getFirstChild_ter
boolean Node isObjectLit getFirstChild_ter
boolean Node isOr getFirstChild_ter
boolean Node isParamList getFirstChild_ter
boolean Node isRegExp getFirstChild_ter
boolean Node isReturn getFirstChild_ter
boolean Node isScript getFirstChild_ter
boolean Node isSetterDef getFirstChild_ter
boolean Node isString getFirstChild_ter
boolean Node isStringKey getFirstChild_ter
boolean Node isSwitch getFirstChild_ter
boolean Node isThis getFirstChild_ter
boolean Node isThrow getFirstChild_ter
boolean Node isTrue getFirstChild_ter
boolean Node isTry getFirstChild_ter
boolean Node isTypeOf getFirstChild_ter
boolean Node isVar getFirstChild_ter
boolean Node isVoid getFirstChild_ter
boolean Node isWhile getFirstChild_ter
boolean Node isWith getFirstChild_ter
method
7 
6 lhs_ter
method
7 
method
7 
6 lhs_ter
method
lhs_ter {'thenOp_ter': 'Node', 'elseOp_ter': 'Node', 'lhs_ter': 'Node', 'assignName_ter': 'Node', 'thenExpr_ter': 'Node', 'elseExpr_ter': 'Node', 'hookNode_ter': 'Node', 'assign_ter': 'Node', 'expr_ter': 'Node', 'thenBranchIsVar_ter': 'boolean', 'elseBranchIsExpressionBlock_ter': 'boolean'}
7 Node
String  propToString 
Node  newNumber 
Node  newNumber 
Node  newString 
Node  newString 
Node  newString 
Node  newString 
int  getType 
None  setType 
boolean  hasChildren 
Node  getFirstChild 
Node  getLastChild 
Node  getNext 
Node  getChildBefore 
Node  getChildAtIndex 
int  getIndexOfChild 
Node  getLastSibling 
None  addChildToFront 
None  addChildToBack 
None  addChildrenToFront 
None  addChildrenToBack 
None  addChildBefore 
None  addChildAfter 
None  addChildrenAfter 
None  removeChild 
None  replaceChild 
None  replaceChildAfter 
PropListItem  lookupProperty 
Node  clonePropsFrom 
None  removeProp 
PropListItem  removeProp 
Object  getProp 
boolean  getBooleanProp 
int  getIntProp 
int  getExistingIntProp 
None  putProp 
None  putBooleanProp 
None  putIntProp 
PropListItem  createProp 
PropListItem  createProp 
int  getSortedPropTypes 
double  getDouble 
None  setDouble 
String  getString 
None  setString 
String  toString 
String  toString 
None  toString 
String  toStringTree 
String  toStringTreeImpl 
None  appendStringTree 
None  toStringTreeHelper 
None  setStaticSourceFile 
None  setSourceFileForTesting 
String  getSourceFileName 
StaticSourceFile  getStaticSourceFile 
None  setInputId 
InputId  getInputId 
boolean  isFromExterns 
int  getLength 
None  setLength 
int  getLineno 
int  getCharno 
int  getSourceOffset 
int  getSourcePosition 
None  setLineno 
None  setCharno 
None  setSourceEncodedPosition 
None  setSourceEncodedPositionForTree 
int  mergeLineCharNo 
int  extractLineno 
int  extractCharno 
Iterable  children 
Iterable  siblings 
PropListItem  getPropListHeadForTesting 
Node  getParent 
Node  getAncestor 
AncestorIterable  getAncestors 
boolean  hasOneChild 
boolean  hasMoreThanOneChild 
int  getChildCount 
boolean  hasChild 
String  checkTreeEquals 
NodeMismatch  checkTreeEqualsImpl 
NodeMismatch  checkTreeTypeAwareEqualsImpl 
boolean  isEquivalentTo 
boolean  isEquivalentToTyped 
boolean  isEquivalentTo 
String  getQualifiedName 
boolean  isQualifiedName 
boolean  isUnscopedQualifiedName 
Node  detachFromParent 
Node  removeFirstChild 
Node  removeChildren 
None  detachChildren 
Node  removeChildAfter 
Node  cloneNode 
Node  cloneTree 
Node  copyInformationFrom 
Node  copyInformationFromForTree 
Node  useSourceInfoFrom 
Node  srcref 
Node  useSourceInfoFromForTree 
Node  srcrefTree 
Node  useSourceInfoIfMissingFrom 
Node  useSourceInfoIfMissingFromForTree 
JSType  getJSType 
None  setJSType 
FileLevelJsDocBuilder  getJsDocBuilderForNode 
JSDocInfo  getJSDocInfo 
Node  setJSDocInfo 
None  setVarArgs 
boolean  isVarArgs 
None  setOptionalArg 
boolean  isOptionalArg 
None  setIsSyntheticBlock 
boolean  isSyntheticBlock 
None  setDirectives 
Set  getDirectives 
None  addSuppression 
None  setWasEmptyNode 
boolean  wasEmptyNode 
None  setSideEffectFlags 
None  setSideEffectFlags 
int  getSideEffectFlags 
boolean  isOnlyModifiesThisCall 
boolean  isNoSideEffectsCall 
boolean  isLocalResultCall 
boolean  areBitFlagsSet 
boolean  isQuotedString 
None  setQuotedString 
boolean  isAdd 
boolean  isAnd 
boolean  isArrayLit 
boolean  isAssign 
boolean  isAssignAdd 
boolean  isBlock 
boolean  isBreak 
boolean  isCall 
boolean  isCase 
boolean  isCast 
boolean  isCatch 
boolean  isComma 
boolean  isContinue 
boolean  isDebugger 
boolean  isDec 
boolean  isDefaultCase 
boolean  isDelProp 
boolean  isDo 
boolean  isEmpty 
boolean  isExprResult 
boolean  isFalse 
boolean  isFor 
boolean  isFunction 
boolean  isGetterDef 
boolean  isGetElem 
boolean  isGetProp 
boolean  isHook 
boolean  isIf 
boolean  isIn 
boolean  isInc 
boolean  isInstanceOf 
boolean  isLabel 
boolean  isLabelName 
boolean  isName 
boolean  isNE 
boolean  isNew 
boolean  isNot 
boolean  isNull 
boolean  isNumber 
boolean  isObjectLit 
boolean  isOr 
boolean  isParamList 
boolean  isRegExp 
boolean  isReturn 
boolean  isScript 
boolean  isSetterDef 
boolean  isString 
boolean  isStringKey 
boolean  isSwitch 
boolean  isThis 
boolean  isThrow 
boolean  isTrue 
boolean  isTry 
boolean  isTypeOf 
boolean  isVar 
boolean  isVoid 
boolean  isWhile 
boolean  isWith 
method
7 
method
7 
method
7 
Node  optimizeSubtree 
None  tryJoinForCondition 
Node  tryFoldSimpleFunctionCall 
Node  tryFoldImmediateCallToBoundFunction 
None  addParameterAfter 
Node  trySplitComma 
Node  tryReplaceIf 
boolean  statementMustExitParent 
Node  tryReplaceUndefined 
Node  tryReduceReturn 
Node  tryReplaceExitWithBreak 
Node  tryRemoveRedundantExit 
boolean  isPure 
Node  skipFinallyNodes 
boolean  areMatchingExits 
boolean  isExceptionPossible 
Node  getExceptionHandler 
Node  tryMinimizeNot 
Node  tryMinimizeIf 
None  tryRemoveRepeatedStatements 
boolean  isFoldableExpressBlock 
Node  getBlockExpression 
boolean  isReturnBlock 
boolean  isReturnExpressBlock 
boolean  isReturnExpression 
Node  getBlockReturnExpression 
boolean  isVarBlock 
Node  getBlockVar 
boolean  consumesDanglingElse 
boolean  isLowerPrecedenceInExpression 
boolean  isLowerPrecedence 
boolean  isHigherPrecedence 
boolean  isPropertyAssignmentInExpression 
Node  tryMinimizeCondition 
Node  maybeReplaceChildWithNumber 
Node  tryFoldStandardConstructors 
Node  tryFoldLiteralConstructor 
FoldArrayAction  isSafeToFoldArrayConstructor 
Node  tryFoldRegularExpressionConstructor 
Node  reduceTrueFalse 
Node  tryMinimizeArrayLiteral 
Node  tryMinimizeStringArrayLiteral 
String  pickDelimiter 
boolean  areValidRegexpFlags 
boolean  areSafeFlagsToFold 
Node  makeForwardSlashBracketSafe 
boolean  containsUnicodeEscape 
method
7 
6 lhs_ter
method
7 
method
7 
method
7 
method
7 
method
lhs_ter {'thenOp_ter': 'Node', 'elseOp_ter': 'Node', 'lhs_ter': 'Node', 'assignName_ter': 'Node', 'thenExpr_ter': 'Node', 'elseExpr_ter': 'Node', 'hookNode_ter': 'Node', 'assign_ter': 'Node', 'expr_ter': 'Node', 'thenBranchIsVar_ter': 'boolean', 'elseBranchIsExpressionBlock_ter': 'boolean'}
7 Node
stderr: Check out program version: Closure-132b.................................... OK
OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=1G; support was removed in 8.0
Running ant (export.dir.src.classes)....................................... OK

  0%|          | 0/1 [00:00<?, ?it/s]/root/projects/Recoder-bwk/run.py:527: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  tmpdepth = np.array(tmpdepth)
/root/envs/recoder/lib/python3.7/site-packages/torch/nn/functional.py:1340: UserWarning: nn.functional.tanh is deprecated. Use torch.tanh instead.
  warnings.warn("nn.functional.tanh is deprecated. Use torch.tanh instead.")
100%|██████████| 1/1 [00:22<00:00, 22.91s/it]100%|██████████| 1/1 [00:22<00:00, 22.91s/it]
