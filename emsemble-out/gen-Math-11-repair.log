stdout: ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member density_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * density(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ ^ 
return (FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member E_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.E), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member LOG_MAX_VALUE_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.LOG_MAX_VALUE), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member LN_2_A_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.LN_2_A), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member LN_2_B_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.LN_2_B), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member LN_QUICK_COEF_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.LN_QUICK_COEF), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member LN_HI_PREC_COEF_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.LN_HI_PREC_COEF), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member SINE_TABLE_A_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.SINE_TABLE_A), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member SINE_TABLE_B_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.SINE_TABLE_B), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member COSINE_TABLE_A_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.COSINE_TABLE_A), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member COSINE_TABLE_B_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.COSINE_TABLE_B), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member TANGENT_TABLE_A_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.TANGENT_TABLE_A), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member TANGENT_TABLE_B_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.TANGENT_TABLE_B), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member EIGHTHS_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.EIGHTHS), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member CBRTTWO_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.CBRTTWO), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member TWO_POWER_52_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.TWO_POWER_52), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member TWO_POWER_53_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.TWO_POWER_53), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member F_1_3_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.F_1_3), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member F_1_5_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.F_1_5), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member F_1_7_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.F_1_7), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member F_1_9_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.F_1_9), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member F_1_11_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.F_1_11), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member F_1_13_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.F_1_13), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member F_1_15_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.F_1_15), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member F_1_17_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.F_1_17), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member F_3_4_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.F_3_4), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member F_15_16_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.F_15_16), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member F_13_14_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.F_13_14), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member F_11_12_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.F_11_12), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member F_9_10_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.F_9_10), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member F_7_8_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.F_7_8), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member F_5_6_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.F_5_6), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member F_1_2_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.F_1_2), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member F_1_4_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.F_1_4), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal value 1_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, 1)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 1_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 1)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member dim_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(dim, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal value 0_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, 0)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member means_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(means, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return (FastMath.pow((2 * FastMath.PI), (-dim / 2)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member vals_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(vals, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference member vals_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * vals), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 0_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 0)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ ^ 
return (-dim / 2);
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * covarianceMatrixDeterminant), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getDimension_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getDimension(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ ^ ^ 
return (2 * FastMath.PI);
ReturnStatement expression BinaryOperation operator /_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return (FastMath.pow((2 * FastMath.PI), (-dim / 2)) / getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member loc1 ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(, -0.5)) * getExponentTerm(vals));

ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / -0.5)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return (((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals)) * getExponentTerm(vals));
ReturnStatement expression MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ 
return FastMath.pow((2 * FastMath.PI), (-dim / 2));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * PI), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference member dim_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * dim), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator /_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) / getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * getExponentTerm(vals)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * FastMath.pow(covarianceMatrixDeterminant, -0.5));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference prefix_operators -_ter ^ ^ member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(-covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference member length_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * length), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference qualifier means_ter ^ ^ member PI_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(means.PI, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference qualifier covarianceMatrixDeterminant_ter ^ ^ member PI_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant.PI, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getMeans_ter ^ ^ ^ ^ member PI_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(getMeans().PI, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference qualifier MethodInvocation member getStandardDeviations_ter ^ ^ ^ ^ member PI_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(getStandardDeviations().PI, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference qualifier MethodInvocation member sample_ter ^ ^ ^ ^ member PI_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(sample().PI, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member length_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(length, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 1_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -1)) * getExponentTerm(vals));
ReturnStatement expression Literal value 0_ter ^ ^ ^ ^ ^ 
if (true) { return 0; }

ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference prefix_operators !_ter ^ ^ member covarianceMatrixDeterminant_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * !covarianceMatrixDeterminant), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member density_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.density(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator /_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ ^ 
return (FastMath.pow((2 * FastMath.PI), (-dim / 2)) / FastMath.pow(covarianceMatrixDeterminant, -0.5));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier vals_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * vals.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member par1 ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(, -0.5)) * getExponentTerm(vals));

ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator /_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) / FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MemberReference member dim_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * dim) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(-dim, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member add_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * add(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier vals_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * vals.PI), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member length_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.length), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member get_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * get(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member getExponentTerm_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * covarianceMatrixDeterminant) * getExponentTerm(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * pow(vals));
ReturnStatement expression BinaryOperation operator *_ter ^ ^ operandl BinaryOperation operator *_ter ^ ^ operandl MethodInvocation qualifier FastMath_ter ^ ^ arguments BinaryOperation operator *_ter ^ ^ operandl Literal value 2_ter ^ ^ ^ ^ operandr MemberReference qualifier FastMath_ter ^ ^ member PI_ter ^ ^ ^ ^ ^ BinaryOperation operator /_ter ^ ^ operandl MemberReference prefix_operators -_ter ^ ^ member dim_ter ^ ^ ^ ^ operandr Literal value 2_ter ^ ^ ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ operandr MethodInvocation qualifier FastMath_ter ^ ^ arguments MemberReference member covarianceMatrixDeterminant_ter ^ ^ ^ Literal prefix_operators -_ter ^ ^ value 0.5_ter ^ ^ ^ ^ member pow_ter ^ ^ ^ ^ ^ ^ operandr MethodInvocation arguments MemberReference member vals_ter ^ ^ ^ ^ member debug_ter ^ ^ ^ ^ ^ ^ ^ 
return ((FastMath.pow((2 * FastMath.PI), (-dim / 2)) * FastMath.pow(covarianceMatrixDeterminant, -0.5)) * debug(vals));
stderr: 